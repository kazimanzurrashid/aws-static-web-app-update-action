{"version":3,"file":"index.js","mappingslzzvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC3RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC3RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7zeA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzwcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnpMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACznDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACztxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1IA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC19SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvFA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjhDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpngCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvBA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxBA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrDA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrxJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC/BA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC3GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChp4BA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjCA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1BA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5BA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrhBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjzLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9CA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpBA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1CA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChOA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnjJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtBA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACZA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxlMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9BA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpCA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5BA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjBA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACbA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrCA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrzKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxhzrtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtallIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzhHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxxzmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjp8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtrxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjlCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC3JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvldllkrtYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClpavtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtfpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;;;;;;;;AAAA;;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;ACAA;;;;;;;;ACAA;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTA;;ACAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChpOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACNA;AACA;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["../webpack://aws-static-web-app-update-action/./build/action.js","../webpack://aws-static-web-app-update-action/./node_modules/@actions/core/lib/command.js","../webpack://aws-static-web-app-update-action/./node_modules/@actions/core/lib/core.js","../webpack://aws-static-web-app-update-action/./node_modules/@actions/core/lib/file-command.js","../webpack://aws-static-web-app-update-action/./node_modules/@actions/core/lib/oidc-utils.js","../webpack://aws-static-web-app-update-action/./node_modules/@actions/core/lib/path-utils.js","../webpack://aws-static-web-app-update-action/./node_modules/@actions/core/lib/summary.js","../webpack://aws-static-web-app-update-action/./node_modules/@actions/core/lib/utils.js","../webpack://aws-static-web-app-update-action/./node_modules/@actions/http-client/lib/auth.js","../webpack://aws-static-web-app-update-action/./node_modules/@actions/http-client/lib/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@actions/http-client/lib/proxy.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-crypto/crc32/build/aws_crc32.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-crypto/crc32/build/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-crypto/crc32/node_modules/tslib/tslib.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-crypto/crc32c/build/aws_crc32c.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-crypto/crc32c/build/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-crypto/crc32c/node_modules/tslib/tslib.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-crypto/util/build/convertToBuffer.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-crypto/util/build/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-crypto/util/build/isEmptyData.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-crypto/util/build/numToUint8.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-crypto/util/build/uint32ArrayFrom.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/CloudFront.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/CloudFrontClient.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/AssociateAliasCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CopyDistributionCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateCachePolicyCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateCloudFrontOriginAccessIdentityCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateContinuousDeploymentPolicyCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateDistributionCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateDistributionWithTagsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateFieldLevelEncryptionConfigCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateFieldLevelEncryptionProfileCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateFunctionCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateInvalidationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateKeyGroupCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateMonitoringSubscriptionCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateOriginAccessControlCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateOriginRequestPolicyCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreatePublicKeyCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateRealtimeLogConfigCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateResponseHeadersPolicyCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateStreamingDistributionCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateStreamingDistributionWithTagsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteCachePolicyCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteCloudFrontOriginAccessIdentityCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteContinuousDeploymentPolicyCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteDistributionCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteFieldLevelEncryptionConfigCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteFieldLevelEncryptionProfileCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteFunctionCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteKeyGroupCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteMonitoringSubscriptionCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteOriginAccessControlCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteOriginRequestPolicyCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeletePublicKeyCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteRealtimeLogConfigCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteResponseHeadersPolicyCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteStreamingDistributionCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DescribeFunctionCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetCachePolicyCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetCachePolicyConfigCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetCloudFrontOriginAccessIdentityCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetCloudFrontOriginAccessIdentityConfigCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetContinuousDeploymentPolicyCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetContinuousDeploymentPolicyConfigCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetDistributionCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetDistributionConfigCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetFieldLevelEncryptionCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetFieldLevelEncryptionConfigCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetFieldLevelEncryptionProfileCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetFieldLevelEncryptionProfileConfigCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetFunctionCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetInvalidationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetKeyGroupCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetKeyGroupConfigCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetMonitoringSubscriptionCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetOriginAccessControlCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetOriginAccessControlConfigCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetOriginRequestPolicyCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetOriginRequestPolicyConfigCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetPublicKeyCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetPublicKeyConfigCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetRealtimeLogConfigCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetResponseHeadersPolicyCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetResponseHeadersPolicyConfigCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetStreamingDistributionCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetStreamingDistributionConfigCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListCachePoliciesCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListCloudFrontOriginAccessIdentitiesCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListConflictingAliasesCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListContinuousDeploymentPoliciesCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListDistributionsByCachePolicyIdCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListDistributionsByKeyGroupCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListDistributionsByOriginRequestPolicyIdCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListDistributionsByRealtimeLogConfigCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListDistributionsByResponseHeadersPolicyIdCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListDistributionsByWebACLIdCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListDistributionsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListFieldLevelEncryptionConfigsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListFieldLevelEncryptionProfilesCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListFunctionsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListInvalidationsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListKeyGroupsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListOriginAccessControlsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListOriginRequestPoliciesCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListPublicKeysCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListRealtimeLogConfigsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListResponseHeadersPoliciesCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListStreamingDistributionsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListTagsForResourceCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/PublishFunctionCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/TagResourceCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/TestFunctionCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UntagResourceCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdateCachePolicyCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdateCloudFrontOriginAccessIdentityCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdateContinuousDeploymentPolicyCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdateDistributionCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdateDistributionWithStagingConfigCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdateFieldLevelEncryptionConfigCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdateFieldLevelEncryptionProfileCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdateFunctionCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdateKeyGroupCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdateOriginAccessControlCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdateOriginRequestPolicyCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdatePublicKeyCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdateRealtimeLogConfigCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdateResponseHeadersPolicyCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdateStreamingDistributionCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/endpoint/EndpointParameters.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/endpoint/endpointResolver.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/endpoint/ruleset.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/models/CloudFrontServiceException.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/models/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/models/models_0.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/models/models_1.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/pagination/Interfaces.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/pagination/ListCloudFrontOriginAccessIdentitiesPaginator.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/pagination/ListDistributionsPaginator.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/pagination/ListInvalidationsPaginator.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/pagination/ListStreamingDistributionsPaginator.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/pagination/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/protocols/Aws_restXml.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/runtimeConfig.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/runtimeConfig.shared.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/runtimeExtensions.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/waiters/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/waiters/waitForDistributionDeployed.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/waiters/waitForInvalidationCompleted.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/waiters/waitForStreamingDistributionDeployed.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/S3.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/S3Client.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/AbortMultipartUploadCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/CompleteMultipartUploadCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/CopyObjectCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/CreateBucketCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/CreateMultipartUploadCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/DeleteBucketAnalyticsConfigurationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/DeleteBucketCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/DeleteBucketCorsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/DeleteBucketEncryptionCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/DeleteBucketIntelligentTieringConfigurationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/DeleteBucketInventoryConfigurationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/DeleteBucketLifecycleCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/DeleteBucketMetricsConfigurationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/DeleteBucketOwnershipControlsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/DeleteBucketPolicyCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/DeleteBucketReplicationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/DeleteBucketTaggingCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/DeleteBucketWebsiteCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/DeleteObjectCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/DeleteObjectTaggingCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/DeleteObjectsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/DeletePublicAccessBlockCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetBucketAccelerateConfigurationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetBucketAclCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetBucketAnalyticsConfigurationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetBucketCorsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetBucketEncryptionCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetBucketIntelligentTieringConfigurationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetBucketInventoryConfigurationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetBucketLifecycleConfigurationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetBucketLocationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetBucketLoggingCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetBucketMetricsConfigurationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetBucketNotificationConfigurationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetBucketOwnershipControlsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetBucketPolicyCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetBucketPolicyStatusCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetBucketReplicationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetBucketRequestPaymentCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetBucketTaggingCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetBucketVersioningCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetBucketWebsiteCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetObjectAclCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetObjectAttributesCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetObjectCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetObjectLegalHoldCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetObjectLockConfigurationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetObjectRetentionCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetObjectTaggingCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetObjectTorrentCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/GetPublicAccessBlockCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/HeadBucketCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/HeadObjectCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/ListBucketAnalyticsConfigurationsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/ListBucketIntelligentTieringConfigurationsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/ListBucketInventoryConfigurationsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/ListBucketMetricsConfigurationsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/ListBucketsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/ListMultipartUploadsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/ListObjectVersionsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/ListObjectsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/ListObjectsV2Command.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/ListPartsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/PutBucketAccelerateConfigurationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/PutBucketAclCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/PutBucketAnalyticsConfigurationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/PutBucketCorsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/PutBucketEncryptionCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/PutBucketIntelligentTieringConfigurationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/PutBucketInventoryConfigurationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/PutBucketLifecycleConfigurationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/PutBucketLoggingCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/PutBucketMetricsConfigurationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/PutBucketNotificationConfigurationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/PutBucketOwnershipControlsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/PutBucketPolicyCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/PutBucketReplicationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/PutBucketRequestPaymentCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/PutBucketTaggingCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/PutBucketVersioningCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/PutBucketWebsiteCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/PutObjectAclCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/PutObjectCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/PutObjectLegalHoldCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/PutObjectLockConfigurationCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/PutObjectRetentionCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/PutObjectTaggingCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/PutPublicAccessBlockCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/RestoreObjectCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/SelectObjectContentCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/UploadPartCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/UploadPartCopyCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/WriteGetObjectResponseCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/commands/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/endpoint/EndpointParameters.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/endpoint/endpointResolver.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/endpoint/ruleset.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/models/S3ServiceException.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/models/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/models/models_0.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/models/models_1.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/pagination/Interfaces.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/pagination/ListObjectsV2Paginator.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/pagination/ListPartsPaginator.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/pagination/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/protocols/Aws_restXml.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/runtimeConfig.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/runtimeConfig.shared.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/runtimeExtensions.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/waiters/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/waiters/waitForBucketExists.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/waiters/waitForBucketNotExists.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/waiters/waitForObjectExists.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-s3/dist-cjs/waiters/waitForObjectNotExists.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sso/dist-cjs/SSO.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sso/dist-cjs/SSOClient.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sso/dist-cjs/commands/GetRoleCredentialsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sso/dist-cjs/commands/ListAccountRolesCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sso/dist-cjs/commands/ListAccountsCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sso/dist-cjs/commands/LogoutCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sso/dist-cjs/commands/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sso/dist-cjs/endpoint/EndpointParameters.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sso/dist-cjs/endpoint/endpointResolver.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sso/dist-cjs/endpoint/ruleset.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sso/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sso/dist-cjs/models/SSOServiceException.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sso/dist-cjs/models/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sso/dist-cjs/models/models_0.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sso/dist-cjs/pagination/Interfaces.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sso/dist-cjs/pagination/ListAccountRolesPaginator.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sso/dist-cjs/pagination/ListAccountsPaginator.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sso/dist-cjs/pagination/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sso/dist-cjs/protocols/Aws_restJson1.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sso/dist-cjs/runtimeConfig.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sso/dist-cjs/runtimeConfig.shared.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sso/dist-cjs/runtimeExtensions.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sts/dist-cjs/STS.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sts/dist-cjs/STSClient.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/AssumeRoleCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/AssumeRoleWithSAMLCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/AssumeRoleWithWebIdentityCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/DecodeAuthorizationMessageCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/GetAccessKeyInfoCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/GetCallerIdentityCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/GetFederationTokenCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/GetSessionTokenCommand.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sts/dist-cjs/defaultRoleAssumers.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sts/dist-cjs/defaultStsRoleAssumers.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sts/dist-cjs/endpoint/EndpointParameters.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sts/dist-cjs/endpoint/endpointResolver.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sts/dist-cjs/endpoint/ruleset.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sts/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sts/dist-cjs/models/STSServiceException.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sts/dist-cjs/models/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sts/dist-cjs/models/models_0.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sts/dist-cjs/protocols/Aws_query.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sts/dist-cjs/runtimeConfig.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sts/dist-cjs/runtimeConfig.shared.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/client-sts/dist-cjs/runtimeExtensions.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-env/dist-cjs/fromEnv.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-env/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/fromIni.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/resolveAssumeRoleCredentials.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/resolveCredentialSource.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/resolveProcessCredentials.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/resolveProfileData.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/resolveSsoCredentials.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/resolveStaticCredentials.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/resolveWebIdentityCredentials.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-node/dist-cjs/defaultProvider.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-node/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-node/dist-cjs/remoteProvider.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-process/dist-cjs/fromProcess.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-process/dist-cjs/getValidatedProcessCredentials.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-process/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-process/dist-cjs/resolveProcessCredentials.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-sso/dist-cjs/fromSSO.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-sso/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-sso/dist-cjs/isSsoProfile.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-sso/dist-cjs/resolveSSOCredentials.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-sso/dist-cjs/types.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-sso/dist-cjs/validateSsoProfile.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/fromTokenFile.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/fromWebToken.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-bucket-endpoint/dist-cjs/NodeDisableMultiregionAccessPointConfigOptions.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-bucket-endpoint/dist-cjs/NodeUseArnRegionConfigOptions.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-bucket-endpoint/dist-cjs/bucketEndpointMiddleware.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-bucket-endpoint/dist-cjs/bucketHostname.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-bucket-endpoint/dist-cjs/bucketHostnameUtils.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-bucket-endpoint/dist-cjs/configurations.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-bucket-endpoint/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-expect-continue/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/constants.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/flexibleChecksumsMiddleware.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/getChecksum.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/getChecksumAlgorithmForRequest.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/getChecksumAlgorithmListForResponse.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/getChecksumLocationName.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/getFlexibleChecksumsPlugin.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/hasHeader.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/isStreaming.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/selectChecksumAlgorithmFunction.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/stringHasher.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/types.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-flexible-checksums/dist-cjs/validateChecksumFromResponse.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-host-header/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-location-constraint/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-logger/dist-cjs/loggerMiddleware.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-recursion-detection/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-sdk-s3/dist-cjs/check-content-length-header.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-sdk-s3/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-sdk-s3/dist-cjs/s3Configuration.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-sdk-s3/dist-cjs/throw-200-exceptions.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-sdk-s3/dist-cjs/validate-bucket-name.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-sdk-sts/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-signing/dist-cjs/awsAuthConfiguration.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-signing/dist-cjs/awsAuthMiddleware.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-signing/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-signing/dist-cjs/utils/getSkewCorrectedDate.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-signing/dist-cjs/utils/getUpdatedSystemClockOffset.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-signing/dist-cjs/utils/isClockSkewed.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-ssec/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-user-agent/dist-cjs/configurations.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-user-agent/dist-cjs/constants.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-user-agent/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/middleware-user-agent/dist-cjs/user-agent-middleware.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/signature-v4-multi-region/dist-cjs/SignatureV4MultiRegion.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/signature-v4-multi-region/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/token-providers/dist-cjs/bundle/client-sso-oidc-node.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/token-providers/dist-cjs/constants.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/token-providers/dist-cjs/fromSso.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/token-providers/dist-cjs/fromStatic.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/token-providers/dist-cjs/getNewSsoOidcToken.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/token-providers/dist-cjs/getSsoOidcClient.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/token-providers/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/token-providers/dist-cjs/nodeProvider.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/token-providers/dist-cjs/validateTokenExpiry.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/token-providers/dist-cjs/validateTokenKey.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/token-providers/dist-cjs/writeSSOTokenToFile.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/abort.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/auth.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/blob/blob-types.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/checksum.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/client.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/command.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/connection.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/credentials.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/crypto.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/dns.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/encode.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/endpoint.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/eventStream.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/http.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/identity/AnonymousIdentity.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/identity/AwsCredentialIdentity.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/identity/Identity.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/identity/LoginIdentity.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/identity/TokenIdentity.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/identity/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/logger.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/middleware.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/pagination.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/profile.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/request.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/response.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/retry.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/serde.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/shapes.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/signature.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/stream.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/token.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/transfer.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/uri.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/util.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/types/dist-cjs/waiter.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-arn-parser/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/debug/debugId.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/debug/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/debug/toDebugString.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/lib/aws/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/lib/aws/isVirtualHostableS3Bucket.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/lib/aws/parseArn.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/lib/aws/partition.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/lib/booleanEquals.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/lib/getAttr.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/lib/getAttrPathList.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/lib/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/lib/isIpAddress.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/lib/isSet.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/lib/isValidHostLabel.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/lib/not.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/lib/parseURL.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/lib/stringEquals.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/lib/substring.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/lib/uriEncode.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/resolveEndpoint.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/types/EndpointError.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/types/EndpointRuleObject.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/types/ErrorRuleObject.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/types/RuleSetObject.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/types/TreeRuleObject.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/types/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/types/shared.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/utils/callFunction.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/utils/evaluateCondition.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/utils/evaluateConditions.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/utils/evaluateEndpointRule.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/utils/evaluateErrorRule.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/utils/evaluateExpression.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/utils/evaluateRules.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/utils/evaluateTemplate.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/utils/evaluateTreeRule.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/utils/getEndpointHeaders.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/utils/getEndpointProperties.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/utils/getEndpointProperty.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/utils/getEndpointUrl.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/utils/getReferenceValue.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-endpoints/dist-cjs/utils/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-user-agent-node/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-user-agent-node/dist-cjs/is-crt-available.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-utf8-browser/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-utf8-browser/dist-cjs/pureJs.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/util-utf8-browser/dist-cjs/whatwgEncodingApi.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/xml-builder/dist-cjs/XmlNode.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/xml-builder/dist-cjs/XmlText.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/xml-builder/dist-cjs/escape-attribute.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/xml-builder/dist-cjs/escape-element.js","../webpack://aws-static-web-app-update-action/./node_modules/@aws-sdk/xml-builder/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@nodelib/fs.scandir/out/adapters/fs.js","../webpack://aws-static-web-app-update-action/./node_modules/@nodelib/fs.scandir/out/constants.js","../webpack://aws-static-web-app-update-action/./node_modules/@nodelib/fs.scandir/out/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@nodelib/fs.scandir/out/providers/async.js","../webpack://aws-static-web-app-update-action/./node_modules/@nodelib/fs.scandir/out/providers/common.js","../webpack://aws-static-web-app-update-action/./node_modules/@nodelib/fs.scandir/out/providers/sync.js","../webpack://aws-static-web-app-update-action/./node_modules/@nodelib/fs.scandir/out/settings.js","../webpack://aws-static-web-app-update-action/./node_modules/@nodelib/fs.scandir/out/utils/fs.js","../webpack://aws-static-web-app-update-action/./node_modules/@nodelib/fs.scandir/out/utils/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@nodelib/fs.stat/out/adapters/fs.js","../webpack://aws-static-web-app-update-action/./node_modules/@nodelib/fs.stat/out/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@nodelib/fs.stat/out/providers/async.js","../webpack://aws-static-web-app-update-action/./node_modules/@nodelib/fs.stat/out/providers/sync.js","../webpack://aws-static-web-app-update-action/./node_modules/@nodelib/fs.stat/out/settings.js","../webpack://aws-static-web-app-update-action/./node_modules/@nodelib/fs.walk/out/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@nodelib/fs.walk/out/providers/async.js","../webpack://aws-static-web-app-update-action/./node_modules/@nodelib/fs.walk/out/providers/stream.js","../webpack://aws-static-web-app-update-action/./node_modules/@nodelib/fs.walk/out/providers/sync.js","../webpack://aws-static-web-app-update-action/./node_modules/@nodelib/fs.walk/out/readers/async.js","../webpack://aws-static-web-app-update-action/./node_modules/@nodelib/fs.walk/out/readers/common.js","../webpack://aws-static-web-app-update-action/./node_modules/@nodelib/fs.walk/out/readers/reader.js","../webpack://aws-static-web-app-update-action/./node_modules/@nodelib/fs.walk/out/readers/sync.js","../webpack://aws-static-web-app-update-action/./node_modules/@nodelib/fs.walk/out/settings.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/config-resolver/dist-cjs/endpointsConfig/NodeUseDualstackEndpointConfigOptions.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/config-resolver/dist-cjs/endpointsConfig/NodeUseFipsEndpointConfigOptions.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/config-resolver/dist-cjs/endpointsConfig/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/config-resolver/dist-cjs/endpointsConfig/resolveCustomEndpointsConfig.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/config-resolver/dist-cjs/endpointsConfig/resolveEndpointsConfig.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/config-resolver/dist-cjs/endpointsConfig/utils/getEndpointFromRegion.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/config-resolver/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/config-resolver/dist-cjs/regionConfig/config.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/config-resolver/dist-cjs/regionConfig/getRealRegion.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/config-resolver/dist-cjs/regionConfig/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/config-resolver/dist-cjs/regionConfig/isFipsRegion.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/config-resolver/dist-cjs/regionConfig/resolveRegionConfig.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/config-resolver/dist-cjs/regionInfo/PartitionHash.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/config-resolver/dist-cjs/regionInfo/RegionHash.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/config-resolver/dist-cjs/regionInfo/getHostnameFromVariants.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/config-resolver/dist-cjs/regionInfo/getRegionInfo.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/config-resolver/dist-cjs/regionInfo/getResolvedHostname.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/config-resolver/dist-cjs/regionInfo/getResolvedPartition.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/config-resolver/dist-cjs/regionInfo/getResolvedSigningRegion.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/config-resolver/dist-cjs/regionInfo/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/credential-provider-imds/dist-cjs/config/Endpoint.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/credential-provider-imds/dist-cjs/config/EndpointConfigOptions.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/credential-provider-imds/dist-cjs/config/EndpointMode.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/credential-provider-imds/dist-cjs/config/EndpointModeConfigOptions.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/credential-provider-imds/dist-cjs/fromContainerMetadata.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/credential-provider-imds/dist-cjs/fromInstanceMetadata.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/credential-provider-imds/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/credential-provider-imds/dist-cjs/remoteProvider/ImdsCredentials.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/credential-provider-imds/dist-cjs/remoteProvider/RemoteProviderInit.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/credential-provider-imds/dist-cjs/remoteProvider/httpRequest.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/credential-provider-imds/dist-cjs/remoteProvider/retry.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/credential-provider-imds/dist-cjs/types.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/credential-provider-imds/dist-cjs/utils/getExtendedInstanceMetadataCredentials.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/credential-provider-imds/dist-cjs/utils/getInstanceMetadataEndpoint.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/credential-provider-imds/dist-cjs/utils/staticStabilityProvider.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/eventstream-codec/dist-cjs/EventStreamCodec.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/eventstream-codec/dist-cjs/HeaderMarshaller.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/eventstream-codec/dist-cjs/Int64.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/eventstream-codec/dist-cjs/Message.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/eventstream-codec/dist-cjs/MessageDecoderStream.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/eventstream-codec/dist-cjs/MessageEncoderStream.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/eventstream-codec/dist-cjs/SmithyMessageDecoderStream.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/eventstream-codec/dist-cjs/SmithyMessageEncoderStream.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/eventstream-codec/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/eventstream-codec/dist-cjs/splitMessage.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/eventstream-serde-config-resolver/dist-cjs/EventStreamSerdeConfig.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/eventstream-serde-config-resolver/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/eventstream-serde-node/dist-cjs/EventStreamMarshaller.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/eventstream-serde-node/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/eventstream-serde-node/dist-cjs/provider.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/eventstream-serde-node/dist-cjs/utils.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/eventstream-serde-universal/dist-cjs/EventStreamMarshaller.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/eventstream-serde-universal/dist-cjs/getChunkedStream.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/eventstream-serde-universal/dist-cjs/getUnmarshalledStream.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/eventstream-serde-universal/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/eventstream-serde-universal/dist-cjs/provider.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/hash-node/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/hash-stream-node/dist-cjs/HashCalculator.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/hash-stream-node/dist-cjs/fileStreamHasher.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/hash-stream-node/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/hash-stream-node/dist-cjs/readableStreamHasher.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/is-array-buffer/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-content-length/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-endpoint/dist-cjs/adaptors/createConfigValueProvider.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-endpoint/dist-cjs/adaptors/getEndpointFromInstructions.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-endpoint/dist-cjs/adaptors/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-endpoint/dist-cjs/adaptors/toEndpointV1.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-endpoint/dist-cjs/endpointMiddleware.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-endpoint/dist-cjs/getEndpointPlugin.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-endpoint/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-endpoint/dist-cjs/resolveEndpointConfig.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-endpoint/dist-cjs/service-customizations/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-endpoint/dist-cjs/service-customizations/s3.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-endpoint/dist-cjs/types.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-retry/dist-cjs/AdaptiveRetryStrategy.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-retry/dist-cjs/StandardRetryStrategy.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-retry/dist-cjs/configurations.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-retry/dist-cjs/defaultRetryQuota.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-retry/dist-cjs/delayDecider.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-retry/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-retry/dist-cjs/omitRetryHeadersMiddleware.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-retry/dist-cjs/retryDecider.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-retry/dist-cjs/retryMiddleware.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-retry/dist-cjs/util.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-serde/dist-cjs/deserializerMiddleware.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-serde/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-serde/dist-cjs/serdePlugin.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-serde/dist-cjs/serializerMiddleware.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-stack/dist-cjs/MiddlewareStack.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/middleware-stack/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/node-config-provider/dist-cjs/configLoader.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/node-config-provider/dist-cjs/fromEnv.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/node-config-provider/dist-cjs/fromSharedConfigFiles.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/node-config-provider/dist-cjs/fromStatic.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/node-config-provider/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/node-http-handler/dist-cjs/constants.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/node-http-handler/dist-cjs/get-transformed-headers.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/node-http-handler/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/node-http-handler/dist-cjs/node-http-handler.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/node-http-handler/dist-cjs/node-http2-connection-manager.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/node-http-handler/dist-cjs/node-http2-connection-pool.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/node-http-handler/dist-cjs/node-http2-handler.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/node-http-handler/dist-cjs/set-connection-timeout.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/node-http-handler/dist-cjs/set-socket-keep-alive.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/node-http-handler/dist-cjs/set-socket-timeout.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/node-http-handler/dist-cjs/stream-collector/collector.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/node-http-handler/dist-cjs/stream-collector/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/node-http-handler/dist-cjs/write-request-body.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/property-provider/dist-cjs/CredentialsProviderError.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/property-provider/dist-cjs/ProviderError.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/property-provider/dist-cjs/TokenProviderError.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/property-provider/dist-cjs/chain.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/property-provider/dist-cjs/fromStatic.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/property-provider/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/property-provider/dist-cjs/memoize.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/protocol-http/dist-cjs/Field.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/protocol-http/dist-cjs/Fields.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/protocol-http/dist-cjs/httpHandler.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/protocol-http/dist-cjs/httpRequest.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/protocol-http/dist-cjs/httpResponse.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/protocol-http/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/protocol-http/dist-cjs/isValidHostname.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/protocol-http/dist-cjs/types.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/querystring-builder/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/querystring-parser/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/service-error-classification/dist-cjs/constants.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/service-error-classification/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/shared-ini-file-loader/dist-cjs/getConfigFilepath.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/shared-ini-file-loader/dist-cjs/getCredentialsFilepath.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/shared-ini-file-loader/dist-cjs/getHomeDir.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/shared-ini-file-loader/dist-cjs/getProfileData.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/shared-ini-file-loader/dist-cjs/getProfileName.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/shared-ini-file-loader/dist-cjs/getSSOTokenFilepath.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/shared-ini-file-loader/dist-cjs/getSSOTokenFromFile.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/shared-ini-file-loader/dist-cjs/getSsoSessionData.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/shared-ini-file-loader/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/shared-ini-file-loader/dist-cjs/loadSharedConfigFiles.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/shared-ini-file-loader/dist-cjs/loadSsoSessionData.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/shared-ini-file-loader/dist-cjs/mergeConfigFiles.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/shared-ini-file-loader/dist-cjs/parseIni.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/shared-ini-file-loader/dist-cjs/parseKnownFiles.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/shared-ini-file-loader/dist-cjs/slurpFile.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/shared-ini-file-loader/dist-cjs/types.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/signature-v4/dist-cjs/SignatureV4.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/signature-v4/dist-cjs/cloneRequest.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/signature-v4/dist-cjs/constants.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/signature-v4/dist-cjs/credentialDerivation.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/signature-v4/dist-cjs/getCanonicalHeaders.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/signature-v4/dist-cjs/getCanonicalQuery.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/signature-v4/dist-cjs/getPayloadHash.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/signature-v4/dist-cjs/headerUtil.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/signature-v4/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/signature-v4/dist-cjs/moveHeadersToQuery.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/signature-v4/dist-cjs/prepareRequest.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/signature-v4/dist-cjs/utilDate.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/smithy-client/dist-cjs/NoOpLogger.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/smithy-client/dist-cjs/client.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/smithy-client/dist-cjs/collect-stream-body.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/smithy-client/dist-cjs/command.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/smithy-client/dist-cjs/constants.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/smithy-client/dist-cjs/create-aggregated-client.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/smithy-client/dist-cjs/date-utils.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/smithy-client/dist-cjs/default-error-handler.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/smithy-client/dist-cjs/defaults-mode.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/smithy-client/dist-cjs/emitWarningIfUnsupportedVersion.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/smithy-client/dist-cjs/exceptions.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/smithy-client/dist-cjs/extended-encode-uri-component.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/smithy-client/dist-cjs/extensions/checksum.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/smithy-client/dist-cjs/extensions/defaultExtensionConfiguration.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/smithy-client/dist-cjs/extensions/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/smithy-client/dist-cjs/get-array-if-single-item.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/smithy-client/dist-cjs/get-value-from-text-node.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/smithy-client/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/smithy-client/dist-cjs/lazy-json.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/smithy-client/dist-cjs/object-mapping.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/smithy-client/dist-cjs/parse-utils.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/smithy-client/dist-cjs/resolve-path.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/smithy-client/dist-cjs/ser-utils.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/smithy-client/dist-cjs/serde-json.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/smithy-client/dist-cjs/split-every.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/abort.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/auth.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/blob/blob-payload-input-types.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/checksum.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/client.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/command.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/connection/config.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/connection/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/connection/manager.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/connection/pool.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/crypto.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/encode.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/endpoint.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/endpoints/EndpointRuleObject.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/endpoints/ErrorRuleObject.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/endpoints/RuleSetObject.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/endpoints/TreeRuleObject.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/endpoints/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/endpoints/shared.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/eventStream.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/extensions/checksum.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/extensions/defaultClientConfiguration.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/extensions/defaultExtensionConfiguration.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/extensions/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/http.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/identity/awsCredentialIdentity.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/identity/identity.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/identity/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/logger.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/middleware.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/pagination.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/profile.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/response.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/retry.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/serde.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/shapes.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/signature.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/stream.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/streaming-payload/streaming-blob-common-types.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/streaming-payload/streaming-blob-payload-input-types.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/streaming-payload/streaming-blob-payload-output-types.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/transfer.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/transform/client-payload-blob-type-narrow.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/transform/type-transform.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/uri.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/util.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/types/dist-cjs/waiter.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/url-parser/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-base64/dist-cjs/fromBase64.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-base64/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-base64/dist-cjs/toBase64.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-body-length-node/dist-cjs/calculateBodyLength.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-body-length-node/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-buffer-from/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-config-provider/dist-cjs/booleanSelector.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-config-provider/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-defaults-mode-node/dist-cjs/constants.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-defaults-mode-node/dist-cjs/defaultsModeConfig.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-defaults-mode-node/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-defaults-mode-node/dist-cjs/resolveDefaultsModeConfig.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-hex-encoding/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-middleware/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-middleware/dist-cjs/normalizeProvider.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-retry/dist-cjs/AdaptiveRetryStrategy.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-retry/dist-cjs/ConfiguredRetryStrategy.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-retry/dist-cjs/DefaultRateLimiter.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-retry/dist-cjs/StandardRetryStrategy.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-retry/dist-cjs/config.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-retry/dist-cjs/constants.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-retry/dist-cjs/defaultRetryBackoffStrategy.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-retry/dist-cjs/defaultRetryToken.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-retry/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-retry/dist-cjs/types.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-stream/dist-cjs/blob/Uint8ArrayBlobAdapter.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-stream/dist-cjs/blob/transforms.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-stream/dist-cjs/getAwsChunkedEncodingStream.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-stream/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-stream/dist-cjs/sdk-stream-mixin.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-uri-escape/dist-cjs/escape-uri-path.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-uri-escape/dist-cjs/escape-uri.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-uri-escape/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-utf8/dist-cjs/fromUtf8.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-utf8/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-utf8/dist-cjs/toUint8Array.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-utf8/dist-cjs/toUtf8.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-waiter/dist-cjs/createWaiter.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-waiter/dist-cjs/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-waiter/dist-cjs/poller.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-waiter/dist-cjs/utils/index.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-waiter/dist-cjs/utils/sleep.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-waiter/dist-cjs/utils/validate.js","../webpack://aws-static-web-app-update-action/./node_modules/@smithy/util-waiter/dist-cjs/waiter.js","../webpack://aws-static-web-app-update-action/./node_modules/braces/index.js","../webpack://aws-static-web-app-update-action/./node_modules/braces/lib/compile.js","../webpack://aws-static-web-app-update-action/./node_modules/braces/lib/constants.js","../webpack://aws-static-web-app-update-action/./node_modules/braces/lib/expand.js","../webpack://aws-static-web-app-update-action/./node_modules/braces/lib/parse.js","../webpack://aws-static-web-app-update-action/./node_modules/braces/lib/stringify.js","../webpack://aws-static-web-app-update-action/./node_modules/braces/lib/utils.js","../webpack://aws-static-web-app-update-action/./node_modules/dir-glob/index.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/node_modules/glob-parent/index.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/out/index.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/out/managers/tasks.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/out/providers/async.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/out/providers/filters/deep.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/out/providers/filters/entry.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/out/providers/filters/error.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/out/providers/matchers/matcher.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/out/providers/matchers/partial.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/out/providers/provider.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/out/providers/stream.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/out/providers/sync.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/out/providers/transformers/entry.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/out/readers/async.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/out/readers/reader.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/out/readers/stream.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/out/readers/sync.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/out/settings.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/out/utils/array.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/out/utils/errno.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/out/utils/fs.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/out/utils/index.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/out/utils/path.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/out/utils/pattern.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/out/utils/stream.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-glob/out/utils/string.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-xml-parser/src/fxp.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-xml-parser/src/util.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-xml-parser/src/validator.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-xml-parser/src/xmlparser/XMLParser.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-xml-parser/src/xmlparser/node2json.js","../webpack://aws-static-web-app-update-action/./node_modules/fast-xml-parser/src/xmlparser/xmlNode.js","../webpack://aws-static-web-app-update-action/./node_modules/fastq/queue.js","../webpack://aws-static-web-app-update-action/./node_modules/fill-range/index.js","../webpack://aws-static-web-app-update-action/./node_modules/ignore/index.js","../webpack://aws-static-web-app-update-action/./node_modules/is-extglob/index.js","../webpack://aws-static-web-app-update-action/./node_modules/is-glob/index.js","../webpack://aws-static-web-app-update-action/./node_modules/is-number/index.js","../webpack://aws-static-web-app-update-action/./node_modules/js-yaml/index.js","../webpack://aws-static-web-app-update-action/./node_modules/js-yaml/lib/common.js","../webpack://aws-static-web-app-update-action/./node_modules/js-yaml/lib/dumper.js","../webpack://aws-static-web-app-update-action/./node_modules/js-yaml/lib/exception.js","../webpack://aws-static-web-app-update-action/./node_modules/js-yaml/lib/loader.js","../webpack://aws-static-web-app-update-action/./node_modules/js-yaml/lib/schema.js","../webpack://aws-static-web-app-update-action/./node_modules/js-yaml/lib/schema/core.js","../webpack://aws-static-web-app-update-action/./node_modules/js-yaml/lib/schema/default.js","../webpack://aws-static-web-app-update-action/./node_modules/js-yaml/lib/schema/failsafe.js","../webpack://aws-static-web-app-update-action/./node_modules/js-yaml/lib/schema/json.js","../webpack://aws-static-web-app-update-action/./node_modules/js-yaml/lib/snippet.js","../webpack://aws-static-web-app-update-action/./node_modules/js-yaml/lib/type.js","../webpack://aws-static-web-app-update-action/./node_modules/js-yaml/lib/type/binary.js","../webpack://aws-static-web-app-update-action/./node_modules/js-yaml/lib/type/bool.js","../webpack://aws-static-web-app-update-action/./node_modules/js-yaml/lib/type/float.js","../webpack://aws-static-web-app-update-action/./node_modules/js-yaml/lib/type/int.js","../webpack://aws-static-web-app-update-action/./node_modules/js-yaml/lib/type/map.js","../webpack://aws-static-web-app-update-action/./node_modules/js-yaml/lib/type/merge.js","../webpack://aws-static-web-app-update-action/./node_modules/js-yaml/lib/type/null.js","../webpack://aws-static-web-app-update-action/./node_modules/js-yaml/lib/type/omap.js","../webpack://aws-static-web-app-update-action/./node_modules/js-yaml/lib/type/pairs.js","../webpack://aws-static-web-app-update-action/./node_modules/js-yaml/lib/type/seq.js","../webpack://aws-static-web-app-update-action/./node_modules/js-yaml/lib/type/set.js","../webpack://aws-static-web-app-update-action/./node_modules/js-yaml/lib/type/str.js","../webpack://aws-static-web-app-update-action/./node_modules/js-yaml/lib/type/timestamp.js","../webpack://aws-static-web-app-update-action/./node_modules/merge2/index.js","../webpack://aws-static-web-app-update-action/./node_modules/micromatch/index.js","../webpack://aws-static-web-app-update-action/./node_modules/mime-db/index.js","../webpack://aws-static-web-app-update-action/./node_modules/mime-types/index.js","../webpack://aws-static-web-app-update-action/./node_modules/path-type/index.js","../webpack://aws-static-web-app-update-action/./node_modules/picomatch/index.js","../webpack://aws-static-web-app-update-action/./node_modules/picomatch/lib/constants.js","../webpack://aws-static-web-app-update-action/./node_modules/picomatch/lib/parse.js","../webpack://aws-static-web-app-update-action/./node_modules/picomatch/lib/picomatch.js","../webpack://aws-static-web-app-update-action/./node_modules/picomatch/lib/scan.js","../webpack://aws-static-web-app-update-action/./node_modules/picomatch/lib/utils.js","../webpack://aws-static-web-app-update-action/./node_modules/queue-microtask/index.js","../webpack://aws-static-web-app-update-action/./node_modules/reusify/reusify.js","../webpack://aws-static-web-app-update-action/./node_modules/run-parallel/index.js","../webpack://aws-static-web-app-update-action/./node_modules/strnum/strnum.js","../webpack://aws-static-web-app-update-action/./node_modules/to-regex-range/index.js","../webpack://aws-static-web-app-update-action/./node_modules/tslib/tslib.js","../webpack://aws-static-web-app-update-action/./node_modules/tunnel/index.js","../webpack://aws-static-web-app-update-action/./node_modules/tunnel/lib/tunnel.js","../webpack://aws-static-web-app-update-action/./node_modules/uuid/dist/index.js","../webpack://aws-static-web-app-update-action/./node_modules/uuid/dist/md5.js","../webpack://aws-static-web-app-update-action/./node_modules/uuid/dist/nil.js","../webpack://aws-static-web-app-update-action/./node_modules/uuid/dist/parse.js","../webpack://aws-static-web-app-update-action/./node_modules/uuid/dist/regex.js","../webpack://aws-static-web-app-update-action/./node_modules/uuid/dist/rng.js","../webpack://aws-static-web-app-update-action/./node_modules/uuid/dist/sha1.js","../webpack://aws-static-web-app-update-action/./node_modules/uuid/dist/stringify.js","../webpack://aws-static-web-app-update-action/./node_modules/uuid/dist/v1.js","../webpack://aws-static-web-app-update-action/./node_modules/uuid/dist/v3.js","../webpack://aws-static-web-app-update-action/./node_modules/uuid/dist/v35.js","../webpack://aws-static-web-app-update-action/./node_modules/uuid/dist/v4.js","../webpack://aws-static-web-app-update-action/./node_modules/uuid/dist/v5.js","../webpack://aws-static-web-app-update-action/./node_modules/uuid/dist/validate.js","../webpack://aws-static-web-app-update-action/./node_modules/uuid/dist/version.js","../webpack://aws-static-web-app-update-action/./node_modules/@vercel/ncc/dist/ncc/@@notfound.js","../webpack://aws-static-web-app-update-action/external node-commonjs \"assert\"","../webpack://aws-static-web-app-update-action/external node-commonjs \"buffer\"","../webpack://aws-static-web-app-update-action/external node-commonjs \"child_process\"","../webpack://aws-static-web-app-update-action/external node-commonjs \"crypto\"","../webpack://aws-static-web-app-update-action/external node-commonjs \"events\"","../webpack://aws-static-web-app-update-action/external node-commonjs \"fs\"","../webpack://aws-static-web-app-update-action/external node-commonjs \"fs/promises\"","../webpack://aws-static-web-app-update-action/external node-commonjs \"http\"","../webpack://aws-static-web-app-update-action/external node-commonjs \"http2\"","../webpack://aws-static-web-app-update-action/external node-commonjs \"https\"","../webpack://aws-static-web-app-update-action/external node-commonjs \"net\"","../webpack://aws-static-web-app-update-action/external node-commonjs \"os\"","../webpack://aws-static-web-app-update-action/external node-commonjs \"path\"","../webpack://aws-static-web-app-update-action/external node-commonjs \"process\"","../webpack://aws-static-web-app-update-action/external node-commonjs \"stream\"","../webpack://aws-static-web-app-update-action/external node-commonjs \"tls\"","../webpack://aws-static-web-app-update-action/external node-commonjs \"url\"","../webpack://aws-static-web-app-update-action/external node-commonjs \"util\"","../webpack://aws-static-web-app-update-action/external node-commonjs \"node:fs\"","../webpack://aws-static-web-app-update-action/external node-commonjs \"node:path\"","../webpack://aws-static-web-app-update-action/external node-commonjs \"node:process\"","../webpack://aws-static-web-app-update-action/./node_modules/slash/index.js","../webpack://aws-static-web-app-update-action/external node-commonjs \"node:url\"","../webpack://aws-static-web-app-update-action/external node-commonjs \"node:stream\"","../webpack://aws-static-web-app-update-action/./node_modules/globby/utilities.js","../webpack://aws-static-web-app-update-action/./node_modules/globby/ignore.js","../webpack://aws-static-web-app-update-action/./node_modules/globby/index.js","../webpack://aws-static-web-app-update-action/webpack/bootstrap","../webpack://aws-static-web-app-update-action/webpack/runtime/define property getters","../webpack://aws-static-web-app-update-action/webpack/runtime/hasOwnProperty shorthand","../webpack://aws-static-web-app-update-action/webpack/runtime/make namespace object","../webpack://aws-static-web-app-update-action/webpack/runtime/compat","../webpack://aws-static-web-app-update-action/./build/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Action = void 0;\nconst client_s3_1 = require(\"@aws-sdk/client-s3\");\nconst client_cloudfront_1 = require(\"@aws-sdk/client-cloudfront\");\nclass Action {\n    constructor(fs, s3, cf, mime, glob, log) {\n        this.fs = fs;\n        this.s3 = s3;\n        this.cf = cf;\n        this.mime = mime;\n        this.glob = glob;\n        this.log = log;\n    }\n    async run(input) {\n        const [cacheMap, files] = await Promise.all([\n            this.buildCacheMap(input.location, input.cacheControl),\n            this.listFiles(input.location)\n        ]);\n        this.log(`Uploading to s3 bucket ${input.bucket}`);\n        const uploads = files.map(async (file) => this.upload({\n            location: input.location,\n            bucket: input.bucket,\n            cacheControl: cacheMap.get(file),\n            file\n        }));\n        await Promise.all(uploads);\n        this.log('Upload completed');\n        if (typeof input.invalidate === 'undefined' ||\n            (input.invalidate || 'false').toString().toLowerCase() === 'false') {\n            return;\n        }\n        const distributionId = input.invalidate.toString().toLowerCase() === 'true'\n            ? await this.findDistributionId(input.bucket, input.region)\n            : input.invalidate.toString();\n        if (!distributionId) {\n            throw new Error(`Could not find any cloudfront distribution that is associated with s3 bucket ${input.bucket}!`);\n        }\n        await this.invalidateDistribution(distributionId, input.wait);\n    }\n    async buildCacheMap(path, cacheControl) {\n        const map = new Map();\n        for (const key of Object.keys(cacheControl)) {\n            const files = await this.glob.match(path, cacheControl[key]);\n            for (const file of files) {\n                map.set(this.fs.join(path, file), key);\n            }\n        }\n        return map;\n    }\n    async listFiles(path) {\n        const entries = await this.fs.readdir(path);\n        const entriesWithStat = await Promise.all(entries.map(async (entry) => {\n            const full = this.fs.join(path, entry);\n            const stat = await this.fs.stat(full);\n            return {\n                full,\n                stat\n            };\n        }));\n        const files = [];\n        const directories = [];\n        for (const entry of entriesWithStat) {\n            if (entry.stat.isFile()) {\n                files.push(entry.full);\n            }\n            else if (entry.stat.isDirectory()) {\n                directories.push(entry.full);\n            }\n        }\n        const tasks = await Promise.all(directories.map(async (directory) => this.listFiles(directory)));\n        return tasks.reduce((a, c) => [...a, ...c], files);\n    }\n    async upload(input) {\n        const key = input.file\n            .substring(input.location.length - 1)\n            .replace(/\\\\/g, '/');\n        const cmd = new client_s3_1.PutObjectCommand({\n            Bucket: input.bucket,\n            Key: key,\n            Body: this.fs.createReadStream(input.file),\n            CacheControl: input.cacheControl,\n            ContentType: this.mime.lookup(key)\n        });\n        this.log(`...Uploading ${input.file}`);\n        await this.s3.putObject(cmd);\n        this.log(`...Uploaded ${input.file}`);\n    }\n    async findDistributionId(bucket, region) {\n        const normalizedBucket = bucket.toLowerCase();\n        const normalizedRegion = region.toLowerCase();\n        const bucketWithDomainNames = [\n            `${normalizedBucket}.s3.${normalizedRegion}.amazonaws.com`,\n            `${normalizedBucket}.s3-website-${normalizedRegion}.amazonaws.com`\n        ];\n        let nextMarker = undefined;\n        do {\n            const cmd = new client_cloudfront_1.ListDistributionsCommand({\n                Marker: nextMarker,\n                MaxItems: 10\n            });\n            const result = await this.cf.listDistributions(cmd);\n            let match = result.DistributionList?.Items?.find((item) => item.Aliases &&\n                item.Aliases.Items &&\n                item.Aliases.Items.some((a) => a.toLowerCase() === normalizedBucket));\n            if (!match) {\n                match = result.DistributionList?.Items?.find((item) => item.Origins &&\n                    item.Origins.Items &&\n                    item.Origins.Items.some((o) => o.DomainName &&\n                        bucketWithDomainNames.includes(o.DomainName.toLowerCase())));\n            }\n            if (match) {\n                return match.Id;\n            }\n            nextMarker = result.DistributionList?.NextMarker;\n        } while (nextMarker);\n        return undefined;\n    }\n    async invalidateDistribution(distributionId, wait) {\n        const poll = async (id) => {\n            return new Promise((resolve, reject) => {\n                setTimeout(async () => {\n                    const getInvalidationCommand = new client_cloudfront_1.GetInvalidationCommand({\n                        DistributionId: distributionId,\n                        Id: id\n                    });\n                    this.log('...Checking invalidation status');\n                    try {\n                        const getInvalidationResult = await this.cf.getInvalidation(getInvalidationCommand);\n                        if (getInvalidationResult.Invalidation &&\n                            getInvalidationResult.Invalidation.Status === 'InProgress') {\n                            await poll(id);\n                            return;\n                        }\n                        this.log('Invalidation completed');\n                        return resolve();\n                    }\n                    catch (error) {\n                        return reject(error);\n                    }\n                }, 1000 * 20);\n            });\n        };\n        const createInvalidationCommand = new client_cloudfront_1.CreateInvalidationCommand({\n            DistributionId: distributionId,\n            InvalidationBatch: {\n                CallerReference: process.env.GITHUB_SHA,\n                Paths: {\n                    Quantity: 1,\n                    Items: ['/*']\n                }\n            }\n        });\n        this.log(`Invalidating cloudfront distribution ${distributionId}`);\n        const createInvalidationResult = await this.cf.createInvalidation(createInvalidationCommand);\n        if (wait &&\n            createInvalidationResult.Invalidation &&\n            createInvalidationResult.Invalidation.Id) {\n            await poll(createInvalidationResult.Invalidation.Id);\n        }\n    }\n}\nexports.Action = Action;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issue = exports.issueCommand = void 0;\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            let first = true;\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        if (first) {\n                            first = false;\n                        }\n                        else {\n                            cmdStr += ',';\n                        }\n                        cmdStr += `${key}=${escapeProperty(val)}`;\n                    }\n                }\n            }\n        }\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n        return cmdStr;\n    }\n}\nfunction escapeData(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A');\n}\nfunction escapeProperty(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/:/g, '%3A')\n        .replace(/,/g, '%2C');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getIDToken = exports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.notice = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;\nconst command_1 = require(\"./command\");\nconst file_command_1 = require(\"./file-command\");\nconst utils_1 = require(\"./utils\");\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\nconst oidc_utils_1 = require(\"./oidc-utils\");\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction exportVariable(name, val) {\n    const convertedVal = utils_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    const filePath = process.env['GITHUB_ENV'] || '';\n    if (filePath) {\n        return file_command_1.issueFileCommand('ENV', file_command_1.prepareKeyValueMessage(name, val));\n    }\n    command_1.issueCommand('set-env', { name }, convertedVal);\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    const filePath = process.env['GITHUB_PATH'] || '';\n    if (filePath) {\n        file_command_1.issueFileCommand('PATH', inputPath);\n    }\n    else {\n        command_1.issueCommand('add-path', {}, inputPath);\n    }\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.\n * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.\n * Returns an empty string if the value is not defined.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    if (options && options.trimWhitespace === false) {\n        return val;\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Gets the values of an multiline input.  Each value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string[]\n *\n */\nfunction getMultilineInput(name, options) {\n    const inputs = getInput(name, options)\n        .split('\\n')\n        .filter(x => x !== '');\n    if (options && options.trimWhitespace === false) {\n        return inputs;\n    }\n    return inputs.map(input => input.trim());\n}\nexports.getMultilineInput = getMultilineInput;\n/**\n * Gets the input value of the boolean type in the YAML 1.2 \"core schema\" specification.\n * Support boolean input list: `true | True | TRUE | false | False | FALSE` .\n * The return value is also in boolean type.\n * ref: https://yaml.org/spec/1.2/spec.html#id2804923\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   boolean\n */\nfunction getBooleanInput(name, options) {\n    const trueValue = ['true', 'True', 'TRUE'];\n    const falseValue = ['false', 'False', 'FALSE'];\n    const val = getInput(name, options);\n    if (trueValue.includes(val))\n        return true;\n    if (falseValue.includes(val))\n        return false;\n    throw new TypeError(`Input does not meet YAML 1.2 \"Core Schema\" specification: ${name}\\n` +\n        `Support boolean input list: \\`true | True | TRUE | false | False | FALSE\\``);\n}\nexports.getBooleanInput = getBooleanInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setOutput(name, value) {\n    const filePath = process.env['GITHUB_OUTPUT'] || '';\n    if (filePath) {\n        return file_command_1.issueFileCommand('OUTPUT', file_command_1.prepareKeyValueMessage(name, value));\n    }\n    process.stdout.write(os.EOL);\n    command_1.issueCommand('set-output', { name }, utils_1.toCommandValue(value));\n}\nexports.setOutput = setOutput;\n/**\n * Enables or disables the echoing of commands into stdout for the rest of the step.\n * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.\n *\n */\nfunction setCommandEcho(enabled) {\n    command_1.issue('echo', enabled ? 'on' : 'off');\n}\nexports.setCommandEcho = setCommandEcho;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Gets whether Actions Step Debug is on or not\n */\nfunction isDebug() {\n    return process.env['RUNNER_DEBUG'] === '1';\n}\nexports.isDebug = isDebug;\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction error(message, properties = {}) {\n    command_1.issueCommand('error', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.error = error;\n/**\n * Adds a warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction warning(message, properties = {}) {\n    command_1.issueCommand('warning', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.warning = warning;\n/**\n * Adds a notice issue\n * @param message notice issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction notice(message, properties = {}) {\n    command_1.issueCommand('notice', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.notice = notice;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//-----------------------------------------------------------------------\n// Wrapper action state\n//-----------------------------------------------------------------------\n/**\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\n *\n * @param     name     name of the state to store\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction saveState(name, value) {\n    const filePath = process.env['GITHUB_STATE'] || '';\n    if (filePath) {\n        return file_command_1.issueFileCommand('STATE', file_command_1.prepareKeyValueMessage(name, value));\n    }\n    command_1.issueCommand('save-state', { name }, utils_1.toCommandValue(value));\n}\nexports.saveState = saveState;\n/**\n * Gets the value of an state set by this action's main execution.\n *\n * @param     name     name of the state to get\n * @returns   string\n */\nfunction getState(name) {\n    return process.env[`STATE_${name}`] || '';\n}\nexports.getState = getState;\nfunction getIDToken(aud) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield oidc_utils_1.OidcClient.getIDToken(aud);\n    });\n}\nexports.getIDToken = getIDToken;\n/**\n * Summary exports\n */\nvar summary_1 = require(\"./summary\");\nObject.defineProperty(exports, \"summary\", { enumerable: true, get: function () { return summary_1.summary; } });\n/**\n * @deprecated use core.summary\n */\nvar summary_2 = require(\"./summary\");\nObject.defineProperty(exports, \"markdownSummary\", { enumerable: true, get: function () { return summary_2.markdownSummary; } });\n/**\n * Path exports\n */\nvar path_utils_1 = require(\"./path-utils\");\nObject.defineProperty(exports, \"toPosixPath\", { enumerable: true, get: function () { return path_utils_1.toPosixPath; } });\nObject.defineProperty(exports, \"toWin32Path\", { enumerable: true, get: function () { return path_utils_1.toWin32Path; } });\nObject.defineProperty(exports, \"toPlatformPath\", { enumerable: true, get: function () { return path_utils_1.toPlatformPath; } });\n//# sourceMappingURL=core.js.map","\"use strict\";\n// For internal use, subject to change.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.prepareKeyValueMessage = exports.issueFileCommand = void 0;\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fs = __importStar(require(\"fs\"));\nconst os = __importStar(require(\"os\"));\nconst uuid_1 = require(\"uuid\");\nconst utils_1 = require(\"./utils\");\nfunction issueFileCommand(command, message) {\n    const filePath = process.env[`GITHUB_${command}`];\n    if (!filePath) {\n        throw new Error(`Unable to find environment variable for file command ${command}`);\n    }\n    if (!fs.existsSync(filePath)) {\n        throw new Error(`Missing file at path: ${filePath}`);\n    }\n    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {\n        encoding: 'utf8'\n    });\n}\nexports.issueFileCommand = issueFileCommand;\nfunction prepareKeyValueMessage(key, value) {\n    const delimiter = `ghadelimiter_${uuid_1.v4()}`;\n    const convertedValue = utils_1.toCommandValue(value);\n    // These should realistically never happen, but just in case someone finds a\n    // way to exploit uuid generation let's not allow keys or values that contain\n    // the delimiter.\n    if (key.includes(delimiter)) {\n        throw new Error(`Unexpected input: name should not contain the delimiter \"${delimiter}\"`);\n    }\n    if (convertedValue.includes(delimiter)) {\n        throw new Error(`Unexpected input: value should not contain the delimiter \"${delimiter}\"`);\n    }\n    return `${key}<<${delimiter}${os.EOL}${convertedValue}${os.EOL}${delimiter}`;\n}\nexports.prepareKeyValueMessage = prepareKeyValueMessage;\n//# sourceMappingURL=file-command.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OidcClient = void 0;\nconst http_client_1 = require(\"@actions/http-client\");\nconst auth_1 = require(\"@actions/http-client/lib/auth\");\nconst core_1 = require(\"./core\");\nclass OidcClient {\n    static createHttpClient(allowRetry = true, maxRetry = 10) {\n        const requestOptions = {\n            allowRetries: allowRetry,\n            maxRetries: maxRetry\n        };\n        return new http_client_1.HttpClient('actions/oidc-client', [new auth_1.BearerCredentialHandler(OidcClient.getRequestToken())], requestOptions);\n    }\n    static getRequestToken() {\n        const token = process.env['ACTIONS_ID_TOKEN_REQUEST_TOKEN'];\n        if (!token) {\n            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable');\n        }\n        return token;\n    }\n    static getIDTokenUrl() {\n        const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL'];\n        if (!runtimeUrl) {\n            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable');\n        }\n        return runtimeUrl;\n    }\n    static getCall(id_token_url) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const httpclient = OidcClient.createHttpClient();\n            const res = yield httpclient\n                .getJson(id_token_url)\n                .catch(error => {\n                throw new Error(`Failed to get ID Token. \\n \n        Error Code : ${error.statusCode}\\n \n        Error Message: ${error.result.message}`);\n            });\n            const id_token = (_a = res.result) === null || _a === void 0 ? void 0 : _a.value;\n            if (!id_token) {\n                throw new Error('Response json body do not have ID Token field');\n            }\n            return id_token;\n        });\n    }\n    static getIDToken(audience) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                // New ID Token is requested from action service\n                let id_token_url = OidcClient.getIDTokenUrl();\n                if (audience) {\n                    const encodedAudience = encodeURIComponent(audience);\n                    id_token_url = `${id_token_url}&audience=${encodedAudience}`;\n                }\n                core_1.debug(`ID token url is ${id_token_url}`);\n                const id_token = yield OidcClient.getCall(id_token_url);\n                core_1.setSecret(id_token);\n                return id_token;\n            }\n            catch (error) {\n                throw new Error(`Error message: ${error.message}`);\n            }\n        });\n    }\n}\nexports.OidcClient = OidcClient;\n//# sourceMappingURL=oidc-utils.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toPlatformPath = exports.toWin32Path = exports.toPosixPath = void 0;\nconst path = __importStar(require(\"path\"));\n/**\n * toPosixPath converts the given path to the posix form. On Windows, \\\\ will be\n * replaced with /.\n *\n * @param pth. Path to transform.\n * @return string Posix path.\n */\nfunction toPosixPath(pth) {\n    return pth.replace(/[\\\\]/g, '/');\n}\nexports.toPosixPath = toPosixPath;\n/**\n * toWin32Path converts the given path to the win32 form. On Linux, / will be\n * replaced with \\\\.\n *\n * @param pth. Path to transform.\n * @return string Win32 path.\n */\nfunction toWin32Path(pth) {\n    return pth.replace(/[/]/g, '\\\\');\n}\nexports.toWin32Path = toWin32Path;\n/**\n * toPlatformPath converts the given path to a platform-specific path. It does\n * this by replacing instances of / and \\ with the platform-specific path\n * separator.\n *\n * @param pth The path to platformize.\n * @return string The platform-specific path.\n */\nfunction toPlatformPath(pth) {\n    return pth.replace(/[/\\\\]/g, path.sep);\n}\nexports.toPlatformPath = toPlatformPath;\n//# sourceMappingURL=path-utils.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.summary = exports.markdownSummary = exports.SUMMARY_DOCS_URL = exports.SUMMARY_ENV_VAR = void 0;\nconst os_1 = require(\"os\");\nconst fs_1 = require(\"fs\");\nconst { access, appendFile, writeFile } = fs_1.promises;\nexports.SUMMARY_ENV_VAR = 'GITHUB_STEP_SUMMARY';\nexports.SUMMARY_DOCS_URL = 'https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary';\nclass Summary {\n    constructor() {\n        this._buffer = '';\n    }\n    /**\n     * Finds the summary file path from the environment, rejects if env var is not found or file does not exist\n     * Also checks r/w permissions.\n     *\n     * @returns step summary file path\n     */\n    filePath() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._filePath) {\n                return this._filePath;\n            }\n            const pathFromEnv = process.env[exports.SUMMARY_ENV_VAR];\n            if (!pathFromEnv) {\n                throw new Error(`Unable to find environment variable for $${exports.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`);\n            }\n            try {\n                yield access(pathFromEnv, fs_1.constants.R_OK | fs_1.constants.W_OK);\n            }\n            catch (_a) {\n                throw new Error(`Unable to access summary file: '${pathFromEnv}'. Check if the file has correct read/write permissions.`);\n            }\n            this._filePath = pathFromEnv;\n            return this._filePath;\n        });\n    }\n    /**\n     * Wraps content in an HTML tag, adding any HTML attributes\n     *\n     * @param {string} tag HTML tag to wrap\n     * @param {string | null} content content within the tag\n     * @param {[attribute: string]: string} attrs key-value list of HTML attributes to add\n     *\n     * @returns {string} content wrapped in HTML element\n     */\n    wrap(tag, content, attrs = {}) {\n        const htmlAttrs = Object.entries(attrs)\n            .map(([key, value]) => ` ${key}=\"${value}\"`)\n            .join('');\n        if (!content) {\n            return `<${tag}${htmlAttrs}>`;\n        }\n        return `<${tag}${htmlAttrs}>${content}</${tag}>`;\n    }\n    /**\n     * Writes text in the buffer to the summary buffer file and empties buffer. Will append by default.\n     *\n     * @param {SummaryWriteOptions} [options] (optional) options for write operation\n     *\n     * @returns {Promise<Summary>} summary instance\n     */\n    write(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const overwrite = !!(options === null || options === void 0 ? void 0 : options.overwrite);\n            const filePath = yield this.filePath();\n            const writeFunc = overwrite ? writeFile : appendFile;\n            yield writeFunc(filePath, this._buffer, { encoding: 'utf8' });\n            return this.emptyBuffer();\n        });\n    }\n    /**\n     * Clears the summary buffer and wipes the summary file\n     *\n     * @returns {Summary} summary instance\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.emptyBuffer().write({ overwrite: true });\n        });\n    }\n    /**\n     * Returns the current summary buffer as a string\n     *\n     * @returns {string} string of summary buffer\n     */\n    stringify() {\n        return this._buffer;\n    }\n    /**\n     * If the summary buffer is empty\n     *\n     * @returns {boolen} true if the buffer is empty\n     */\n    isEmptyBuffer() {\n        return this._buffer.length === 0;\n    }\n    /**\n     * Resets the summary buffer without writing to summary file\n     *\n     * @returns {Summary} summary instance\n     */\n    emptyBuffer() {\n        this._buffer = '';\n        return this;\n    }\n    /**\n     * Adds raw text to the summary buffer\n     *\n     * @param {string} text content to add\n     * @param {boolean} [addEOL=false] (optional) append an EOL to the raw text (default: false)\n     *\n     * @returns {Summary} summary instance\n     */\n    addRaw(text, addEOL = false) {\n        this._buffer += text;\n        return addEOL ? this.addEOL() : this;\n    }\n    /**\n     * Adds the operating system-specific end-of-line marker to the buffer\n     *\n     * @returns {Summary} summary instance\n     */\n    addEOL() {\n        return this.addRaw(os_1.EOL);\n    }\n    /**\n     * Adds an HTML codeblock to the summary buffer\n     *\n     * @param {string} code content to render within fenced code block\n     * @param {string} lang (optional) language to syntax highlight code\n     *\n     * @returns {Summary} summary instance\n     */\n    addCodeBlock(code, lang) {\n        const attrs = Object.assign({}, (lang && { lang }));\n        const element = this.wrap('pre', this.wrap('code', code), attrs);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML list to the summary buffer\n     *\n     * @param {string[]} items list of items to render\n     * @param {boolean} [ordered=false] (optional) if the rendered list should be ordered or not (default: false)\n     *\n     * @returns {Summary} summary instance\n     */\n    addList(items, ordered = false) {\n        const tag = ordered ? 'ol' : 'ul';\n        const listItems = items.map(item => this.wrap('li', item)).join('');\n        const element = this.wrap(tag, listItems);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML table to the summary buffer\n     *\n     * @param {SummaryTableCell[]} rows table rows\n     *\n     * @returns {Summary} summary instance\n     */\n    addTable(rows) {\n        const tableBody = rows\n            .map(row => {\n            const cells = row\n                .map(cell => {\n                if (typeof cell === 'string') {\n                    return this.wrap('td', cell);\n                }\n                const { header, data, colspan, rowspan } = cell;\n                const tag = header ? 'th' : 'td';\n                const attrs = Object.assign(Object.assign({}, (colspan && { colspan })), (rowspan && { rowspan }));\n                return this.wrap(tag, data, attrs);\n            })\n                .join('');\n            return this.wrap('tr', cells);\n        })\n            .join('');\n        const element = this.wrap('table', tableBody);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds a collapsable HTML details element to the summary buffer\n     *\n     * @param {string} label text for the closed state\n     * @param {string} content collapsable content\n     *\n     * @returns {Summary} summary instance\n     */\n    addDetails(label, content) {\n        const element = this.wrap('details', this.wrap('summary', label) + content);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML image tag to the summary buffer\n     *\n     * @param {string} src path to the image you to embed\n     * @param {string} alt text description of the image\n     * @param {SummaryImageOptions} options (optional) addition image attributes\n     *\n     * @returns {Summary} summary instance\n     */\n    addImage(src, alt, options) {\n        const { width, height } = options || {};\n        const attrs = Object.assign(Object.assign({}, (width && { width })), (height && { height }));\n        const element = this.wrap('img', null, Object.assign({ src, alt }, attrs));\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML section heading element\n     *\n     * @param {string} text heading text\n     * @param {number | string} [level=1] (optional) the heading level, default: 1\n     *\n     * @returns {Summary} summary instance\n     */\n    addHeading(text, level) {\n        const tag = `h${level}`;\n        const allowedTag = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].includes(tag)\n            ? tag\n            : 'h1';\n        const element = this.wrap(allowedTag, text);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML thematic break (<hr>) to the summary buffer\n     *\n     * @returns {Summary} summary instance\n     */\n    addSeparator() {\n        const element = this.wrap('hr', null);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML line break (<br>) to the summary buffer\n     *\n     * @returns {Summary} summary instance\n     */\n    addBreak() {\n        const element = this.wrap('br', null);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML blockquote to the summary buffer\n     *\n     * @param {string} text quote text\n     * @param {string} cite (optional) citation url\n     *\n     * @returns {Summary} summary instance\n     */\n    addQuote(text, cite) {\n        const attrs = Object.assign({}, (cite && { cite }));\n        const element = this.wrap('blockquote', text, attrs);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML anchor tag to the summary buffer\n     *\n     * @param {string} text link text/content\n     * @param {string} href hyperlink\n     *\n     * @returns {Summary} summary instance\n     */\n    addLink(text, href) {\n        const element = this.wrap('a', text, { href });\n        return this.addRaw(element).addEOL();\n    }\n}\nconst _summary = new Summary();\n/**\n * @deprecated use `core.summary`\n */\nexports.markdownSummary = _summary;\nexports.summary = _summary;\n//# sourceMappingURL=summary.js.map","\"use strict\";\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCommandProperties = exports.toCommandValue = void 0;\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input) {\n    if (input === null || input === undefined) {\n        return '';\n    }\n    else if (typeof input === 'string' || input instanceof String) {\n        return input;\n    }\n    return JSON.stringify(input);\n}\nexports.toCommandValue = toCommandValue;\n/**\n *\n * @param annotationProperties\n * @returns The command properties to send with the actual annotation command\n * See IssueCommandProperties: https://github.com/actions/runner/blob/main/src/Runner.Worker/ActionCommandManager.cs#L646\n */\nfunction toCommandProperties(annotationProperties) {\n    if (!Object.keys(annotationProperties).length) {\n        return {};\n    }\n    return {\n        title: annotationProperties.title,\n        file: annotationProperties.file,\n        line: annotationProperties.startLine,\n        endLine: annotationProperties.endLine,\n        col: annotationProperties.startColumn,\n        endColumn: annotationProperties.endColumn\n    };\n}\nexports.toCommandProperties = toCommandProperties;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PersonalAccessTokenCredentialHandler = exports.BearerCredentialHandler = exports.BasicCredentialHandler = void 0;\nclass BasicCredentialHandler {\n    constructor(username, password) {\n        this.username = username;\n        this.password = password;\n    }\n    prepareRequest(options) {\n        if (!options.headers) {\n            throw Error('The request has no headers');\n        }\n        options.headers['Authorization'] = `Basic ${Buffer.from(`${this.username}:${this.password}`).toString('base64')}`;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication() {\n        return false;\n    }\n    handleAuthentication() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('not implemented');\n        });\n    }\n}\nexports.BasicCredentialHandler = BasicCredentialHandler;\nclass BearerCredentialHandler {\n    constructor(token) {\n        this.token = token;\n    }\n    // currently implements pre-authorization\n    // TODO: support preAuth = false where it hooks on 401\n    prepareRequest(options) {\n        if (!options.headers) {\n            throw Error('The request has no headers');\n        }\n        options.headers['Authorization'] = `Bearer ${this.token}`;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication() {\n        return false;\n    }\n    handleAuthentication() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('not implemented');\n        });\n    }\n}\nexports.BearerCredentialHandler = BearerCredentialHandler;\nclass PersonalAccessTokenCredentialHandler {\n    constructor(token) {\n        this.token = token;\n    }\n    // currently implements pre-authorization\n    // TODO: support preAuth = false where it hooks on 401\n    prepareRequest(options) {\n        if (!options.headers) {\n            throw Error('The request has no headers');\n        }\n        options.headers['Authorization'] = `Basic ${Buffer.from(`PAT:${this.token}`).toString('base64')}`;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication() {\n        return false;\n    }\n    handleAuthentication() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('not implemented');\n        });\n    }\n}\nexports.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;\n//# sourceMappingURL=auth.js.map","\"use strict\";\n/* eslint-disable @typescript-eslint/no-explicit-any */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpClient = exports.isHttps = exports.HttpClientResponse = exports.HttpClientError = exports.getProxyUrl = exports.MediaTypes = exports.Headers = exports.HttpCodes = void 0;\nconst http = __importStar(require(\"http\"));\nconst https = __importStar(require(\"https\"));\nconst pm = __importStar(require(\"./proxy\"));\nconst tunnel = __importStar(require(\"tunnel\"));\nvar HttpCodes;\n(function (HttpCodes) {\n    HttpCodes[HttpCodes[\"OK\"] = 200] = \"OK\";\n    HttpCodes[HttpCodes[\"MultipleChoices\"] = 300] = \"MultipleChoices\";\n    HttpCodes[HttpCodes[\"MovedPermanently\"] = 301] = \"MovedPermanently\";\n    HttpCodes[HttpCodes[\"ResourceMoved\"] = 302] = \"ResourceMoved\";\n    HttpCodes[HttpCodes[\"SeeOther\"] = 303] = \"SeeOther\";\n    HttpCodes[HttpCodes[\"NotModified\"] = 304] = \"NotModified\";\n    HttpCodes[HttpCodes[\"UseProxy\"] = 305] = \"UseProxy\";\n    HttpCodes[HttpCodes[\"SwitchProxy\"] = 306] = \"SwitchProxy\";\n    HttpCodes[HttpCodes[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n    HttpCodes[HttpCodes[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n    HttpCodes[HttpCodes[\"BadRequest\"] = 400] = \"BadRequest\";\n    HttpCodes[HttpCodes[\"Unauthorized\"] = 401] = \"Unauthorized\";\n    HttpCodes[HttpCodes[\"PaymentRequired\"] = 402] = \"PaymentRequired\";\n    HttpCodes[HttpCodes[\"Forbidden\"] = 403] = \"Forbidden\";\n    HttpCodes[HttpCodes[\"NotFound\"] = 404] = \"NotFound\";\n    HttpCodes[HttpCodes[\"MethodNotAllowed\"] = 405] = \"MethodNotAllowed\";\n    HttpCodes[HttpCodes[\"NotAcceptable\"] = 406] = \"NotAcceptable\";\n    HttpCodes[HttpCodes[\"ProxyAuthenticationRequired\"] = 407] = \"ProxyAuthenticationRequired\";\n    HttpCodes[HttpCodes[\"RequestTimeout\"] = 408] = \"RequestTimeout\";\n    HttpCodes[HttpCodes[\"Conflict\"] = 409] = \"Conflict\";\n    HttpCodes[HttpCodes[\"Gone\"] = 410] = \"Gone\";\n    HttpCodes[HttpCodes[\"TooManyRequests\"] = 429] = \"TooManyRequests\";\n    HttpCodes[HttpCodes[\"InternalServerError\"] = 500] = \"InternalServerError\";\n    HttpCodes[HttpCodes[\"NotImplemented\"] = 501] = \"NotImplemented\";\n    HttpCodes[HttpCodes[\"BadGateway\"] = 502] = \"BadGateway\";\n    HttpCodes[HttpCodes[\"ServiceUnavailable\"] = 503] = \"ServiceUnavailable\";\n    HttpCodes[HttpCodes[\"GatewayTimeout\"] = 504] = \"GatewayTimeout\";\n})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));\nvar Headers;\n(function (Headers) {\n    Headers[\"Accept\"] = \"accept\";\n    Headers[\"ContentType\"] = \"content-type\";\n})(Headers = exports.Headers || (exports.Headers = {}));\nvar MediaTypes;\n(function (MediaTypes) {\n    MediaTypes[\"ApplicationJson\"] = \"application/json\";\n})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));\n/**\n * Returns the proxy URL, depending upon the supplied url and proxy environment variables.\n * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n */\nfunction getProxyUrl(serverUrl) {\n    const proxyUrl = pm.getProxyUrl(new URL(serverUrl));\n    return proxyUrl ? proxyUrl.href : '';\n}\nexports.getProxyUrl = getProxyUrl;\nconst HttpRedirectCodes = [\n    HttpCodes.MovedPermanently,\n    HttpCodes.ResourceMoved,\n    HttpCodes.SeeOther,\n    HttpCodes.TemporaryRedirect,\n    HttpCodes.PermanentRedirect\n];\nconst HttpResponseRetryCodes = [\n    HttpCodes.BadGateway,\n    HttpCodes.ServiceUnavailable,\n    HttpCodes.GatewayTimeout\n];\nconst RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];\nconst ExponentialBackoffCeiling = 10;\nconst ExponentialBackoffTimeSlice = 5;\nclass HttpClientError extends Error {\n    constructor(message, statusCode) {\n        super(message);\n        this.name = 'HttpClientError';\n        this.statusCode = statusCode;\n        Object.setPrototypeOf(this, HttpClientError.prototype);\n    }\n}\nexports.HttpClientError = HttpClientError;\nclass HttpClientResponse {\n    constructor(message) {\n        this.message = message;\n    }\n    readBody() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let output = Buffer.alloc(0);\n                this.message.on('data', (chunk) => {\n                    output = Buffer.concat([output, chunk]);\n                });\n                this.message.on('end', () => {\n                    resolve(output.toString());\n                });\n            }));\n        });\n    }\n}\nexports.HttpClientResponse = HttpClientResponse;\nfunction isHttps(requestUrl) {\n    const parsedUrl = new URL(requestUrl);\n    return parsedUrl.protocol === 'https:';\n}\nexports.isHttps = isHttps;\nclass HttpClient {\n    constructor(userAgent, handlers, requestOptions) {\n        this._ignoreSslError = false;\n        this._allowRedirects = true;\n        this._allowRedirectDowngrade = false;\n        this._maxRedirects = 50;\n        this._allowRetries = false;\n        this._maxRetries = 1;\n        this._keepAlive = false;\n        this._disposed = false;\n        this.userAgent = userAgent;\n        this.handlers = handlers || [];\n        this.requestOptions = requestOptions;\n        if (requestOptions) {\n            if (requestOptions.ignoreSslError != null) {\n                this._ignoreSslError = requestOptions.ignoreSslError;\n            }\n            this._socketTimeout = requestOptions.socketTimeout;\n            if (requestOptions.allowRedirects != null) {\n                this._allowRedirects = requestOptions.allowRedirects;\n            }\n            if (requestOptions.allowRedirectDowngrade != null) {\n                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;\n            }\n            if (requestOptions.maxRedirects != null) {\n                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);\n            }\n            if (requestOptions.keepAlive != null) {\n                this._keepAlive = requestOptions.keepAlive;\n            }\n            if (requestOptions.allowRetries != null) {\n                this._allowRetries = requestOptions.allowRetries;\n            }\n            if (requestOptions.maxRetries != null) {\n                this._maxRetries = requestOptions.maxRetries;\n            }\n        }\n    }\n    options(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    get(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('GET', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    del(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('DELETE', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    post(requestUrl, data, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('POST', requestUrl, data, additionalHeaders || {});\n        });\n    }\n    patch(requestUrl, data, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PATCH', requestUrl, data, additionalHeaders || {});\n        });\n    }\n    put(requestUrl, data, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PUT', requestUrl, data, additionalHeaders || {});\n        });\n    }\n    head(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('HEAD', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    sendStream(verb, requestUrl, stream, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request(verb, requestUrl, stream, additionalHeaders);\n        });\n    }\n    /**\n     * Gets a typed object from an endpoint\n     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise\n     */\n    getJson(requestUrl, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            const res = yield this.get(requestUrl, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    postJson(requestUrl, obj, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = JSON.stringify(obj, null, 2);\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n            const res = yield this.post(requestUrl, data, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    putJson(requestUrl, obj, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = JSON.stringify(obj, null, 2);\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n            const res = yield this.put(requestUrl, data, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    patchJson(requestUrl, obj, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = JSON.stringify(obj, null, 2);\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n            const res = yield this.patch(requestUrl, data, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    /**\n     * Makes a raw http request.\n     * All other methods such as get, post, patch, and request ultimately call this.\n     * Prefer get, del, post and patch\n     */\n    request(verb, requestUrl, data, headers) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._disposed) {\n                throw new Error('Client has already been disposed.');\n            }\n            const parsedUrl = new URL(requestUrl);\n            let info = this._prepareRequest(verb, parsedUrl, headers);\n            // Only perform retries on reads since writes may not be idempotent.\n            const maxTries = this._allowRetries && RetryableHttpVerbs.includes(verb)\n                ? this._maxRetries + 1\n                : 1;\n            let numTries = 0;\n            let response;\n            do {\n                response = yield this.requestRaw(info, data);\n                // Check if it's an authentication challenge\n                if (response &&\n                    response.message &&\n                    response.message.statusCode === HttpCodes.Unauthorized) {\n                    let authenticationHandler;\n                    for (const handler of this.handlers) {\n                        if (handler.canHandleAuthentication(response)) {\n                            authenticationHandler = handler;\n                            break;\n                        }\n                    }\n                    if (authenticationHandler) {\n                        return authenticationHandler.handleAuthentication(this, info, data);\n                    }\n                    else {\n                        // We have received an unauthorized response but have no handlers to handle it.\n                        // Let the response return to the caller.\n                        return response;\n                    }\n                }\n                let redirectsRemaining = this._maxRedirects;\n                while (response.message.statusCode &&\n                    HttpRedirectCodes.includes(response.message.statusCode) &&\n                    this._allowRedirects &&\n                    redirectsRemaining > 0) {\n                    const redirectUrl = response.message.headers['location'];\n                    if (!redirectUrl) {\n                        // if there's no location to redirect to, we won't\n                        break;\n                    }\n                    const parsedRedirectUrl = new URL(redirectUrl);\n                    if (parsedUrl.protocol === 'https:' &&\n                        parsedUrl.protocol !== parsedRedirectUrl.protocol &&\n                        !this._allowRedirectDowngrade) {\n                        throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');\n                    }\n                    // we need to finish reading the response before reassigning response\n                    // which will leak the open socket.\n                    yield response.readBody();\n                    // strip authorization header if redirected to a different hostname\n                    if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {\n                        for (const header in headers) {\n                            // header names are case insensitive\n                            if (header.toLowerCase() === 'authorization') {\n                                delete headers[header];\n                            }\n                        }\n                    }\n                    // let's make the request with the new redirectUrl\n                    info = this._prepareRequest(verb, parsedRedirectUrl, headers);\n                    response = yield this.requestRaw(info, data);\n                    redirectsRemaining--;\n                }\n                if (!response.message.statusCode ||\n                    !HttpResponseRetryCodes.includes(response.message.statusCode)) {\n                    // If not a retry code, return immediately instead of retrying\n                    return response;\n                }\n                numTries += 1;\n                if (numTries < maxTries) {\n                    yield response.readBody();\n                    yield this._performExponentialBackoff(numTries);\n                }\n            } while (numTries < maxTries);\n            return response;\n        });\n    }\n    /**\n     * Needs to be called if keepAlive is set to true in request options.\n     */\n    dispose() {\n        if (this._agent) {\n            this._agent.destroy();\n        }\n        this._disposed = true;\n    }\n    /**\n     * Raw request.\n     * @param info\n     * @param data\n     */\n    requestRaw(info, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                function callbackForResult(err, res) {\n                    if (err) {\n                        reject(err);\n                    }\n                    else if (!res) {\n                        // If `err` is not passed, then `res` must be passed.\n                        reject(new Error('Unknown error'));\n                    }\n                    else {\n                        resolve(res);\n                    }\n                }\n                this.requestRawWithCallback(info, data, callbackForResult);\n            });\n        });\n    }\n    /**\n     * Raw request with callback.\n     * @param info\n     * @param data\n     * @param onResult\n     */\n    requestRawWithCallback(info, data, onResult) {\n        if (typeof data === 'string') {\n            if (!info.options.headers) {\n                info.options.headers = {};\n            }\n            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');\n        }\n        let callbackCalled = false;\n        function handleResult(err, res) {\n            if (!callbackCalled) {\n                callbackCalled = true;\n                onResult(err, res);\n            }\n        }\n        const req = info.httpModule.request(info.options, (msg) => {\n            const res = new HttpClientResponse(msg);\n            handleResult(undefined, res);\n        });\n        let socket;\n        req.on('socket', sock => {\n            socket = sock;\n        });\n        // If we ever get disconnected, we want the socket to timeout eventually\n        req.setTimeout(this._socketTimeout || 3 * 60000, () => {\n            if (socket) {\n                socket.end();\n            }\n            handleResult(new Error(`Request timeout: ${info.options.path}`));\n        });\n        req.on('error', function (err) {\n            // err has statusCode property\n            // res should have headers\n            handleResult(err);\n        });\n        if (data && typeof data === 'string') {\n            req.write(data, 'utf8');\n        }\n        if (data && typeof data !== 'string') {\n            data.on('close', function () {\n                req.end();\n            });\n            data.pipe(req);\n        }\n        else {\n            req.end();\n        }\n    }\n    /**\n     * Gets an http agent. This function is useful when you need an http agent that handles\n     * routing through a proxy server - depending upon the url and proxy environment variables.\n     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n     */\n    getAgent(serverUrl) {\n        const parsedUrl = new URL(serverUrl);\n        return this._getAgent(parsedUrl);\n    }\n    _prepareRequest(method, requestUrl, headers) {\n        const info = {};\n        info.parsedUrl = requestUrl;\n        const usingSsl = info.parsedUrl.protocol === 'https:';\n        info.httpModule = usingSsl ? https : http;\n        const defaultPort = usingSsl ? 443 : 80;\n        info.options = {};\n        info.options.host = info.parsedUrl.hostname;\n        info.options.port = info.parsedUrl.port\n            ? parseInt(info.parsedUrl.port)\n            : defaultPort;\n        info.options.path =\n            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');\n        info.options.method = method;\n        info.options.headers = this._mergeHeaders(headers);\n        if (this.userAgent != null) {\n            info.options.headers['user-agent'] = this.userAgent;\n        }\n        info.options.agent = this._getAgent(info.parsedUrl);\n        // gives handlers an opportunity to participate\n        if (this.handlers) {\n            for (const handler of this.handlers) {\n                handler.prepareRequest(info.options);\n            }\n        }\n        return info;\n    }\n    _mergeHeaders(headers) {\n        if (this.requestOptions && this.requestOptions.headers) {\n            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers || {}));\n        }\n        return lowercaseKeys(headers || {});\n    }\n    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {\n        let clientHeader;\n        if (this.requestOptions && this.requestOptions.headers) {\n            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];\n        }\n        return additionalHeaders[header] || clientHeader || _default;\n    }\n    _getAgent(parsedUrl) {\n        let agent;\n        const proxyUrl = pm.getProxyUrl(parsedUrl);\n        const useProxy = proxyUrl && proxyUrl.hostname;\n        if (this._keepAlive && useProxy) {\n            agent = this._proxyAgent;\n        }\n        if (this._keepAlive && !useProxy) {\n            agent = this._agent;\n        }\n        // if agent is already assigned use that agent.\n        if (agent) {\n            return agent;\n        }\n        const usingSsl = parsedUrl.protocol === 'https:';\n        let maxSockets = 100;\n        if (this.requestOptions) {\n            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;\n        }\n        // This is `useProxy` again, but we need to check `proxyURl` directly for TypeScripts's flow analysis.\n        if (proxyUrl && proxyUrl.hostname) {\n            const agentOptions = {\n                maxSockets,\n                keepAlive: this._keepAlive,\n                proxy: Object.assign(Object.assign({}, ((proxyUrl.username || proxyUrl.password) && {\n                    proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`\n                })), { host: proxyUrl.hostname, port: proxyUrl.port })\n            };\n            let tunnelAgent;\n            const overHttps = proxyUrl.protocol === 'https:';\n            if (usingSsl) {\n                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;\n            }\n            else {\n                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;\n            }\n            agent = tunnelAgent(agentOptions);\n            this._proxyAgent = agent;\n        }\n        // if reusing agent across request and tunneling agent isn't assigned create a new agent\n        if (this._keepAlive && !agent) {\n            const options = { keepAlive: this._keepAlive, maxSockets };\n            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);\n            this._agent = agent;\n        }\n        // if not using private agent and tunnel agent isn't setup then use global agent\n        if (!agent) {\n            agent = usingSsl ? https.globalAgent : http.globalAgent;\n        }\n        if (usingSsl && this._ignoreSslError) {\n            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process\n            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options\n            // we have to cast it to any and change it directly\n            agent.options = Object.assign(agent.options || {}, {\n                rejectUnauthorized: false\n            });\n        }\n        return agent;\n    }\n    _performExponentialBackoff(retryNumber) {\n        return __awaiter(this, void 0, void 0, function* () {\n            retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);\n            const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);\n            return new Promise(resolve => setTimeout(() => resolve(), ms));\n        });\n    }\n    _processResponse(res, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                const statusCode = res.message.statusCode || 0;\n                const response = {\n                    statusCode,\n                    result: null,\n                    headers: {}\n                };\n                // not found leads to null obj returned\n                if (statusCode === HttpCodes.NotFound) {\n                    resolve(response);\n                }\n                // get the result from the body\n                function dateTimeDeserializer(key, value) {\n                    if (typeof value === 'string') {\n                        const a = new Date(value);\n                        if (!isNaN(a.valueOf())) {\n                            return a;\n                        }\n                    }\n                    return value;\n                }\n                let obj;\n                let contents;\n                try {\n                    contents = yield res.readBody();\n                    if (contents && contents.length > 0) {\n                        if (options && options.deserializeDates) {\n                            obj = JSON.parse(contents, dateTimeDeserializer);\n                        }\n                        else {\n                            obj = JSON.parse(contents);\n                        }\n                        response.result = obj;\n                    }\n                    response.headers = res.message.headers;\n                }\n                catch (err) {\n                    // Invalid resource (contents not json);  leaving result obj null\n                }\n                // note that 3xx redirects are handled by the http layer.\n                if (statusCode > 299) {\n                    let msg;\n                    // if exception/error in body, attempt to get better error\n                    if (obj && obj.message) {\n                        msg = obj.message;\n                    }\n                    else if (contents && contents.length > 0) {\n                        // it may be the case that the exception is in the body message as string\n                        msg = contents;\n                    }\n                    else {\n                        msg = `Failed request: (${statusCode})`;\n                    }\n                    const err = new HttpClientError(msg, statusCode);\n                    err.result = response.result;\n                    reject(err);\n                }\n                else {\n                    resolve(response);\n                }\n            }));\n        });\n    }\n}\nexports.HttpClient = HttpClient;\nconst lowercaseKeys = (obj) => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkBypass = exports.getProxyUrl = void 0;\nfunction getProxyUrl(reqUrl) {\n    const usingSsl = reqUrl.protocol === 'https:';\n    if (checkBypass(reqUrl)) {\n        return undefined;\n    }\n    const proxyVar = (() => {\n        if (usingSsl) {\n            return process.env['https_proxy'] || process.env['HTTPS_PROXY'];\n        }\n        else {\n            return process.env['http_proxy'] || process.env['HTTP_PROXY'];\n        }\n    })();\n    if (proxyVar) {\n        return new URL(proxyVar);\n    }\n    else {\n        return undefined;\n    }\n}\nexports.getProxyUrl = getProxyUrl;\nfunction checkBypass(reqUrl) {\n    if (!reqUrl.hostname) {\n        return false;\n    }\n    const noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';\n    if (!noProxy) {\n        return false;\n    }\n    // Determine the request port\n    let reqPort;\n    if (reqUrl.port) {\n        reqPort = Number(reqUrl.port);\n    }\n    else if (reqUrl.protocol === 'http:') {\n        reqPort = 80;\n    }\n    else if (reqUrl.protocol === 'https:') {\n        reqPort = 443;\n    }\n    // Format the request hostname and hostname with port\n    const upperReqHosts = [reqUrl.hostname.toUpperCase()];\n    if (typeof reqPort === 'number') {\n        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);\n    }\n    // Compare request host against noproxy\n    for (const upperNoProxyItem of noProxy\n        .split(',')\n        .map(x => x.trim().toUpperCase())\n        .filter(x => x)) {\n        if (upperReqHosts.some(x => x === upperNoProxyItem)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.checkBypass = checkBypass;\n//# sourceMappingURL=proxy.js.map","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AwsCrc32 = void 0;\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@aws-crypto/util\");\nvar index_1 = require(\"./index\");\nvar AwsCrc32 = /** @class */ (function () {\n    function AwsCrc32() {\n        this.crc32 = new index_1.Crc32();\n    }\n    AwsCrc32.prototype.update = function (toHash) {\n        if ((0, util_1.isEmptyData)(toHash))\n            return;\n        this.crc32.update((0, util_1.convertToBuffer)(toHash));\n    };\n    AwsCrc32.prototype.digest = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, (0, util_1.numToUint8)(this.crc32.digest())];\n            });\n        });\n    };\n    AwsCrc32.prototype.reset = function () {\n        this.crc32 = new index_1.Crc32();\n    };\n    return AwsCrc32;\n}());\nexports.AwsCrc32 = AwsCrc32;\n//# sourceMappingURL=aws_crc32.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AwsCrc32 = exports.Crc32 = exports.crc32 = void 0;\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@aws-crypto/util\");\nfunction crc32(data) {\n    return new Crc32().update(data).digest();\n}\nexports.crc32 = crc32;\nvar Crc32 = /** @class */ (function () {\n    function Crc32() {\n        this.checksum = 0xffffffff;\n    }\n    Crc32.prototype.update = function (data) {\n        var e_1, _a;\n        try {\n            for (var data_1 = tslib_1.__values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {\n                var byte = data_1_1.value;\n                this.checksum =\n                    (this.checksum >>> 8) ^ lookupTable[(this.checksum ^ byte) & 0xff];\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return this;\n    };\n    Crc32.prototype.digest = function () {\n        return (this.checksum ^ 0xffffffff) >>> 0;\n    };\n    return Crc32;\n}());\nexports.Crc32 = Crc32;\n// prettier-ignore\nvar a_lookUpTable = [\n    0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA,\n    0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3,\n    0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988,\n    0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91,\n    0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE,\n    0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7,\n    0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC,\n    0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5,\n    0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172,\n    0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B,\n    0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940,\n    0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59,\n    0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116,\n    0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F,\n    0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924,\n    0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D,\n    0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A,\n    0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433,\n    0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818,\n    0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01,\n    0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E,\n    0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457,\n    0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C,\n    0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65,\n    0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2,\n    0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB,\n    0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0,\n    0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9,\n    0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086,\n    0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F,\n    0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4,\n    0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD,\n    0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A,\n    0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683,\n    0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8,\n    0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1,\n    0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE,\n    0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7,\n    0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC,\n    0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5,\n    0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252,\n    0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B,\n    0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60,\n    0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79,\n    0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236,\n    0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F,\n    0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04,\n    0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D,\n    0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A,\n    0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713,\n    0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38,\n    0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21,\n    0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E,\n    0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777,\n    0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C,\n    0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45,\n    0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2,\n    0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB,\n    0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0,\n    0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9,\n    0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6,\n    0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF,\n    0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94,\n    0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D,\n];\nvar lookupTable = (0, util_1.uint32ArrayFrom)(a_lookUpTable);\nvar aws_crc32_1 = require(\"./aws_crc32\");\nObject.defineProperty(exports, \"AwsCrc32\", { enumerable: true, get: function () { return aws_crc32_1.AwsCrc32; } });\n//# sourceMappingURL=index.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __createBinding;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __createBinding = function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    };\r\n\r\n    __exportStar = function (m, exports) {\r\n        for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    };\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result[\"default\"] = mod;\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, privateMap) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to get private field on non-instance\");\r\n        }\r\n        return privateMap.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, privateMap, value) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to set private field on non-instance\");\r\n        }\r\n        privateMap.set(receiver, value);\r\n        return value;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n});\r\n","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AwsCrc32c = void 0;\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@aws-crypto/util\");\nvar index_1 = require(\"./index\");\nvar AwsCrc32c = /** @class */ (function () {\n    function AwsCrc32c() {\n        this.crc32c = new index_1.Crc32c();\n    }\n    AwsCrc32c.prototype.update = function (toHash) {\n        if ((0, util_1.isEmptyData)(toHash))\n            return;\n        this.crc32c.update((0, util_1.convertToBuffer)(toHash));\n    };\n    AwsCrc32c.prototype.digest = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, (0, util_1.numToUint8)(this.crc32c.digest())];\n            });\n        });\n    };\n    AwsCrc32c.prototype.reset = function () {\n        this.crc32c = new index_1.Crc32c();\n    };\n    return AwsCrc32c;\n}());\nexports.AwsCrc32c = AwsCrc32c;\n//# sourceMappingURL=aws_crc32c.js.map","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AwsCrc32c = exports.Crc32c = exports.crc32c = void 0;\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@aws-crypto/util\");\nfunction crc32c(data) {\n    return new Crc32c().update(data).digest();\n}\nexports.crc32c = crc32c;\nvar Crc32c = /** @class */ (function () {\n    function Crc32c() {\n        this.checksum = 0xffffffff;\n    }\n    Crc32c.prototype.update = function (data) {\n        var e_1, _a;\n        try {\n            for (var data_1 = tslib_1.__values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {\n                var byte = data_1_1.value;\n                this.checksum =\n                    (this.checksum >>> 8) ^ lookupTable[(this.checksum ^ byte) & 0xff];\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return this;\n    };\n    Crc32c.prototype.digest = function () {\n        return (this.checksum ^ 0xffffffff) >>> 0;\n    };\n    return Crc32c;\n}());\nexports.Crc32c = Crc32c;\n// prettier-ignore\nvar a_lookupTable = [\n    0x00000000, 0xF26B8303, 0xE13B70F7, 0x1350F3F4, 0xC79A971F, 0x35F1141C, 0x26A1E7E8, 0xD4CA64EB,\n    0x8AD958CF, 0x78B2DBCC, 0x6BE22838, 0x9989AB3B, 0x4D43CFD0, 0xBF284CD3, 0xAC78BF27, 0x5E133C24,\n    0x105EC76F, 0xE235446C, 0xF165B798, 0x030E349B, 0xD7C45070, 0x25AFD373, 0x36FF2087, 0xC494A384,\n    0x9A879FA0, 0x68EC1CA3, 0x7BBCEF57, 0x89D76C54, 0x5D1D08BF, 0xAF768BBC, 0xBC267848, 0x4E4DFB4B,\n    0x20BD8EDE, 0xD2D60DDD, 0xC186FE29, 0x33ED7D2A, 0xE72719C1, 0x154C9AC2, 0x061C6936, 0xF477EA35,\n    0xAA64D611, 0x580F5512, 0x4B5FA6E6, 0xB93425E5, 0x6DFE410E, 0x9F95C20D, 0x8CC531F9, 0x7EAEB2FA,\n    0x30E349B1, 0xC288CAB2, 0xD1D83946, 0x23B3BA45, 0xF779DEAE, 0x05125DAD, 0x1642AE59, 0xE4292D5A,\n    0xBA3A117E, 0x4851927D, 0x5B016189, 0xA96AE28A, 0x7DA08661, 0x8FCB0562, 0x9C9BF696, 0x6EF07595,\n    0x417B1DBC, 0xB3109EBF, 0xA0406D4B, 0x522BEE48, 0x86E18AA3, 0x748A09A0, 0x67DAFA54, 0x95B17957,\n    0xCBA24573, 0x39C9C670, 0x2A993584, 0xD8F2B687, 0x0C38D26C, 0xFE53516F, 0xED03A29B, 0x1F682198,\n    0x5125DAD3, 0xA34E59D0, 0xB01EAA24, 0x42752927, 0x96BF4DCC, 0x64D4CECF, 0x77843D3B, 0x85EFBE38,\n    0xDBFC821C, 0x2997011F, 0x3AC7F2EB, 0xC8AC71E8, 0x1C661503, 0xEE0D9600, 0xFD5D65F4, 0x0F36E6F7,\n    0x61C69362, 0x93AD1061, 0x80FDE395, 0x72966096, 0xA65C047D, 0x5437877E, 0x4767748A, 0xB50CF789,\n    0xEB1FCBAD, 0x197448AE, 0x0A24BB5A, 0xF84F3859, 0x2C855CB2, 0xDEEEDFB1, 0xCDBE2C45, 0x3FD5AF46,\n    0x7198540D, 0x83F3D70E, 0x90A324FA, 0x62C8A7F9, 0xB602C312, 0x44694011, 0x5739B3E5, 0xA55230E6,\n    0xFB410CC2, 0x092A8FC1, 0x1A7A7C35, 0xE811FF36, 0x3CDB9BDD, 0xCEB018DE, 0xDDE0EB2A, 0x2F8B6829,\n    0x82F63B78, 0x709DB87B, 0x63CD4B8F, 0x91A6C88C, 0x456CAC67, 0xB7072F64, 0xA457DC90, 0x563C5F93,\n    0x082F63B7, 0xFA44E0B4, 0xE9141340, 0x1B7F9043, 0xCFB5F4A8, 0x3DDE77AB, 0x2E8E845F, 0xDCE5075C,\n    0x92A8FC17, 0x60C37F14, 0x73938CE0, 0x81F80FE3, 0x55326B08, 0xA759E80B, 0xB4091BFF, 0x466298FC,\n    0x1871A4D8, 0xEA1A27DB, 0xF94AD42F, 0x0B21572C, 0xDFEB33C7, 0x2D80B0C4, 0x3ED04330, 0xCCBBC033,\n    0xA24BB5A6, 0x502036A5, 0x4370C551, 0xB11B4652, 0x65D122B9, 0x97BAA1BA, 0x84EA524E, 0x7681D14D,\n    0x2892ED69, 0xDAF96E6A, 0xC9A99D9E, 0x3BC21E9D, 0xEF087A76, 0x1D63F975, 0x0E330A81, 0xFC588982,\n    0xB21572C9, 0x407EF1CA, 0x532E023E, 0xA145813D, 0x758FE5D6, 0x87E466D5, 0x94B49521, 0x66DF1622,\n    0x38CC2A06, 0xCAA7A905, 0xD9F75AF1, 0x2B9CD9F2, 0xFF56BD19, 0x0D3D3E1A, 0x1E6DCDEE, 0xEC064EED,\n    0xC38D26C4, 0x31E6A5C7, 0x22B65633, 0xD0DDD530, 0x0417B1DB, 0xF67C32D8, 0xE52CC12C, 0x1747422F,\n    0x49547E0B, 0xBB3FFD08, 0xA86F0EFC, 0x5A048DFF, 0x8ECEE914, 0x7CA56A17, 0x6FF599E3, 0x9D9E1AE0,\n    0xD3D3E1AB, 0x21B862A8, 0x32E8915C, 0xC083125F, 0x144976B4, 0xE622F5B7, 0xF5720643, 0x07198540,\n    0x590AB964, 0xAB613A67, 0xB831C993, 0x4A5A4A90, 0x9E902E7B, 0x6CFBAD78, 0x7FAB5E8C, 0x8DC0DD8F,\n    0xE330A81A, 0x115B2B19, 0x020BD8ED, 0xF0605BEE, 0x24AA3F05, 0xD6C1BC06, 0xC5914FF2, 0x37FACCF1,\n    0x69E9F0D5, 0x9B8273D6, 0x88D28022, 0x7AB90321, 0xAE7367CA, 0x5C18E4C9, 0x4F48173D, 0xBD23943E,\n    0xF36E6F75, 0x0105EC76, 0x12551F82, 0xE03E9C81, 0x34F4F86A, 0xC69F7B69, 0xD5CF889D, 0x27A40B9E,\n    0x79B737BA, 0x8BDCB4B9, 0x988C474D, 0x6AE7C44E, 0xBE2DA0A5, 0x4C4623A6, 0x5F16D052, 0xAD7D5351,\n];\nvar lookupTable = (0, util_1.uint32ArrayFrom)(a_lookupTable);\nvar aws_crc32c_1 = require(\"./aws_crc32c\");\nObject.defineProperty(exports, \"AwsCrc32c\", { enumerable: true, get: function () { return aws_crc32c_1.AwsCrc32c; } });\n//# sourceMappingURL=index.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __createBinding;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __createBinding = function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    };\r\n\r\n    __exportStar = function (m, exports) {\r\n        for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    };\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result[\"default\"] = mod;\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, privateMap) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to get private field on non-instance\");\r\n        }\r\n        return privateMap.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, privateMap, value) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to set private field on non-instance\");\r\n        }\r\n        privateMap.set(receiver, value);\r\n        return value;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n});\r\n","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertToBuffer = void 0;\nvar util_utf8_browser_1 = require(\"@aws-sdk/util-utf8-browser\");\n// Quick polyfill\nvar fromUtf8 = typeof Buffer !== \"undefined\" && Buffer.from\n    ? function (input) { return Buffer.from(input, \"utf8\"); }\n    : util_utf8_browser_1.fromUtf8;\nfunction convertToBuffer(data) {\n    // Already a Uint8, do nothing\n    if (data instanceof Uint8Array)\n        return data;\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n}\nexports.convertToBuffer = convertToBuffer;\n//# sourceMappingURL=convertToBuffer.js.map","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uint32ArrayFrom = exports.numToUint8 = exports.isEmptyData = exports.convertToBuffer = void 0;\nvar convertToBuffer_1 = require(\"./convertToBuffer\");\nObject.defineProperty(exports, \"convertToBuffer\", { enumerable: true, get: function () { return convertToBuffer_1.convertToBuffer; } });\nvar isEmptyData_1 = require(\"./isEmptyData\");\nObject.defineProperty(exports, \"isEmptyData\", { enumerable: true, get: function () { return isEmptyData_1.isEmptyData; } });\nvar numToUint8_1 = require(\"./numToUint8\");\nObject.defineProperty(exports, \"numToUint8\", { enumerable: true, get: function () { return numToUint8_1.numToUint8; } });\nvar uint32ArrayFrom_1 = require(\"./uint32ArrayFrom\");\nObject.defineProperty(exports, \"uint32ArrayFrom\", { enumerable: true, get: function () { return uint32ArrayFrom_1.uint32ArrayFrom; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isEmptyData = void 0;\nfunction isEmptyData(data) {\n    if (typeof data === \"string\") {\n        return data.length === 0;\n    }\n    return data.byteLength === 0;\n}\nexports.isEmptyData = isEmptyData;\n//# sourceMappingURL=isEmptyData.js.map","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.numToUint8 = void 0;\nfunction numToUint8(num) {\n    return new Uint8Array([\n        (num & 0xff000000) >> 24,\n        (num & 0x00ff0000) >> 16,\n        (num & 0x0000ff00) >> 8,\n        num & 0x000000ff,\n    ]);\n}\nexports.numToUint8 = numToUint8;\n//# sourceMappingURL=numToUint8.js.map","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uint32ArrayFrom = void 0;\n// IE 11 does not support Array.from, so we do it manually\nfunction uint32ArrayFrom(a_lookUpTable) {\n    if (!Uint32Array.from) {\n        var return_array = new Uint32Array(a_lookUpTable.length);\n        var a_index = 0;\n        while (a_index < a_lookUpTable.length) {\n            return_array[a_index] = a_lookUpTable[a_index];\n            a_index += 1;\n        }\n        return return_array;\n    }\n    return Uint32Array.from(a_lookUpTable);\n}\nexports.uint32ArrayFrom = uint32ArrayFrom;\n//# sourceMappingURL=uint32ArrayFrom.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CloudFront = void 0;\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst CloudFrontClient_1 = require(\"./CloudFrontClient\");\nconst AssociateAliasCommand_1 = require(\"./commands/AssociateAliasCommand\");\nconst CopyDistributionCommand_1 = require(\"./commands/CopyDistributionCommand\");\nconst CreateCachePolicyCommand_1 = require(\"./commands/CreateCachePolicyCommand\");\nconst CreateCloudFrontOriginAccessIdentityCommand_1 = require(\"./commands/CreateCloudFrontOriginAccessIdentityCommand\");\nconst CreateContinuousDeploymentPolicyCommand_1 = require(\"./commands/CreateContinuousDeploymentPolicyCommand\");\nconst CreateDistributionCommand_1 = require(\"./commands/CreateDistributionCommand\");\nconst CreateDistributionWithTagsCommand_1 = require(\"./commands/CreateDistributionWithTagsCommand\");\nconst CreateFieldLevelEncryptionConfigCommand_1 = require(\"./commands/CreateFieldLevelEncryptionConfigCommand\");\nconst CreateFieldLevelEncryptionProfileCommand_1 = require(\"./commands/CreateFieldLevelEncryptionProfileCommand\");\nconst CreateFunctionCommand_1 = require(\"./commands/CreateFunctionCommand\");\nconst CreateInvalidationCommand_1 = require(\"./commands/CreateInvalidationCommand\");\nconst CreateKeyGroupCommand_1 = require(\"./commands/CreateKeyGroupCommand\");\nconst CreateMonitoringSubscriptionCommand_1 = require(\"./commands/CreateMonitoringSubscriptionCommand\");\nconst CreateOriginAccessControlCommand_1 = require(\"./commands/CreateOriginAccessControlCommand\");\nconst CreateOriginRequestPolicyCommand_1 = require(\"./commands/CreateOriginRequestPolicyCommand\");\nconst CreatePublicKeyCommand_1 = require(\"./commands/CreatePublicKeyCommand\");\nconst CreateRealtimeLogConfigCommand_1 = require(\"./commands/CreateRealtimeLogConfigCommand\");\nconst CreateResponseHeadersPolicyCommand_1 = require(\"./commands/CreateResponseHeadersPolicyCommand\");\nconst CreateStreamingDistributionCommand_1 = require(\"./commands/CreateStreamingDistributionCommand\");\nconst CreateStreamingDistributionWithTagsCommand_1 = require(\"./commands/CreateStreamingDistributionWithTagsCommand\");\nconst DeleteCachePolicyCommand_1 = require(\"./commands/DeleteCachePolicyCommand\");\nconst DeleteCloudFrontOriginAccessIdentityCommand_1 = require(\"./commands/DeleteCloudFrontOriginAccessIdentityCommand\");\nconst DeleteContinuousDeploymentPolicyCommand_1 = require(\"./commands/DeleteContinuousDeploymentPolicyCommand\");\nconst DeleteDistributionCommand_1 = require(\"./commands/DeleteDistributionCommand\");\nconst DeleteFieldLevelEncryptionConfigCommand_1 = require(\"./commands/DeleteFieldLevelEncryptionConfigCommand\");\nconst DeleteFieldLevelEncryptionProfileCommand_1 = require(\"./commands/DeleteFieldLevelEncryptionProfileCommand\");\nconst DeleteFunctionCommand_1 = require(\"./commands/DeleteFunctionCommand\");\nconst DeleteKeyGroupCommand_1 = require(\"./commands/DeleteKeyGroupCommand\");\nconst DeleteMonitoringSubscriptionCommand_1 = require(\"./commands/DeleteMonitoringSubscriptionCommand\");\nconst DeleteOriginAccessControlCommand_1 = require(\"./commands/DeleteOriginAccessControlCommand\");\nconst DeleteOriginRequestPolicyCommand_1 = require(\"./commands/DeleteOriginRequestPolicyCommand\");\nconst DeletePublicKeyCommand_1 = require(\"./commands/DeletePublicKeyCommand\");\nconst DeleteRealtimeLogConfigCommand_1 = require(\"./commands/DeleteRealtimeLogConfigCommand\");\nconst DeleteResponseHeadersPolicyCommand_1 = require(\"./commands/DeleteResponseHeadersPolicyCommand\");\nconst DeleteStreamingDistributionCommand_1 = require(\"./commands/DeleteStreamingDistributionCommand\");\nconst DescribeFunctionCommand_1 = require(\"./commands/DescribeFunctionCommand\");\nconst GetCachePolicyCommand_1 = require(\"./commands/GetCachePolicyCommand\");\nconst GetCachePolicyConfigCommand_1 = require(\"./commands/GetCachePolicyConfigCommand\");\nconst GetCloudFrontOriginAccessIdentityCommand_1 = require(\"./commands/GetCloudFrontOriginAccessIdentityCommand\");\nconst GetCloudFrontOriginAccessIdentityConfigCommand_1 = require(\"./commands/GetCloudFrontOriginAccessIdentityConfigCommand\");\nconst GetContinuousDeploymentPolicyCommand_1 = require(\"./commands/GetContinuousDeploymentPolicyCommand\");\nconst GetContinuousDeploymentPolicyConfigCommand_1 = require(\"./commands/GetContinuousDeploymentPolicyConfigCommand\");\nconst GetDistributionCommand_1 = require(\"./commands/GetDistributionCommand\");\nconst GetDistributionConfigCommand_1 = require(\"./commands/GetDistributionConfigCommand\");\nconst GetFieldLevelEncryptionCommand_1 = require(\"./commands/GetFieldLevelEncryptionCommand\");\nconst GetFieldLevelEncryptionConfigCommand_1 = require(\"./commands/GetFieldLevelEncryptionConfigCommand\");\nconst GetFieldLevelEncryptionProfileCommand_1 = require(\"./commands/GetFieldLevelEncryptionProfileCommand\");\nconst GetFieldLevelEncryptionProfileConfigCommand_1 = require(\"./commands/GetFieldLevelEncryptionProfileConfigCommand\");\nconst GetFunctionCommand_1 = require(\"./commands/GetFunctionCommand\");\nconst GetInvalidationCommand_1 = require(\"./commands/GetInvalidationCommand\");\nconst GetKeyGroupCommand_1 = require(\"./commands/GetKeyGroupCommand\");\nconst GetKeyGroupConfigCommand_1 = require(\"./commands/GetKeyGroupConfigCommand\");\nconst GetMonitoringSubscriptionCommand_1 = require(\"./commands/GetMonitoringSubscriptionCommand\");\nconst GetOriginAccessControlCommand_1 = require(\"./commands/GetOriginAccessControlCommand\");\nconst GetOriginAccessControlConfigCommand_1 = require(\"./commands/GetOriginAccessControlConfigCommand\");\nconst GetOriginRequestPolicyCommand_1 = require(\"./commands/GetOriginRequestPolicyCommand\");\nconst GetOriginRequestPolicyConfigCommand_1 = require(\"./commands/GetOriginRequestPolicyConfigCommand\");\nconst GetPublicKeyCommand_1 = require(\"./commands/GetPublicKeyCommand\");\nconst GetPublicKeyConfigCommand_1 = require(\"./commands/GetPublicKeyConfigCommand\");\nconst GetRealtimeLogConfigCommand_1 = require(\"./commands/GetRealtimeLogConfigCommand\");\nconst GetResponseHeadersPolicyCommand_1 = require(\"./commands/GetResponseHeadersPolicyCommand\");\nconst GetResponseHeadersPolicyConfigCommand_1 = require(\"./commands/GetResponseHeadersPolicyConfigCommand\");\nconst GetStreamingDistributionCommand_1 = require(\"./commands/GetStreamingDistributionCommand\");\nconst GetStreamingDistributionConfigCommand_1 = require(\"./commands/GetStreamingDistributionConfigCommand\");\nconst ListCachePoliciesCommand_1 = require(\"./commands/ListCachePoliciesCommand\");\nconst ListCloudFrontOriginAccessIdentitiesCommand_1 = require(\"./commands/ListCloudFrontOriginAccessIdentitiesCommand\");\nconst ListConflictingAliasesCommand_1 = require(\"./commands/ListConflictingAliasesCommand\");\nconst ListContinuousDeploymentPoliciesCommand_1 = require(\"./commands/ListContinuousDeploymentPoliciesCommand\");\nconst ListDistributionsByCachePolicyIdCommand_1 = require(\"./commands/ListDistributionsByCachePolicyIdCommand\");\nconst ListDistributionsByKeyGroupCommand_1 = require(\"./commands/ListDistributionsByKeyGroupCommand\");\nconst ListDistributionsByOriginRequestPolicyIdCommand_1 = require(\"./commands/ListDistributionsByOriginRequestPolicyIdCommand\");\nconst ListDistributionsByRealtimeLogConfigCommand_1 = require(\"./commands/ListDistributionsByRealtimeLogConfigCommand\");\nconst ListDistributionsByResponseHeadersPolicyIdCommand_1 = require(\"./commands/ListDistributionsByResponseHeadersPolicyIdCommand\");\nconst ListDistributionsByWebACLIdCommand_1 = require(\"./commands/ListDistributionsByWebACLIdCommand\");\nconst ListDistributionsCommand_1 = require(\"./commands/ListDistributionsCommand\");\nconst ListFieldLevelEncryptionConfigsCommand_1 = require(\"./commands/ListFieldLevelEncryptionConfigsCommand\");\nconst ListFieldLevelEncryptionProfilesCommand_1 = require(\"./commands/ListFieldLevelEncryptionProfilesCommand\");\nconst ListFunctionsCommand_1 = require(\"./commands/ListFunctionsCommand\");\nconst ListInvalidationsCommand_1 = require(\"./commands/ListInvalidationsCommand\");\nconst ListKeyGroupsCommand_1 = require(\"./commands/ListKeyGroupsCommand\");\nconst ListOriginAccessControlsCommand_1 = require(\"./commands/ListOriginAccessControlsCommand\");\nconst ListOriginRequestPoliciesCommand_1 = require(\"./commands/ListOriginRequestPoliciesCommand\");\nconst ListPublicKeysCommand_1 = require(\"./commands/ListPublicKeysCommand\");\nconst ListRealtimeLogConfigsCommand_1 = require(\"./commands/ListRealtimeLogConfigsCommand\");\nconst ListResponseHeadersPoliciesCommand_1 = require(\"./commands/ListResponseHeadersPoliciesCommand\");\nconst ListStreamingDistributionsCommand_1 = require(\"./commands/ListStreamingDistributionsCommand\");\nconst ListTagsForResourceCommand_1 = require(\"./commands/ListTagsForResourceCommand\");\nconst PublishFunctionCommand_1 = require(\"./commands/PublishFunctionCommand\");\nconst TagResourceCommand_1 = require(\"./commands/TagResourceCommand\");\nconst TestFunctionCommand_1 = require(\"./commands/TestFunctionCommand\");\nconst UntagResourceCommand_1 = require(\"./commands/UntagResourceCommand\");\nconst UpdateCachePolicyCommand_1 = require(\"./commands/UpdateCachePolicyCommand\");\nconst UpdateCloudFrontOriginAccessIdentityCommand_1 = require(\"./commands/UpdateCloudFrontOriginAccessIdentityCommand\");\nconst UpdateContinuousDeploymentPolicyCommand_1 = require(\"./commands/UpdateContinuousDeploymentPolicyCommand\");\nconst UpdateDistributionCommand_1 = require(\"./commands/UpdateDistributionCommand\");\nconst UpdateDistributionWithStagingConfigCommand_1 = require(\"./commands/UpdateDistributionWithStagingConfigCommand\");\nconst UpdateFieldLevelEncryptionConfigCommand_1 = require(\"./commands/UpdateFieldLevelEncryptionConfigCommand\");\nconst UpdateFieldLevelEncryptionProfileCommand_1 = require(\"./commands/UpdateFieldLevelEncryptionProfileCommand\");\nconst UpdateFunctionCommand_1 = require(\"./commands/UpdateFunctionCommand\");\nconst UpdateKeyGroupCommand_1 = require(\"./commands/UpdateKeyGroupCommand\");\nconst UpdateOriginAccessControlCommand_1 = require(\"./commands/UpdateOriginAccessControlCommand\");\nconst UpdateOriginRequestPolicyCommand_1 = require(\"./commands/UpdateOriginRequestPolicyCommand\");\nconst UpdatePublicKeyCommand_1 = require(\"./commands/UpdatePublicKeyCommand\");\nconst UpdateRealtimeLogConfigCommand_1 = require(\"./commands/UpdateRealtimeLogConfigCommand\");\nconst UpdateResponseHeadersPolicyCommand_1 = require(\"./commands/UpdateResponseHeadersPolicyCommand\");\nconst UpdateStreamingDistributionCommand_1 = require(\"./commands/UpdateStreamingDistributionCommand\");\nconst commands = {\n    AssociateAliasCommand: AssociateAliasCommand_1.AssociateAliasCommand,\n    CopyDistributionCommand: CopyDistributionCommand_1.CopyDistributionCommand,\n    CreateCachePolicyCommand: CreateCachePolicyCommand_1.CreateCachePolicyCommand,\n    CreateCloudFrontOriginAccessIdentityCommand: CreateCloudFrontOriginAccessIdentityCommand_1.CreateCloudFrontOriginAccessIdentityCommand,\n    CreateContinuousDeploymentPolicyCommand: CreateContinuousDeploymentPolicyCommand_1.CreateContinuousDeploymentPolicyCommand,\n    CreateDistributionCommand: CreateDistributionCommand_1.CreateDistributionCommand,\n    CreateDistributionWithTagsCommand: CreateDistributionWithTagsCommand_1.CreateDistributionWithTagsCommand,\n    CreateFieldLevelEncryptionConfigCommand: CreateFieldLevelEncryptionConfigCommand_1.CreateFieldLevelEncryptionConfigCommand,\n    CreateFieldLevelEncryptionProfileCommand: CreateFieldLevelEncryptionProfileCommand_1.CreateFieldLevelEncryptionProfileCommand,\n    CreateFunctionCommand: CreateFunctionCommand_1.CreateFunctionCommand,\n    CreateInvalidationCommand: CreateInvalidationCommand_1.CreateInvalidationCommand,\n    CreateKeyGroupCommand: CreateKeyGroupCommand_1.CreateKeyGroupCommand,\n    CreateMonitoringSubscriptionCommand: CreateMonitoringSubscriptionCommand_1.CreateMonitoringSubscriptionCommand,\n    CreateOriginAccessControlCommand: CreateOriginAccessControlCommand_1.CreateOriginAccessControlCommand,\n    CreateOriginRequestPolicyCommand: CreateOriginRequestPolicyCommand_1.CreateOriginRequestPolicyCommand,\n    CreatePublicKeyCommand: CreatePublicKeyCommand_1.CreatePublicKeyCommand,\n    CreateRealtimeLogConfigCommand: CreateRealtimeLogConfigCommand_1.CreateRealtimeLogConfigCommand,\n    CreateResponseHeadersPolicyCommand: CreateResponseHeadersPolicyCommand_1.CreateResponseHeadersPolicyCommand,\n    CreateStreamingDistributionCommand: CreateStreamingDistributionCommand_1.CreateStreamingDistributionCommand,\n    CreateStreamingDistributionWithTagsCommand: CreateStreamingDistributionWithTagsCommand_1.CreateStreamingDistributionWithTagsCommand,\n    DeleteCachePolicyCommand: DeleteCachePolicyCommand_1.DeleteCachePolicyCommand,\n    DeleteCloudFrontOriginAccessIdentityCommand: DeleteCloudFrontOriginAccessIdentityCommand_1.DeleteCloudFrontOriginAccessIdentityCommand,\n    DeleteContinuousDeploymentPolicyCommand: DeleteContinuousDeploymentPolicyCommand_1.DeleteContinuousDeploymentPolicyCommand,\n    DeleteDistributionCommand: DeleteDistributionCommand_1.DeleteDistributionCommand,\n    DeleteFieldLevelEncryptionConfigCommand: DeleteFieldLevelEncryptionConfigCommand_1.DeleteFieldLevelEncryptionConfigCommand,\n    DeleteFieldLevelEncryptionProfileCommand: DeleteFieldLevelEncryptionProfileCommand_1.DeleteFieldLevelEncryptionProfileCommand,\n    DeleteFunctionCommand: DeleteFunctionCommand_1.DeleteFunctionCommand,\n    DeleteKeyGroupCommand: DeleteKeyGroupCommand_1.DeleteKeyGroupCommand,\n    DeleteMonitoringSubscriptionCommand: DeleteMonitoringSubscriptionCommand_1.DeleteMonitoringSubscriptionCommand,\n    DeleteOriginAccessControlCommand: DeleteOriginAccessControlCommand_1.DeleteOriginAccessControlCommand,\n    DeleteOriginRequestPolicyCommand: DeleteOriginRequestPolicyCommand_1.DeleteOriginRequestPolicyCommand,\n    DeletePublicKeyCommand: DeletePublicKeyCommand_1.DeletePublicKeyCommand,\n    DeleteRealtimeLogConfigCommand: DeleteRealtimeLogConfigCommand_1.DeleteRealtimeLogConfigCommand,\n    DeleteResponseHeadersPolicyCommand: DeleteResponseHeadersPolicyCommand_1.DeleteResponseHeadersPolicyCommand,\n    DeleteStreamingDistributionCommand: DeleteStreamingDistributionCommand_1.DeleteStreamingDistributionCommand,\n    DescribeFunctionCommand: DescribeFunctionCommand_1.DescribeFunctionCommand,\n    GetCachePolicyCommand: GetCachePolicyCommand_1.GetCachePolicyCommand,\n    GetCachePolicyConfigCommand: GetCachePolicyConfigCommand_1.GetCachePolicyConfigCommand,\n    GetCloudFrontOriginAccessIdentityCommand: GetCloudFrontOriginAccessIdentityCommand_1.GetCloudFrontOriginAccessIdentityCommand,\n    GetCloudFrontOriginAccessIdentityConfigCommand: GetCloudFrontOriginAccessIdentityConfigCommand_1.GetCloudFrontOriginAccessIdentityConfigCommand,\n    GetContinuousDeploymentPolicyCommand: GetContinuousDeploymentPolicyCommand_1.GetContinuousDeploymentPolicyCommand,\n    GetContinuousDeploymentPolicyConfigCommand: GetContinuousDeploymentPolicyConfigCommand_1.GetContinuousDeploymentPolicyConfigCommand,\n    GetDistributionCommand: GetDistributionCommand_1.GetDistributionCommand,\n    GetDistributionConfigCommand: GetDistributionConfigCommand_1.GetDistributionConfigCommand,\n    GetFieldLevelEncryptionCommand: GetFieldLevelEncryptionCommand_1.GetFieldLevelEncryptionCommand,\n    GetFieldLevelEncryptionConfigCommand: GetFieldLevelEncryptionConfigCommand_1.GetFieldLevelEncryptionConfigCommand,\n    GetFieldLevelEncryptionProfileCommand: GetFieldLevelEncryptionProfileCommand_1.GetFieldLevelEncryptionProfileCommand,\n    GetFieldLevelEncryptionProfileConfigCommand: GetFieldLevelEncryptionProfileConfigCommand_1.GetFieldLevelEncryptionProfileConfigCommand,\n    GetFunctionCommand: GetFunctionCommand_1.GetFunctionCommand,\n    GetInvalidationCommand: GetInvalidationCommand_1.GetInvalidationCommand,\n    GetKeyGroupCommand: GetKeyGroupCommand_1.GetKeyGroupCommand,\n    GetKeyGroupConfigCommand: GetKeyGroupConfigCommand_1.GetKeyGroupConfigCommand,\n    GetMonitoringSubscriptionCommand: GetMonitoringSubscriptionCommand_1.GetMonitoringSubscriptionCommand,\n    GetOriginAccessControlCommand: GetOriginAccessControlCommand_1.GetOriginAccessControlCommand,\n    GetOriginAccessControlConfigCommand: GetOriginAccessControlConfigCommand_1.GetOriginAccessControlConfigCommand,\n    GetOriginRequestPolicyCommand: GetOriginRequestPolicyCommand_1.GetOriginRequestPolicyCommand,\n    GetOriginRequestPolicyConfigCommand: GetOriginRequestPolicyConfigCommand_1.GetOriginRequestPolicyConfigCommand,\n    GetPublicKeyCommand: GetPublicKeyCommand_1.GetPublicKeyCommand,\n    GetPublicKeyConfigCommand: GetPublicKeyConfigCommand_1.GetPublicKeyConfigCommand,\n    GetRealtimeLogConfigCommand: GetRealtimeLogConfigCommand_1.GetRealtimeLogConfigCommand,\n    GetResponseHeadersPolicyCommand: GetResponseHeadersPolicyCommand_1.GetResponseHeadersPolicyCommand,\n    GetResponseHeadersPolicyConfigCommand: GetResponseHeadersPolicyConfigCommand_1.GetResponseHeadersPolicyConfigCommand,\n    GetStreamingDistributionCommand: GetStreamingDistributionCommand_1.GetStreamingDistributionCommand,\n    GetStreamingDistributionConfigCommand: GetStreamingDistributionConfigCommand_1.GetStreamingDistributionConfigCommand,\n    ListCachePoliciesCommand: ListCachePoliciesCommand_1.ListCachePoliciesCommand,\n    ListCloudFrontOriginAccessIdentitiesCommand: ListCloudFrontOriginAccessIdentitiesCommand_1.ListCloudFrontOriginAccessIdentitiesCommand,\n    ListConflictingAliasesCommand: ListConflictingAliasesCommand_1.ListConflictingAliasesCommand,\n    ListContinuousDeploymentPoliciesCommand: ListContinuousDeploymentPoliciesCommand_1.ListContinuousDeploymentPoliciesCommand,\n    ListDistributionsCommand: ListDistributionsCommand_1.ListDistributionsCommand,\n    ListDistributionsByCachePolicyIdCommand: ListDistributionsByCachePolicyIdCommand_1.ListDistributionsByCachePolicyIdCommand,\n    ListDistributionsByKeyGroupCommand: ListDistributionsByKeyGroupCommand_1.ListDistributionsByKeyGroupCommand,\n    ListDistributionsByOriginRequestPolicyIdCommand: ListDistributionsByOriginRequestPolicyIdCommand_1.ListDistributionsByOriginRequestPolicyIdCommand,\n    ListDistributionsByRealtimeLogConfigCommand: ListDistributionsByRealtimeLogConfigCommand_1.ListDistributionsByRealtimeLogConfigCommand,\n    ListDistributionsByResponseHeadersPolicyIdCommand: ListDistributionsByResponseHeadersPolicyIdCommand_1.ListDistributionsByResponseHeadersPolicyIdCommand,\n    ListDistributionsByWebACLIdCommand: ListDistributionsByWebACLIdCommand_1.ListDistributionsByWebACLIdCommand,\n    ListFieldLevelEncryptionConfigsCommand: ListFieldLevelEncryptionConfigsCommand_1.ListFieldLevelEncryptionConfigsCommand,\n    ListFieldLevelEncryptionProfilesCommand: ListFieldLevelEncryptionProfilesCommand_1.ListFieldLevelEncryptionProfilesCommand,\n    ListFunctionsCommand: ListFunctionsCommand_1.ListFunctionsCommand,\n    ListInvalidationsCommand: ListInvalidationsCommand_1.ListInvalidationsCommand,\n    ListKeyGroupsCommand: ListKeyGroupsCommand_1.ListKeyGroupsCommand,\n    ListOriginAccessControlsCommand: ListOriginAccessControlsCommand_1.ListOriginAccessControlsCommand,\n    ListOriginRequestPoliciesCommand: ListOriginRequestPoliciesCommand_1.ListOriginRequestPoliciesCommand,\n    ListPublicKeysCommand: ListPublicKeysCommand_1.ListPublicKeysCommand,\n    ListRealtimeLogConfigsCommand: ListRealtimeLogConfigsCommand_1.ListRealtimeLogConfigsCommand,\n    ListResponseHeadersPoliciesCommand: ListResponseHeadersPoliciesCommand_1.ListResponseHeadersPoliciesCommand,\n    ListStreamingDistributionsCommand: ListStreamingDistributionsCommand_1.ListStreamingDistributionsCommand,\n    ListTagsForResourceCommand: ListTagsForResourceCommand_1.ListTagsForResourceCommand,\n    PublishFunctionCommand: PublishFunctionCommand_1.PublishFunctionCommand,\n    TagResourceCommand: TagResourceCommand_1.TagResourceCommand,\n    TestFunctionCommand: TestFunctionCommand_1.TestFunctionCommand,\n    UntagResourceCommand: UntagResourceCommand_1.UntagResourceCommand,\n    UpdateCachePolicyCommand: UpdateCachePolicyCommand_1.UpdateCachePolicyCommand,\n    UpdateCloudFrontOriginAccessIdentityCommand: UpdateCloudFrontOriginAccessIdentityCommand_1.UpdateCloudFrontOriginAccessIdentityCommand,\n    UpdateContinuousDeploymentPolicyCommand: UpdateContinuousDeploymentPolicyCommand_1.UpdateContinuousDeploymentPolicyCommand,\n    UpdateDistributionCommand: UpdateDistributionCommand_1.UpdateDistributionCommand,\n    UpdateDistributionWithStagingConfigCommand: UpdateDistributionWithStagingConfigCommand_1.UpdateDistributionWithStagingConfigCommand,\n    UpdateFieldLevelEncryptionConfigCommand: UpdateFieldLevelEncryptionConfigCommand_1.UpdateFieldLevelEncryptionConfigCommand,\n    UpdateFieldLevelEncryptionProfileCommand: UpdateFieldLevelEncryptionProfileCommand_1.UpdateFieldLevelEncryptionProfileCommand,\n    UpdateFunctionCommand: UpdateFunctionCommand_1.UpdateFunctionCommand,\n    UpdateKeyGroupCommand: UpdateKeyGroupCommand_1.UpdateKeyGroupCommand,\n    UpdateOriginAccessControlCommand: UpdateOriginAccessControlCommand_1.UpdateOriginAccessControlCommand,\n    UpdateOriginRequestPolicyCommand: UpdateOriginRequestPolicyCommand_1.UpdateOriginRequestPolicyCommand,\n    UpdatePublicKeyCommand: UpdatePublicKeyCommand_1.UpdatePublicKeyCommand,\n    UpdateRealtimeLogConfigCommand: UpdateRealtimeLogConfigCommand_1.UpdateRealtimeLogConfigCommand,\n    UpdateResponseHeadersPolicyCommand: UpdateResponseHeadersPolicyCommand_1.UpdateResponseHeadersPolicyCommand,\n    UpdateStreamingDistributionCommand: UpdateStreamingDistributionCommand_1.UpdateStreamingDistributionCommand,\n};\nclass CloudFront extends CloudFrontClient_1.CloudFrontClient {\n}\nexports.CloudFront = CloudFront;\n(0, smithy_client_1.createAggregatedClient)(commands, CloudFront);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CloudFrontClient = exports.__Client = void 0;\nconst middleware_host_header_1 = require(\"@aws-sdk/middleware-host-header\");\nconst middleware_logger_1 = require(\"@aws-sdk/middleware-logger\");\nconst middleware_recursion_detection_1 = require(\"@aws-sdk/middleware-recursion-detection\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst middleware_user_agent_1 = require(\"@aws-sdk/middleware-user-agent\");\nconst config_resolver_1 = require(\"@smithy/config-resolver\");\nconst middleware_content_length_1 = require(\"@smithy/middleware-content-length\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_retry_1 = require(\"@smithy/middleware-retry\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"__Client\", { enumerable: true, get: function () { return smithy_client_1.Client; } });\nconst EndpointParameters_1 = require(\"./endpoint/EndpointParameters\");\nconst runtimeConfig_1 = require(\"./runtimeConfig\");\nconst runtimeExtensions_1 = require(\"./runtimeExtensions\");\nclass CloudFrontClient extends smithy_client_1.Client {\n    constructor(...[configuration]) {\n        const _config_0 = (0, runtimeConfig_1.getRuntimeConfig)(configuration || {});\n        const _config_1 = (0, EndpointParameters_1.resolveClientEndpointParameters)(_config_0);\n        const _config_2 = (0, config_resolver_1.resolveRegionConfig)(_config_1);\n        const _config_3 = (0, middleware_endpoint_1.resolveEndpointConfig)(_config_2);\n        const _config_4 = (0, middleware_retry_1.resolveRetryConfig)(_config_3);\n        const _config_5 = (0, middleware_host_header_1.resolveHostHeaderConfig)(_config_4);\n        const _config_6 = (0, middleware_signing_1.resolveAwsAuthConfig)(_config_5);\n        const _config_7 = (0, middleware_user_agent_1.resolveUserAgentConfig)(_config_6);\n        const _config_8 = (0, runtimeExtensions_1.resolveRuntimeExtensions)(_config_7, configuration?.extensions || []);\n        super(_config_8);\n        this.config = _config_8;\n        this.middlewareStack.use((0, middleware_retry_1.getRetryPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_content_length_1.getContentLengthPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_host_header_1.getHostHeaderPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_logger_1.getLoggerPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_recursion_detection_1.getRecursionDetectionPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_signing_1.getAwsAuthPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_user_agent_1.getUserAgentPlugin)(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\nexports.CloudFrontClient = CloudFrontClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssociateAliasCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass AssociateAliasCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, AssociateAliasCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"AssociateAliasCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_AssociateAliasCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_AssociateAliasCommand)(output, context);\n    }\n}\nexports.AssociateAliasCommand = AssociateAliasCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CopyDistributionCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CopyDistributionCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, CopyDistributionCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CopyDistributionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: models_0_1.CopyDistributionResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_CopyDistributionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_CopyDistributionCommand)(output, context);\n    }\n}\nexports.CopyDistributionCommand = CopyDistributionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateCachePolicyCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateCachePolicyCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, CreateCachePolicyCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateCachePolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_CreateCachePolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_CreateCachePolicyCommand)(output, context);\n    }\n}\nexports.CreateCachePolicyCommand = CreateCachePolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateCloudFrontOriginAccessIdentityCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateCloudFrontOriginAccessIdentityCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, CreateCloudFrontOriginAccessIdentityCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateCloudFrontOriginAccessIdentityCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_CreateCloudFrontOriginAccessIdentityCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_CreateCloudFrontOriginAccessIdentityCommand)(output, context);\n    }\n}\nexports.CreateCloudFrontOriginAccessIdentityCommand = CreateCloudFrontOriginAccessIdentityCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateContinuousDeploymentPolicyCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateContinuousDeploymentPolicyCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, CreateContinuousDeploymentPolicyCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateContinuousDeploymentPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_CreateContinuousDeploymentPolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_CreateContinuousDeploymentPolicyCommand)(output, context);\n    }\n}\nexports.CreateContinuousDeploymentPolicyCommand = CreateContinuousDeploymentPolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateDistributionCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateDistributionCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, CreateDistributionCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateDistributionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateDistributionRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateDistributionResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_CreateDistributionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_CreateDistributionCommand)(output, context);\n    }\n}\nexports.CreateDistributionCommand = CreateDistributionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateDistributionWithTagsCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateDistributionWithTagsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, CreateDistributionWithTagsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateDistributionWithTagsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateDistributionWithTagsRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateDistributionWithTagsResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_CreateDistributionWithTagsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_CreateDistributionWithTagsCommand)(output, context);\n    }\n}\nexports.CreateDistributionWithTagsCommand = CreateDistributionWithTagsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateFieldLevelEncryptionConfigCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateFieldLevelEncryptionConfigCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, CreateFieldLevelEncryptionConfigCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateFieldLevelEncryptionConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_CreateFieldLevelEncryptionConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_CreateFieldLevelEncryptionConfigCommand)(output, context);\n    }\n}\nexports.CreateFieldLevelEncryptionConfigCommand = CreateFieldLevelEncryptionConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateFieldLevelEncryptionProfileCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateFieldLevelEncryptionProfileCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, CreateFieldLevelEncryptionProfileCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateFieldLevelEncryptionProfileCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_CreateFieldLevelEncryptionProfileCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_CreateFieldLevelEncryptionProfileCommand)(output, context);\n    }\n}\nexports.CreateFieldLevelEncryptionProfileCommand = CreateFieldLevelEncryptionProfileCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateFunctionCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateFunctionCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, CreateFunctionCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateFunctionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateFunctionRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_CreateFunctionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_CreateFunctionCommand)(output, context);\n    }\n}\nexports.CreateFunctionCommand = CreateFunctionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateInvalidationCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateInvalidationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, CreateInvalidationCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateInvalidationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_CreateInvalidationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_CreateInvalidationCommand)(output, context);\n    }\n}\nexports.CreateInvalidationCommand = CreateInvalidationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateKeyGroupCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateKeyGroupCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, CreateKeyGroupCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateKeyGroupCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_CreateKeyGroupCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_CreateKeyGroupCommand)(output, context);\n    }\n}\nexports.CreateKeyGroupCommand = CreateKeyGroupCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateMonitoringSubscriptionCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateMonitoringSubscriptionCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, CreateMonitoringSubscriptionCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateMonitoringSubscriptionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_CreateMonitoringSubscriptionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_CreateMonitoringSubscriptionCommand)(output, context);\n    }\n}\nexports.CreateMonitoringSubscriptionCommand = CreateMonitoringSubscriptionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateOriginAccessControlCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateOriginAccessControlCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, CreateOriginAccessControlCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateOriginAccessControlCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_CreateOriginAccessControlCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_CreateOriginAccessControlCommand)(output, context);\n    }\n}\nexports.CreateOriginAccessControlCommand = CreateOriginAccessControlCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateOriginRequestPolicyCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateOriginRequestPolicyCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, CreateOriginRequestPolicyCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateOriginRequestPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_CreateOriginRequestPolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_CreateOriginRequestPolicyCommand)(output, context);\n    }\n}\nexports.CreateOriginRequestPolicyCommand = CreateOriginRequestPolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreatePublicKeyCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreatePublicKeyCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, CreatePublicKeyCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreatePublicKeyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_CreatePublicKeyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_CreatePublicKeyCommand)(output, context);\n    }\n}\nexports.CreatePublicKeyCommand = CreatePublicKeyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateRealtimeLogConfigCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateRealtimeLogConfigCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, CreateRealtimeLogConfigCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateRealtimeLogConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_CreateRealtimeLogConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_CreateRealtimeLogConfigCommand)(output, context);\n    }\n}\nexports.CreateRealtimeLogConfigCommand = CreateRealtimeLogConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateResponseHeadersPolicyCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateResponseHeadersPolicyCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, CreateResponseHeadersPolicyCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateResponseHeadersPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_CreateResponseHeadersPolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_CreateResponseHeadersPolicyCommand)(output, context);\n    }\n}\nexports.CreateResponseHeadersPolicyCommand = CreateResponseHeadersPolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateStreamingDistributionCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateStreamingDistributionCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, CreateStreamingDistributionCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateStreamingDistributionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_CreateStreamingDistributionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_CreateStreamingDistributionCommand)(output, context);\n    }\n}\nexports.CreateStreamingDistributionCommand = CreateStreamingDistributionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateStreamingDistributionWithTagsCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateStreamingDistributionWithTagsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, CreateStreamingDistributionWithTagsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateStreamingDistributionWithTagsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_CreateStreamingDistributionWithTagsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_CreateStreamingDistributionWithTagsCommand)(output, context);\n    }\n}\nexports.CreateStreamingDistributionWithTagsCommand = CreateStreamingDistributionWithTagsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteCachePolicyCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteCachePolicyCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteCachePolicyCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteCachePolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteCachePolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteCachePolicyCommand)(output, context);\n    }\n}\nexports.DeleteCachePolicyCommand = DeleteCachePolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteCloudFrontOriginAccessIdentityCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteCloudFrontOriginAccessIdentityCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteCloudFrontOriginAccessIdentityCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteCloudFrontOriginAccessIdentityCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteCloudFrontOriginAccessIdentityCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteCloudFrontOriginAccessIdentityCommand)(output, context);\n    }\n}\nexports.DeleteCloudFrontOriginAccessIdentityCommand = DeleteCloudFrontOriginAccessIdentityCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteContinuousDeploymentPolicyCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteContinuousDeploymentPolicyCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteContinuousDeploymentPolicyCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteContinuousDeploymentPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteContinuousDeploymentPolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteContinuousDeploymentPolicyCommand)(output, context);\n    }\n}\nexports.DeleteContinuousDeploymentPolicyCommand = DeleteContinuousDeploymentPolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteDistributionCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteDistributionCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteDistributionCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteDistributionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteDistributionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteDistributionCommand)(output, context);\n    }\n}\nexports.DeleteDistributionCommand = DeleteDistributionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteFieldLevelEncryptionConfigCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteFieldLevelEncryptionConfigCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteFieldLevelEncryptionConfigCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteFieldLevelEncryptionConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteFieldLevelEncryptionConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteFieldLevelEncryptionConfigCommand)(output, context);\n    }\n}\nexports.DeleteFieldLevelEncryptionConfigCommand = DeleteFieldLevelEncryptionConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteFieldLevelEncryptionProfileCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteFieldLevelEncryptionProfileCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteFieldLevelEncryptionProfileCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteFieldLevelEncryptionProfileCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteFieldLevelEncryptionProfileCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteFieldLevelEncryptionProfileCommand)(output, context);\n    }\n}\nexports.DeleteFieldLevelEncryptionProfileCommand = DeleteFieldLevelEncryptionProfileCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteFunctionCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteFunctionCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteFunctionCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteFunctionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteFunctionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteFunctionCommand)(output, context);\n    }\n}\nexports.DeleteFunctionCommand = DeleteFunctionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteKeyGroupCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteKeyGroupCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteKeyGroupCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteKeyGroupCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteKeyGroupCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteKeyGroupCommand)(output, context);\n    }\n}\nexports.DeleteKeyGroupCommand = DeleteKeyGroupCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteMonitoringSubscriptionCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteMonitoringSubscriptionCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteMonitoringSubscriptionCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteMonitoringSubscriptionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteMonitoringSubscriptionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteMonitoringSubscriptionCommand)(output, context);\n    }\n}\nexports.DeleteMonitoringSubscriptionCommand = DeleteMonitoringSubscriptionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteOriginAccessControlCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteOriginAccessControlCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteOriginAccessControlCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteOriginAccessControlCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteOriginAccessControlCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteOriginAccessControlCommand)(output, context);\n    }\n}\nexports.DeleteOriginAccessControlCommand = DeleteOriginAccessControlCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteOriginRequestPolicyCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteOriginRequestPolicyCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteOriginRequestPolicyCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteOriginRequestPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteOriginRequestPolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteOriginRequestPolicyCommand)(output, context);\n    }\n}\nexports.DeleteOriginRequestPolicyCommand = DeleteOriginRequestPolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeletePublicKeyCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeletePublicKeyCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeletePublicKeyCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeletePublicKeyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeletePublicKeyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeletePublicKeyCommand)(output, context);\n    }\n}\nexports.DeletePublicKeyCommand = DeletePublicKeyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteRealtimeLogConfigCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteRealtimeLogConfigCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteRealtimeLogConfigCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteRealtimeLogConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteRealtimeLogConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteRealtimeLogConfigCommand)(output, context);\n    }\n}\nexports.DeleteRealtimeLogConfigCommand = DeleteRealtimeLogConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteResponseHeadersPolicyCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteResponseHeadersPolicyCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteResponseHeadersPolicyCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteResponseHeadersPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteResponseHeadersPolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteResponseHeadersPolicyCommand)(output, context);\n    }\n}\nexports.DeleteResponseHeadersPolicyCommand = DeleteResponseHeadersPolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteStreamingDistributionCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteStreamingDistributionCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteStreamingDistributionCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteStreamingDistributionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteStreamingDistributionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteStreamingDistributionCommand)(output, context);\n    }\n}\nexports.DeleteStreamingDistributionCommand = DeleteStreamingDistributionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescribeFunctionCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DescribeFunctionCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DescribeFunctionCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DescribeFunctionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DescribeFunctionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DescribeFunctionCommand)(output, context);\n    }\n}\nexports.DescribeFunctionCommand = DescribeFunctionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetCachePolicyCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetCachePolicyCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetCachePolicyCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetCachePolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetCachePolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetCachePolicyCommand)(output, context);\n    }\n}\nexports.GetCachePolicyCommand = GetCachePolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetCachePolicyConfigCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetCachePolicyConfigCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetCachePolicyConfigCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetCachePolicyConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetCachePolicyConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetCachePolicyConfigCommand)(output, context);\n    }\n}\nexports.GetCachePolicyConfigCommand = GetCachePolicyConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetCloudFrontOriginAccessIdentityCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetCloudFrontOriginAccessIdentityCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetCloudFrontOriginAccessIdentityCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetCloudFrontOriginAccessIdentityCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetCloudFrontOriginAccessIdentityCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetCloudFrontOriginAccessIdentityCommand)(output, context);\n    }\n}\nexports.GetCloudFrontOriginAccessIdentityCommand = GetCloudFrontOriginAccessIdentityCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetCloudFrontOriginAccessIdentityConfigCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetCloudFrontOriginAccessIdentityConfigCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetCloudFrontOriginAccessIdentityConfigCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetCloudFrontOriginAccessIdentityConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetCloudFrontOriginAccessIdentityConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetCloudFrontOriginAccessIdentityConfigCommand)(output, context);\n    }\n}\nexports.GetCloudFrontOriginAccessIdentityConfigCommand = GetCloudFrontOriginAccessIdentityConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetContinuousDeploymentPolicyCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetContinuousDeploymentPolicyCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetContinuousDeploymentPolicyCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetContinuousDeploymentPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetContinuousDeploymentPolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetContinuousDeploymentPolicyCommand)(output, context);\n    }\n}\nexports.GetContinuousDeploymentPolicyCommand = GetContinuousDeploymentPolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetContinuousDeploymentPolicyConfigCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetContinuousDeploymentPolicyConfigCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetContinuousDeploymentPolicyConfigCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetContinuousDeploymentPolicyConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetContinuousDeploymentPolicyConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetContinuousDeploymentPolicyConfigCommand)(output, context);\n    }\n}\nexports.GetContinuousDeploymentPolicyConfigCommand = GetContinuousDeploymentPolicyConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetDistributionCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetDistributionCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetDistributionCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetDistributionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: models_1_1.GetDistributionResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetDistributionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetDistributionCommand)(output, context);\n    }\n}\nexports.GetDistributionCommand = GetDistributionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetDistributionConfigCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetDistributionConfigCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetDistributionConfigCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetDistributionConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: models_1_1.GetDistributionConfigResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetDistributionConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetDistributionConfigCommand)(output, context);\n    }\n}\nexports.GetDistributionConfigCommand = GetDistributionConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetFieldLevelEncryptionCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetFieldLevelEncryptionCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetFieldLevelEncryptionCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetFieldLevelEncryptionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetFieldLevelEncryptionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetFieldLevelEncryptionCommand)(output, context);\n    }\n}\nexports.GetFieldLevelEncryptionCommand = GetFieldLevelEncryptionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetFieldLevelEncryptionConfigCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetFieldLevelEncryptionConfigCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetFieldLevelEncryptionConfigCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetFieldLevelEncryptionConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetFieldLevelEncryptionConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetFieldLevelEncryptionConfigCommand)(output, context);\n    }\n}\nexports.GetFieldLevelEncryptionConfigCommand = GetFieldLevelEncryptionConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetFieldLevelEncryptionProfileCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetFieldLevelEncryptionProfileCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetFieldLevelEncryptionProfileCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetFieldLevelEncryptionProfileCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetFieldLevelEncryptionProfileCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetFieldLevelEncryptionProfileCommand)(output, context);\n    }\n}\nexports.GetFieldLevelEncryptionProfileCommand = GetFieldLevelEncryptionProfileCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetFieldLevelEncryptionProfileConfigCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetFieldLevelEncryptionProfileConfigCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetFieldLevelEncryptionProfileConfigCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetFieldLevelEncryptionProfileConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetFieldLevelEncryptionProfileConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetFieldLevelEncryptionProfileConfigCommand)(output, context);\n    }\n}\nexports.GetFieldLevelEncryptionProfileConfigCommand = GetFieldLevelEncryptionProfileConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetFunctionCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetFunctionCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetFunctionCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetFunctionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: models_1_1.GetFunctionResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetFunctionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetFunctionCommand)(output, context);\n    }\n}\nexports.GetFunctionCommand = GetFunctionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetInvalidationCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetInvalidationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetInvalidationCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetInvalidationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetInvalidationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetInvalidationCommand)(output, context);\n    }\n}\nexports.GetInvalidationCommand = GetInvalidationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetKeyGroupCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetKeyGroupCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetKeyGroupCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetKeyGroupCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetKeyGroupCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetKeyGroupCommand)(output, context);\n    }\n}\nexports.GetKeyGroupCommand = GetKeyGroupCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetKeyGroupConfigCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetKeyGroupConfigCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetKeyGroupConfigCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetKeyGroupConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetKeyGroupConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetKeyGroupConfigCommand)(output, context);\n    }\n}\nexports.GetKeyGroupConfigCommand = GetKeyGroupConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetMonitoringSubscriptionCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetMonitoringSubscriptionCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetMonitoringSubscriptionCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetMonitoringSubscriptionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetMonitoringSubscriptionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetMonitoringSubscriptionCommand)(output, context);\n    }\n}\nexports.GetMonitoringSubscriptionCommand = GetMonitoringSubscriptionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetOriginAccessControlCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetOriginAccessControlCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetOriginAccessControlCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetOriginAccessControlCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetOriginAccessControlCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetOriginAccessControlCommand)(output, context);\n    }\n}\nexports.GetOriginAccessControlCommand = GetOriginAccessControlCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetOriginAccessControlConfigCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetOriginAccessControlConfigCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetOriginAccessControlConfigCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetOriginAccessControlConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetOriginAccessControlConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetOriginAccessControlConfigCommand)(output, context);\n    }\n}\nexports.GetOriginAccessControlConfigCommand = GetOriginAccessControlConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetOriginRequestPolicyCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetOriginRequestPolicyCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetOriginRequestPolicyCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetOriginRequestPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetOriginRequestPolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetOriginRequestPolicyCommand)(output, context);\n    }\n}\nexports.GetOriginRequestPolicyCommand = GetOriginRequestPolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetOriginRequestPolicyConfigCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetOriginRequestPolicyConfigCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetOriginRequestPolicyConfigCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetOriginRequestPolicyConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetOriginRequestPolicyConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetOriginRequestPolicyConfigCommand)(output, context);\n    }\n}\nexports.GetOriginRequestPolicyConfigCommand = GetOriginRequestPolicyConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetPublicKeyCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetPublicKeyCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetPublicKeyCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetPublicKeyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetPublicKeyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetPublicKeyCommand)(output, context);\n    }\n}\nexports.GetPublicKeyCommand = GetPublicKeyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetPublicKeyConfigCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetPublicKeyConfigCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetPublicKeyConfigCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetPublicKeyConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetPublicKeyConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetPublicKeyConfigCommand)(output, context);\n    }\n}\nexports.GetPublicKeyConfigCommand = GetPublicKeyConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetRealtimeLogConfigCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetRealtimeLogConfigCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetRealtimeLogConfigCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetRealtimeLogConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetRealtimeLogConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetRealtimeLogConfigCommand)(output, context);\n    }\n}\nexports.GetRealtimeLogConfigCommand = GetRealtimeLogConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetResponseHeadersPolicyCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetResponseHeadersPolicyCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetResponseHeadersPolicyCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetResponseHeadersPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetResponseHeadersPolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetResponseHeadersPolicyCommand)(output, context);\n    }\n}\nexports.GetResponseHeadersPolicyCommand = GetResponseHeadersPolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetResponseHeadersPolicyConfigCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetResponseHeadersPolicyConfigCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetResponseHeadersPolicyConfigCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetResponseHeadersPolicyConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetResponseHeadersPolicyConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetResponseHeadersPolicyConfigCommand)(output, context);\n    }\n}\nexports.GetResponseHeadersPolicyConfigCommand = GetResponseHeadersPolicyConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetStreamingDistributionCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetStreamingDistributionCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetStreamingDistributionCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetStreamingDistributionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetStreamingDistributionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetStreamingDistributionCommand)(output, context);\n    }\n}\nexports.GetStreamingDistributionCommand = GetStreamingDistributionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetStreamingDistributionConfigCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetStreamingDistributionConfigCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetStreamingDistributionConfigCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetStreamingDistributionConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetStreamingDistributionConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetStreamingDistributionConfigCommand)(output, context);\n    }\n}\nexports.GetStreamingDistributionConfigCommand = GetStreamingDistributionConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListCachePoliciesCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListCachePoliciesCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListCachePoliciesCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListCachePoliciesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListCachePoliciesCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListCachePoliciesCommand)(output, context);\n    }\n}\nexports.ListCachePoliciesCommand = ListCachePoliciesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListCloudFrontOriginAccessIdentitiesCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListCloudFrontOriginAccessIdentitiesCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListCloudFrontOriginAccessIdentitiesCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListCloudFrontOriginAccessIdentitiesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListCloudFrontOriginAccessIdentitiesCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListCloudFrontOriginAccessIdentitiesCommand)(output, context);\n    }\n}\nexports.ListCloudFrontOriginAccessIdentitiesCommand = ListCloudFrontOriginAccessIdentitiesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListConflictingAliasesCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListConflictingAliasesCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListConflictingAliasesCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListConflictingAliasesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListConflictingAliasesCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListConflictingAliasesCommand)(output, context);\n    }\n}\nexports.ListConflictingAliasesCommand = ListConflictingAliasesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListContinuousDeploymentPoliciesCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListContinuousDeploymentPoliciesCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListContinuousDeploymentPoliciesCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListContinuousDeploymentPoliciesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListContinuousDeploymentPoliciesCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListContinuousDeploymentPoliciesCommand)(output, context);\n    }\n}\nexports.ListContinuousDeploymentPoliciesCommand = ListContinuousDeploymentPoliciesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListDistributionsByCachePolicyIdCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListDistributionsByCachePolicyIdCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListDistributionsByCachePolicyIdCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListDistributionsByCachePolicyIdCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListDistributionsByCachePolicyIdCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListDistributionsByCachePolicyIdCommand)(output, context);\n    }\n}\nexports.ListDistributionsByCachePolicyIdCommand = ListDistributionsByCachePolicyIdCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListDistributionsByKeyGroupCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListDistributionsByKeyGroupCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListDistributionsByKeyGroupCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListDistributionsByKeyGroupCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListDistributionsByKeyGroupCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListDistributionsByKeyGroupCommand)(output, context);\n    }\n}\nexports.ListDistributionsByKeyGroupCommand = ListDistributionsByKeyGroupCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListDistributionsByOriginRequestPolicyIdCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListDistributionsByOriginRequestPolicyIdCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListDistributionsByOriginRequestPolicyIdCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListDistributionsByOriginRequestPolicyIdCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListDistributionsByOriginRequestPolicyIdCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListDistributionsByOriginRequestPolicyIdCommand)(output, context);\n    }\n}\nexports.ListDistributionsByOriginRequestPolicyIdCommand = ListDistributionsByOriginRequestPolicyIdCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListDistributionsByRealtimeLogConfigCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListDistributionsByRealtimeLogConfigCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListDistributionsByRealtimeLogConfigCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListDistributionsByRealtimeLogConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: models_1_1.ListDistributionsByRealtimeLogConfigResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListDistributionsByRealtimeLogConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListDistributionsByRealtimeLogConfigCommand)(output, context);\n    }\n}\nexports.ListDistributionsByRealtimeLogConfigCommand = ListDistributionsByRealtimeLogConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListDistributionsByResponseHeadersPolicyIdCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListDistributionsByResponseHeadersPolicyIdCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListDistributionsByResponseHeadersPolicyIdCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListDistributionsByResponseHeadersPolicyIdCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListDistributionsByResponseHeadersPolicyIdCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListDistributionsByResponseHeadersPolicyIdCommand)(output, context);\n    }\n}\nexports.ListDistributionsByResponseHeadersPolicyIdCommand = ListDistributionsByResponseHeadersPolicyIdCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListDistributionsByWebACLIdCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListDistributionsByWebACLIdCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListDistributionsByWebACLIdCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListDistributionsByWebACLIdCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: models_1_1.ListDistributionsByWebACLIdResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListDistributionsByWebACLIdCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListDistributionsByWebACLIdCommand)(output, context);\n    }\n}\nexports.ListDistributionsByWebACLIdCommand = ListDistributionsByWebACLIdCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListDistributionsCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListDistributionsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListDistributionsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListDistributionsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: models_1_1.ListDistributionsResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListDistributionsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListDistributionsCommand)(output, context);\n    }\n}\nexports.ListDistributionsCommand = ListDistributionsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListFieldLevelEncryptionConfigsCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListFieldLevelEncryptionConfigsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListFieldLevelEncryptionConfigsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListFieldLevelEncryptionConfigsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListFieldLevelEncryptionConfigsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListFieldLevelEncryptionConfigsCommand)(output, context);\n    }\n}\nexports.ListFieldLevelEncryptionConfigsCommand = ListFieldLevelEncryptionConfigsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListFieldLevelEncryptionProfilesCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListFieldLevelEncryptionProfilesCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListFieldLevelEncryptionProfilesCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListFieldLevelEncryptionProfilesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListFieldLevelEncryptionProfilesCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListFieldLevelEncryptionProfilesCommand)(output, context);\n    }\n}\nexports.ListFieldLevelEncryptionProfilesCommand = ListFieldLevelEncryptionProfilesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListFunctionsCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListFunctionsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListFunctionsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListFunctionsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListFunctionsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListFunctionsCommand)(output, context);\n    }\n}\nexports.ListFunctionsCommand = ListFunctionsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListInvalidationsCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListInvalidationsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListInvalidationsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListInvalidationsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListInvalidationsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListInvalidationsCommand)(output, context);\n    }\n}\nexports.ListInvalidationsCommand = ListInvalidationsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListKeyGroupsCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListKeyGroupsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListKeyGroupsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListKeyGroupsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListKeyGroupsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListKeyGroupsCommand)(output, context);\n    }\n}\nexports.ListKeyGroupsCommand = ListKeyGroupsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListOriginAccessControlsCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListOriginAccessControlsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListOriginAccessControlsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListOriginAccessControlsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListOriginAccessControlsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListOriginAccessControlsCommand)(output, context);\n    }\n}\nexports.ListOriginAccessControlsCommand = ListOriginAccessControlsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListOriginRequestPoliciesCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListOriginRequestPoliciesCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListOriginRequestPoliciesCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListOriginRequestPoliciesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListOriginRequestPoliciesCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListOriginRequestPoliciesCommand)(output, context);\n    }\n}\nexports.ListOriginRequestPoliciesCommand = ListOriginRequestPoliciesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListPublicKeysCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListPublicKeysCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListPublicKeysCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListPublicKeysCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListPublicKeysCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListPublicKeysCommand)(output, context);\n    }\n}\nexports.ListPublicKeysCommand = ListPublicKeysCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListRealtimeLogConfigsCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListRealtimeLogConfigsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListRealtimeLogConfigsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListRealtimeLogConfigsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListRealtimeLogConfigsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListRealtimeLogConfigsCommand)(output, context);\n    }\n}\nexports.ListRealtimeLogConfigsCommand = ListRealtimeLogConfigsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListResponseHeadersPoliciesCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListResponseHeadersPoliciesCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListResponseHeadersPoliciesCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListResponseHeadersPoliciesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListResponseHeadersPoliciesCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListResponseHeadersPoliciesCommand)(output, context);\n    }\n}\nexports.ListResponseHeadersPoliciesCommand = ListResponseHeadersPoliciesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListStreamingDistributionsCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListStreamingDistributionsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListStreamingDistributionsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListStreamingDistributionsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListStreamingDistributionsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListStreamingDistributionsCommand)(output, context);\n    }\n}\nexports.ListStreamingDistributionsCommand = ListStreamingDistributionsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListTagsForResourceCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListTagsForResourceCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListTagsForResourceCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListTagsForResourceCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListTagsForResourceCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListTagsForResourceCommand)(output, context);\n    }\n}\nexports.ListTagsForResourceCommand = ListTagsForResourceCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PublishFunctionCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PublishFunctionCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PublishFunctionCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"PublishFunctionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PublishFunctionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PublishFunctionCommand)(output, context);\n    }\n}\nexports.PublishFunctionCommand = PublishFunctionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TagResourceCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass TagResourceCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, TagResourceCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"TagResourceCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_TagResourceCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_TagResourceCommand)(output, context);\n    }\n}\nexports.TagResourceCommand = TagResourceCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TestFunctionCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass TestFunctionCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, TestFunctionCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"TestFunctionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.TestFunctionRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.TestFunctionResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_TestFunctionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_TestFunctionCommand)(output, context);\n    }\n}\nexports.TestFunctionCommand = TestFunctionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UntagResourceCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UntagResourceCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, UntagResourceCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UntagResourceCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_UntagResourceCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_UntagResourceCommand)(output, context);\n    }\n}\nexports.UntagResourceCommand = UntagResourceCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateCachePolicyCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdateCachePolicyCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, UpdateCachePolicyCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdateCachePolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_UpdateCachePolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_UpdateCachePolicyCommand)(output, context);\n    }\n}\nexports.UpdateCachePolicyCommand = UpdateCachePolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateCloudFrontOriginAccessIdentityCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdateCloudFrontOriginAccessIdentityCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, UpdateCloudFrontOriginAccessIdentityCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdateCloudFrontOriginAccessIdentityCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_UpdateCloudFrontOriginAccessIdentityCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_UpdateCloudFrontOriginAccessIdentityCommand)(output, context);\n    }\n}\nexports.UpdateCloudFrontOriginAccessIdentityCommand = UpdateCloudFrontOriginAccessIdentityCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateContinuousDeploymentPolicyCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdateContinuousDeploymentPolicyCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, UpdateContinuousDeploymentPolicyCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdateContinuousDeploymentPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_UpdateContinuousDeploymentPolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_UpdateContinuousDeploymentPolicyCommand)(output, context);\n    }\n}\nexports.UpdateContinuousDeploymentPolicyCommand = UpdateContinuousDeploymentPolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateDistributionCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdateDistributionCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, UpdateDistributionCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdateDistributionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.UpdateDistributionRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.UpdateDistributionResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_UpdateDistributionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_UpdateDistributionCommand)(output, context);\n    }\n}\nexports.UpdateDistributionCommand = UpdateDistributionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateDistributionWithStagingConfigCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdateDistributionWithStagingConfigCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, UpdateDistributionWithStagingConfigCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdateDistributionWithStagingConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: models_1_1.UpdateDistributionWithStagingConfigResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_UpdateDistributionWithStagingConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_UpdateDistributionWithStagingConfigCommand)(output, context);\n    }\n}\nexports.UpdateDistributionWithStagingConfigCommand = UpdateDistributionWithStagingConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateFieldLevelEncryptionConfigCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdateFieldLevelEncryptionConfigCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, UpdateFieldLevelEncryptionConfigCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdateFieldLevelEncryptionConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_UpdateFieldLevelEncryptionConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_UpdateFieldLevelEncryptionConfigCommand)(output, context);\n    }\n}\nexports.UpdateFieldLevelEncryptionConfigCommand = UpdateFieldLevelEncryptionConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateFieldLevelEncryptionProfileCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdateFieldLevelEncryptionProfileCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, UpdateFieldLevelEncryptionProfileCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdateFieldLevelEncryptionProfileCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_UpdateFieldLevelEncryptionProfileCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_UpdateFieldLevelEncryptionProfileCommand)(output, context);\n    }\n}\nexports.UpdateFieldLevelEncryptionProfileCommand = UpdateFieldLevelEncryptionProfileCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateFunctionCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdateFunctionCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, UpdateFunctionCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdateFunctionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.UpdateFunctionRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_UpdateFunctionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_UpdateFunctionCommand)(output, context);\n    }\n}\nexports.UpdateFunctionCommand = UpdateFunctionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateKeyGroupCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdateKeyGroupCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, UpdateKeyGroupCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdateKeyGroupCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_UpdateKeyGroupCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_UpdateKeyGroupCommand)(output, context);\n    }\n}\nexports.UpdateKeyGroupCommand = UpdateKeyGroupCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateOriginAccessControlCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdateOriginAccessControlCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, UpdateOriginAccessControlCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdateOriginAccessControlCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_UpdateOriginAccessControlCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_UpdateOriginAccessControlCommand)(output, context);\n    }\n}\nexports.UpdateOriginAccessControlCommand = UpdateOriginAccessControlCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateOriginRequestPolicyCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdateOriginRequestPolicyCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, UpdateOriginRequestPolicyCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdateOriginRequestPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_UpdateOriginRequestPolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_UpdateOriginRequestPolicyCommand)(output, context);\n    }\n}\nexports.UpdateOriginRequestPolicyCommand = UpdateOriginRequestPolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdatePublicKeyCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdatePublicKeyCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, UpdatePublicKeyCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdatePublicKeyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_UpdatePublicKeyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_UpdatePublicKeyCommand)(output, context);\n    }\n}\nexports.UpdatePublicKeyCommand = UpdatePublicKeyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateRealtimeLogConfigCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdateRealtimeLogConfigCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, UpdateRealtimeLogConfigCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdateRealtimeLogConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_UpdateRealtimeLogConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_UpdateRealtimeLogConfigCommand)(output, context);\n    }\n}\nexports.UpdateRealtimeLogConfigCommand = UpdateRealtimeLogConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateResponseHeadersPolicyCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdateResponseHeadersPolicyCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, UpdateResponseHeadersPolicyCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdateResponseHeadersPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_UpdateResponseHeadersPolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_UpdateResponseHeadersPolicyCommand)(output, context);\n    }\n}\nexports.UpdateResponseHeadersPolicyCommand = UpdateResponseHeadersPolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateStreamingDistributionCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdateStreamingDistributionCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, UpdateStreamingDistributionCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdateStreamingDistributionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_UpdateStreamingDistributionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_UpdateStreamingDistributionCommand)(output, context);\n    }\n}\nexports.UpdateStreamingDistributionCommand = UpdateStreamingDistributionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./AssociateAliasCommand\"), exports);\ntslib_1.__exportStar(require(\"./CopyDistributionCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateCachePolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateCloudFrontOriginAccessIdentityCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateContinuousDeploymentPolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateDistributionCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateDistributionWithTagsCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateFieldLevelEncryptionConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateFieldLevelEncryptionProfileCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateFunctionCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateInvalidationCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateKeyGroupCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateMonitoringSubscriptionCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateOriginAccessControlCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateOriginRequestPolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreatePublicKeyCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateRealtimeLogConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateResponseHeadersPolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateStreamingDistributionCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateStreamingDistributionWithTagsCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteCachePolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteCloudFrontOriginAccessIdentityCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteContinuousDeploymentPolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteDistributionCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteFieldLevelEncryptionConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteFieldLevelEncryptionProfileCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteFunctionCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteKeyGroupCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteMonitoringSubscriptionCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteOriginAccessControlCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteOriginRequestPolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeletePublicKeyCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteRealtimeLogConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteResponseHeadersPolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteStreamingDistributionCommand\"), exports);\ntslib_1.__exportStar(require(\"./DescribeFunctionCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetCachePolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetCachePolicyConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetCloudFrontOriginAccessIdentityCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetCloudFrontOriginAccessIdentityConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetContinuousDeploymentPolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetContinuousDeploymentPolicyConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetDistributionCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetDistributionConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetFieldLevelEncryptionCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetFieldLevelEncryptionConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetFieldLevelEncryptionProfileCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetFieldLevelEncryptionProfileConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetFunctionCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetInvalidationCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetKeyGroupCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetKeyGroupConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetMonitoringSubscriptionCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetOriginAccessControlCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetOriginAccessControlConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetOriginRequestPolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetOriginRequestPolicyConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetPublicKeyCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetPublicKeyConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetRealtimeLogConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetResponseHeadersPolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetResponseHeadersPolicyConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetStreamingDistributionCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetStreamingDistributionConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListCachePoliciesCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListCloudFrontOriginAccessIdentitiesCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListConflictingAliasesCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListContinuousDeploymentPoliciesCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListDistributionsByCachePolicyIdCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListDistributionsByKeyGroupCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListDistributionsByOriginRequestPolicyIdCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListDistributionsByRealtimeLogConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListDistributionsByResponseHeadersPolicyIdCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListDistributionsByWebACLIdCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListDistributionsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListFieldLevelEncryptionConfigsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListFieldLevelEncryptionProfilesCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListFunctionsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListInvalidationsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListKeyGroupsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListOriginAccessControlsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListOriginRequestPoliciesCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListPublicKeysCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListRealtimeLogConfigsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListResponseHeadersPoliciesCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListStreamingDistributionsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListTagsForResourceCommand\"), exports);\ntslib_1.__exportStar(require(\"./PublishFunctionCommand\"), exports);\ntslib_1.__exportStar(require(\"./TagResourceCommand\"), exports);\ntslib_1.__exportStar(require(\"./TestFunctionCommand\"), exports);\ntslib_1.__exportStar(require(\"./UntagResourceCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateCachePolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateCloudFrontOriginAccessIdentityCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateContinuousDeploymentPolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateDistributionCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateDistributionWithStagingConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateFieldLevelEncryptionConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateFieldLevelEncryptionProfileCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateFunctionCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateKeyGroupCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateOriginAccessControlCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateOriginRequestPolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdatePublicKeyCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateRealtimeLogConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateResponseHeadersPolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateStreamingDistributionCommand\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveClientEndpointParameters = void 0;\nconst resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"cloudfront\",\n    };\n};\nexports.resolveClientEndpointParameters = resolveClientEndpointParameters;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultEndpointResolver = void 0;\nconst util_endpoints_1 = require(\"@aws-sdk/util-endpoints\");\nconst ruleset_1 = require(\"./ruleset\");\nconst defaultEndpointResolver = (endpointParams, context = {}) => {\n    return (0, util_endpoints_1.resolveEndpoint)(ruleset_1.ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\nexports.defaultEndpointResolver = defaultEndpointResolver;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ruleSet = void 0;\nconst y = \"required\", z = \"fn\", A = \"argv\", B = \"ref\";\nconst a = \"isSet\", b = \"tree\", c = \"error\", d = \"endpoint\", e = \"PartitionResult\", f = \"stringEquals\", g = \"sigv4\", h = \"cloudfront\", i = { [y]: false, \"type\": \"String\" }, j = { [y]: true, \"default\": false, \"type\": \"Boolean\" }, k = { [B]: \"Endpoint\" }, l = { [z]: \"booleanEquals\", [A]: [{ [B]: \"UseFIPS\" }, true] }, m = { [z]: \"booleanEquals\", [A]: [{ [B]: \"UseDualStack\" }, true] }, n = {}, o = { [z]: f, [A]: [{ [z]: \"getAttr\", [A]: [{ [B]: e }, \"name\"] }, \"aws\"] }, p = { [z]: \"getAttr\", [A]: [{ [B]: e }, \"name\"] }, q = { [z]: \"booleanEquals\", [A]: [{ [B]: \"UseFIPS\" }, false] }, r = { [z]: \"booleanEquals\", [A]: [{ [B]: \"UseDualStack\" }, false] }, s = { \"authSchemes\": [{ \"name\": g, \"signingName\": h, \"signingRegion\": \"us-east-1\" }] }, t = { [z]: \"booleanEquals\", [A]: [true, { [z]: \"getAttr\", [A]: [{ [B]: e }, \"supportsFIPS\"] }] }, u = { [z]: \"booleanEquals\", [A]: [true, { [z]: \"getAttr\", [A]: [{ [B]: e }, \"supportsDualStack\"] }] }, v = [l], w = [m], x = [{ [B]: \"Region\" }];\nconst _data = { version: \"1.0\", parameters: { Region: i, UseDualStack: j, UseFIPS: j, Endpoint: i }, rules: [{ conditions: [{ [z]: a, [A]: [k] }], type: b, rules: [{ conditions: v, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: c }, { type: b, rules: [{ conditions: w, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: c }, { endpoint: { url: k, properties: n, headers: n }, type: d }] }] }, { type: b, rules: [{ conditions: [{ [z]: a, [A]: x }], type: b, rules: [{ conditions: [{ [z]: \"aws.partition\", [A]: x, assign: e }], type: b, rules: [{ conditions: [o, q, r], endpoint: { url: \"https://cloudfront.amazonaws.com\", properties: s, headers: n }, type: d }, { conditions: [o, l, r], endpoint: { url: \"https://cloudfront-fips.amazonaws.com\", properties: s, headers: n }, type: d }, { conditions: [{ [z]: f, [A]: [p, \"aws-cn\"] }, q, r], endpoint: { url: \"https://cloudfront.cn-northwest-1.amazonaws.com.cn\", properties: { authSchemes: [{ name: g, signingName: h, signingRegion: \"cn-northwest-1\" }] }, headers: n }, type: d }, { conditions: [l, m], type: b, rules: [{ conditions: [t, u], type: b, rules: [{ type: b, rules: [{ endpoint: { url: \"https://cloudfront-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: n, headers: n }, type: d }] }] }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: c }] }, { conditions: v, type: b, rules: [{ conditions: [t], type: b, rules: [{ type: b, rules: [{ endpoint: { url: \"https://cloudfront-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: n, headers: n }, type: d }] }] }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: c }] }, { conditions: w, type: b, rules: [{ conditions: [u], type: b, rules: [{ type: b, rules: [{ endpoint: { url: \"https://cloudfront.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: n, headers: n }, type: d }] }] }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: c }] }, { type: b, rules: [{ endpoint: { url: \"https://cloudfront.{Region}.{PartitionResult#dnsSuffix}\", properties: n, headers: n }, type: d }] }] }] }, { error: \"Invalid Configuration: Missing Region\", type: c }] }] };\nexports.ruleSet = _data;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CloudFrontServiceException = void 0;\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./CloudFrontClient\"), exports);\ntslib_1.__exportStar(require(\"./CloudFront\"), exports);\ntslib_1.__exportStar(require(\"./commands\"), exports);\ntslib_1.__exportStar(require(\"./pagination\"), exports);\ntslib_1.__exportStar(require(\"./waiters\"), exports);\ntslib_1.__exportStar(require(\"./models\"), exports);\nvar CloudFrontServiceException_1 = require(\"./models/CloudFrontServiceException\");\nObject.defineProperty(exports, \"CloudFrontServiceException\", { enumerable: true, get: function () { return CloudFrontServiceException_1.CloudFrontServiceException; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CloudFrontServiceException = exports.__ServiceException = void 0;\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"__ServiceException\", { enumerable: true, get: function () { return smithy_client_1.ServiceException; } });\nclass CloudFrontServiceException extends smithy_client_1.ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, CloudFrontServiceException.prototype);\n    }\n}\nexports.CloudFrontServiceException = CloudFrontServiceException;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./models_0\"), exports);\ntslib_1.__exportStar(require(\"./models_1\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvalidRequiredProtocol = exports.InvalidRelativePath = exports.InvalidQueryStringParameters = exports.InvalidProtocolSettings = exports.InvalidOriginReadTimeout = exports.InvalidOriginKeepaliveTimeout = exports.InvalidOriginAccessIdentity = exports.InvalidOriginAccessControl = exports.InvalidOrigin = exports.InvalidMinimumProtocolVersion = exports.InvalidLocationCode = exports.InvalidLambdaFunctionAssociation = exports.InvalidIfMatchVersion = exports.InvalidHeadersForS3Origin = exports.InvalidGeoRestrictionParameter = exports.InvalidFunctionAssociation = exports.InvalidForwardCookies = exports.InvalidErrorCode = exports.InvalidDefaultRootObject = exports.InconsistentQuantities = exports.IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior = exports.DistributionAlreadyExists = exports.SSLSupportMethod = exports.MinimumProtocolVersion = exports.GeoRestrictionType = exports.PriceClass = exports.SslProtocol = exports.OriginProtocolPolicy = exports.HttpVersion = exports.CNAMEAlreadyExists = exports.CertificateSource = exports.CannotChangeImmutablePublicKeyFields = exports.CachePolicyType = exports.CachePolicyInUse = exports.CachePolicyAlreadyExists = exports.CachePolicyQueryStringBehavior = exports.CachePolicyHeaderBehavior = exports.CachePolicyCookieBehavior = exports.ViewerProtocolPolicy = exports.EventType = exports.ItemSelection = exports.BatchTooLarge = exports.TooManyDistributionCNAMEs = exports.NoSuchDistribution = exports.InvalidArgument = exports.IllegalUpdate = exports.Method = exports.ICPRecordalStatus = exports.AccessDenied = exports.ResponseHeadersPolicyAccessControlAllowMethodsValues = void 0;\nexports.InvalidDomainNameForOriginAccessControl = exports.IllegalOriginAccessConfiguration = exports.ContinuousDeploymentPolicyInUse = exports.TooManyContinuousDeploymentPolicies = exports.StagingDistributionInUse = exports.ContinuousDeploymentPolicyType = exports.ContinuousDeploymentPolicyAlreadyExists = exports.TooManyCloudFrontOriginAccessIdentities = exports.CloudFrontOriginAccessIdentityAlreadyExists = exports.TooManyQueryStringsInCachePolicy = exports.TooManyHeadersInCachePolicy = exports.TooManyCookiesInCachePolicy = exports.TooManyCachePolicies = exports.TrustedSignerDoesNotExist = exports.TrustedKeyGroupDoesNotExist = exports.TooManyTrustedSigners = exports.TooManyQueryStringParameters = exports.TooManyOrigins = exports.TooManyOriginGroupsPerDistribution = exports.TooManyOriginCustomHeaders = exports.TooManyLambdaFunctionAssociations = exports.TooManyKeyGroupsAssociatedToDistribution = exports.TooManyHeadersInForwardedValues = exports.TooManyFunctionAssociations = exports.TooManyDistributionsWithSingleFunctionARN = exports.TooManyDistributionsWithLambdaAssociations = exports.TooManyDistributionsWithFunctionAssociations = exports.TooManyDistributionsAssociatedToResponseHeadersPolicy = exports.TooManyDistributionsAssociatedToOriginRequestPolicy = exports.TooManyDistributionsAssociatedToOriginAccessControl = exports.TooManyDistributionsAssociatedToKeyGroup = exports.TooManyDistributionsAssociatedToFieldLevelEncryptionConfig = exports.TooManyDistributionsAssociatedToCachePolicy = exports.TooManyDistributions = exports.TooManyCookieNamesInWhiteList = exports.TooManyCertificates = exports.TooManyCacheBehaviors = exports.RealtimeLogConfigOwnerMismatch = exports.PreconditionFailed = exports.NoSuchResponseHeadersPolicy = exports.NoSuchRealtimeLogConfig = exports.NoSuchOriginRequestPolicy = exports.NoSuchOrigin = exports.NoSuchFieldLevelEncryptionConfig = exports.NoSuchCachePolicy = exports.MissingBody = exports.InvalidWebACLId = exports.InvalidViewerCertificate = exports.InvalidTTLOrder = exports.InvalidResponseCode = void 0;\nexports.OriginsFilterSensitiveLog = exports.OriginFilterSensitiveLog = exports.CustomHeadersFilterSensitiveLog = exports.OriginCustomHeaderFilterSensitiveLog = exports.ReferrerPolicyList = exports.FrameOptionsList = exports.TooManyRealtimeLogConfigs = exports.RealtimeLogConfigAlreadyExists = exports.TooManyPublicKeys = exports.PublicKeyAlreadyExists = exports.TooManyQueryStringsInOriginRequestPolicy = exports.TooManyOriginRequestPolicies = exports.TooManyHeadersInOriginRequestPolicy = exports.TooManyCookiesInOriginRequestPolicy = exports.OriginRequestPolicyAlreadyExists = exports.OriginRequestPolicyQueryStringBehavior = exports.OriginRequestPolicyHeaderBehavior = exports.OriginRequestPolicyCookieBehavior = exports.TooManyOriginAccessControls = exports.OriginAccessControlAlreadyExists = exports.OriginAccessControlSigningProtocols = exports.OriginAccessControlSigningBehaviors = exports.OriginAccessControlOriginTypes = exports.MonitoringSubscriptionAlreadyExists = exports.RealtimeMetricsSubscriptionStatus = exports.TooManyPublicKeysInKeyGroup = exports.TooManyKeyGroups = exports.KeyGroupAlreadyExists = exports.TooManyInvalidationsInProgress = exports.UnsupportedOperation = exports.TooManyFunctions = exports.FunctionSizeLimitExceeded = exports.FunctionAlreadyExists = exports.FunctionStage = exports.FunctionRuntime = exports.TooManyFieldLevelEncryptionProfiles = exports.TooManyFieldLevelEncryptionFieldPatterns = exports.TooManyFieldLevelEncryptionEncryptionEntities = exports.NoSuchPublicKey = exports.FieldLevelEncryptionProfileSizeExceeded = exports.FieldLevelEncryptionProfileAlreadyExists = exports.TooManyFieldLevelEncryptionQueryArgProfiles = exports.TooManyFieldLevelEncryptionContentTypeProfiles = exports.TooManyFieldLevelEncryptionConfigs = exports.QueryArgProfileEmpty = exports.NoSuchFieldLevelEncryptionProfile = exports.FieldLevelEncryptionConfigAlreadyExists = exports.Format = exports.InvalidTagging = exports.NoSuchContinuousDeploymentPolicy = void 0;\nexports.CreateFunctionRequestFilterSensitiveLog = exports.CreateDistributionWithTagsResultFilterSensitiveLog = exports.CreateDistributionWithTagsRequestFilterSensitiveLog = exports.DistributionConfigWithTagsFilterSensitiveLog = exports.CreateDistributionResultFilterSensitiveLog = exports.CreateDistributionRequestFilterSensitiveLog = exports.CopyDistributionResultFilterSensitiveLog = exports.DistributionFilterSensitiveLog = exports.DistributionConfigFilterSensitiveLog = void 0;\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst CloudFrontServiceException_1 = require(\"./CloudFrontServiceException\");\nexports.ResponseHeadersPolicyAccessControlAllowMethodsValues = {\n    ALL: \"ALL\",\n    DELETE: \"DELETE\",\n    GET: \"GET\",\n    HEAD: \"HEAD\",\n    OPTIONS: \"OPTIONS\",\n    PATCH: \"PATCH\",\n    POST: \"POST\",\n    PUT: \"PUT\",\n};\nclass AccessDenied extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"AccessDenied\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AccessDenied\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AccessDenied.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.AccessDenied = AccessDenied;\nexports.ICPRecordalStatus = {\n    APPROVED: \"APPROVED\",\n    PENDING: \"PENDING\",\n    SUSPENDED: \"SUSPENDED\",\n};\nexports.Method = {\n    DELETE: \"DELETE\",\n    GET: \"GET\",\n    HEAD: \"HEAD\",\n    OPTIONS: \"OPTIONS\",\n    PATCH: \"PATCH\",\n    POST: \"POST\",\n    PUT: \"PUT\",\n};\nclass IllegalUpdate extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"IllegalUpdate\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IllegalUpdate\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IllegalUpdate.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.IllegalUpdate = IllegalUpdate;\nclass InvalidArgument extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidArgument\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidArgument\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidArgument.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidArgument = InvalidArgument;\nclass NoSuchDistribution extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchDistribution\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchDistribution\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchDistribution.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchDistribution = NoSuchDistribution;\nclass TooManyDistributionCNAMEs extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyDistributionCNAMEs\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyDistributionCNAMEs\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyDistributionCNAMEs.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyDistributionCNAMEs = TooManyDistributionCNAMEs;\nclass BatchTooLarge extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"BatchTooLarge\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"BatchTooLarge\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, BatchTooLarge.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.BatchTooLarge = BatchTooLarge;\nexports.ItemSelection = {\n    all: \"all\",\n    none: \"none\",\n    whitelist: \"whitelist\",\n};\nexports.EventType = {\n    origin_request: \"origin-request\",\n    origin_response: \"origin-response\",\n    viewer_request: \"viewer-request\",\n    viewer_response: \"viewer-response\",\n};\nexports.ViewerProtocolPolicy = {\n    allow_all: \"allow-all\",\n    https_only: \"https-only\",\n    redirect_to_https: \"redirect-to-https\",\n};\nexports.CachePolicyCookieBehavior = {\n    all: \"all\",\n    allExcept: \"allExcept\",\n    none: \"none\",\n    whitelist: \"whitelist\",\n};\nexports.CachePolicyHeaderBehavior = {\n    none: \"none\",\n    whitelist: \"whitelist\",\n};\nexports.CachePolicyQueryStringBehavior = {\n    all: \"all\",\n    allExcept: \"allExcept\",\n    none: \"none\",\n    whitelist: \"whitelist\",\n};\nclass CachePolicyAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"CachePolicyAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"CachePolicyAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, CachePolicyAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.CachePolicyAlreadyExists = CachePolicyAlreadyExists;\nclass CachePolicyInUse extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"CachePolicyInUse\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"CachePolicyInUse\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, CachePolicyInUse.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.CachePolicyInUse = CachePolicyInUse;\nexports.CachePolicyType = {\n    custom: \"custom\",\n    managed: \"managed\",\n};\nclass CannotChangeImmutablePublicKeyFields extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"CannotChangeImmutablePublicKeyFields\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"CannotChangeImmutablePublicKeyFields\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, CannotChangeImmutablePublicKeyFields.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.CannotChangeImmutablePublicKeyFields = CannotChangeImmutablePublicKeyFields;\nexports.CertificateSource = {\n    acm: \"acm\",\n    cloudfront: \"cloudfront\",\n    iam: \"iam\",\n};\nclass CNAMEAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"CNAMEAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"CNAMEAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, CNAMEAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.CNAMEAlreadyExists = CNAMEAlreadyExists;\nexports.HttpVersion = {\n    http1_1: \"http1.1\",\n    http2: \"http2\",\n    http2and3: \"http2and3\",\n    http3: \"http3\",\n};\nexports.OriginProtocolPolicy = {\n    http_only: \"http-only\",\n    https_only: \"https-only\",\n    match_viewer: \"match-viewer\",\n};\nexports.SslProtocol = {\n    SSLv3: \"SSLv3\",\n    TLSv1: \"TLSv1\",\n    TLSv1_1: \"TLSv1.1\",\n    TLSv1_2: \"TLSv1.2\",\n};\nexports.PriceClass = {\n    PriceClass_100: \"PriceClass_100\",\n    PriceClass_200: \"PriceClass_200\",\n    PriceClass_All: \"PriceClass_All\",\n};\nexports.GeoRestrictionType = {\n    blacklist: \"blacklist\",\n    none: \"none\",\n    whitelist: \"whitelist\",\n};\nexports.MinimumProtocolVersion = {\n    SSLv3: \"SSLv3\",\n    TLSv1: \"TLSv1\",\n    TLSv1_1_2016: \"TLSv1.1_2016\",\n    TLSv1_2016: \"TLSv1_2016\",\n    TLSv1_2_2018: \"TLSv1.2_2018\",\n    TLSv1_2_2019: \"TLSv1.2_2019\",\n    TLSv1_2_2021: \"TLSv1.2_2021\",\n};\nexports.SSLSupportMethod = {\n    sni_only: \"sni-only\",\n    static_ip: \"static-ip\",\n    vip: \"vip\",\n};\nclass DistributionAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"DistributionAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"DistributionAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, DistributionAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.DistributionAlreadyExists = DistributionAlreadyExists;\nclass IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior = IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior;\nclass InconsistentQuantities extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InconsistentQuantities\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InconsistentQuantities\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InconsistentQuantities.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InconsistentQuantities = InconsistentQuantities;\nclass InvalidDefaultRootObject extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidDefaultRootObject\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidDefaultRootObject\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidDefaultRootObject.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidDefaultRootObject = InvalidDefaultRootObject;\nclass InvalidErrorCode extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidErrorCode\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidErrorCode\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidErrorCode.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidErrorCode = InvalidErrorCode;\nclass InvalidForwardCookies extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidForwardCookies\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidForwardCookies\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidForwardCookies.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidForwardCookies = InvalidForwardCookies;\nclass InvalidFunctionAssociation extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidFunctionAssociation\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidFunctionAssociation\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidFunctionAssociation.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidFunctionAssociation = InvalidFunctionAssociation;\nclass InvalidGeoRestrictionParameter extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidGeoRestrictionParameter\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidGeoRestrictionParameter\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidGeoRestrictionParameter.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidGeoRestrictionParameter = InvalidGeoRestrictionParameter;\nclass InvalidHeadersForS3Origin extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidHeadersForS3Origin\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidHeadersForS3Origin\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidHeadersForS3Origin.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidHeadersForS3Origin = InvalidHeadersForS3Origin;\nclass InvalidIfMatchVersion extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidIfMatchVersion\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidIfMatchVersion\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidIfMatchVersion.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidIfMatchVersion = InvalidIfMatchVersion;\nclass InvalidLambdaFunctionAssociation extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidLambdaFunctionAssociation\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidLambdaFunctionAssociation\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidLambdaFunctionAssociation.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidLambdaFunctionAssociation = InvalidLambdaFunctionAssociation;\nclass InvalidLocationCode extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidLocationCode\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidLocationCode\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidLocationCode.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidLocationCode = InvalidLocationCode;\nclass InvalidMinimumProtocolVersion extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidMinimumProtocolVersion\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidMinimumProtocolVersion\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidMinimumProtocolVersion.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidMinimumProtocolVersion = InvalidMinimumProtocolVersion;\nclass InvalidOrigin extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidOrigin\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidOrigin\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidOrigin.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidOrigin = InvalidOrigin;\nclass InvalidOriginAccessControl extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidOriginAccessControl\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidOriginAccessControl\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidOriginAccessControl.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidOriginAccessControl = InvalidOriginAccessControl;\nclass InvalidOriginAccessIdentity extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidOriginAccessIdentity\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidOriginAccessIdentity\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidOriginAccessIdentity.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidOriginAccessIdentity = InvalidOriginAccessIdentity;\nclass InvalidOriginKeepaliveTimeout extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidOriginKeepaliveTimeout\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidOriginKeepaliveTimeout\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidOriginKeepaliveTimeout.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidOriginKeepaliveTimeout = InvalidOriginKeepaliveTimeout;\nclass InvalidOriginReadTimeout extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidOriginReadTimeout\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidOriginReadTimeout\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidOriginReadTimeout.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidOriginReadTimeout = InvalidOriginReadTimeout;\nclass InvalidProtocolSettings extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidProtocolSettings\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidProtocolSettings\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidProtocolSettings.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidProtocolSettings = InvalidProtocolSettings;\nclass InvalidQueryStringParameters extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidQueryStringParameters\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidQueryStringParameters\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidQueryStringParameters.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidQueryStringParameters = InvalidQueryStringParameters;\nclass InvalidRelativePath extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidRelativePath\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidRelativePath\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidRelativePath.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidRelativePath = InvalidRelativePath;\nclass InvalidRequiredProtocol extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidRequiredProtocol\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidRequiredProtocol\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidRequiredProtocol.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidRequiredProtocol = InvalidRequiredProtocol;\nclass InvalidResponseCode extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidResponseCode\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidResponseCode\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidResponseCode.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidResponseCode = InvalidResponseCode;\nclass InvalidTTLOrder extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidTTLOrder\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidTTLOrder\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidTTLOrder.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidTTLOrder = InvalidTTLOrder;\nclass InvalidViewerCertificate extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidViewerCertificate\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidViewerCertificate\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidViewerCertificate.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidViewerCertificate = InvalidViewerCertificate;\nclass InvalidWebACLId extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidWebACLId\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidWebACLId\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidWebACLId.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidWebACLId = InvalidWebACLId;\nclass MissingBody extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"MissingBody\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"MissingBody\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, MissingBody.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.MissingBody = MissingBody;\nclass NoSuchCachePolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchCachePolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchCachePolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchCachePolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchCachePolicy = NoSuchCachePolicy;\nclass NoSuchFieldLevelEncryptionConfig extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchFieldLevelEncryptionConfig\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchFieldLevelEncryptionConfig\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchFieldLevelEncryptionConfig.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchFieldLevelEncryptionConfig = NoSuchFieldLevelEncryptionConfig;\nclass NoSuchOrigin extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchOrigin\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchOrigin\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchOrigin.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchOrigin = NoSuchOrigin;\nclass NoSuchOriginRequestPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchOriginRequestPolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchOriginRequestPolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchOriginRequestPolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchOriginRequestPolicy = NoSuchOriginRequestPolicy;\nclass NoSuchRealtimeLogConfig extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchRealtimeLogConfig\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchRealtimeLogConfig\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchRealtimeLogConfig.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchRealtimeLogConfig = NoSuchRealtimeLogConfig;\nclass NoSuchResponseHeadersPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchResponseHeadersPolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchResponseHeadersPolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchResponseHeadersPolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchResponseHeadersPolicy = NoSuchResponseHeadersPolicy;\nclass PreconditionFailed extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"PreconditionFailed\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"PreconditionFailed\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, PreconditionFailed.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.PreconditionFailed = PreconditionFailed;\nclass RealtimeLogConfigOwnerMismatch extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"RealtimeLogConfigOwnerMismatch\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"RealtimeLogConfigOwnerMismatch\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, RealtimeLogConfigOwnerMismatch.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.RealtimeLogConfigOwnerMismatch = RealtimeLogConfigOwnerMismatch;\nclass TooManyCacheBehaviors extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyCacheBehaviors\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyCacheBehaviors\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyCacheBehaviors.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyCacheBehaviors = TooManyCacheBehaviors;\nclass TooManyCertificates extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyCertificates\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyCertificates\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyCertificates.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyCertificates = TooManyCertificates;\nclass TooManyCookieNamesInWhiteList extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyCookieNamesInWhiteList\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyCookieNamesInWhiteList\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyCookieNamesInWhiteList.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyCookieNamesInWhiteList = TooManyCookieNamesInWhiteList;\nclass TooManyDistributions extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyDistributions\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyDistributions\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyDistributions.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyDistributions = TooManyDistributions;\nclass TooManyDistributionsAssociatedToCachePolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyDistributionsAssociatedToCachePolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyDistributionsAssociatedToCachePolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyDistributionsAssociatedToCachePolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyDistributionsAssociatedToCachePolicy = TooManyDistributionsAssociatedToCachePolicy;\nclass TooManyDistributionsAssociatedToFieldLevelEncryptionConfig extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyDistributionsAssociatedToFieldLevelEncryptionConfig\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyDistributionsAssociatedToFieldLevelEncryptionConfig\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyDistributionsAssociatedToFieldLevelEncryptionConfig.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyDistributionsAssociatedToFieldLevelEncryptionConfig = TooManyDistributionsAssociatedToFieldLevelEncryptionConfig;\nclass TooManyDistributionsAssociatedToKeyGroup extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyDistributionsAssociatedToKeyGroup\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyDistributionsAssociatedToKeyGroup\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyDistributionsAssociatedToKeyGroup.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyDistributionsAssociatedToKeyGroup = TooManyDistributionsAssociatedToKeyGroup;\nclass TooManyDistributionsAssociatedToOriginAccessControl extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyDistributionsAssociatedToOriginAccessControl\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyDistributionsAssociatedToOriginAccessControl\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyDistributionsAssociatedToOriginAccessControl.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyDistributionsAssociatedToOriginAccessControl = TooManyDistributionsAssociatedToOriginAccessControl;\nclass TooManyDistributionsAssociatedToOriginRequestPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyDistributionsAssociatedToOriginRequestPolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyDistributionsAssociatedToOriginRequestPolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyDistributionsAssociatedToOriginRequestPolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyDistributionsAssociatedToOriginRequestPolicy = TooManyDistributionsAssociatedToOriginRequestPolicy;\nclass TooManyDistributionsAssociatedToResponseHeadersPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyDistributionsAssociatedToResponseHeadersPolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyDistributionsAssociatedToResponseHeadersPolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyDistributionsAssociatedToResponseHeadersPolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyDistributionsAssociatedToResponseHeadersPolicy = TooManyDistributionsAssociatedToResponseHeadersPolicy;\nclass TooManyDistributionsWithFunctionAssociations extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyDistributionsWithFunctionAssociations\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyDistributionsWithFunctionAssociations\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyDistributionsWithFunctionAssociations.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyDistributionsWithFunctionAssociations = TooManyDistributionsWithFunctionAssociations;\nclass TooManyDistributionsWithLambdaAssociations extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyDistributionsWithLambdaAssociations\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyDistributionsWithLambdaAssociations\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyDistributionsWithLambdaAssociations.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyDistributionsWithLambdaAssociations = TooManyDistributionsWithLambdaAssociations;\nclass TooManyDistributionsWithSingleFunctionARN extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyDistributionsWithSingleFunctionARN\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyDistributionsWithSingleFunctionARN\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyDistributionsWithSingleFunctionARN.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyDistributionsWithSingleFunctionARN = TooManyDistributionsWithSingleFunctionARN;\nclass TooManyFunctionAssociations extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyFunctionAssociations\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyFunctionAssociations\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyFunctionAssociations.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyFunctionAssociations = TooManyFunctionAssociations;\nclass TooManyHeadersInForwardedValues extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyHeadersInForwardedValues\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyHeadersInForwardedValues\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyHeadersInForwardedValues.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyHeadersInForwardedValues = TooManyHeadersInForwardedValues;\nclass TooManyKeyGroupsAssociatedToDistribution extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyKeyGroupsAssociatedToDistribution\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyKeyGroupsAssociatedToDistribution\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyKeyGroupsAssociatedToDistribution.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyKeyGroupsAssociatedToDistribution = TooManyKeyGroupsAssociatedToDistribution;\nclass TooManyLambdaFunctionAssociations extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyLambdaFunctionAssociations\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyLambdaFunctionAssociations\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyLambdaFunctionAssociations.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyLambdaFunctionAssociations = TooManyLambdaFunctionAssociations;\nclass TooManyOriginCustomHeaders extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyOriginCustomHeaders\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyOriginCustomHeaders\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyOriginCustomHeaders.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyOriginCustomHeaders = TooManyOriginCustomHeaders;\nclass TooManyOriginGroupsPerDistribution extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyOriginGroupsPerDistribution\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyOriginGroupsPerDistribution\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyOriginGroupsPerDistribution.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyOriginGroupsPerDistribution = TooManyOriginGroupsPerDistribution;\nclass TooManyOrigins extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyOrigins\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyOrigins\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyOrigins.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyOrigins = TooManyOrigins;\nclass TooManyQueryStringParameters extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyQueryStringParameters\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyQueryStringParameters\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyQueryStringParameters.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyQueryStringParameters = TooManyQueryStringParameters;\nclass TooManyTrustedSigners extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyTrustedSigners\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyTrustedSigners\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyTrustedSigners.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyTrustedSigners = TooManyTrustedSigners;\nclass TrustedKeyGroupDoesNotExist extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TrustedKeyGroupDoesNotExist\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TrustedKeyGroupDoesNotExist\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TrustedKeyGroupDoesNotExist.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TrustedKeyGroupDoesNotExist = TrustedKeyGroupDoesNotExist;\nclass TrustedSignerDoesNotExist extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TrustedSignerDoesNotExist\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TrustedSignerDoesNotExist\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TrustedSignerDoesNotExist.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TrustedSignerDoesNotExist = TrustedSignerDoesNotExist;\nclass TooManyCachePolicies extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyCachePolicies\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyCachePolicies\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyCachePolicies.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyCachePolicies = TooManyCachePolicies;\nclass TooManyCookiesInCachePolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyCookiesInCachePolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyCookiesInCachePolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyCookiesInCachePolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyCookiesInCachePolicy = TooManyCookiesInCachePolicy;\nclass TooManyHeadersInCachePolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyHeadersInCachePolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyHeadersInCachePolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyHeadersInCachePolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyHeadersInCachePolicy = TooManyHeadersInCachePolicy;\nclass TooManyQueryStringsInCachePolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyQueryStringsInCachePolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyQueryStringsInCachePolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyQueryStringsInCachePolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyQueryStringsInCachePolicy = TooManyQueryStringsInCachePolicy;\nclass CloudFrontOriginAccessIdentityAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"CloudFrontOriginAccessIdentityAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"CloudFrontOriginAccessIdentityAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, CloudFrontOriginAccessIdentityAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.CloudFrontOriginAccessIdentityAlreadyExists = CloudFrontOriginAccessIdentityAlreadyExists;\nclass TooManyCloudFrontOriginAccessIdentities extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyCloudFrontOriginAccessIdentities\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyCloudFrontOriginAccessIdentities\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyCloudFrontOriginAccessIdentities.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyCloudFrontOriginAccessIdentities = TooManyCloudFrontOriginAccessIdentities;\nclass ContinuousDeploymentPolicyAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"ContinuousDeploymentPolicyAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ContinuousDeploymentPolicyAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ContinuousDeploymentPolicyAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.ContinuousDeploymentPolicyAlreadyExists = ContinuousDeploymentPolicyAlreadyExists;\nexports.ContinuousDeploymentPolicyType = {\n    SingleHeader: \"SingleHeader\",\n    SingleWeight: \"SingleWeight\",\n};\nclass StagingDistributionInUse extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"StagingDistributionInUse\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"StagingDistributionInUse\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, StagingDistributionInUse.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.StagingDistributionInUse = StagingDistributionInUse;\nclass TooManyContinuousDeploymentPolicies extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyContinuousDeploymentPolicies\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyContinuousDeploymentPolicies\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyContinuousDeploymentPolicies.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyContinuousDeploymentPolicies = TooManyContinuousDeploymentPolicies;\nclass ContinuousDeploymentPolicyInUse extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"ContinuousDeploymentPolicyInUse\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ContinuousDeploymentPolicyInUse\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ContinuousDeploymentPolicyInUse.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.ContinuousDeploymentPolicyInUse = ContinuousDeploymentPolicyInUse;\nclass IllegalOriginAccessConfiguration extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"IllegalOriginAccessConfiguration\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IllegalOriginAccessConfiguration\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IllegalOriginAccessConfiguration.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.IllegalOriginAccessConfiguration = IllegalOriginAccessConfiguration;\nclass InvalidDomainNameForOriginAccessControl extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidDomainNameForOriginAccessControl\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidDomainNameForOriginAccessControl\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidDomainNameForOriginAccessControl.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidDomainNameForOriginAccessControl = InvalidDomainNameForOriginAccessControl;\nclass NoSuchContinuousDeploymentPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchContinuousDeploymentPolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchContinuousDeploymentPolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchContinuousDeploymentPolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchContinuousDeploymentPolicy = NoSuchContinuousDeploymentPolicy;\nclass InvalidTagging extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidTagging\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidTagging\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidTagging.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidTagging = InvalidTagging;\nexports.Format = {\n    URLEncoded: \"URLEncoded\",\n};\nclass FieldLevelEncryptionConfigAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"FieldLevelEncryptionConfigAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"FieldLevelEncryptionConfigAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, FieldLevelEncryptionConfigAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.FieldLevelEncryptionConfigAlreadyExists = FieldLevelEncryptionConfigAlreadyExists;\nclass NoSuchFieldLevelEncryptionProfile extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchFieldLevelEncryptionProfile\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchFieldLevelEncryptionProfile\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchFieldLevelEncryptionProfile.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchFieldLevelEncryptionProfile = NoSuchFieldLevelEncryptionProfile;\nclass QueryArgProfileEmpty extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"QueryArgProfileEmpty\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"QueryArgProfileEmpty\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, QueryArgProfileEmpty.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.QueryArgProfileEmpty = QueryArgProfileEmpty;\nclass TooManyFieldLevelEncryptionConfigs extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyFieldLevelEncryptionConfigs\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyFieldLevelEncryptionConfigs\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyFieldLevelEncryptionConfigs.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyFieldLevelEncryptionConfigs = TooManyFieldLevelEncryptionConfigs;\nclass TooManyFieldLevelEncryptionContentTypeProfiles extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyFieldLevelEncryptionContentTypeProfiles\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyFieldLevelEncryptionContentTypeProfiles\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyFieldLevelEncryptionContentTypeProfiles.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyFieldLevelEncryptionContentTypeProfiles = TooManyFieldLevelEncryptionContentTypeProfiles;\nclass TooManyFieldLevelEncryptionQueryArgProfiles extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyFieldLevelEncryptionQueryArgProfiles\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyFieldLevelEncryptionQueryArgProfiles\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyFieldLevelEncryptionQueryArgProfiles.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyFieldLevelEncryptionQueryArgProfiles = TooManyFieldLevelEncryptionQueryArgProfiles;\nclass FieldLevelEncryptionProfileAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"FieldLevelEncryptionProfileAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"FieldLevelEncryptionProfileAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, FieldLevelEncryptionProfileAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.FieldLevelEncryptionProfileAlreadyExists = FieldLevelEncryptionProfileAlreadyExists;\nclass FieldLevelEncryptionProfileSizeExceeded extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"FieldLevelEncryptionProfileSizeExceeded\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"FieldLevelEncryptionProfileSizeExceeded\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, FieldLevelEncryptionProfileSizeExceeded.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.FieldLevelEncryptionProfileSizeExceeded = FieldLevelEncryptionProfileSizeExceeded;\nclass NoSuchPublicKey extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchPublicKey\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchPublicKey\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchPublicKey.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchPublicKey = NoSuchPublicKey;\nclass TooManyFieldLevelEncryptionEncryptionEntities extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyFieldLevelEncryptionEncryptionEntities\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyFieldLevelEncryptionEncryptionEntities\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyFieldLevelEncryptionEncryptionEntities.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyFieldLevelEncryptionEncryptionEntities = TooManyFieldLevelEncryptionEncryptionEntities;\nclass TooManyFieldLevelEncryptionFieldPatterns extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyFieldLevelEncryptionFieldPatterns\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyFieldLevelEncryptionFieldPatterns\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyFieldLevelEncryptionFieldPatterns.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyFieldLevelEncryptionFieldPatterns = TooManyFieldLevelEncryptionFieldPatterns;\nclass TooManyFieldLevelEncryptionProfiles extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyFieldLevelEncryptionProfiles\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyFieldLevelEncryptionProfiles\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyFieldLevelEncryptionProfiles.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyFieldLevelEncryptionProfiles = TooManyFieldLevelEncryptionProfiles;\nexports.FunctionRuntime = {\n    cloudfront_js_1_0: \"cloudfront-js-1.0\",\n    cloudfront_js_2_0: \"cloudfront-js-2.0\",\n};\nexports.FunctionStage = {\n    DEVELOPMENT: \"DEVELOPMENT\",\n    LIVE: \"LIVE\",\n};\nclass FunctionAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"FunctionAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"FunctionAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, FunctionAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.FunctionAlreadyExists = FunctionAlreadyExists;\nclass FunctionSizeLimitExceeded extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"FunctionSizeLimitExceeded\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"FunctionSizeLimitExceeded\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, FunctionSizeLimitExceeded.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.FunctionSizeLimitExceeded = FunctionSizeLimitExceeded;\nclass TooManyFunctions extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyFunctions\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyFunctions\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyFunctions.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyFunctions = TooManyFunctions;\nclass UnsupportedOperation extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"UnsupportedOperation\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"UnsupportedOperation\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnsupportedOperation.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.UnsupportedOperation = UnsupportedOperation;\nclass TooManyInvalidationsInProgress extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyInvalidationsInProgress\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyInvalidationsInProgress\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyInvalidationsInProgress.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyInvalidationsInProgress = TooManyInvalidationsInProgress;\nclass KeyGroupAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"KeyGroupAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"KeyGroupAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, KeyGroupAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.KeyGroupAlreadyExists = KeyGroupAlreadyExists;\nclass TooManyKeyGroups extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyKeyGroups\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyKeyGroups\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyKeyGroups.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyKeyGroups = TooManyKeyGroups;\nclass TooManyPublicKeysInKeyGroup extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyPublicKeysInKeyGroup\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyPublicKeysInKeyGroup\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyPublicKeysInKeyGroup.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyPublicKeysInKeyGroup = TooManyPublicKeysInKeyGroup;\nexports.RealtimeMetricsSubscriptionStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nclass MonitoringSubscriptionAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"MonitoringSubscriptionAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"MonitoringSubscriptionAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, MonitoringSubscriptionAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.MonitoringSubscriptionAlreadyExists = MonitoringSubscriptionAlreadyExists;\nexports.OriginAccessControlOriginTypes = {\n    mediastore: \"mediastore\",\n    s3: \"s3\",\n};\nexports.OriginAccessControlSigningBehaviors = {\n    always: \"always\",\n    never: \"never\",\n    no_override: \"no-override\",\n};\nexports.OriginAccessControlSigningProtocols = {\n    sigv4: \"sigv4\",\n};\nclass OriginAccessControlAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"OriginAccessControlAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"OriginAccessControlAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OriginAccessControlAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.OriginAccessControlAlreadyExists = OriginAccessControlAlreadyExists;\nclass TooManyOriginAccessControls extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyOriginAccessControls\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyOriginAccessControls\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyOriginAccessControls.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyOriginAccessControls = TooManyOriginAccessControls;\nexports.OriginRequestPolicyCookieBehavior = {\n    all: \"all\",\n    allExcept: \"allExcept\",\n    none: \"none\",\n    whitelist: \"whitelist\",\n};\nexports.OriginRequestPolicyHeaderBehavior = {\n    allExcept: \"allExcept\",\n    allViewer: \"allViewer\",\n    allViewerAndWhitelistCloudFront: \"allViewerAndWhitelistCloudFront\",\n    none: \"none\",\n    whitelist: \"whitelist\",\n};\nexports.OriginRequestPolicyQueryStringBehavior = {\n    all: \"all\",\n    allExcept: \"allExcept\",\n    none: \"none\",\n    whitelist: \"whitelist\",\n};\nclass OriginRequestPolicyAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"OriginRequestPolicyAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"OriginRequestPolicyAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OriginRequestPolicyAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.OriginRequestPolicyAlreadyExists = OriginRequestPolicyAlreadyExists;\nclass TooManyCookiesInOriginRequestPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyCookiesInOriginRequestPolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyCookiesInOriginRequestPolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyCookiesInOriginRequestPolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyCookiesInOriginRequestPolicy = TooManyCookiesInOriginRequestPolicy;\nclass TooManyHeadersInOriginRequestPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyHeadersInOriginRequestPolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyHeadersInOriginRequestPolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyHeadersInOriginRequestPolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyHeadersInOriginRequestPolicy = TooManyHeadersInOriginRequestPolicy;\nclass TooManyOriginRequestPolicies extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyOriginRequestPolicies\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyOriginRequestPolicies\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyOriginRequestPolicies.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyOriginRequestPolicies = TooManyOriginRequestPolicies;\nclass TooManyQueryStringsInOriginRequestPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyQueryStringsInOriginRequestPolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyQueryStringsInOriginRequestPolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyQueryStringsInOriginRequestPolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyQueryStringsInOriginRequestPolicy = TooManyQueryStringsInOriginRequestPolicy;\nclass PublicKeyAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"PublicKeyAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"PublicKeyAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, PublicKeyAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.PublicKeyAlreadyExists = PublicKeyAlreadyExists;\nclass TooManyPublicKeys extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyPublicKeys\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyPublicKeys\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyPublicKeys.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyPublicKeys = TooManyPublicKeys;\nclass RealtimeLogConfigAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"RealtimeLogConfigAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"RealtimeLogConfigAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, RealtimeLogConfigAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.RealtimeLogConfigAlreadyExists = RealtimeLogConfigAlreadyExists;\nclass TooManyRealtimeLogConfigs extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyRealtimeLogConfigs\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyRealtimeLogConfigs\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyRealtimeLogConfigs.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyRealtimeLogConfigs = TooManyRealtimeLogConfigs;\nexports.FrameOptionsList = {\n    DENY: \"DENY\",\n    SAMEORIGIN: \"SAMEORIGIN\",\n};\nexports.ReferrerPolicyList = {\n    no_referrer: \"no-referrer\",\n    no_referrer_when_downgrade: \"no-referrer-when-downgrade\",\n    origin: \"origin\",\n    origin_when_cross_origin: \"origin-when-cross-origin\",\n    same_origin: \"same-origin\",\n    strict_origin: \"strict-origin\",\n    strict_origin_when_cross_origin: \"strict-origin-when-cross-origin\",\n    unsafe_url: \"unsafe-url\",\n};\nconst OriginCustomHeaderFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.HeaderValue && { HeaderValue: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.OriginCustomHeaderFilterSensitiveLog = OriginCustomHeaderFilterSensitiveLog;\nconst CustomHeadersFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Items && { Items: obj.Items.map((item) => (0, exports.OriginCustomHeaderFilterSensitiveLog)(item)) }),\n});\nexports.CustomHeadersFilterSensitiveLog = CustomHeadersFilterSensitiveLog;\nconst OriginFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.CustomHeaders && { CustomHeaders: (0, exports.CustomHeadersFilterSensitiveLog)(obj.CustomHeaders) }),\n});\nexports.OriginFilterSensitiveLog = OriginFilterSensitiveLog;\nconst OriginsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.OriginsFilterSensitiveLog = OriginsFilterSensitiveLog;\nconst DistributionConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Comment && { Comment: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.DistributionConfigFilterSensitiveLog = DistributionConfigFilterSensitiveLog;\nconst DistributionFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.DistributionConfig && { DistributionConfig: (0, exports.DistributionConfigFilterSensitiveLog)(obj.DistributionConfig) }),\n});\nexports.DistributionFilterSensitiveLog = DistributionFilterSensitiveLog;\nconst CopyDistributionResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Distribution && { Distribution: (0, exports.DistributionFilterSensitiveLog)(obj.Distribution) }),\n});\nexports.CopyDistributionResultFilterSensitiveLog = CopyDistributionResultFilterSensitiveLog;\nconst CreateDistributionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.DistributionConfig && { DistributionConfig: (0, exports.DistributionConfigFilterSensitiveLog)(obj.DistributionConfig) }),\n});\nexports.CreateDistributionRequestFilterSensitiveLog = CreateDistributionRequestFilterSensitiveLog;\nconst CreateDistributionResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Distribution && { Distribution: (0, exports.DistributionFilterSensitiveLog)(obj.Distribution) }),\n});\nexports.CreateDistributionResultFilterSensitiveLog = CreateDistributionResultFilterSensitiveLog;\nconst DistributionConfigWithTagsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.DistributionConfig && { DistributionConfig: (0, exports.DistributionConfigFilterSensitiveLog)(obj.DistributionConfig) }),\n});\nexports.DistributionConfigWithTagsFilterSensitiveLog = DistributionConfigWithTagsFilterSensitiveLog;\nconst CreateDistributionWithTagsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.DistributionConfigWithTags && {\n        DistributionConfigWithTags: (0, exports.DistributionConfigWithTagsFilterSensitiveLog)(obj.DistributionConfigWithTags),\n    }),\n});\nexports.CreateDistributionWithTagsRequestFilterSensitiveLog = CreateDistributionWithTagsRequestFilterSensitiveLog;\nconst CreateDistributionWithTagsResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Distribution && { Distribution: (0, exports.DistributionFilterSensitiveLog)(obj.Distribution) }),\n});\nexports.CreateDistributionWithTagsResultFilterSensitiveLog = CreateDistributionWithTagsResultFilterSensitiveLog;\nconst CreateFunctionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.FunctionCode && { FunctionCode: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.CreateFunctionRequestFilterSensitiveLog = CreateFunctionRequestFilterSensitiveLog;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateFunctionRequestFilterSensitiveLog = exports.UpdateDistributionWithStagingConfigResultFilterSensitiveLog = exports.UpdateDistributionResultFilterSensitiveLog = exports.UpdateDistributionRequestFilterSensitiveLog = exports.TestFunctionResultFilterSensitiveLog = exports.TestResultFilterSensitiveLog = exports.TestFunctionRequestFilterSensitiveLog = exports.ListDistributionsByWebACLIdResultFilterSensitiveLog = exports.ListDistributionsByRealtimeLogConfigResultFilterSensitiveLog = exports.ListDistributionsResultFilterSensitiveLog = exports.DistributionListFilterSensitiveLog = exports.DistributionSummaryFilterSensitiveLog = exports.GetFunctionResultFilterSensitiveLog = exports.GetDistributionConfigResultFilterSensitiveLog = exports.GetDistributionResultFilterSensitiveLog = exports.TestFunctionFailed = exports.ResponseHeadersPolicyType = exports.OriginRequestPolicyType = exports.NoSuchInvalidation = exports.StreamingDistributionNotDisabled = exports.NoSuchStreamingDistribution = exports.ResponseHeadersPolicyInUse = exports.RealtimeLogConfigInUse = exports.PublicKeyInUse = exports.OriginRequestPolicyInUse = exports.OriginAccessControlInUse = exports.NoSuchOriginAccessControl = exports.NoSuchMonitoringSubscription = exports.ResourceInUse = exports.NoSuchResource = exports.NoSuchFunctionExists = exports.FunctionInUse = exports.FieldLevelEncryptionProfileInUse = exports.FieldLevelEncryptionConfigInUse = exports.DistributionNotDisabled = exports.NoSuchCloudFrontOriginAccessIdentity = exports.CloudFrontOriginAccessIdentityInUse = exports.IllegalDelete = exports.TooManyStreamingDistributions = exports.TooManyStreamingDistributionCNAMEs = exports.StreamingDistributionAlreadyExists = exports.TooManyResponseHeadersPolicies = exports.TooManyRemoveHeadersInResponseHeadersPolicy = exports.TooManyCustomHeadersInResponseHeadersPolicy = exports.TooLongCSPInResponseHeadersPolicy = exports.ResponseHeadersPolicyAlreadyExists = void 0;\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst CloudFrontServiceException_1 = require(\"./CloudFrontServiceException\");\nconst models_0_1 = require(\"./models_0\");\nclass ResponseHeadersPolicyAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"ResponseHeadersPolicyAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResponseHeadersPolicyAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResponseHeadersPolicyAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.ResponseHeadersPolicyAlreadyExists = ResponseHeadersPolicyAlreadyExists;\nclass TooLongCSPInResponseHeadersPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooLongCSPInResponseHeadersPolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooLongCSPInResponseHeadersPolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooLongCSPInResponseHeadersPolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooLongCSPInResponseHeadersPolicy = TooLongCSPInResponseHeadersPolicy;\nclass TooManyCustomHeadersInResponseHeadersPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyCustomHeadersInResponseHeadersPolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyCustomHeadersInResponseHeadersPolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyCustomHeadersInResponseHeadersPolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyCustomHeadersInResponseHeadersPolicy = TooManyCustomHeadersInResponseHeadersPolicy;\nclass TooManyRemoveHeadersInResponseHeadersPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyRemoveHeadersInResponseHeadersPolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyRemoveHeadersInResponseHeadersPolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyRemoveHeadersInResponseHeadersPolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyRemoveHeadersInResponseHeadersPolicy = TooManyRemoveHeadersInResponseHeadersPolicy;\nclass TooManyResponseHeadersPolicies extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyResponseHeadersPolicies\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyResponseHeadersPolicies\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyResponseHeadersPolicies.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyResponseHeadersPolicies = TooManyResponseHeadersPolicies;\nclass StreamingDistributionAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"StreamingDistributionAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"StreamingDistributionAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, StreamingDistributionAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.StreamingDistributionAlreadyExists = StreamingDistributionAlreadyExists;\nclass TooManyStreamingDistributionCNAMEs extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyStreamingDistributionCNAMEs\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyStreamingDistributionCNAMEs\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyStreamingDistributionCNAMEs.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyStreamingDistributionCNAMEs = TooManyStreamingDistributionCNAMEs;\nclass TooManyStreamingDistributions extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyStreamingDistributions\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyStreamingDistributions\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyStreamingDistributions.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyStreamingDistributions = TooManyStreamingDistributions;\nclass IllegalDelete extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"IllegalDelete\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IllegalDelete\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IllegalDelete.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.IllegalDelete = IllegalDelete;\nclass CloudFrontOriginAccessIdentityInUse extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"CloudFrontOriginAccessIdentityInUse\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"CloudFrontOriginAccessIdentityInUse\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, CloudFrontOriginAccessIdentityInUse.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.CloudFrontOriginAccessIdentityInUse = CloudFrontOriginAccessIdentityInUse;\nclass NoSuchCloudFrontOriginAccessIdentity extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchCloudFrontOriginAccessIdentity\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchCloudFrontOriginAccessIdentity\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchCloudFrontOriginAccessIdentity.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchCloudFrontOriginAccessIdentity = NoSuchCloudFrontOriginAccessIdentity;\nclass DistributionNotDisabled extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"DistributionNotDisabled\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"DistributionNotDisabled\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, DistributionNotDisabled.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.DistributionNotDisabled = DistributionNotDisabled;\nclass FieldLevelEncryptionConfigInUse extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"FieldLevelEncryptionConfigInUse\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"FieldLevelEncryptionConfigInUse\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, FieldLevelEncryptionConfigInUse.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.FieldLevelEncryptionConfigInUse = FieldLevelEncryptionConfigInUse;\nclass FieldLevelEncryptionProfileInUse extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"FieldLevelEncryptionProfileInUse\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"FieldLevelEncryptionProfileInUse\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, FieldLevelEncryptionProfileInUse.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.FieldLevelEncryptionProfileInUse = FieldLevelEncryptionProfileInUse;\nclass FunctionInUse extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"FunctionInUse\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"FunctionInUse\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, FunctionInUse.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.FunctionInUse = FunctionInUse;\nclass NoSuchFunctionExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchFunctionExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchFunctionExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchFunctionExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchFunctionExists = NoSuchFunctionExists;\nclass NoSuchResource extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchResource\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchResource\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchResource.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchResource = NoSuchResource;\nclass ResourceInUse extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"ResourceInUse\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceInUse\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceInUse.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.ResourceInUse = ResourceInUse;\nclass NoSuchMonitoringSubscription extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchMonitoringSubscription\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchMonitoringSubscription\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchMonitoringSubscription.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchMonitoringSubscription = NoSuchMonitoringSubscription;\nclass NoSuchOriginAccessControl extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchOriginAccessControl\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchOriginAccessControl\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchOriginAccessControl.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchOriginAccessControl = NoSuchOriginAccessControl;\nclass OriginAccessControlInUse extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"OriginAccessControlInUse\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"OriginAccessControlInUse\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OriginAccessControlInUse.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.OriginAccessControlInUse = OriginAccessControlInUse;\nclass OriginRequestPolicyInUse extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"OriginRequestPolicyInUse\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"OriginRequestPolicyInUse\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OriginRequestPolicyInUse.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.OriginRequestPolicyInUse = OriginRequestPolicyInUse;\nclass PublicKeyInUse extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"PublicKeyInUse\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"PublicKeyInUse\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, PublicKeyInUse.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.PublicKeyInUse = PublicKeyInUse;\nclass RealtimeLogConfigInUse extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"RealtimeLogConfigInUse\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"RealtimeLogConfigInUse\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, RealtimeLogConfigInUse.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.RealtimeLogConfigInUse = RealtimeLogConfigInUse;\nclass ResponseHeadersPolicyInUse extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"ResponseHeadersPolicyInUse\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResponseHeadersPolicyInUse\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResponseHeadersPolicyInUse.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.ResponseHeadersPolicyInUse = ResponseHeadersPolicyInUse;\nclass NoSuchStreamingDistribution extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchStreamingDistribution\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchStreamingDistribution\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchStreamingDistribution.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchStreamingDistribution = NoSuchStreamingDistribution;\nclass StreamingDistributionNotDisabled extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"StreamingDistributionNotDisabled\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"StreamingDistributionNotDisabled\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, StreamingDistributionNotDisabled.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.StreamingDistributionNotDisabled = StreamingDistributionNotDisabled;\nclass NoSuchInvalidation extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchInvalidation\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchInvalidation\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchInvalidation.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchInvalidation = NoSuchInvalidation;\nexports.OriginRequestPolicyType = {\n    custom: \"custom\",\n    managed: \"managed\",\n};\nexports.ResponseHeadersPolicyType = {\n    custom: \"custom\",\n    managed: \"managed\",\n};\nclass TestFunctionFailed extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TestFunctionFailed\",\n            $fault: \"server\",\n            ...opts,\n        });\n        this.name = \"TestFunctionFailed\";\n        this.$fault = \"server\";\n        Object.setPrototypeOf(this, TestFunctionFailed.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TestFunctionFailed = TestFunctionFailed;\nconst GetDistributionResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Distribution && { Distribution: (0, models_0_1.DistributionFilterSensitiveLog)(obj.Distribution) }),\n});\nexports.GetDistributionResultFilterSensitiveLog = GetDistributionResultFilterSensitiveLog;\nconst GetDistributionConfigResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.DistributionConfig && { DistributionConfig: (0, models_0_1.DistributionConfigFilterSensitiveLog)(obj.DistributionConfig) }),\n});\nexports.GetDistributionConfigResultFilterSensitiveLog = GetDistributionConfigResultFilterSensitiveLog;\nconst GetFunctionResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.FunctionCode && { FunctionCode: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.GetFunctionResultFilterSensitiveLog = GetFunctionResultFilterSensitiveLog;\nconst DistributionSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.DistributionSummaryFilterSensitiveLog = DistributionSummaryFilterSensitiveLog;\nconst DistributionListFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.DistributionListFilterSensitiveLog = DistributionListFilterSensitiveLog;\nconst ListDistributionsResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListDistributionsResultFilterSensitiveLog = ListDistributionsResultFilterSensitiveLog;\nconst ListDistributionsByRealtimeLogConfigResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListDistributionsByRealtimeLogConfigResultFilterSensitiveLog = ListDistributionsByRealtimeLogConfigResultFilterSensitiveLog;\nconst ListDistributionsByWebACLIdResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListDistributionsByWebACLIdResultFilterSensitiveLog = ListDistributionsByWebACLIdResultFilterSensitiveLog;\nconst TestFunctionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.EventObject && { EventObject: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.TestFunctionRequestFilterSensitiveLog = TestFunctionRequestFilterSensitiveLog;\nconst TestResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.FunctionExecutionLogs && { FunctionExecutionLogs: smithy_client_1.SENSITIVE_STRING }),\n    ...(obj.FunctionErrorMessage && { FunctionErrorMessage: smithy_client_1.SENSITIVE_STRING }),\n    ...(obj.FunctionOutput && { FunctionOutput: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.TestResultFilterSensitiveLog = TestResultFilterSensitiveLog;\nconst TestFunctionResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.TestResult && { TestResult: (0, exports.TestResultFilterSensitiveLog)(obj.TestResult) }),\n});\nexports.TestFunctionResultFilterSensitiveLog = TestFunctionResultFilterSensitiveLog;\nconst UpdateDistributionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.DistributionConfig && { DistributionConfig: (0, models_0_1.DistributionConfigFilterSensitiveLog)(obj.DistributionConfig) }),\n});\nexports.UpdateDistributionRequestFilterSensitiveLog = UpdateDistributionRequestFilterSensitiveLog;\nconst UpdateDistributionResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Distribution && { Distribution: (0, models_0_1.DistributionFilterSensitiveLog)(obj.Distribution) }),\n});\nexports.UpdateDistributionResultFilterSensitiveLog = UpdateDistributionResultFilterSensitiveLog;\nconst UpdateDistributionWithStagingConfigResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Distribution && { Distribution: (0, models_0_1.DistributionFilterSensitiveLog)(obj.Distribution) }),\n});\nexports.UpdateDistributionWithStagingConfigResultFilterSensitiveLog = UpdateDistributionWithStagingConfigResultFilterSensitiveLog;\nconst UpdateFunctionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.FunctionCode && { FunctionCode: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.UpdateFunctionRequestFilterSensitiveLog = UpdateFunctionRequestFilterSensitiveLog;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListCloudFrontOriginAccessIdentities = void 0;\nconst CloudFrontClient_1 = require(\"../CloudFrontClient\");\nconst ListCloudFrontOriginAccessIdentitiesCommand_1 = require(\"../commands/ListCloudFrontOriginAccessIdentitiesCommand\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListCloudFrontOriginAccessIdentitiesCommand_1.ListCloudFrontOriginAccessIdentitiesCommand(input), ...args);\n};\nasync function* paginateListCloudFrontOriginAccessIdentities(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.Marker = token;\n        input[\"MaxItems\"] = config.pageSize;\n        if (config.client instanceof CloudFrontClient_1.CloudFrontClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CloudFront | CloudFrontClient\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.CloudFrontOriginAccessIdentityList.NextMarker;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\nexports.paginateListCloudFrontOriginAccessIdentities = paginateListCloudFrontOriginAccessIdentities;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListDistributions = void 0;\nconst CloudFrontClient_1 = require(\"../CloudFrontClient\");\nconst ListDistributionsCommand_1 = require(\"../commands/ListDistributionsCommand\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListDistributionsCommand_1.ListDistributionsCommand(input), ...args);\n};\nasync function* paginateListDistributions(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.Marker = token;\n        input[\"MaxItems\"] = config.pageSize;\n        if (config.client instanceof CloudFrontClient_1.CloudFrontClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CloudFront | CloudFrontClient\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.DistributionList.NextMarker;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\nexports.paginateListDistributions = paginateListDistributions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListInvalidations = void 0;\nconst CloudFrontClient_1 = require(\"../CloudFrontClient\");\nconst ListInvalidationsCommand_1 = require(\"../commands/ListInvalidationsCommand\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListInvalidationsCommand_1.ListInvalidationsCommand(input), ...args);\n};\nasync function* paginateListInvalidations(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.Marker = token;\n        input[\"MaxItems\"] = config.pageSize;\n        if (config.client instanceof CloudFrontClient_1.CloudFrontClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CloudFront | CloudFrontClient\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.InvalidationList.NextMarker;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\nexports.paginateListInvalidations = paginateListInvalidations;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListStreamingDistributions = void 0;\nconst CloudFrontClient_1 = require(\"../CloudFrontClient\");\nconst ListStreamingDistributionsCommand_1 = require(\"../commands/ListStreamingDistributionsCommand\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListStreamingDistributionsCommand_1.ListStreamingDistributionsCommand(input), ...args);\n};\nasync function* paginateListStreamingDistributions(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.Marker = token;\n        input[\"MaxItems\"] = config.pageSize;\n        if (config.client instanceof CloudFrontClient_1.CloudFrontClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CloudFront | CloudFrontClient\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.StreamingDistributionList.NextMarker;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\nexports.paginateListStreamingDistributions = paginateListStreamingDistributions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./Interfaces\"), exports);\ntslib_1.__exportStar(require(\"./ListCloudFrontOriginAccessIdentitiesPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListDistributionsPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListInvalidationsPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListStreamingDistributionsPaginator\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.se_GetInvalidationCommand = exports.se_GetFunctionCommand = exports.se_GetFieldLevelEncryptionProfileConfigCommand = exports.se_GetFieldLevelEncryptionProfileCommand = exports.se_GetFieldLevelEncryptionConfigCommand = exports.se_GetFieldLevelEncryptionCommand = exports.se_GetDistributionConfigCommand = exports.se_GetDistributionCommand = exports.se_GetContinuousDeploymentPolicyConfigCommand = exports.se_GetContinuousDeploymentPolicyCommand = exports.se_GetCloudFrontOriginAccessIdentityConfigCommand = exports.se_GetCloudFrontOriginAccessIdentityCommand = exports.se_GetCachePolicyConfigCommand = exports.se_GetCachePolicyCommand = exports.se_DescribeFunctionCommand = exports.se_DeleteStreamingDistributionCommand = exports.se_DeleteResponseHeadersPolicyCommand = exports.se_DeleteRealtimeLogConfigCommand = exports.se_DeletePublicKeyCommand = exports.se_DeleteOriginRequestPolicyCommand = exports.se_DeleteOriginAccessControlCommand = exports.se_DeleteMonitoringSubscriptionCommand = exports.se_DeleteKeyGroupCommand = exports.se_DeleteFunctionCommand = exports.se_DeleteFieldLevelEncryptionProfileCommand = exports.se_DeleteFieldLevelEncryptionConfigCommand = exports.se_DeleteDistributionCommand = exports.se_DeleteContinuousDeploymentPolicyCommand = exports.se_DeleteCloudFrontOriginAccessIdentityCommand = exports.se_DeleteCachePolicyCommand = exports.se_CreateStreamingDistributionWithTagsCommand = exports.se_CreateStreamingDistributionCommand = exports.se_CreateResponseHeadersPolicyCommand = exports.se_CreateRealtimeLogConfigCommand = exports.se_CreatePublicKeyCommand = exports.se_CreateOriginRequestPolicyCommand = exports.se_CreateOriginAccessControlCommand = exports.se_CreateMonitoringSubscriptionCommand = exports.se_CreateKeyGroupCommand = exports.se_CreateInvalidationCommand = exports.se_CreateFunctionCommand = exports.se_CreateFieldLevelEncryptionProfileCommand = exports.se_CreateFieldLevelEncryptionConfigCommand = exports.se_CreateDistributionWithTagsCommand = exports.se_CreateDistributionCommand = exports.se_CreateContinuousDeploymentPolicyCommand = exports.se_CreateCloudFrontOriginAccessIdentityCommand = exports.se_CreateCachePolicyCommand = exports.se_CopyDistributionCommand = exports.se_AssociateAliasCommand = void 0;\nexports.se_UpdateKeyGroupCommand = exports.se_UpdateFunctionCommand = exports.se_UpdateFieldLevelEncryptionProfileCommand = exports.se_UpdateFieldLevelEncryptionConfigCommand = exports.se_UpdateDistributionWithStagingConfigCommand = exports.se_UpdateDistributionCommand = exports.se_UpdateContinuousDeploymentPolicyCommand = exports.se_UpdateCloudFrontOriginAccessIdentityCommand = exports.se_UpdateCachePolicyCommand = exports.se_UntagResourceCommand = exports.se_TestFunctionCommand = exports.se_TagResourceCommand = exports.se_PublishFunctionCommand = exports.se_ListTagsForResourceCommand = exports.se_ListStreamingDistributionsCommand = exports.se_ListResponseHeadersPoliciesCommand = exports.se_ListRealtimeLogConfigsCommand = exports.se_ListPublicKeysCommand = exports.se_ListOriginRequestPoliciesCommand = exports.se_ListOriginAccessControlsCommand = exports.se_ListKeyGroupsCommand = exports.se_ListInvalidationsCommand = exports.se_ListFunctionsCommand = exports.se_ListFieldLevelEncryptionProfilesCommand = exports.se_ListFieldLevelEncryptionConfigsCommand = exports.se_ListDistributionsByWebACLIdCommand = exports.se_ListDistributionsByResponseHeadersPolicyIdCommand = exports.se_ListDistributionsByRealtimeLogConfigCommand = exports.se_ListDistributionsByOriginRequestPolicyIdCommand = exports.se_ListDistributionsByKeyGroupCommand = exports.se_ListDistributionsByCachePolicyIdCommand = exports.se_ListDistributionsCommand = exports.se_ListContinuousDeploymentPoliciesCommand = exports.se_ListConflictingAliasesCommand = exports.se_ListCloudFrontOriginAccessIdentitiesCommand = exports.se_ListCachePoliciesCommand = exports.se_GetStreamingDistributionConfigCommand = exports.se_GetStreamingDistributionCommand = exports.se_GetResponseHeadersPolicyConfigCommand = exports.se_GetResponseHeadersPolicyCommand = exports.se_GetRealtimeLogConfigCommand = exports.se_GetPublicKeyConfigCommand = exports.se_GetPublicKeyCommand = exports.se_GetOriginRequestPolicyConfigCommand = exports.se_GetOriginRequestPolicyCommand = exports.se_GetOriginAccessControlConfigCommand = exports.se_GetOriginAccessControlCommand = exports.se_GetMonitoringSubscriptionCommand = exports.se_GetKeyGroupConfigCommand = exports.se_GetKeyGroupCommand = void 0;\nexports.de_GetDistributionConfigCommand = exports.de_GetDistributionCommand = exports.de_GetContinuousDeploymentPolicyConfigCommand = exports.de_GetContinuousDeploymentPolicyCommand = exports.de_GetCloudFrontOriginAccessIdentityConfigCommand = exports.de_GetCloudFrontOriginAccessIdentityCommand = exports.de_GetCachePolicyConfigCommand = exports.de_GetCachePolicyCommand = exports.de_DescribeFunctionCommand = exports.de_DeleteStreamingDistributionCommand = exports.de_DeleteResponseHeadersPolicyCommand = exports.de_DeleteRealtimeLogConfigCommand = exports.de_DeletePublicKeyCommand = exports.de_DeleteOriginRequestPolicyCommand = exports.de_DeleteOriginAccessControlCommand = exports.de_DeleteMonitoringSubscriptionCommand = exports.de_DeleteKeyGroupCommand = exports.de_DeleteFunctionCommand = exports.de_DeleteFieldLevelEncryptionProfileCommand = exports.de_DeleteFieldLevelEncryptionConfigCommand = exports.de_DeleteDistributionCommand = exports.de_DeleteContinuousDeploymentPolicyCommand = exports.de_DeleteCloudFrontOriginAccessIdentityCommand = exports.de_DeleteCachePolicyCommand = exports.de_CreateStreamingDistributionWithTagsCommand = exports.de_CreateStreamingDistributionCommand = exports.de_CreateResponseHeadersPolicyCommand = exports.de_CreateRealtimeLogConfigCommand = exports.de_CreatePublicKeyCommand = exports.de_CreateOriginRequestPolicyCommand = exports.de_CreateOriginAccessControlCommand = exports.de_CreateMonitoringSubscriptionCommand = exports.de_CreateKeyGroupCommand = exports.de_CreateInvalidationCommand = exports.de_CreateFunctionCommand = exports.de_CreateFieldLevelEncryptionProfileCommand = exports.de_CreateFieldLevelEncryptionConfigCommand = exports.de_CreateDistributionWithTagsCommand = exports.de_CreateDistributionCommand = exports.de_CreateContinuousDeploymentPolicyCommand = exports.de_CreateCloudFrontOriginAccessIdentityCommand = exports.de_CreateCachePolicyCommand = exports.de_CopyDistributionCommand = exports.de_AssociateAliasCommand = exports.se_UpdateStreamingDistributionCommand = exports.se_UpdateResponseHeadersPolicyCommand = exports.se_UpdateRealtimeLogConfigCommand = exports.se_UpdatePublicKeyCommand = exports.se_UpdateOriginRequestPolicyCommand = exports.se_UpdateOriginAccessControlCommand = void 0;\nexports.de_UpdateContinuousDeploymentPolicyCommand = exports.de_UpdateCloudFrontOriginAccessIdentityCommand = exports.de_UpdateCachePolicyCommand = exports.de_UntagResourceCommand = exports.de_TestFunctionCommand = exports.de_TagResourceCommand = exports.de_PublishFunctionCommand = exports.de_ListTagsForResourceCommand = exports.de_ListStreamingDistributionsCommand = exports.de_ListResponseHeadersPoliciesCommand = exports.de_ListRealtimeLogConfigsCommand = exports.de_ListPublicKeysCommand = exports.de_ListOriginRequestPoliciesCommand = exports.de_ListOriginAccessControlsCommand = exports.de_ListKeyGroupsCommand = exports.de_ListInvalidationsCommand = exports.de_ListFunctionsCommand = exports.de_ListFieldLevelEncryptionProfilesCommand = exports.de_ListFieldLevelEncryptionConfigsCommand = exports.de_ListDistributionsByWebACLIdCommand = exports.de_ListDistributionsByResponseHeadersPolicyIdCommand = exports.de_ListDistributionsByRealtimeLogConfigCommand = exports.de_ListDistributionsByOriginRequestPolicyIdCommand = exports.de_ListDistributionsByKeyGroupCommand = exports.de_ListDistributionsByCachePolicyIdCommand = exports.de_ListDistributionsCommand = exports.de_ListContinuousDeploymentPoliciesCommand = exports.de_ListConflictingAliasesCommand = exports.de_ListCloudFrontOriginAccessIdentitiesCommand = exports.de_ListCachePoliciesCommand = exports.de_GetStreamingDistributionConfigCommand = exports.de_GetStreamingDistributionCommand = exports.de_GetResponseHeadersPolicyConfigCommand = exports.de_GetResponseHeadersPolicyCommand = exports.de_GetRealtimeLogConfigCommand = exports.de_GetPublicKeyConfigCommand = exports.de_GetPublicKeyCommand = exports.de_GetOriginRequestPolicyConfigCommand = exports.de_GetOriginRequestPolicyCommand = exports.de_GetOriginAccessControlConfigCommand = exports.de_GetOriginAccessControlCommand = exports.de_GetMonitoringSubscriptionCommand = exports.de_GetKeyGroupConfigCommand = exports.de_GetKeyGroupCommand = exports.de_GetInvalidationCommand = exports.de_GetFunctionCommand = exports.de_GetFieldLevelEncryptionProfileConfigCommand = exports.de_GetFieldLevelEncryptionProfileCommand = exports.de_GetFieldLevelEncryptionConfigCommand = exports.de_GetFieldLevelEncryptionCommand = void 0;\nexports.de_UpdateStreamingDistributionCommand = exports.de_UpdateResponseHeadersPolicyCommand = exports.de_UpdateRealtimeLogConfigCommand = exports.de_UpdatePublicKeyCommand = exports.de_UpdateOriginRequestPolicyCommand = exports.de_UpdateOriginAccessControlCommand = exports.de_UpdateKeyGroupCommand = exports.de_UpdateFunctionCommand = exports.de_UpdateFieldLevelEncryptionProfileCommand = exports.de_UpdateFieldLevelEncryptionConfigCommand = exports.de_UpdateDistributionWithStagingConfigCommand = exports.de_UpdateDistributionCommand = void 0;\nconst xml_builder_1 = require(\"@aws-sdk/xml-builder\");\nconst protocol_http_1 = require(\"@smithy/protocol-http\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst fast_xml_parser_1 = require(\"fast-xml-parser\");\nconst CloudFrontServiceException_1 = require(\"../models/CloudFrontServiceException\");\nconst models_0_1 = require(\"../models/models_0\");\nconst models_1_1 = require(\"../models/models_1\");\nconst se_AssociateAliasCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distribution/{TargetDistributionId}/associate-alias\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"TargetDistributionId\", () => input.TargetDistributionId, \"{TargetDistributionId}\", false);\n    const query = (0, smithy_client_1.map)({\n        Alias: [, (0, smithy_client_1.expectNonNull)(input.Alias, `Alias`)],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_AssociateAliasCommand = se_AssociateAliasCommand;\nconst se_CopyDistributionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        staging: [() => isSerializableHeaderValue(input.Staging), () => input.Staging.toString()],\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distribution/{PrimaryDistributionId}/copy\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"PrimaryDistributionId\", () => input.PrimaryDistributionId, \"{PrimaryDistributionId}\", false);\n    let body;\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    const bodyNode = new xml_builder_1.XmlNode(\"CopyDistributionRequest\");\n    bodyNode.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n    if (input.CallerReference !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.CallerReference).withName(\"CallerReference\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Enabled !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Enabled)).withName(\"Enabled\");\n        bodyNode.addChildNode(node);\n    }\n    body += bodyNode.toString();\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_CopyDistributionCommand = se_CopyDistributionCommand;\nconst se_CreateCachePolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/cache-policy\";\n    let body;\n    if (input.CachePolicyConfig !== undefined) {\n        body = se_CachePolicyConfig(input.CachePolicyConfig, context);\n    }\n    let contents;\n    if (input.CachePolicyConfig !== undefined) {\n        contents = se_CachePolicyConfig(input.CachePolicyConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_CreateCachePolicyCommand = se_CreateCachePolicyCommand;\nconst se_CreateCloudFrontOriginAccessIdentityCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/origin-access-identity/cloudfront\";\n    let body;\n    if (input.CloudFrontOriginAccessIdentityConfig !== undefined) {\n        body = se_CloudFrontOriginAccessIdentityConfig(input.CloudFrontOriginAccessIdentityConfig, context);\n    }\n    let contents;\n    if (input.CloudFrontOriginAccessIdentityConfig !== undefined) {\n        contents = se_CloudFrontOriginAccessIdentityConfig(input.CloudFrontOriginAccessIdentityConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_CreateCloudFrontOriginAccessIdentityCommand = se_CreateCloudFrontOriginAccessIdentityCommand;\nconst se_CreateContinuousDeploymentPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/continuous-deployment-policy\";\n    let body;\n    if (input.ContinuousDeploymentPolicyConfig !== undefined) {\n        body = se_ContinuousDeploymentPolicyConfig(input.ContinuousDeploymentPolicyConfig, context);\n    }\n    let contents;\n    if (input.ContinuousDeploymentPolicyConfig !== undefined) {\n        contents = se_ContinuousDeploymentPolicyConfig(input.ContinuousDeploymentPolicyConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_CreateContinuousDeploymentPolicyCommand = se_CreateContinuousDeploymentPolicyCommand;\nconst se_CreateDistributionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/distribution\";\n    let body;\n    if (input.DistributionConfig !== undefined) {\n        body = se_DistributionConfig(input.DistributionConfig, context);\n    }\n    let contents;\n    if (input.DistributionConfig !== undefined) {\n        contents = se_DistributionConfig(input.DistributionConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_CreateDistributionCommand = se_CreateDistributionCommand;\nconst se_CreateDistributionWithTagsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/distribution\";\n    const query = (0, smithy_client_1.map)({\n        WithTags: [, \"\"],\n    });\n    let body;\n    if (input.DistributionConfigWithTags !== undefined) {\n        body = se_DistributionConfigWithTags(input.DistributionConfigWithTags, context);\n    }\n    let contents;\n    if (input.DistributionConfigWithTags !== undefined) {\n        contents = se_DistributionConfigWithTags(input.DistributionConfigWithTags, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_CreateDistributionWithTagsCommand = se_CreateDistributionWithTagsCommand;\nconst se_CreateFieldLevelEncryptionConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/field-level-encryption\";\n    let body;\n    if (input.FieldLevelEncryptionConfig !== undefined) {\n        body = se_FieldLevelEncryptionConfig(input.FieldLevelEncryptionConfig, context);\n    }\n    let contents;\n    if (input.FieldLevelEncryptionConfig !== undefined) {\n        contents = se_FieldLevelEncryptionConfig(input.FieldLevelEncryptionConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_CreateFieldLevelEncryptionConfigCommand = se_CreateFieldLevelEncryptionConfigCommand;\nconst se_CreateFieldLevelEncryptionProfileCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/field-level-encryption-profile\";\n    let body;\n    if (input.FieldLevelEncryptionProfileConfig !== undefined) {\n        body = se_FieldLevelEncryptionProfileConfig(input.FieldLevelEncryptionProfileConfig, context);\n    }\n    let contents;\n    if (input.FieldLevelEncryptionProfileConfig !== undefined) {\n        contents = se_FieldLevelEncryptionProfileConfig(input.FieldLevelEncryptionProfileConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_CreateFieldLevelEncryptionProfileCommand = se_CreateFieldLevelEncryptionProfileCommand;\nconst se_CreateFunctionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/function\";\n    let body;\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    const bodyNode = new xml_builder_1.XmlNode(\"CreateFunctionRequest\");\n    bodyNode.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n    if (input.FunctionCode !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"FunctionBlob\", context.base64Encoder(input.FunctionCode)).withName(\"FunctionCode\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FunctionConfig !== undefined) {\n        const node = se_FunctionConfig(input.FunctionConfig, context).withName(\"FunctionConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Name !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"FunctionName\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    body += bodyNode.toString();\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_CreateFunctionCommand = se_CreateFunctionCommand;\nconst se_CreateInvalidationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distribution/{DistributionId}/invalidation\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"DistributionId\", () => input.DistributionId, \"{DistributionId}\", false);\n    let body;\n    if (input.InvalidationBatch !== undefined) {\n        body = se_InvalidationBatch(input.InvalidationBatch, context);\n    }\n    let contents;\n    if (input.InvalidationBatch !== undefined) {\n        contents = se_InvalidationBatch(input.InvalidationBatch, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_CreateInvalidationCommand = se_CreateInvalidationCommand;\nconst se_CreateKeyGroupCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/key-group\";\n    let body;\n    if (input.KeyGroupConfig !== undefined) {\n        body = se_KeyGroupConfig(input.KeyGroupConfig, context);\n    }\n    let contents;\n    if (input.KeyGroupConfig !== undefined) {\n        contents = se_KeyGroupConfig(input.KeyGroupConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_CreateKeyGroupCommand = se_CreateKeyGroupCommand;\nconst se_CreateMonitoringSubscriptionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distributions/{DistributionId}/monitoring-subscription\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"DistributionId\", () => input.DistributionId, \"{DistributionId}\", false);\n    let body;\n    if (input.MonitoringSubscription !== undefined) {\n        body = se_MonitoringSubscription(input.MonitoringSubscription, context);\n    }\n    let contents;\n    if (input.MonitoringSubscription !== undefined) {\n        contents = se_MonitoringSubscription(input.MonitoringSubscription, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_CreateMonitoringSubscriptionCommand = se_CreateMonitoringSubscriptionCommand;\nconst se_CreateOriginAccessControlCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/origin-access-control\";\n    let body;\n    if (input.OriginAccessControlConfig !== undefined) {\n        body = se_OriginAccessControlConfig(input.OriginAccessControlConfig, context);\n    }\n    let contents;\n    if (input.OriginAccessControlConfig !== undefined) {\n        contents = se_OriginAccessControlConfig(input.OriginAccessControlConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_CreateOriginAccessControlCommand = se_CreateOriginAccessControlCommand;\nconst se_CreateOriginRequestPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/origin-request-policy\";\n    let body;\n    if (input.OriginRequestPolicyConfig !== undefined) {\n        body = se_OriginRequestPolicyConfig(input.OriginRequestPolicyConfig, context);\n    }\n    let contents;\n    if (input.OriginRequestPolicyConfig !== undefined) {\n        contents = se_OriginRequestPolicyConfig(input.OriginRequestPolicyConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_CreateOriginRequestPolicyCommand = se_CreateOriginRequestPolicyCommand;\nconst se_CreatePublicKeyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/public-key\";\n    let body;\n    if (input.PublicKeyConfig !== undefined) {\n        body = se_PublicKeyConfig(input.PublicKeyConfig, context);\n    }\n    let contents;\n    if (input.PublicKeyConfig !== undefined) {\n        contents = se_PublicKeyConfig(input.PublicKeyConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_CreatePublicKeyCommand = se_CreatePublicKeyCommand;\nconst se_CreateRealtimeLogConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/realtime-log-config\";\n    let body;\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    const bodyNode = new xml_builder_1.XmlNode(\"CreateRealtimeLogConfigRequest\");\n    bodyNode.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n    if (input.EndPoints !== undefined) {\n        const nodes = se_EndPointList(input.EndPoints, context);\n        const containerNode = new xml_builder_1.XmlNode(\"EndPoints\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    if (input.Fields !== undefined) {\n        const nodes = se_FieldList(input.Fields, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Fields\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    if (input.Name !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SamplingRate !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"long\", String(input.SamplingRate)).withName(\"SamplingRate\");\n        bodyNode.addChildNode(node);\n    }\n    body += bodyNode.toString();\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_CreateRealtimeLogConfigCommand = se_CreateRealtimeLogConfigCommand;\nconst se_CreateResponseHeadersPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/response-headers-policy\";\n    let body;\n    if (input.ResponseHeadersPolicyConfig !== undefined) {\n        body = se_ResponseHeadersPolicyConfig(input.ResponseHeadersPolicyConfig, context);\n    }\n    let contents;\n    if (input.ResponseHeadersPolicyConfig !== undefined) {\n        contents = se_ResponseHeadersPolicyConfig(input.ResponseHeadersPolicyConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_CreateResponseHeadersPolicyCommand = se_CreateResponseHeadersPolicyCommand;\nconst se_CreateStreamingDistributionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/streaming-distribution\";\n    let body;\n    if (input.StreamingDistributionConfig !== undefined) {\n        body = se_StreamingDistributionConfig(input.StreamingDistributionConfig, context);\n    }\n    let contents;\n    if (input.StreamingDistributionConfig !== undefined) {\n        contents = se_StreamingDistributionConfig(input.StreamingDistributionConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_CreateStreamingDistributionCommand = se_CreateStreamingDistributionCommand;\nconst se_CreateStreamingDistributionWithTagsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/streaming-distribution\";\n    const query = (0, smithy_client_1.map)({\n        WithTags: [, \"\"],\n    });\n    let body;\n    if (input.StreamingDistributionConfigWithTags !== undefined) {\n        body = se_StreamingDistributionConfigWithTags(input.StreamingDistributionConfigWithTags, context);\n    }\n    let contents;\n    if (input.StreamingDistributionConfigWithTags !== undefined) {\n        contents = se_StreamingDistributionConfigWithTags(input.StreamingDistributionConfigWithTags, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_CreateStreamingDistributionWithTagsCommand = se_CreateStreamingDistributionWithTagsCommand;\nconst se_DeleteCachePolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/cache-policy/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_DeleteCachePolicyCommand = se_DeleteCachePolicyCommand;\nconst se_DeleteCloudFrontOriginAccessIdentityCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/origin-access-identity/cloudfront/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_DeleteCloudFrontOriginAccessIdentityCommand = se_DeleteCloudFrontOriginAccessIdentityCommand;\nconst se_DeleteContinuousDeploymentPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/continuous-deployment-policy/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_DeleteContinuousDeploymentPolicyCommand = se_DeleteContinuousDeploymentPolicyCommand;\nconst se_DeleteDistributionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/distribution/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_DeleteDistributionCommand = se_DeleteDistributionCommand;\nconst se_DeleteFieldLevelEncryptionConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/field-level-encryption/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_DeleteFieldLevelEncryptionConfigCommand = se_DeleteFieldLevelEncryptionConfigCommand;\nconst se_DeleteFieldLevelEncryptionProfileCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/field-level-encryption-profile/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_DeleteFieldLevelEncryptionProfileCommand = se_DeleteFieldLevelEncryptionProfileCommand;\nconst se_DeleteFunctionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/function/{Name}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Name\", () => input.Name, \"{Name}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_DeleteFunctionCommand = se_DeleteFunctionCommand;\nconst se_DeleteKeyGroupCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/key-group/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_DeleteKeyGroupCommand = se_DeleteKeyGroupCommand;\nconst se_DeleteMonitoringSubscriptionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distributions/{DistributionId}/monitoring-subscription\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"DistributionId\", () => input.DistributionId, \"{DistributionId}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_DeleteMonitoringSubscriptionCommand = se_DeleteMonitoringSubscriptionCommand;\nconst se_DeleteOriginAccessControlCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/origin-access-control/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_DeleteOriginAccessControlCommand = se_DeleteOriginAccessControlCommand;\nconst se_DeleteOriginRequestPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/origin-request-policy/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_DeleteOriginRequestPolicyCommand = se_DeleteOriginRequestPolicyCommand;\nconst se_DeletePublicKeyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/public-key/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_DeletePublicKeyCommand = se_DeletePublicKeyCommand;\nconst se_DeleteRealtimeLogConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/delete-realtime-log-config\";\n    let body;\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    const bodyNode = new xml_builder_1.XmlNode(\"DeleteRealtimeLogConfigRequest\");\n    bodyNode.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n    if (input.ARN !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ARN).withName(\"ARN\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Name !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    body += bodyNode.toString();\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_DeleteRealtimeLogConfigCommand = se_DeleteRealtimeLogConfigCommand;\nconst se_DeleteResponseHeadersPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/response-headers-policy/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_DeleteResponseHeadersPolicyCommand = se_DeleteResponseHeadersPolicyCommand;\nconst se_DeleteStreamingDistributionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/streaming-distribution/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_DeleteStreamingDistributionCommand = se_DeleteStreamingDistributionCommand;\nconst se_DescribeFunctionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/function/{Name}/describe\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Name\", () => input.Name, \"{Name}\", false);\n    const query = (0, smithy_client_1.map)({\n        Stage: [, input.Stage],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_DescribeFunctionCommand = se_DescribeFunctionCommand;\nconst se_GetCachePolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/cache-policy/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetCachePolicyCommand = se_GetCachePolicyCommand;\nconst se_GetCachePolicyConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/cache-policy/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetCachePolicyConfigCommand = se_GetCachePolicyConfigCommand;\nconst se_GetCloudFrontOriginAccessIdentityCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/origin-access-identity/cloudfront/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetCloudFrontOriginAccessIdentityCommand = se_GetCloudFrontOriginAccessIdentityCommand;\nconst se_GetCloudFrontOriginAccessIdentityConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/origin-access-identity/cloudfront/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetCloudFrontOriginAccessIdentityConfigCommand = se_GetCloudFrontOriginAccessIdentityConfigCommand;\nconst se_GetContinuousDeploymentPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/continuous-deployment-policy/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetContinuousDeploymentPolicyCommand = se_GetContinuousDeploymentPolicyCommand;\nconst se_GetContinuousDeploymentPolicyConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/continuous-deployment-policy/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetContinuousDeploymentPolicyConfigCommand = se_GetContinuousDeploymentPolicyConfigCommand;\nconst se_GetDistributionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/distribution/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetDistributionCommand = se_GetDistributionCommand;\nconst se_GetDistributionConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/distribution/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetDistributionConfigCommand = se_GetDistributionConfigCommand;\nconst se_GetFieldLevelEncryptionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/field-level-encryption/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetFieldLevelEncryptionCommand = se_GetFieldLevelEncryptionCommand;\nconst se_GetFieldLevelEncryptionConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/field-level-encryption/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetFieldLevelEncryptionConfigCommand = se_GetFieldLevelEncryptionConfigCommand;\nconst se_GetFieldLevelEncryptionProfileCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/field-level-encryption-profile/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetFieldLevelEncryptionProfileCommand = se_GetFieldLevelEncryptionProfileCommand;\nconst se_GetFieldLevelEncryptionProfileConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/field-level-encryption-profile/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetFieldLevelEncryptionProfileConfigCommand = se_GetFieldLevelEncryptionProfileConfigCommand;\nconst se_GetFunctionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/function/{Name}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Name\", () => input.Name, \"{Name}\", false);\n    const query = (0, smithy_client_1.map)({\n        Stage: [, input.Stage],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetFunctionCommand = se_GetFunctionCommand;\nconst se_GetInvalidationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distribution/{DistributionId}/invalidation/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"DistributionId\", () => input.DistributionId, \"{DistributionId}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetInvalidationCommand = se_GetInvalidationCommand;\nconst se_GetKeyGroupCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/key-group/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetKeyGroupCommand = se_GetKeyGroupCommand;\nconst se_GetKeyGroupConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/key-group/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetKeyGroupConfigCommand = se_GetKeyGroupConfigCommand;\nconst se_GetMonitoringSubscriptionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distributions/{DistributionId}/monitoring-subscription\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"DistributionId\", () => input.DistributionId, \"{DistributionId}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetMonitoringSubscriptionCommand = se_GetMonitoringSubscriptionCommand;\nconst se_GetOriginAccessControlCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/origin-access-control/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetOriginAccessControlCommand = se_GetOriginAccessControlCommand;\nconst se_GetOriginAccessControlConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/origin-access-control/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetOriginAccessControlConfigCommand = se_GetOriginAccessControlConfigCommand;\nconst se_GetOriginRequestPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/origin-request-policy/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetOriginRequestPolicyCommand = se_GetOriginRequestPolicyCommand;\nconst se_GetOriginRequestPolicyConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/origin-request-policy/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetOriginRequestPolicyConfigCommand = se_GetOriginRequestPolicyConfigCommand;\nconst se_GetPublicKeyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/public-key/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetPublicKeyCommand = se_GetPublicKeyCommand;\nconst se_GetPublicKeyConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/public-key/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetPublicKeyConfigCommand = se_GetPublicKeyConfigCommand;\nconst se_GetRealtimeLogConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/get-realtime-log-config\";\n    let body;\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    const bodyNode = new xml_builder_1.XmlNode(\"GetRealtimeLogConfigRequest\");\n    bodyNode.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n    if (input.ARN !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ARN).withName(\"ARN\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Name !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    body += bodyNode.toString();\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetRealtimeLogConfigCommand = se_GetRealtimeLogConfigCommand;\nconst se_GetResponseHeadersPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/response-headers-policy/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetResponseHeadersPolicyCommand = se_GetResponseHeadersPolicyCommand;\nconst se_GetResponseHeadersPolicyConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/response-headers-policy/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetResponseHeadersPolicyConfigCommand = se_GetResponseHeadersPolicyConfigCommand;\nconst se_GetStreamingDistributionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/streaming-distribution/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetStreamingDistributionCommand = se_GetStreamingDistributionCommand;\nconst se_GetStreamingDistributionConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/streaming-distribution/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_GetStreamingDistributionConfigCommand = se_GetStreamingDistributionConfigCommand;\nconst se_ListCachePoliciesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/cache-policy\";\n    const query = (0, smithy_client_1.map)({\n        Type: [, input.Type],\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListCachePoliciesCommand = se_ListCachePoliciesCommand;\nconst se_ListCloudFrontOriginAccessIdentitiesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/origin-access-identity/cloudfront\";\n    const query = (0, smithy_client_1.map)({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListCloudFrontOriginAccessIdentitiesCommand = se_ListCloudFrontOriginAccessIdentitiesCommand;\nconst se_ListConflictingAliasesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/conflicting-alias\";\n    const query = (0, smithy_client_1.map)({\n        DistributionId: [, (0, smithy_client_1.expectNonNull)(input.DistributionId, `DistributionId`)],\n        Alias: [, (0, smithy_client_1.expectNonNull)(input.Alias, `Alias`)],\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListConflictingAliasesCommand = se_ListConflictingAliasesCommand;\nconst se_ListContinuousDeploymentPoliciesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/continuous-deployment-policy\";\n    const query = (0, smithy_client_1.map)({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListContinuousDeploymentPoliciesCommand = se_ListContinuousDeploymentPoliciesCommand;\nconst se_ListDistributionsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/distribution\";\n    const query = (0, smithy_client_1.map)({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListDistributionsCommand = se_ListDistributionsCommand;\nconst se_ListDistributionsByCachePolicyIdCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distributionsByCachePolicyId/{CachePolicyId}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"CachePolicyId\", () => input.CachePolicyId, \"{CachePolicyId}\", false);\n    const query = (0, smithy_client_1.map)({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListDistributionsByCachePolicyIdCommand = se_ListDistributionsByCachePolicyIdCommand;\nconst se_ListDistributionsByKeyGroupCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distributionsByKeyGroupId/{KeyGroupId}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"KeyGroupId\", () => input.KeyGroupId, \"{KeyGroupId}\", false);\n    const query = (0, smithy_client_1.map)({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListDistributionsByKeyGroupCommand = se_ListDistributionsByKeyGroupCommand;\nconst se_ListDistributionsByOriginRequestPolicyIdCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distributionsByOriginRequestPolicyId/{OriginRequestPolicyId}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"OriginRequestPolicyId\", () => input.OriginRequestPolicyId, \"{OriginRequestPolicyId}\", false);\n    const query = (0, smithy_client_1.map)({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListDistributionsByOriginRequestPolicyIdCommand = se_ListDistributionsByOriginRequestPolicyIdCommand;\nconst se_ListDistributionsByRealtimeLogConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distributionsByRealtimeLogConfig\";\n    let body;\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    const bodyNode = new xml_builder_1.XmlNode(\"ListDistributionsByRealtimeLogConfigRequest\");\n    bodyNode.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n    if (input.Marker !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Marker).withName(\"Marker\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.MaxItems !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"Integer\", String(input.MaxItems)).withName(\"MaxItems\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RealtimeLogConfigArn !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.RealtimeLogConfigArn).withName(\"RealtimeLogConfigArn\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RealtimeLogConfigName !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.RealtimeLogConfigName).withName(\"RealtimeLogConfigName\");\n        bodyNode.addChildNode(node);\n    }\n    body += bodyNode.toString();\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_ListDistributionsByRealtimeLogConfigCommand = se_ListDistributionsByRealtimeLogConfigCommand;\nconst se_ListDistributionsByResponseHeadersPolicyIdCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distributionsByResponseHeadersPolicyId/{ResponseHeadersPolicyId}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"ResponseHeadersPolicyId\", () => input.ResponseHeadersPolicyId, \"{ResponseHeadersPolicyId}\", false);\n    const query = (0, smithy_client_1.map)({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListDistributionsByResponseHeadersPolicyIdCommand = se_ListDistributionsByResponseHeadersPolicyIdCommand;\nconst se_ListDistributionsByWebACLIdCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distributionsByWebACLId/{WebACLId}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"WebACLId\", () => input.WebACLId, \"{WebACLId}\", false);\n    const query = (0, smithy_client_1.map)({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListDistributionsByWebACLIdCommand = se_ListDistributionsByWebACLIdCommand;\nconst se_ListFieldLevelEncryptionConfigsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/field-level-encryption\";\n    const query = (0, smithy_client_1.map)({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListFieldLevelEncryptionConfigsCommand = se_ListFieldLevelEncryptionConfigsCommand;\nconst se_ListFieldLevelEncryptionProfilesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/field-level-encryption-profile\";\n    const query = (0, smithy_client_1.map)({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListFieldLevelEncryptionProfilesCommand = se_ListFieldLevelEncryptionProfilesCommand;\nconst se_ListFunctionsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/function\";\n    const query = (0, smithy_client_1.map)({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n        Stage: [, input.Stage],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListFunctionsCommand = se_ListFunctionsCommand;\nconst se_ListInvalidationsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distribution/{DistributionId}/invalidation\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"DistributionId\", () => input.DistributionId, \"{DistributionId}\", false);\n    const query = (0, smithy_client_1.map)({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListInvalidationsCommand = se_ListInvalidationsCommand;\nconst se_ListKeyGroupsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/key-group\";\n    const query = (0, smithy_client_1.map)({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListKeyGroupsCommand = se_ListKeyGroupsCommand;\nconst se_ListOriginAccessControlsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/origin-access-control\";\n    const query = (0, smithy_client_1.map)({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListOriginAccessControlsCommand = se_ListOriginAccessControlsCommand;\nconst se_ListOriginRequestPoliciesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/origin-request-policy\";\n    const query = (0, smithy_client_1.map)({\n        Type: [, input.Type],\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListOriginRequestPoliciesCommand = se_ListOriginRequestPoliciesCommand;\nconst se_ListPublicKeysCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/public-key\";\n    const query = (0, smithy_client_1.map)({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListPublicKeysCommand = se_ListPublicKeysCommand;\nconst se_ListRealtimeLogConfigsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/realtime-log-config\";\n    const query = (0, smithy_client_1.map)({\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n        Marker: [, input.Marker],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListRealtimeLogConfigsCommand = se_ListRealtimeLogConfigsCommand;\nconst se_ListResponseHeadersPoliciesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/response-headers-policy\";\n    const query = (0, smithy_client_1.map)({\n        Type: [, input.Type],\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListResponseHeadersPoliciesCommand = se_ListResponseHeadersPoliciesCommand;\nconst se_ListStreamingDistributionsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/streaming-distribution\";\n    const query = (0, smithy_client_1.map)({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListStreamingDistributionsCommand = se_ListStreamingDistributionsCommand;\nconst se_ListTagsForResourceCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/tagging\";\n    const query = (0, smithy_client_1.map)({\n        Resource: [, (0, smithy_client_1.expectNonNull)(input.Resource, `Resource`)],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListTagsForResourceCommand = se_ListTagsForResourceCommand;\nconst se_PublishFunctionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/function/{Name}/publish\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Name\", () => input.Name, \"{Name}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_PublishFunctionCommand = se_PublishFunctionCommand;\nconst se_TagResourceCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/tagging\";\n    const query = (0, smithy_client_1.map)({\n        Operation: [, \"Tag\"],\n        Resource: [, (0, smithy_client_1.expectNonNull)(input.Resource, `Resource`)],\n    });\n    let body;\n    if (input.Tags !== undefined) {\n        body = se_Tags(input.Tags, context);\n    }\n    let contents;\n    if (input.Tags !== undefined) {\n        contents = se_Tags(input.Tags, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_TagResourceCommand = se_TagResourceCommand;\nconst se_TestFunctionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/function/{Name}/test\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Name\", () => input.Name, \"{Name}\", false);\n    let body;\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    const bodyNode = new xml_builder_1.XmlNode(\"TestFunctionRequest\");\n    bodyNode.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n    if (input.EventObject !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"FunctionEventObject\", context.base64Encoder(input.EventObject)).withName(\"EventObject\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Stage !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"FunctionStage\", input.Stage).withName(\"Stage\");\n        bodyNode.addChildNode(node);\n    }\n    body += bodyNode.toString();\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_TestFunctionCommand = se_TestFunctionCommand;\nconst se_UntagResourceCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/tagging\";\n    const query = (0, smithy_client_1.map)({\n        Operation: [, \"Untag\"],\n        Resource: [, (0, smithy_client_1.expectNonNull)(input.Resource, `Resource`)],\n    });\n    let body;\n    if (input.TagKeys !== undefined) {\n        body = se_TagKeys(input.TagKeys, context);\n    }\n    let contents;\n    if (input.TagKeys !== undefined) {\n        contents = se_TagKeys(input.TagKeys, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_UntagResourceCommand = se_UntagResourceCommand;\nconst se_UpdateCachePolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/cache-policy/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    if (input.CachePolicyConfig !== undefined) {\n        body = se_CachePolicyConfig(input.CachePolicyConfig, context);\n    }\n    let contents;\n    if (input.CachePolicyConfig !== undefined) {\n        contents = se_CachePolicyConfig(input.CachePolicyConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_UpdateCachePolicyCommand = se_UpdateCachePolicyCommand;\nconst se_UpdateCloudFrontOriginAccessIdentityCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/origin-access-identity/cloudfront/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    if (input.CloudFrontOriginAccessIdentityConfig !== undefined) {\n        body = se_CloudFrontOriginAccessIdentityConfig(input.CloudFrontOriginAccessIdentityConfig, context);\n    }\n    let contents;\n    if (input.CloudFrontOriginAccessIdentityConfig !== undefined) {\n        contents = se_CloudFrontOriginAccessIdentityConfig(input.CloudFrontOriginAccessIdentityConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_UpdateCloudFrontOriginAccessIdentityCommand = se_UpdateCloudFrontOriginAccessIdentityCommand;\nconst se_UpdateContinuousDeploymentPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/continuous-deployment-policy/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    if (input.ContinuousDeploymentPolicyConfig !== undefined) {\n        body = se_ContinuousDeploymentPolicyConfig(input.ContinuousDeploymentPolicyConfig, context);\n    }\n    let contents;\n    if (input.ContinuousDeploymentPolicyConfig !== undefined) {\n        contents = se_ContinuousDeploymentPolicyConfig(input.ContinuousDeploymentPolicyConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_UpdateContinuousDeploymentPolicyCommand = se_UpdateContinuousDeploymentPolicyCommand;\nconst se_UpdateDistributionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/distribution/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    if (input.DistributionConfig !== undefined) {\n        body = se_DistributionConfig(input.DistributionConfig, context);\n    }\n    let contents;\n    if (input.DistributionConfig !== undefined) {\n        contents = se_DistributionConfig(input.DistributionConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_UpdateDistributionCommand = se_UpdateDistributionCommand;\nconst se_UpdateDistributionWithStagingConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distribution/{Id}/promote-staging-config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    const query = (0, smithy_client_1.map)({\n        StagingDistributionId: [, input.StagingDistributionId],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_UpdateDistributionWithStagingConfigCommand = se_UpdateDistributionWithStagingConfigCommand;\nconst se_UpdateFieldLevelEncryptionConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/field-level-encryption/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    if (input.FieldLevelEncryptionConfig !== undefined) {\n        body = se_FieldLevelEncryptionConfig(input.FieldLevelEncryptionConfig, context);\n    }\n    let contents;\n    if (input.FieldLevelEncryptionConfig !== undefined) {\n        contents = se_FieldLevelEncryptionConfig(input.FieldLevelEncryptionConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_UpdateFieldLevelEncryptionConfigCommand = se_UpdateFieldLevelEncryptionConfigCommand;\nconst se_UpdateFieldLevelEncryptionProfileCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/field-level-encryption-profile/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    if (input.FieldLevelEncryptionProfileConfig !== undefined) {\n        body = se_FieldLevelEncryptionProfileConfig(input.FieldLevelEncryptionProfileConfig, context);\n    }\n    let contents;\n    if (input.FieldLevelEncryptionProfileConfig !== undefined) {\n        contents = se_FieldLevelEncryptionProfileConfig(input.FieldLevelEncryptionProfileConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_UpdateFieldLevelEncryptionProfileCommand = se_UpdateFieldLevelEncryptionProfileCommand;\nconst se_UpdateFunctionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/function/{Name}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Name\", () => input.Name, \"{Name}\", false);\n    let body;\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    const bodyNode = new xml_builder_1.XmlNode(\"UpdateFunctionRequest\");\n    bodyNode.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n    if (input.FunctionCode !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"FunctionBlob\", context.base64Encoder(input.FunctionCode)).withName(\"FunctionCode\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FunctionConfig !== undefined) {\n        const node = se_FunctionConfig(input.FunctionConfig, context).withName(\"FunctionConfig\");\n        bodyNode.addChildNode(node);\n    }\n    body += bodyNode.toString();\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_UpdateFunctionCommand = se_UpdateFunctionCommand;\nconst se_UpdateKeyGroupCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/key-group/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    if (input.KeyGroupConfig !== undefined) {\n        body = se_KeyGroupConfig(input.KeyGroupConfig, context);\n    }\n    let contents;\n    if (input.KeyGroupConfig !== undefined) {\n        contents = se_KeyGroupConfig(input.KeyGroupConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_UpdateKeyGroupCommand = se_UpdateKeyGroupCommand;\nconst se_UpdateOriginAccessControlCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/origin-access-control/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    if (input.OriginAccessControlConfig !== undefined) {\n        body = se_OriginAccessControlConfig(input.OriginAccessControlConfig, context);\n    }\n    let contents;\n    if (input.OriginAccessControlConfig !== undefined) {\n        contents = se_OriginAccessControlConfig(input.OriginAccessControlConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_UpdateOriginAccessControlCommand = se_UpdateOriginAccessControlCommand;\nconst se_UpdateOriginRequestPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/origin-request-policy/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    if (input.OriginRequestPolicyConfig !== undefined) {\n        body = se_OriginRequestPolicyConfig(input.OriginRequestPolicyConfig, context);\n    }\n    let contents;\n    if (input.OriginRequestPolicyConfig !== undefined) {\n        contents = se_OriginRequestPolicyConfig(input.OriginRequestPolicyConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_UpdateOriginRequestPolicyCommand = se_UpdateOriginRequestPolicyCommand;\nconst se_UpdatePublicKeyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/public-key/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    if (input.PublicKeyConfig !== undefined) {\n        body = se_PublicKeyConfig(input.PublicKeyConfig, context);\n    }\n    let contents;\n    if (input.PublicKeyConfig !== undefined) {\n        contents = se_PublicKeyConfig(input.PublicKeyConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_UpdatePublicKeyCommand = se_UpdatePublicKeyCommand;\nconst se_UpdateRealtimeLogConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/realtime-log-config\";\n    let body;\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    const bodyNode = new xml_builder_1.XmlNode(\"UpdateRealtimeLogConfigRequest\");\n    bodyNode.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n    if (input.ARN !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ARN).withName(\"ARN\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EndPoints !== undefined) {\n        const nodes = se_EndPointList(input.EndPoints, context);\n        const containerNode = new xml_builder_1.XmlNode(\"EndPoints\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    if (input.Fields !== undefined) {\n        const nodes = se_FieldList(input.Fields, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Fields\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    if (input.Name !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SamplingRate !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"long\", String(input.SamplingRate)).withName(\"SamplingRate\");\n        bodyNode.addChildNode(node);\n    }\n    body += bodyNode.toString();\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_UpdateRealtimeLogConfigCommand = se_UpdateRealtimeLogConfigCommand;\nconst se_UpdateResponseHeadersPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/response-headers-policy/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    if (input.ResponseHeadersPolicyConfig !== undefined) {\n        body = se_ResponseHeadersPolicyConfig(input.ResponseHeadersPolicyConfig, context);\n    }\n    let contents;\n    if (input.ResponseHeadersPolicyConfig !== undefined) {\n        contents = se_ResponseHeadersPolicyConfig(input.ResponseHeadersPolicyConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_UpdateResponseHeadersPolicyCommand = se_UpdateResponseHeadersPolicyCommand;\nconst se_UpdateStreamingDistributionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/streaming-distribution/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    if (input.StreamingDistributionConfig !== undefined) {\n        body = se_StreamingDistributionConfig(input.StreamingDistributionConfig, context);\n    }\n    let contents;\n    if (input.StreamingDistributionConfig !== undefined) {\n        contents = se_StreamingDistributionConfig(input.StreamingDistributionConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_UpdateStreamingDistributionCommand = se_UpdateStreamingDistributionCommand;\nconst de_AssociateAliasCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_AssociateAliasCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_AssociateAliasCommand = de_AssociateAliasCommand;\nconst de_AssociateAliasCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"IllegalUpdate\":\n        case \"com.amazonaws.cloudfront#IllegalUpdate\":\n            throw await de_IllegalUpdateRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await de_NoSuchDistributionRes(parsedOutput, context);\n        case \"TooManyDistributionCNAMEs\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionCNAMEs\":\n            throw await de_TooManyDistributionCNAMEsRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_CopyDistributionCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CopyDistributionCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.Distribution = de_Distribution(data, context);\n    return contents;\n};\nexports.de_CopyDistributionCommand = de_CopyDistributionCommand;\nconst de_CopyDistributionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"CNAMEAlreadyExists\":\n        case \"com.amazonaws.cloudfront#CNAMEAlreadyExists\":\n            throw await de_CNAMEAlreadyExistsRes(parsedOutput, context);\n        case \"DistributionAlreadyExists\":\n        case \"com.amazonaws.cloudfront#DistributionAlreadyExists\":\n            throw await de_DistributionAlreadyExistsRes(parsedOutput, context);\n        case \"IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior\":\n        case \"com.amazonaws.cloudfront#IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior\":\n            throw await de_IllegalFieldLevelEncryptionConfigAssociationWithCacheBehaviorRes(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await de_InconsistentQuantitiesRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidDefaultRootObject\":\n        case \"com.amazonaws.cloudfront#InvalidDefaultRootObject\":\n            throw await de_InvalidDefaultRootObjectRes(parsedOutput, context);\n        case \"InvalidErrorCode\":\n        case \"com.amazonaws.cloudfront#InvalidErrorCode\":\n            throw await de_InvalidErrorCodeRes(parsedOutput, context);\n        case \"InvalidForwardCookies\":\n        case \"com.amazonaws.cloudfront#InvalidForwardCookies\":\n            throw await de_InvalidForwardCookiesRes(parsedOutput, context);\n        case \"InvalidFunctionAssociation\":\n        case \"com.amazonaws.cloudfront#InvalidFunctionAssociation\":\n            throw await de_InvalidFunctionAssociationRes(parsedOutput, context);\n        case \"InvalidGeoRestrictionParameter\":\n        case \"com.amazonaws.cloudfront#InvalidGeoRestrictionParameter\":\n            throw await de_InvalidGeoRestrictionParameterRes(parsedOutput, context);\n        case \"InvalidHeadersForS3Origin\":\n        case \"com.amazonaws.cloudfront#InvalidHeadersForS3Origin\":\n            throw await de_InvalidHeadersForS3OriginRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"InvalidLambdaFunctionAssociation\":\n        case \"com.amazonaws.cloudfront#InvalidLambdaFunctionAssociation\":\n            throw await de_InvalidLambdaFunctionAssociationRes(parsedOutput, context);\n        case \"InvalidLocationCode\":\n        case \"com.amazonaws.cloudfront#InvalidLocationCode\":\n            throw await de_InvalidLocationCodeRes(parsedOutput, context);\n        case \"InvalidMinimumProtocolVersion\":\n        case \"com.amazonaws.cloudfront#InvalidMinimumProtocolVersion\":\n            throw await de_InvalidMinimumProtocolVersionRes(parsedOutput, context);\n        case \"InvalidOrigin\":\n        case \"com.amazonaws.cloudfront#InvalidOrigin\":\n            throw await de_InvalidOriginRes(parsedOutput, context);\n        case \"InvalidOriginAccessControl\":\n        case \"com.amazonaws.cloudfront#InvalidOriginAccessControl\":\n            throw await de_InvalidOriginAccessControlRes(parsedOutput, context);\n        case \"InvalidOriginAccessIdentity\":\n        case \"com.amazonaws.cloudfront#InvalidOriginAccessIdentity\":\n            throw await de_InvalidOriginAccessIdentityRes(parsedOutput, context);\n        case \"InvalidOriginKeepaliveTimeout\":\n        case \"com.amazonaws.cloudfront#InvalidOriginKeepaliveTimeout\":\n            throw await de_InvalidOriginKeepaliveTimeoutRes(parsedOutput, context);\n        case \"InvalidOriginReadTimeout\":\n        case \"com.amazonaws.cloudfront#InvalidOriginReadTimeout\":\n            throw await de_InvalidOriginReadTimeoutRes(parsedOutput, context);\n        case \"InvalidProtocolSettings\":\n        case \"com.amazonaws.cloudfront#InvalidProtocolSettings\":\n            throw await de_InvalidProtocolSettingsRes(parsedOutput, context);\n        case \"InvalidQueryStringParameters\":\n        case \"com.amazonaws.cloudfront#InvalidQueryStringParameters\":\n            throw await de_InvalidQueryStringParametersRes(parsedOutput, context);\n        case \"InvalidRelativePath\":\n        case \"com.amazonaws.cloudfront#InvalidRelativePath\":\n            throw await de_InvalidRelativePathRes(parsedOutput, context);\n        case \"InvalidRequiredProtocol\":\n        case \"com.amazonaws.cloudfront#InvalidRequiredProtocol\":\n            throw await de_InvalidRequiredProtocolRes(parsedOutput, context);\n        case \"InvalidResponseCode\":\n        case \"com.amazonaws.cloudfront#InvalidResponseCode\":\n            throw await de_InvalidResponseCodeRes(parsedOutput, context);\n        case \"InvalidTTLOrder\":\n        case \"com.amazonaws.cloudfront#InvalidTTLOrder\":\n            throw await de_InvalidTTLOrderRes(parsedOutput, context);\n        case \"InvalidViewerCertificate\":\n        case \"com.amazonaws.cloudfront#InvalidViewerCertificate\":\n            throw await de_InvalidViewerCertificateRes(parsedOutput, context);\n        case \"InvalidWebACLId\":\n        case \"com.amazonaws.cloudfront#InvalidWebACLId\":\n            throw await de_InvalidWebACLIdRes(parsedOutput, context);\n        case \"MissingBody\":\n        case \"com.amazonaws.cloudfront#MissingBody\":\n            throw await de_MissingBodyRes(parsedOutput, context);\n        case \"NoSuchCachePolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchCachePolicy\":\n            throw await de_NoSuchCachePolicyRes(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await de_NoSuchDistributionRes(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionConfig\":\n            throw await de_NoSuchFieldLevelEncryptionConfigRes(parsedOutput, context);\n        case \"NoSuchOrigin\":\n        case \"com.amazonaws.cloudfront#NoSuchOrigin\":\n            throw await de_NoSuchOriginRes(parsedOutput, context);\n        case \"NoSuchOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchOriginRequestPolicy\":\n            throw await de_NoSuchOriginRequestPolicyRes(parsedOutput, context);\n        case \"NoSuchRealtimeLogConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchRealtimeLogConfig\":\n            throw await de_NoSuchRealtimeLogConfigRes(parsedOutput, context);\n        case \"NoSuchResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchResponseHeadersPolicy\":\n            throw await de_NoSuchResponseHeadersPolicyRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        case \"RealtimeLogConfigOwnerMismatch\":\n        case \"com.amazonaws.cloudfront#RealtimeLogConfigOwnerMismatch\":\n            throw await de_RealtimeLogConfigOwnerMismatchRes(parsedOutput, context);\n        case \"TooManyCacheBehaviors\":\n        case \"com.amazonaws.cloudfront#TooManyCacheBehaviors\":\n            throw await de_TooManyCacheBehaviorsRes(parsedOutput, context);\n        case \"TooManyCertificates\":\n        case \"com.amazonaws.cloudfront#TooManyCertificates\":\n            throw await de_TooManyCertificatesRes(parsedOutput, context);\n        case \"TooManyCookieNamesInWhiteList\":\n        case \"com.amazonaws.cloudfront#TooManyCookieNamesInWhiteList\":\n            throw await de_TooManyCookieNamesInWhiteListRes(parsedOutput, context);\n        case \"TooManyDistributionCNAMEs\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionCNAMEs\":\n            throw await de_TooManyDistributionCNAMEsRes(parsedOutput, context);\n        case \"TooManyDistributions\":\n        case \"com.amazonaws.cloudfront#TooManyDistributions\":\n            throw await de_TooManyDistributionsRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToCachePolicy\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToCachePolicy\":\n            throw await de_TooManyDistributionsAssociatedToCachePolicyRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToFieldLevelEncryptionConfig\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToFieldLevelEncryptionConfig\":\n            throw await de_TooManyDistributionsAssociatedToFieldLevelEncryptionConfigRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToKeyGroup\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToKeyGroup\":\n            throw await de_TooManyDistributionsAssociatedToKeyGroupRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToOriginAccessControl\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToOriginAccessControl\":\n            throw await de_TooManyDistributionsAssociatedToOriginAccessControlRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToOriginRequestPolicy\":\n            throw await de_TooManyDistributionsAssociatedToOriginRequestPolicyRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToResponseHeadersPolicy\":\n            throw await de_TooManyDistributionsAssociatedToResponseHeadersPolicyRes(parsedOutput, context);\n        case \"TooManyDistributionsWithFunctionAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsWithFunctionAssociations\":\n            throw await de_TooManyDistributionsWithFunctionAssociationsRes(parsedOutput, context);\n        case \"TooManyDistributionsWithLambdaAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsWithLambdaAssociations\":\n            throw await de_TooManyDistributionsWithLambdaAssociationsRes(parsedOutput, context);\n        case \"TooManyDistributionsWithSingleFunctionARN\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsWithSingleFunctionARN\":\n            throw await de_TooManyDistributionsWithSingleFunctionARNRes(parsedOutput, context);\n        case \"TooManyFunctionAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyFunctionAssociations\":\n            throw await de_TooManyFunctionAssociationsRes(parsedOutput, context);\n        case \"TooManyHeadersInForwardedValues\":\n        case \"com.amazonaws.cloudfront#TooManyHeadersInForwardedValues\":\n            throw await de_TooManyHeadersInForwardedValuesRes(parsedOutput, context);\n        case \"TooManyKeyGroupsAssociatedToDistribution\":\n        case \"com.amazonaws.cloudfront#TooManyKeyGroupsAssociatedToDistribution\":\n            throw await de_TooManyKeyGroupsAssociatedToDistributionRes(parsedOutput, context);\n        case \"TooManyLambdaFunctionAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyLambdaFunctionAssociations\":\n            throw await de_TooManyLambdaFunctionAssociationsRes(parsedOutput, context);\n        case \"TooManyOriginCustomHeaders\":\n        case \"com.amazonaws.cloudfront#TooManyOriginCustomHeaders\":\n            throw await de_TooManyOriginCustomHeadersRes(parsedOutput, context);\n        case \"TooManyOriginGroupsPerDistribution\":\n        case \"com.amazonaws.cloudfront#TooManyOriginGroupsPerDistribution\":\n            throw await de_TooManyOriginGroupsPerDistributionRes(parsedOutput, context);\n        case \"TooManyOrigins\":\n        case \"com.amazonaws.cloudfront#TooManyOrigins\":\n            throw await de_TooManyOriginsRes(parsedOutput, context);\n        case \"TooManyQueryStringParameters\":\n        case \"com.amazonaws.cloudfront#TooManyQueryStringParameters\":\n            throw await de_TooManyQueryStringParametersRes(parsedOutput, context);\n        case \"TooManyTrustedSigners\":\n        case \"com.amazonaws.cloudfront#TooManyTrustedSigners\":\n            throw await de_TooManyTrustedSignersRes(parsedOutput, context);\n        case \"TrustedKeyGroupDoesNotExist\":\n        case \"com.amazonaws.cloudfront#TrustedKeyGroupDoesNotExist\":\n            throw await de_TrustedKeyGroupDoesNotExistRes(parsedOutput, context);\n        case \"TrustedSignerDoesNotExist\":\n        case \"com.amazonaws.cloudfront#TrustedSignerDoesNotExist\":\n            throw await de_TrustedSignerDoesNotExistRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_CreateCachePolicyCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CreateCachePolicyCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.CachePolicy = de_CachePolicy(data, context);\n    return contents;\n};\nexports.de_CreateCachePolicyCommand = de_CreateCachePolicyCommand;\nconst de_CreateCachePolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"CachePolicyAlreadyExists\":\n        case \"com.amazonaws.cloudfront#CachePolicyAlreadyExists\":\n            throw await de_CachePolicyAlreadyExistsRes(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await de_InconsistentQuantitiesRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"TooManyCachePolicies\":\n        case \"com.amazonaws.cloudfront#TooManyCachePolicies\":\n            throw await de_TooManyCachePoliciesRes(parsedOutput, context);\n        case \"TooManyCookiesInCachePolicy\":\n        case \"com.amazonaws.cloudfront#TooManyCookiesInCachePolicy\":\n            throw await de_TooManyCookiesInCachePolicyRes(parsedOutput, context);\n        case \"TooManyHeadersInCachePolicy\":\n        case \"com.amazonaws.cloudfront#TooManyHeadersInCachePolicy\":\n            throw await de_TooManyHeadersInCachePolicyRes(parsedOutput, context);\n        case \"TooManyQueryStringsInCachePolicy\":\n        case \"com.amazonaws.cloudfront#TooManyQueryStringsInCachePolicy\":\n            throw await de_TooManyQueryStringsInCachePolicyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_CreateCloudFrontOriginAccessIdentityCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CreateCloudFrontOriginAccessIdentityCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.CloudFrontOriginAccessIdentity = de_CloudFrontOriginAccessIdentity(data, context);\n    return contents;\n};\nexports.de_CreateCloudFrontOriginAccessIdentityCommand = de_CreateCloudFrontOriginAccessIdentityCommand;\nconst de_CreateCloudFrontOriginAccessIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CloudFrontOriginAccessIdentityAlreadyExists\":\n        case \"com.amazonaws.cloudfront#CloudFrontOriginAccessIdentityAlreadyExists\":\n            throw await de_CloudFrontOriginAccessIdentityAlreadyExistsRes(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await de_InconsistentQuantitiesRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"MissingBody\":\n        case \"com.amazonaws.cloudfront#MissingBody\":\n            throw await de_MissingBodyRes(parsedOutput, context);\n        case \"TooManyCloudFrontOriginAccessIdentities\":\n        case \"com.amazonaws.cloudfront#TooManyCloudFrontOriginAccessIdentities\":\n            throw await de_TooManyCloudFrontOriginAccessIdentitiesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_CreateContinuousDeploymentPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CreateContinuousDeploymentPolicyCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.ContinuousDeploymentPolicy = de_ContinuousDeploymentPolicy(data, context);\n    return contents;\n};\nexports.de_CreateContinuousDeploymentPolicyCommand = de_CreateContinuousDeploymentPolicyCommand;\nconst de_CreateContinuousDeploymentPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"ContinuousDeploymentPolicyAlreadyExists\":\n        case \"com.amazonaws.cloudfront#ContinuousDeploymentPolicyAlreadyExists\":\n            throw await de_ContinuousDeploymentPolicyAlreadyExistsRes(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await de_InconsistentQuantitiesRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"StagingDistributionInUse\":\n        case \"com.amazonaws.cloudfront#StagingDistributionInUse\":\n            throw await de_StagingDistributionInUseRes(parsedOutput, context);\n        case \"TooManyContinuousDeploymentPolicies\":\n        case \"com.amazonaws.cloudfront#TooManyContinuousDeploymentPolicies\":\n            throw await de_TooManyContinuousDeploymentPoliciesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_CreateDistributionCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CreateDistributionCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.Distribution = de_Distribution(data, context);\n    return contents;\n};\nexports.de_CreateDistributionCommand = de_CreateDistributionCommand;\nconst de_CreateDistributionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"CNAMEAlreadyExists\":\n        case \"com.amazonaws.cloudfront#CNAMEAlreadyExists\":\n            throw await de_CNAMEAlreadyExistsRes(parsedOutput, context);\n        case \"ContinuousDeploymentPolicyInUse\":\n        case \"com.amazonaws.cloudfront#ContinuousDeploymentPolicyInUse\":\n            throw await de_ContinuousDeploymentPolicyInUseRes(parsedOutput, context);\n        case \"DistributionAlreadyExists\":\n        case \"com.amazonaws.cloudfront#DistributionAlreadyExists\":\n            throw await de_DistributionAlreadyExistsRes(parsedOutput, context);\n        case \"IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior\":\n        case \"com.amazonaws.cloudfront#IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior\":\n            throw await de_IllegalFieldLevelEncryptionConfigAssociationWithCacheBehaviorRes(parsedOutput, context);\n        case \"IllegalOriginAccessConfiguration\":\n        case \"com.amazonaws.cloudfront#IllegalOriginAccessConfiguration\":\n            throw await de_IllegalOriginAccessConfigurationRes(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await de_InconsistentQuantitiesRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidDefaultRootObject\":\n        case \"com.amazonaws.cloudfront#InvalidDefaultRootObject\":\n            throw await de_InvalidDefaultRootObjectRes(parsedOutput, context);\n        case \"InvalidDomainNameForOriginAccessControl\":\n        case \"com.amazonaws.cloudfront#InvalidDomainNameForOriginAccessControl\":\n            throw await de_InvalidDomainNameForOriginAccessControlRes(parsedOutput, context);\n        case \"InvalidErrorCode\":\n        case \"com.amazonaws.cloudfront#InvalidErrorCode\":\n            throw await de_InvalidErrorCodeRes(parsedOutput, context);\n        case \"InvalidForwardCookies\":\n        case \"com.amazonaws.cloudfront#InvalidForwardCookies\":\n            throw await de_InvalidForwardCookiesRes(parsedOutput, context);\n        case \"InvalidFunctionAssociation\":\n        case \"com.amazonaws.cloudfront#InvalidFunctionAssociation\":\n            throw await de_InvalidFunctionAssociationRes(parsedOutput, context);\n        case \"InvalidGeoRestrictionParameter\":\n        case \"com.amazonaws.cloudfront#InvalidGeoRestrictionParameter\":\n            throw await de_InvalidGeoRestrictionParameterRes(parsedOutput, context);\n        case \"InvalidHeadersForS3Origin\":\n        case \"com.amazonaws.cloudfront#InvalidHeadersForS3Origin\":\n            throw await de_InvalidHeadersForS3OriginRes(parsedOutput, context);\n        case \"InvalidLambdaFunctionAssociation\":\n        case \"com.amazonaws.cloudfront#InvalidLambdaFunctionAssociation\":\n            throw await de_InvalidLambdaFunctionAssociationRes(parsedOutput, context);\n        case \"InvalidLocationCode\":\n        case \"com.amazonaws.cloudfront#InvalidLocationCode\":\n            throw await de_InvalidLocationCodeRes(parsedOutput, context);\n        case \"InvalidMinimumProtocolVersion\":\n        case \"com.amazonaws.cloudfront#InvalidMinimumProtocolVersion\":\n            throw await de_InvalidMinimumProtocolVersionRes(parsedOutput, context);\n        case \"InvalidOrigin\":\n        case \"com.amazonaws.cloudfront#InvalidOrigin\":\n            throw await de_InvalidOriginRes(parsedOutput, context);\n        case \"InvalidOriginAccessControl\":\n        case \"com.amazonaws.cloudfront#InvalidOriginAccessControl\":\n            throw await de_InvalidOriginAccessControlRes(parsedOutput, context);\n        case \"InvalidOriginAccessIdentity\":\n        case \"com.amazonaws.cloudfront#InvalidOriginAccessIdentity\":\n            throw await de_InvalidOriginAccessIdentityRes(parsedOutput, context);\n        case \"InvalidOriginKeepaliveTimeout\":\n        case \"com.amazonaws.cloudfront#InvalidOriginKeepaliveTimeout\":\n            throw await de_InvalidOriginKeepaliveTimeoutRes(parsedOutput, context);\n        case \"InvalidOriginReadTimeout\":\n        case \"com.amazonaws.cloudfront#InvalidOriginReadTimeout\":\n            throw await de_InvalidOriginReadTimeoutRes(parsedOutput, context);\n        case \"InvalidProtocolSettings\":\n        case \"com.amazonaws.cloudfront#InvalidProtocolSettings\":\n            throw await de_InvalidProtocolSettingsRes(parsedOutput, context);\n        case \"InvalidQueryStringParameters\":\n        case \"com.amazonaws.cloudfront#InvalidQueryStringParameters\":\n            throw await de_InvalidQueryStringParametersRes(parsedOutput, context);\n        case \"InvalidRelativePath\":\n        case \"com.amazonaws.cloudfront#InvalidRelativePath\":\n            throw await de_InvalidRelativePathRes(parsedOutput, context);\n        case \"InvalidRequiredProtocol\":\n        case \"com.amazonaws.cloudfront#InvalidRequiredProtocol\":\n            throw await de_InvalidRequiredProtocolRes(parsedOutput, context);\n        case \"InvalidResponseCode\":\n        case \"com.amazonaws.cloudfront#InvalidResponseCode\":\n            throw await de_InvalidResponseCodeRes(parsedOutput, context);\n        case \"InvalidTTLOrder\":\n        case \"com.amazonaws.cloudfront#InvalidTTLOrder\":\n            throw await de_InvalidTTLOrderRes(parsedOutput, context);\n        case \"InvalidViewerCertificate\":\n        case \"com.amazonaws.cloudfront#InvalidViewerCertificate\":\n            throw await de_InvalidViewerCertificateRes(parsedOutput, context);\n        case \"InvalidWebACLId\":\n        case \"com.amazonaws.cloudfront#InvalidWebACLId\":\n            throw await de_InvalidWebACLIdRes(parsedOutput, context);\n        case \"MissingBody\":\n        case \"com.amazonaws.cloudfront#MissingBody\":\n            throw await de_MissingBodyRes(parsedOutput, context);\n        case \"NoSuchCachePolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchCachePolicy\":\n            throw await de_NoSuchCachePolicyRes(parsedOutput, context);\n        case \"NoSuchContinuousDeploymentPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchContinuousDeploymentPolicy\":\n            throw await de_NoSuchContinuousDeploymentPolicyRes(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionConfig\":\n            throw await de_NoSuchFieldLevelEncryptionConfigRes(parsedOutput, context);\n        case \"NoSuchOrigin\":\n        case \"com.amazonaws.cloudfront#NoSuchOrigin\":\n            throw await de_NoSuchOriginRes(parsedOutput, context);\n        case \"NoSuchOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchOriginRequestPolicy\":\n            throw await de_NoSuchOriginRequestPolicyRes(parsedOutput, context);\n        case \"NoSuchRealtimeLogConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchRealtimeLogConfig\":\n            throw await de_NoSuchRealtimeLogConfigRes(parsedOutput, context);\n        case \"NoSuchResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchResponseHeadersPolicy\":\n            throw await de_NoSuchResponseHeadersPolicyRes(parsedOutput, context);\n        case \"RealtimeLogConfigOwnerMismatch\":\n        case \"com.amazonaws.cloudfront#RealtimeLogConfigOwnerMismatch\":\n            throw await de_RealtimeLogConfigOwnerMismatchRes(parsedOutput, context);\n        case \"TooManyCacheBehaviors\":\n        case \"com.amazonaws.cloudfront#TooManyCacheBehaviors\":\n            throw await de_TooManyCacheBehaviorsRes(parsedOutput, context);\n        case \"TooManyCertificates\":\n        case \"com.amazonaws.cloudfront#TooManyCertificates\":\n            throw await de_TooManyCertificatesRes(parsedOutput, context);\n        case \"TooManyCookieNamesInWhiteList\":\n        case \"com.amazonaws.cloudfront#TooManyCookieNamesInWhiteList\":\n            throw await de_TooManyCookieNamesInWhiteListRes(parsedOutput, context);\n        case \"TooManyDistributionCNAMEs\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionCNAMEs\":\n            throw await de_TooManyDistributionCNAMEsRes(parsedOutput, context);\n        case \"TooManyDistributions\":\n        case \"com.amazonaws.cloudfront#TooManyDistributions\":\n            throw await de_TooManyDistributionsRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToCachePolicy\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToCachePolicy\":\n            throw await de_TooManyDistributionsAssociatedToCachePolicyRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToFieldLevelEncryptionConfig\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToFieldLevelEncryptionConfig\":\n            throw await de_TooManyDistributionsAssociatedToFieldLevelEncryptionConfigRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToKeyGroup\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToKeyGroup\":\n            throw await de_TooManyDistributionsAssociatedToKeyGroupRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToOriginAccessControl\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToOriginAccessControl\":\n            throw await de_TooManyDistributionsAssociatedToOriginAccessControlRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToOriginRequestPolicy\":\n            throw await de_TooManyDistributionsAssociatedToOriginRequestPolicyRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToResponseHeadersPolicy\":\n            throw await de_TooManyDistributionsAssociatedToResponseHeadersPolicyRes(parsedOutput, context);\n        case \"TooManyDistributionsWithFunctionAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsWithFunctionAssociations\":\n            throw await de_TooManyDistributionsWithFunctionAssociationsRes(parsedOutput, context);\n        case \"TooManyDistributionsWithLambdaAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsWithLambdaAssociations\":\n            throw await de_TooManyDistributionsWithLambdaAssociationsRes(parsedOutput, context);\n        case \"TooManyDistributionsWithSingleFunctionARN\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsWithSingleFunctionARN\":\n            throw await de_TooManyDistributionsWithSingleFunctionARNRes(parsedOutput, context);\n        case \"TooManyFunctionAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyFunctionAssociations\":\n            throw await de_TooManyFunctionAssociationsRes(parsedOutput, context);\n        case \"TooManyHeadersInForwardedValues\":\n        case \"com.amazonaws.cloudfront#TooManyHeadersInForwardedValues\":\n            throw await de_TooManyHeadersInForwardedValuesRes(parsedOutput, context);\n        case \"TooManyKeyGroupsAssociatedToDistribution\":\n        case \"com.amazonaws.cloudfront#TooManyKeyGroupsAssociatedToDistribution\":\n            throw await de_TooManyKeyGroupsAssociatedToDistributionRes(parsedOutput, context);\n        case \"TooManyLambdaFunctionAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyLambdaFunctionAssociations\":\n            throw await de_TooManyLambdaFunctionAssociationsRes(parsedOutput, context);\n        case \"TooManyOriginCustomHeaders\":\n        case \"com.amazonaws.cloudfront#TooManyOriginCustomHeaders\":\n            throw await de_TooManyOriginCustomHeadersRes(parsedOutput, context);\n        case \"TooManyOriginGroupsPerDistribution\":\n        case \"com.amazonaws.cloudfront#TooManyOriginGroupsPerDistribution\":\n            throw await de_TooManyOriginGroupsPerDistributionRes(parsedOutput, context);\n        case \"TooManyOrigins\":\n        case \"com.amazonaws.cloudfront#TooManyOrigins\":\n            throw await de_TooManyOriginsRes(parsedOutput, context);\n        case \"TooManyQueryStringParameters\":\n        case \"com.amazonaws.cloudfront#TooManyQueryStringParameters\":\n            throw await de_TooManyQueryStringParametersRes(parsedOutput, context);\n        case \"TooManyTrustedSigners\":\n        case \"com.amazonaws.cloudfront#TooManyTrustedSigners\":\n            throw await de_TooManyTrustedSignersRes(parsedOutput, context);\n        case \"TrustedKeyGroupDoesNotExist\":\n        case \"com.amazonaws.cloudfront#TrustedKeyGroupDoesNotExist\":\n            throw await de_TrustedKeyGroupDoesNotExistRes(parsedOutput, context);\n        case \"TrustedSignerDoesNotExist\":\n        case \"com.amazonaws.cloudfront#TrustedSignerDoesNotExist\":\n            throw await de_TrustedSignerDoesNotExistRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_CreateDistributionWithTagsCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CreateDistributionWithTagsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.Distribution = de_Distribution(data, context);\n    return contents;\n};\nexports.de_CreateDistributionWithTagsCommand = de_CreateDistributionWithTagsCommand;\nconst de_CreateDistributionWithTagsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"CNAMEAlreadyExists\":\n        case \"com.amazonaws.cloudfront#CNAMEAlreadyExists\":\n            throw await de_CNAMEAlreadyExistsRes(parsedOutput, context);\n        case \"ContinuousDeploymentPolicyInUse\":\n        case \"com.amazonaws.cloudfront#ContinuousDeploymentPolicyInUse\":\n            throw await de_ContinuousDeploymentPolicyInUseRes(parsedOutput, context);\n        case \"DistributionAlreadyExists\":\n        case \"com.amazonaws.cloudfront#DistributionAlreadyExists\":\n            throw await de_DistributionAlreadyExistsRes(parsedOutput, context);\n        case \"IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior\":\n        case \"com.amazonaws.cloudfront#IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior\":\n            throw await de_IllegalFieldLevelEncryptionConfigAssociationWithCacheBehaviorRes(parsedOutput, context);\n        case \"IllegalOriginAccessConfiguration\":\n        case \"com.amazonaws.cloudfront#IllegalOriginAccessConfiguration\":\n            throw await de_IllegalOriginAccessConfigurationRes(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await de_InconsistentQuantitiesRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidDefaultRootObject\":\n        case \"com.amazonaws.cloudfront#InvalidDefaultRootObject\":\n            throw await de_InvalidDefaultRootObjectRes(parsedOutput, context);\n        case \"InvalidDomainNameForOriginAccessControl\":\n        case \"com.amazonaws.cloudfront#InvalidDomainNameForOriginAccessControl\":\n            throw await de_InvalidDomainNameForOriginAccessControlRes(parsedOutput, context);\n        case \"InvalidErrorCode\":\n        case \"com.amazonaws.cloudfront#InvalidErrorCode\":\n            throw await de_InvalidErrorCodeRes(parsedOutput, context);\n        case \"InvalidForwardCookies\":\n        case \"com.amazonaws.cloudfront#InvalidForwardCookies\":\n            throw await de_InvalidForwardCookiesRes(parsedOutput, context);\n        case \"InvalidFunctionAssociation\":\n        case \"com.amazonaws.cloudfront#InvalidFunctionAssociation\":\n            throw await de_InvalidFunctionAssociationRes(parsedOutput, context);\n        case \"InvalidGeoRestrictionParameter\":\n        case \"com.amazonaws.cloudfront#InvalidGeoRestrictionParameter\":\n            throw await de_InvalidGeoRestrictionParameterRes(parsedOutput, context);\n        case \"InvalidHeadersForS3Origin\":\n        case \"com.amazonaws.cloudfront#InvalidHeadersForS3Origin\":\n            throw await de_InvalidHeadersForS3OriginRes(parsedOutput, context);\n        case \"InvalidLambdaFunctionAssociation\":\n        case \"com.amazonaws.cloudfront#InvalidLambdaFunctionAssociation\":\n            throw await de_InvalidLambdaFunctionAssociationRes(parsedOutput, context);\n        case \"InvalidLocationCode\":\n        case \"com.amazonaws.cloudfront#InvalidLocationCode\":\n            throw await de_InvalidLocationCodeRes(parsedOutput, context);\n        case \"InvalidMinimumProtocolVersion\":\n        case \"com.amazonaws.cloudfront#InvalidMinimumProtocolVersion\":\n            throw await de_InvalidMinimumProtocolVersionRes(parsedOutput, context);\n        case \"InvalidOrigin\":\n        case \"com.amazonaws.cloudfront#InvalidOrigin\":\n            throw await de_InvalidOriginRes(parsedOutput, context);\n        case \"InvalidOriginAccessControl\":\n        case \"com.amazonaws.cloudfront#InvalidOriginAccessControl\":\n            throw await de_InvalidOriginAccessControlRes(parsedOutput, context);\n        case \"InvalidOriginAccessIdentity\":\n        case \"com.amazonaws.cloudfront#InvalidOriginAccessIdentity\":\n            throw await de_InvalidOriginAccessIdentityRes(parsedOutput, context);\n        case \"InvalidOriginKeepaliveTimeout\":\n        case \"com.amazonaws.cloudfront#InvalidOriginKeepaliveTimeout\":\n            throw await de_InvalidOriginKeepaliveTimeoutRes(parsedOutput, context);\n        case \"InvalidOriginReadTimeout\":\n        case \"com.amazonaws.cloudfront#InvalidOriginReadTimeout\":\n            throw await de_InvalidOriginReadTimeoutRes(parsedOutput, context);\n        case \"InvalidProtocolSettings\":\n        case \"com.amazonaws.cloudfront#InvalidProtocolSettings\":\n            throw await de_InvalidProtocolSettingsRes(parsedOutput, context);\n        case \"InvalidQueryStringParameters\":\n        case \"com.amazonaws.cloudfront#InvalidQueryStringParameters\":\n            throw await de_InvalidQueryStringParametersRes(parsedOutput, context);\n        case \"InvalidRelativePath\":\n        case \"com.amazonaws.cloudfront#InvalidRelativePath\":\n            throw await de_InvalidRelativePathRes(parsedOutput, context);\n        case \"InvalidRequiredProtocol\":\n        case \"com.amazonaws.cloudfront#InvalidRequiredProtocol\":\n            throw await de_InvalidRequiredProtocolRes(parsedOutput, context);\n        case \"InvalidResponseCode\":\n        case \"com.amazonaws.cloudfront#InvalidResponseCode\":\n            throw await de_InvalidResponseCodeRes(parsedOutput, context);\n        case \"InvalidTTLOrder\":\n        case \"com.amazonaws.cloudfront#InvalidTTLOrder\":\n            throw await de_InvalidTTLOrderRes(parsedOutput, context);\n        case \"InvalidTagging\":\n        case \"com.amazonaws.cloudfront#InvalidTagging\":\n            throw await de_InvalidTaggingRes(parsedOutput, context);\n        case \"InvalidViewerCertificate\":\n        case \"com.amazonaws.cloudfront#InvalidViewerCertificate\":\n            throw await de_InvalidViewerCertificateRes(parsedOutput, context);\n        case \"InvalidWebACLId\":\n        case \"com.amazonaws.cloudfront#InvalidWebACLId\":\n            throw await de_InvalidWebACLIdRes(parsedOutput, context);\n        case \"MissingBody\":\n        case \"com.amazonaws.cloudfront#MissingBody\":\n            throw await de_MissingBodyRes(parsedOutput, context);\n        case \"NoSuchCachePolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchCachePolicy\":\n            throw await de_NoSuchCachePolicyRes(parsedOutput, context);\n        case \"NoSuchContinuousDeploymentPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchContinuousDeploymentPolicy\":\n            throw await de_NoSuchContinuousDeploymentPolicyRes(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionConfig\":\n            throw await de_NoSuchFieldLevelEncryptionConfigRes(parsedOutput, context);\n        case \"NoSuchOrigin\":\n        case \"com.amazonaws.cloudfront#NoSuchOrigin\":\n            throw await de_NoSuchOriginRes(parsedOutput, context);\n        case \"NoSuchOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchOriginRequestPolicy\":\n            throw await de_NoSuchOriginRequestPolicyRes(parsedOutput, context);\n        case \"NoSuchRealtimeLogConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchRealtimeLogConfig\":\n            throw await de_NoSuchRealtimeLogConfigRes(parsedOutput, context);\n        case \"NoSuchResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchResponseHeadersPolicy\":\n            throw await de_NoSuchResponseHeadersPolicyRes(parsedOutput, context);\n        case \"RealtimeLogConfigOwnerMismatch\":\n        case \"com.amazonaws.cloudfront#RealtimeLogConfigOwnerMismatch\":\n            throw await de_RealtimeLogConfigOwnerMismatchRes(parsedOutput, context);\n        case \"TooManyCacheBehaviors\":\n        case \"com.amazonaws.cloudfront#TooManyCacheBehaviors\":\n            throw await de_TooManyCacheBehaviorsRes(parsedOutput, context);\n        case \"TooManyCertificates\":\n        case \"com.amazonaws.cloudfront#TooManyCertificates\":\n            throw await de_TooManyCertificatesRes(parsedOutput, context);\n        case \"TooManyCookieNamesInWhiteList\":\n        case \"com.amazonaws.cloudfront#TooManyCookieNamesInWhiteList\":\n            throw await de_TooManyCookieNamesInWhiteListRes(parsedOutput, context);\n        case \"TooManyDistributionCNAMEs\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionCNAMEs\":\n            throw await de_TooManyDistributionCNAMEsRes(parsedOutput, context);\n        case \"TooManyDistributions\":\n        case \"com.amazonaws.cloudfront#TooManyDistributions\":\n            throw await de_TooManyDistributionsRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToCachePolicy\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToCachePolicy\":\n            throw await de_TooManyDistributionsAssociatedToCachePolicyRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToFieldLevelEncryptionConfig\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToFieldLevelEncryptionConfig\":\n            throw await de_TooManyDistributionsAssociatedToFieldLevelEncryptionConfigRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToKeyGroup\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToKeyGroup\":\n            throw await de_TooManyDistributionsAssociatedToKeyGroupRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToOriginAccessControl\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToOriginAccessControl\":\n            throw await de_TooManyDistributionsAssociatedToOriginAccessControlRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToOriginRequestPolicy\":\n            throw await de_TooManyDistributionsAssociatedToOriginRequestPolicyRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToResponseHeadersPolicy\":\n            throw await de_TooManyDistributionsAssociatedToResponseHeadersPolicyRes(parsedOutput, context);\n        case \"TooManyDistributionsWithFunctionAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsWithFunctionAssociations\":\n            throw await de_TooManyDistributionsWithFunctionAssociationsRes(parsedOutput, context);\n        case \"TooManyDistributionsWithLambdaAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsWithLambdaAssociations\":\n            throw await de_TooManyDistributionsWithLambdaAssociationsRes(parsedOutput, context);\n        case \"TooManyDistributionsWithSingleFunctionARN\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsWithSingleFunctionARN\":\n            throw await de_TooManyDistributionsWithSingleFunctionARNRes(parsedOutput, context);\n        case \"TooManyFunctionAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyFunctionAssociations\":\n            throw await de_TooManyFunctionAssociationsRes(parsedOutput, context);\n        case \"TooManyHeadersInForwardedValues\":\n        case \"com.amazonaws.cloudfront#TooManyHeadersInForwardedValues\":\n            throw await de_TooManyHeadersInForwardedValuesRes(parsedOutput, context);\n        case \"TooManyKeyGroupsAssociatedToDistribution\":\n        case \"com.amazonaws.cloudfront#TooManyKeyGroupsAssociatedToDistribution\":\n            throw await de_TooManyKeyGroupsAssociatedToDistributionRes(parsedOutput, context);\n        case \"TooManyLambdaFunctionAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyLambdaFunctionAssociations\":\n            throw await de_TooManyLambdaFunctionAssociationsRes(parsedOutput, context);\n        case \"TooManyOriginCustomHeaders\":\n        case \"com.amazonaws.cloudfront#TooManyOriginCustomHeaders\":\n            throw await de_TooManyOriginCustomHeadersRes(parsedOutput, context);\n        case \"TooManyOriginGroupsPerDistribution\":\n        case \"com.amazonaws.cloudfront#TooManyOriginGroupsPerDistribution\":\n            throw await de_TooManyOriginGroupsPerDistributionRes(parsedOutput, context);\n        case \"TooManyOrigins\":\n        case \"com.amazonaws.cloudfront#TooManyOrigins\":\n            throw await de_TooManyOriginsRes(parsedOutput, context);\n        case \"TooManyQueryStringParameters\":\n        case \"com.amazonaws.cloudfront#TooManyQueryStringParameters\":\n            throw await de_TooManyQueryStringParametersRes(parsedOutput, context);\n        case \"TooManyTrustedSigners\":\n        case \"com.amazonaws.cloudfront#TooManyTrustedSigners\":\n            throw await de_TooManyTrustedSignersRes(parsedOutput, context);\n        case \"TrustedKeyGroupDoesNotExist\":\n        case \"com.amazonaws.cloudfront#TrustedKeyGroupDoesNotExist\":\n            throw await de_TrustedKeyGroupDoesNotExistRes(parsedOutput, context);\n        case \"TrustedSignerDoesNotExist\":\n        case \"com.amazonaws.cloudfront#TrustedSignerDoesNotExist\":\n            throw await de_TrustedSignerDoesNotExistRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_CreateFieldLevelEncryptionConfigCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CreateFieldLevelEncryptionConfigCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FieldLevelEncryption = de_FieldLevelEncryption(data, context);\n    return contents;\n};\nexports.de_CreateFieldLevelEncryptionConfigCommand = de_CreateFieldLevelEncryptionConfigCommand;\nconst de_CreateFieldLevelEncryptionConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"FieldLevelEncryptionConfigAlreadyExists\":\n        case \"com.amazonaws.cloudfront#FieldLevelEncryptionConfigAlreadyExists\":\n            throw await de_FieldLevelEncryptionConfigAlreadyExistsRes(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await de_InconsistentQuantitiesRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionProfile\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionProfile\":\n            throw await de_NoSuchFieldLevelEncryptionProfileRes(parsedOutput, context);\n        case \"QueryArgProfileEmpty\":\n        case \"com.amazonaws.cloudfront#QueryArgProfileEmpty\":\n            throw await de_QueryArgProfileEmptyRes(parsedOutput, context);\n        case \"TooManyFieldLevelEncryptionConfigs\":\n        case \"com.amazonaws.cloudfront#TooManyFieldLevelEncryptionConfigs\":\n            throw await de_TooManyFieldLevelEncryptionConfigsRes(parsedOutput, context);\n        case \"TooManyFieldLevelEncryptionContentTypeProfiles\":\n        case \"com.amazonaws.cloudfront#TooManyFieldLevelEncryptionContentTypeProfiles\":\n            throw await de_TooManyFieldLevelEncryptionContentTypeProfilesRes(parsedOutput, context);\n        case \"TooManyFieldLevelEncryptionQueryArgProfiles\":\n        case \"com.amazonaws.cloudfront#TooManyFieldLevelEncryptionQueryArgProfiles\":\n            throw await de_TooManyFieldLevelEncryptionQueryArgProfilesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_CreateFieldLevelEncryptionProfileCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CreateFieldLevelEncryptionProfileCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FieldLevelEncryptionProfile = de_FieldLevelEncryptionProfile(data, context);\n    return contents;\n};\nexports.de_CreateFieldLevelEncryptionProfileCommand = de_CreateFieldLevelEncryptionProfileCommand;\nconst de_CreateFieldLevelEncryptionProfileCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"FieldLevelEncryptionProfileAlreadyExists\":\n        case \"com.amazonaws.cloudfront#FieldLevelEncryptionProfileAlreadyExists\":\n            throw await de_FieldLevelEncryptionProfileAlreadyExistsRes(parsedOutput, context);\n        case \"FieldLevelEncryptionProfileSizeExceeded\":\n        case \"com.amazonaws.cloudfront#FieldLevelEncryptionProfileSizeExceeded\":\n            throw await de_FieldLevelEncryptionProfileSizeExceededRes(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await de_InconsistentQuantitiesRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"NoSuchPublicKey\":\n        case \"com.amazonaws.cloudfront#NoSuchPublicKey\":\n            throw await de_NoSuchPublicKeyRes(parsedOutput, context);\n        case \"TooManyFieldLevelEncryptionEncryptionEntities\":\n        case \"com.amazonaws.cloudfront#TooManyFieldLevelEncryptionEncryptionEntities\":\n            throw await de_TooManyFieldLevelEncryptionEncryptionEntitiesRes(parsedOutput, context);\n        case \"TooManyFieldLevelEncryptionFieldPatterns\":\n        case \"com.amazonaws.cloudfront#TooManyFieldLevelEncryptionFieldPatterns\":\n            throw await de_TooManyFieldLevelEncryptionFieldPatternsRes(parsedOutput, context);\n        case \"TooManyFieldLevelEncryptionProfiles\":\n        case \"com.amazonaws.cloudfront#TooManyFieldLevelEncryptionProfiles\":\n            throw await de_TooManyFieldLevelEncryptionProfilesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_CreateFunctionCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CreateFunctionCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FunctionSummary = de_FunctionSummary(data, context);\n    return contents;\n};\nexports.de_CreateFunctionCommand = de_CreateFunctionCommand;\nconst de_CreateFunctionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"FunctionAlreadyExists\":\n        case \"com.amazonaws.cloudfront#FunctionAlreadyExists\":\n            throw await de_FunctionAlreadyExistsRes(parsedOutput, context);\n        case \"FunctionSizeLimitExceeded\":\n        case \"com.amazonaws.cloudfront#FunctionSizeLimitExceeded\":\n            throw await de_FunctionSizeLimitExceededRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"TooManyFunctions\":\n        case \"com.amazonaws.cloudfront#TooManyFunctions\":\n            throw await de_TooManyFunctionsRes(parsedOutput, context);\n        case \"UnsupportedOperation\":\n        case \"com.amazonaws.cloudfront#UnsupportedOperation\":\n            throw await de_UnsupportedOperationRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_CreateInvalidationCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CreateInvalidationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.Invalidation = de_Invalidation(data, context);\n    return contents;\n};\nexports.de_CreateInvalidationCommand = de_CreateInvalidationCommand;\nconst de_CreateInvalidationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"BatchTooLarge\":\n        case \"com.amazonaws.cloudfront#BatchTooLarge\":\n            throw await de_BatchTooLargeRes(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await de_InconsistentQuantitiesRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"MissingBody\":\n        case \"com.amazonaws.cloudfront#MissingBody\":\n            throw await de_MissingBodyRes(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await de_NoSuchDistributionRes(parsedOutput, context);\n        case \"TooManyInvalidationsInProgress\":\n        case \"com.amazonaws.cloudfront#TooManyInvalidationsInProgress\":\n            throw await de_TooManyInvalidationsInProgressRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_CreateKeyGroupCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CreateKeyGroupCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.KeyGroup = de_KeyGroup(data, context);\n    return contents;\n};\nexports.de_CreateKeyGroupCommand = de_CreateKeyGroupCommand;\nconst de_CreateKeyGroupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"KeyGroupAlreadyExists\":\n        case \"com.amazonaws.cloudfront#KeyGroupAlreadyExists\":\n            throw await de_KeyGroupAlreadyExistsRes(parsedOutput, context);\n        case \"TooManyKeyGroups\":\n        case \"com.amazonaws.cloudfront#TooManyKeyGroups\":\n            throw await de_TooManyKeyGroupsRes(parsedOutput, context);\n        case \"TooManyPublicKeysInKeyGroup\":\n        case \"com.amazonaws.cloudfront#TooManyPublicKeysInKeyGroup\":\n            throw await de_TooManyPublicKeysInKeyGroupRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_CreateMonitoringSubscriptionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CreateMonitoringSubscriptionCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.MonitoringSubscription = de_MonitoringSubscription(data, context);\n    return contents;\n};\nexports.de_CreateMonitoringSubscriptionCommand = de_CreateMonitoringSubscriptionCommand;\nconst de_CreateMonitoringSubscriptionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"MonitoringSubscriptionAlreadyExists\":\n        case \"com.amazonaws.cloudfront#MonitoringSubscriptionAlreadyExists\":\n            throw await de_MonitoringSubscriptionAlreadyExistsRes(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await de_NoSuchDistributionRes(parsedOutput, context);\n        case \"UnsupportedOperation\":\n        case \"com.amazonaws.cloudfront#UnsupportedOperation\":\n            throw await de_UnsupportedOperationRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_CreateOriginAccessControlCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CreateOriginAccessControlCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.OriginAccessControl = de_OriginAccessControl(data, context);\n    return contents;\n};\nexports.de_CreateOriginAccessControlCommand = de_CreateOriginAccessControlCommand;\nconst de_CreateOriginAccessControlCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"OriginAccessControlAlreadyExists\":\n        case \"com.amazonaws.cloudfront#OriginAccessControlAlreadyExists\":\n            throw await de_OriginAccessControlAlreadyExistsRes(parsedOutput, context);\n        case \"TooManyOriginAccessControls\":\n        case \"com.amazonaws.cloudfront#TooManyOriginAccessControls\":\n            throw await de_TooManyOriginAccessControlsRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_CreateOriginRequestPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CreateOriginRequestPolicyCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.OriginRequestPolicy = de_OriginRequestPolicy(data, context);\n    return contents;\n};\nexports.de_CreateOriginRequestPolicyCommand = de_CreateOriginRequestPolicyCommand;\nconst de_CreateOriginRequestPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await de_InconsistentQuantitiesRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"OriginRequestPolicyAlreadyExists\":\n        case \"com.amazonaws.cloudfront#OriginRequestPolicyAlreadyExists\":\n            throw await de_OriginRequestPolicyAlreadyExistsRes(parsedOutput, context);\n        case \"TooManyCookiesInOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyCookiesInOriginRequestPolicy\":\n            throw await de_TooManyCookiesInOriginRequestPolicyRes(parsedOutput, context);\n        case \"TooManyHeadersInOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyHeadersInOriginRequestPolicy\":\n            throw await de_TooManyHeadersInOriginRequestPolicyRes(parsedOutput, context);\n        case \"TooManyOriginRequestPolicies\":\n        case \"com.amazonaws.cloudfront#TooManyOriginRequestPolicies\":\n            throw await de_TooManyOriginRequestPoliciesRes(parsedOutput, context);\n        case \"TooManyQueryStringsInOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyQueryStringsInOriginRequestPolicy\":\n            throw await de_TooManyQueryStringsInOriginRequestPolicyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_CreatePublicKeyCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CreatePublicKeyCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.PublicKey = de_PublicKey(data, context);\n    return contents;\n};\nexports.de_CreatePublicKeyCommand = de_CreatePublicKeyCommand;\nconst de_CreatePublicKeyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"PublicKeyAlreadyExists\":\n        case \"com.amazonaws.cloudfront#PublicKeyAlreadyExists\":\n            throw await de_PublicKeyAlreadyExistsRes(parsedOutput, context);\n        case \"TooManyPublicKeys\":\n        case \"com.amazonaws.cloudfront#TooManyPublicKeys\":\n            throw await de_TooManyPublicKeysRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_CreateRealtimeLogConfigCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CreateRealtimeLogConfigCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data[\"RealtimeLogConfig\"] !== undefined) {\n        contents.RealtimeLogConfig = de_RealtimeLogConfig(data[\"RealtimeLogConfig\"], context);\n    }\n    return contents;\n};\nexports.de_CreateRealtimeLogConfigCommand = de_CreateRealtimeLogConfigCommand;\nconst de_CreateRealtimeLogConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"RealtimeLogConfigAlreadyExists\":\n        case \"com.amazonaws.cloudfront#RealtimeLogConfigAlreadyExists\":\n            throw await de_RealtimeLogConfigAlreadyExistsRes(parsedOutput, context);\n        case \"TooManyRealtimeLogConfigs\":\n        case \"com.amazonaws.cloudfront#TooManyRealtimeLogConfigs\":\n            throw await de_TooManyRealtimeLogConfigsRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_CreateResponseHeadersPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CreateResponseHeadersPolicyCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.ResponseHeadersPolicy = de_ResponseHeadersPolicy(data, context);\n    return contents;\n};\nexports.de_CreateResponseHeadersPolicyCommand = de_CreateResponseHeadersPolicyCommand;\nconst de_CreateResponseHeadersPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await de_InconsistentQuantitiesRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"ResponseHeadersPolicyAlreadyExists\":\n        case \"com.amazonaws.cloudfront#ResponseHeadersPolicyAlreadyExists\":\n            throw await de_ResponseHeadersPolicyAlreadyExistsRes(parsedOutput, context);\n        case \"TooLongCSPInResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#TooLongCSPInResponseHeadersPolicy\":\n            throw await de_TooLongCSPInResponseHeadersPolicyRes(parsedOutput, context);\n        case \"TooManyCustomHeadersInResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyCustomHeadersInResponseHeadersPolicy\":\n            throw await de_TooManyCustomHeadersInResponseHeadersPolicyRes(parsedOutput, context);\n        case \"TooManyRemoveHeadersInResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyRemoveHeadersInResponseHeadersPolicy\":\n            throw await de_TooManyRemoveHeadersInResponseHeadersPolicyRes(parsedOutput, context);\n        case \"TooManyResponseHeadersPolicies\":\n        case \"com.amazonaws.cloudfront#TooManyResponseHeadersPolicies\":\n            throw await de_TooManyResponseHeadersPoliciesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_CreateStreamingDistributionCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CreateStreamingDistributionCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.StreamingDistribution = de_StreamingDistribution(data, context);\n    return contents;\n};\nexports.de_CreateStreamingDistributionCommand = de_CreateStreamingDistributionCommand;\nconst de_CreateStreamingDistributionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"CNAMEAlreadyExists\":\n        case \"com.amazonaws.cloudfront#CNAMEAlreadyExists\":\n            throw await de_CNAMEAlreadyExistsRes(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await de_InconsistentQuantitiesRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidOrigin\":\n        case \"com.amazonaws.cloudfront#InvalidOrigin\":\n            throw await de_InvalidOriginRes(parsedOutput, context);\n        case \"InvalidOriginAccessControl\":\n        case \"com.amazonaws.cloudfront#InvalidOriginAccessControl\":\n            throw await de_InvalidOriginAccessControlRes(parsedOutput, context);\n        case \"InvalidOriginAccessIdentity\":\n        case \"com.amazonaws.cloudfront#InvalidOriginAccessIdentity\":\n            throw await de_InvalidOriginAccessIdentityRes(parsedOutput, context);\n        case \"MissingBody\":\n        case \"com.amazonaws.cloudfront#MissingBody\":\n            throw await de_MissingBodyRes(parsedOutput, context);\n        case \"StreamingDistributionAlreadyExists\":\n        case \"com.amazonaws.cloudfront#StreamingDistributionAlreadyExists\":\n            throw await de_StreamingDistributionAlreadyExistsRes(parsedOutput, context);\n        case \"TooManyStreamingDistributionCNAMEs\":\n        case \"com.amazonaws.cloudfront#TooManyStreamingDistributionCNAMEs\":\n            throw await de_TooManyStreamingDistributionCNAMEsRes(parsedOutput, context);\n        case \"TooManyStreamingDistributions\":\n        case \"com.amazonaws.cloudfront#TooManyStreamingDistributions\":\n            throw await de_TooManyStreamingDistributionsRes(parsedOutput, context);\n        case \"TooManyTrustedSigners\":\n        case \"com.amazonaws.cloudfront#TooManyTrustedSigners\":\n            throw await de_TooManyTrustedSignersRes(parsedOutput, context);\n        case \"TrustedSignerDoesNotExist\":\n        case \"com.amazonaws.cloudfront#TrustedSignerDoesNotExist\":\n            throw await de_TrustedSignerDoesNotExistRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_CreateStreamingDistributionWithTagsCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return de_CreateStreamingDistributionWithTagsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.StreamingDistribution = de_StreamingDistribution(data, context);\n    return contents;\n};\nexports.de_CreateStreamingDistributionWithTagsCommand = de_CreateStreamingDistributionWithTagsCommand;\nconst de_CreateStreamingDistributionWithTagsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"CNAMEAlreadyExists\":\n        case \"com.amazonaws.cloudfront#CNAMEAlreadyExists\":\n            throw await de_CNAMEAlreadyExistsRes(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await de_InconsistentQuantitiesRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidOrigin\":\n        case \"com.amazonaws.cloudfront#InvalidOrigin\":\n            throw await de_InvalidOriginRes(parsedOutput, context);\n        case \"InvalidOriginAccessControl\":\n        case \"com.amazonaws.cloudfront#InvalidOriginAccessControl\":\n            throw await de_InvalidOriginAccessControlRes(parsedOutput, context);\n        case \"InvalidOriginAccessIdentity\":\n        case \"com.amazonaws.cloudfront#InvalidOriginAccessIdentity\":\n            throw await de_InvalidOriginAccessIdentityRes(parsedOutput, context);\n        case \"InvalidTagging\":\n        case \"com.amazonaws.cloudfront#InvalidTagging\":\n            throw await de_InvalidTaggingRes(parsedOutput, context);\n        case \"MissingBody\":\n        case \"com.amazonaws.cloudfront#MissingBody\":\n            throw await de_MissingBodyRes(parsedOutput, context);\n        case \"StreamingDistributionAlreadyExists\":\n        case \"com.amazonaws.cloudfront#StreamingDistributionAlreadyExists\":\n            throw await de_StreamingDistributionAlreadyExistsRes(parsedOutput, context);\n        case \"TooManyStreamingDistributionCNAMEs\":\n        case \"com.amazonaws.cloudfront#TooManyStreamingDistributionCNAMEs\":\n            throw await de_TooManyStreamingDistributionCNAMEsRes(parsedOutput, context);\n        case \"TooManyStreamingDistributions\":\n        case \"com.amazonaws.cloudfront#TooManyStreamingDistributions\":\n            throw await de_TooManyStreamingDistributionsRes(parsedOutput, context);\n        case \"TooManyTrustedSigners\":\n        case \"com.amazonaws.cloudfront#TooManyTrustedSigners\":\n            throw await de_TooManyTrustedSignersRes(parsedOutput, context);\n        case \"TrustedSignerDoesNotExist\":\n        case \"com.amazonaws.cloudfront#TrustedSignerDoesNotExist\":\n            throw await de_TrustedSignerDoesNotExistRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_DeleteCachePolicyCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteCachePolicyCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteCachePolicyCommand = de_DeleteCachePolicyCommand;\nconst de_DeleteCachePolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"CachePolicyInUse\":\n        case \"com.amazonaws.cloudfront#CachePolicyInUse\":\n            throw await de_CachePolicyInUseRes(parsedOutput, context);\n        case \"IllegalDelete\":\n        case \"com.amazonaws.cloudfront#IllegalDelete\":\n            throw await de_IllegalDeleteRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"NoSuchCachePolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchCachePolicy\":\n            throw await de_NoSuchCachePolicyRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_DeleteCloudFrontOriginAccessIdentityCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteCloudFrontOriginAccessIdentityCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteCloudFrontOriginAccessIdentityCommand = de_DeleteCloudFrontOriginAccessIdentityCommand;\nconst de_DeleteCloudFrontOriginAccessIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"CloudFrontOriginAccessIdentityInUse\":\n        case \"com.amazonaws.cloudfront#CloudFrontOriginAccessIdentityInUse\":\n            throw await de_CloudFrontOriginAccessIdentityInUseRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"NoSuchCloudFrontOriginAccessIdentity\":\n        case \"com.amazonaws.cloudfront#NoSuchCloudFrontOriginAccessIdentity\":\n            throw await de_NoSuchCloudFrontOriginAccessIdentityRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_DeleteContinuousDeploymentPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteContinuousDeploymentPolicyCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteContinuousDeploymentPolicyCommand = de_DeleteContinuousDeploymentPolicyCommand;\nconst de_DeleteContinuousDeploymentPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"ContinuousDeploymentPolicyInUse\":\n        case \"com.amazonaws.cloudfront#ContinuousDeploymentPolicyInUse\":\n            throw await de_ContinuousDeploymentPolicyInUseRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"NoSuchContinuousDeploymentPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchContinuousDeploymentPolicy\":\n            throw await de_NoSuchContinuousDeploymentPolicyRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_DeleteDistributionCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteDistributionCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteDistributionCommand = de_DeleteDistributionCommand;\nconst de_DeleteDistributionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"DistributionNotDisabled\":\n        case \"com.amazonaws.cloudfront#DistributionNotDisabled\":\n            throw await de_DistributionNotDisabledRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await de_NoSuchDistributionRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_DeleteFieldLevelEncryptionConfigCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteFieldLevelEncryptionConfigCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteFieldLevelEncryptionConfigCommand = de_DeleteFieldLevelEncryptionConfigCommand;\nconst de_DeleteFieldLevelEncryptionConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"FieldLevelEncryptionConfigInUse\":\n        case \"com.amazonaws.cloudfront#FieldLevelEncryptionConfigInUse\":\n            throw await de_FieldLevelEncryptionConfigInUseRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionConfig\":\n            throw await de_NoSuchFieldLevelEncryptionConfigRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_DeleteFieldLevelEncryptionProfileCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteFieldLevelEncryptionProfileCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteFieldLevelEncryptionProfileCommand = de_DeleteFieldLevelEncryptionProfileCommand;\nconst de_DeleteFieldLevelEncryptionProfileCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"FieldLevelEncryptionProfileInUse\":\n        case \"com.amazonaws.cloudfront#FieldLevelEncryptionProfileInUse\":\n            throw await de_FieldLevelEncryptionProfileInUseRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionProfile\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionProfile\":\n            throw await de_NoSuchFieldLevelEncryptionProfileRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_DeleteFunctionCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteFunctionCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteFunctionCommand = de_DeleteFunctionCommand;\nconst de_DeleteFunctionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"FunctionInUse\":\n        case \"com.amazonaws.cloudfront#FunctionInUse\":\n            throw await de_FunctionInUseRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"NoSuchFunctionExists\":\n        case \"com.amazonaws.cloudfront#NoSuchFunctionExists\":\n            throw await de_NoSuchFunctionExistsRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        case \"UnsupportedOperation\":\n        case \"com.amazonaws.cloudfront#UnsupportedOperation\":\n            throw await de_UnsupportedOperationRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_DeleteKeyGroupCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteKeyGroupCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteKeyGroupCommand = de_DeleteKeyGroupCommand;\nconst de_DeleteKeyGroupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"NoSuchResource\":\n        case \"com.amazonaws.cloudfront#NoSuchResource\":\n            throw await de_NoSuchResourceRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        case \"ResourceInUse\":\n        case \"com.amazonaws.cloudfront#ResourceInUse\":\n            throw await de_ResourceInUseRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_DeleteMonitoringSubscriptionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_DeleteMonitoringSubscriptionCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteMonitoringSubscriptionCommand = de_DeleteMonitoringSubscriptionCommand;\nconst de_DeleteMonitoringSubscriptionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await de_NoSuchDistributionRes(parsedOutput, context);\n        case \"NoSuchMonitoringSubscription\":\n        case \"com.amazonaws.cloudfront#NoSuchMonitoringSubscription\":\n            throw await de_NoSuchMonitoringSubscriptionRes(parsedOutput, context);\n        case \"UnsupportedOperation\":\n        case \"com.amazonaws.cloudfront#UnsupportedOperation\":\n            throw await de_UnsupportedOperationRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_DeleteOriginAccessControlCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteOriginAccessControlCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteOriginAccessControlCommand = de_DeleteOriginAccessControlCommand;\nconst de_DeleteOriginAccessControlCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"NoSuchOriginAccessControl\":\n        case \"com.amazonaws.cloudfront#NoSuchOriginAccessControl\":\n            throw await de_NoSuchOriginAccessControlRes(parsedOutput, context);\n        case \"OriginAccessControlInUse\":\n        case \"com.amazonaws.cloudfront#OriginAccessControlInUse\":\n            throw await de_OriginAccessControlInUseRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_DeleteOriginRequestPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteOriginRequestPolicyCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteOriginRequestPolicyCommand = de_DeleteOriginRequestPolicyCommand;\nconst de_DeleteOriginRequestPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"IllegalDelete\":\n        case \"com.amazonaws.cloudfront#IllegalDelete\":\n            throw await de_IllegalDeleteRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"NoSuchOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchOriginRequestPolicy\":\n            throw await de_NoSuchOriginRequestPolicyRes(parsedOutput, context);\n        case \"OriginRequestPolicyInUse\":\n        case \"com.amazonaws.cloudfront#OriginRequestPolicyInUse\":\n            throw await de_OriginRequestPolicyInUseRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_DeletePublicKeyCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeletePublicKeyCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeletePublicKeyCommand = de_DeletePublicKeyCommand;\nconst de_DeletePublicKeyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"NoSuchPublicKey\":\n        case \"com.amazonaws.cloudfront#NoSuchPublicKey\":\n            throw await de_NoSuchPublicKeyRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        case \"PublicKeyInUse\":\n        case \"com.amazonaws.cloudfront#PublicKeyInUse\":\n            throw await de_PublicKeyInUseRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_DeleteRealtimeLogConfigCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteRealtimeLogConfigCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteRealtimeLogConfigCommand = de_DeleteRealtimeLogConfigCommand;\nconst de_DeleteRealtimeLogConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"NoSuchRealtimeLogConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchRealtimeLogConfig\":\n            throw await de_NoSuchRealtimeLogConfigRes(parsedOutput, context);\n        case \"RealtimeLogConfigInUse\":\n        case \"com.amazonaws.cloudfront#RealtimeLogConfigInUse\":\n            throw await de_RealtimeLogConfigInUseRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_DeleteResponseHeadersPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteResponseHeadersPolicyCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteResponseHeadersPolicyCommand = de_DeleteResponseHeadersPolicyCommand;\nconst de_DeleteResponseHeadersPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"IllegalDelete\":\n        case \"com.amazonaws.cloudfront#IllegalDelete\":\n            throw await de_IllegalDeleteRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"NoSuchResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchResponseHeadersPolicy\":\n            throw await de_NoSuchResponseHeadersPolicyRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        case \"ResponseHeadersPolicyInUse\":\n        case \"com.amazonaws.cloudfront#ResponseHeadersPolicyInUse\":\n            throw await de_ResponseHeadersPolicyInUseRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_DeleteStreamingDistributionCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteStreamingDistributionCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteStreamingDistributionCommand = de_DeleteStreamingDistributionCommand;\nconst de_DeleteStreamingDistributionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"NoSuchStreamingDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchStreamingDistribution\":\n            throw await de_NoSuchStreamingDistributionRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        case \"StreamingDistributionNotDisabled\":\n        case \"com.amazonaws.cloudfront#StreamingDistributionNotDisabled\":\n            throw await de_StreamingDistributionNotDisabledRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_DescribeFunctionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_DescribeFunctionCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FunctionSummary = de_FunctionSummary(data, context);\n    return contents;\n};\nexports.de_DescribeFunctionCommand = de_DescribeFunctionCommand;\nconst de_DescribeFunctionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"NoSuchFunctionExists\":\n        case \"com.amazonaws.cloudfront#NoSuchFunctionExists\":\n            throw await de_NoSuchFunctionExistsRes(parsedOutput, context);\n        case \"UnsupportedOperation\":\n        case \"com.amazonaws.cloudfront#UnsupportedOperation\":\n            throw await de_UnsupportedOperationRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetCachePolicyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetCachePolicyCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.CachePolicy = de_CachePolicy(data, context);\n    return contents;\n};\nexports.de_GetCachePolicyCommand = de_GetCachePolicyCommand;\nconst de_GetCachePolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"NoSuchCachePolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchCachePolicy\":\n            throw await de_NoSuchCachePolicyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetCachePolicyConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetCachePolicyConfigCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.CachePolicyConfig = de_CachePolicyConfig(data, context);\n    return contents;\n};\nexports.de_GetCachePolicyConfigCommand = de_GetCachePolicyConfigCommand;\nconst de_GetCachePolicyConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"NoSuchCachePolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchCachePolicy\":\n            throw await de_NoSuchCachePolicyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetCloudFrontOriginAccessIdentityCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetCloudFrontOriginAccessIdentityCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.CloudFrontOriginAccessIdentity = de_CloudFrontOriginAccessIdentity(data, context);\n    return contents;\n};\nexports.de_GetCloudFrontOriginAccessIdentityCommand = de_GetCloudFrontOriginAccessIdentityCommand;\nconst de_GetCloudFrontOriginAccessIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"NoSuchCloudFrontOriginAccessIdentity\":\n        case \"com.amazonaws.cloudfront#NoSuchCloudFrontOriginAccessIdentity\":\n            throw await de_NoSuchCloudFrontOriginAccessIdentityRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetCloudFrontOriginAccessIdentityConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetCloudFrontOriginAccessIdentityConfigCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.CloudFrontOriginAccessIdentityConfig = de_CloudFrontOriginAccessIdentityConfig(data, context);\n    return contents;\n};\nexports.de_GetCloudFrontOriginAccessIdentityConfigCommand = de_GetCloudFrontOriginAccessIdentityConfigCommand;\nconst de_GetCloudFrontOriginAccessIdentityConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"NoSuchCloudFrontOriginAccessIdentity\":\n        case \"com.amazonaws.cloudfront#NoSuchCloudFrontOriginAccessIdentity\":\n            throw await de_NoSuchCloudFrontOriginAccessIdentityRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetContinuousDeploymentPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetContinuousDeploymentPolicyCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.ContinuousDeploymentPolicy = de_ContinuousDeploymentPolicy(data, context);\n    return contents;\n};\nexports.de_GetContinuousDeploymentPolicyCommand = de_GetContinuousDeploymentPolicyCommand;\nconst de_GetContinuousDeploymentPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"NoSuchContinuousDeploymentPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchContinuousDeploymentPolicy\":\n            throw await de_NoSuchContinuousDeploymentPolicyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetContinuousDeploymentPolicyConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetContinuousDeploymentPolicyConfigCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.ContinuousDeploymentPolicyConfig = de_ContinuousDeploymentPolicyConfig(data, context);\n    return contents;\n};\nexports.de_GetContinuousDeploymentPolicyConfigCommand = de_GetContinuousDeploymentPolicyConfigCommand;\nconst de_GetContinuousDeploymentPolicyConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"NoSuchContinuousDeploymentPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchContinuousDeploymentPolicy\":\n            throw await de_NoSuchContinuousDeploymentPolicyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetDistributionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetDistributionCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.Distribution = de_Distribution(data, context);\n    return contents;\n};\nexports.de_GetDistributionCommand = de_GetDistributionCommand;\nconst de_GetDistributionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await de_NoSuchDistributionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetDistributionConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetDistributionConfigCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.DistributionConfig = de_DistributionConfig(data, context);\n    return contents;\n};\nexports.de_GetDistributionConfigCommand = de_GetDistributionConfigCommand;\nconst de_GetDistributionConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await de_NoSuchDistributionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetFieldLevelEncryptionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetFieldLevelEncryptionCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FieldLevelEncryption = de_FieldLevelEncryption(data, context);\n    return contents;\n};\nexports.de_GetFieldLevelEncryptionCommand = de_GetFieldLevelEncryptionCommand;\nconst de_GetFieldLevelEncryptionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionConfig\":\n            throw await de_NoSuchFieldLevelEncryptionConfigRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetFieldLevelEncryptionConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetFieldLevelEncryptionConfigCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FieldLevelEncryptionConfig = de_FieldLevelEncryptionConfig(data, context);\n    return contents;\n};\nexports.de_GetFieldLevelEncryptionConfigCommand = de_GetFieldLevelEncryptionConfigCommand;\nconst de_GetFieldLevelEncryptionConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionConfig\":\n            throw await de_NoSuchFieldLevelEncryptionConfigRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetFieldLevelEncryptionProfileCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetFieldLevelEncryptionProfileCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FieldLevelEncryptionProfile = de_FieldLevelEncryptionProfile(data, context);\n    return contents;\n};\nexports.de_GetFieldLevelEncryptionProfileCommand = de_GetFieldLevelEncryptionProfileCommand;\nconst de_GetFieldLevelEncryptionProfileCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionProfile\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionProfile\":\n            throw await de_NoSuchFieldLevelEncryptionProfileRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetFieldLevelEncryptionProfileConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetFieldLevelEncryptionProfileConfigCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FieldLevelEncryptionProfileConfig = de_FieldLevelEncryptionProfileConfig(data, context);\n    return contents;\n};\nexports.de_GetFieldLevelEncryptionProfileConfigCommand = de_GetFieldLevelEncryptionProfileConfigCommand;\nconst de_GetFieldLevelEncryptionProfileConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionProfile\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionProfile\":\n            throw await de_NoSuchFieldLevelEncryptionProfileRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetFunctionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetFunctionCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n        ContentType: [, output.headers[\"content-type\"]],\n    });\n    const data = await (0, smithy_client_1.collectBody)(output.body, context);\n    contents.FunctionCode = data;\n    return contents;\n};\nexports.de_GetFunctionCommand = de_GetFunctionCommand;\nconst de_GetFunctionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"NoSuchFunctionExists\":\n        case \"com.amazonaws.cloudfront#NoSuchFunctionExists\":\n            throw await de_NoSuchFunctionExistsRes(parsedOutput, context);\n        case \"UnsupportedOperation\":\n        case \"com.amazonaws.cloudfront#UnsupportedOperation\":\n            throw await de_UnsupportedOperationRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetInvalidationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetInvalidationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.Invalidation = de_Invalidation(data, context);\n    return contents;\n};\nexports.de_GetInvalidationCommand = de_GetInvalidationCommand;\nconst de_GetInvalidationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await de_NoSuchDistributionRes(parsedOutput, context);\n        case \"NoSuchInvalidation\":\n        case \"com.amazonaws.cloudfront#NoSuchInvalidation\":\n            throw await de_NoSuchInvalidationRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetKeyGroupCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetKeyGroupCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.KeyGroup = de_KeyGroup(data, context);\n    return contents;\n};\nexports.de_GetKeyGroupCommand = de_GetKeyGroupCommand;\nconst de_GetKeyGroupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"NoSuchResource\":\n        case \"com.amazonaws.cloudfront#NoSuchResource\":\n            throw await de_NoSuchResourceRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetKeyGroupConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetKeyGroupConfigCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.KeyGroupConfig = de_KeyGroupConfig(data, context);\n    return contents;\n};\nexports.de_GetKeyGroupConfigCommand = de_GetKeyGroupConfigCommand;\nconst de_GetKeyGroupConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"NoSuchResource\":\n        case \"com.amazonaws.cloudfront#NoSuchResource\":\n            throw await de_NoSuchResourceRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetMonitoringSubscriptionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetMonitoringSubscriptionCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.MonitoringSubscription = de_MonitoringSubscription(data, context);\n    return contents;\n};\nexports.de_GetMonitoringSubscriptionCommand = de_GetMonitoringSubscriptionCommand;\nconst de_GetMonitoringSubscriptionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await de_NoSuchDistributionRes(parsedOutput, context);\n        case \"NoSuchMonitoringSubscription\":\n        case \"com.amazonaws.cloudfront#NoSuchMonitoringSubscription\":\n            throw await de_NoSuchMonitoringSubscriptionRes(parsedOutput, context);\n        case \"UnsupportedOperation\":\n        case \"com.amazonaws.cloudfront#UnsupportedOperation\":\n            throw await de_UnsupportedOperationRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetOriginAccessControlCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetOriginAccessControlCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.OriginAccessControl = de_OriginAccessControl(data, context);\n    return contents;\n};\nexports.de_GetOriginAccessControlCommand = de_GetOriginAccessControlCommand;\nconst de_GetOriginAccessControlCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"NoSuchOriginAccessControl\":\n        case \"com.amazonaws.cloudfront#NoSuchOriginAccessControl\":\n            throw await de_NoSuchOriginAccessControlRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetOriginAccessControlConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetOriginAccessControlConfigCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.OriginAccessControlConfig = de_OriginAccessControlConfig(data, context);\n    return contents;\n};\nexports.de_GetOriginAccessControlConfigCommand = de_GetOriginAccessControlConfigCommand;\nconst de_GetOriginAccessControlConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"NoSuchOriginAccessControl\":\n        case \"com.amazonaws.cloudfront#NoSuchOriginAccessControl\":\n            throw await de_NoSuchOriginAccessControlRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetOriginRequestPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetOriginRequestPolicyCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.OriginRequestPolicy = de_OriginRequestPolicy(data, context);\n    return contents;\n};\nexports.de_GetOriginRequestPolicyCommand = de_GetOriginRequestPolicyCommand;\nconst de_GetOriginRequestPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"NoSuchOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchOriginRequestPolicy\":\n            throw await de_NoSuchOriginRequestPolicyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetOriginRequestPolicyConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetOriginRequestPolicyConfigCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.OriginRequestPolicyConfig = de_OriginRequestPolicyConfig(data, context);\n    return contents;\n};\nexports.de_GetOriginRequestPolicyConfigCommand = de_GetOriginRequestPolicyConfigCommand;\nconst de_GetOriginRequestPolicyConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"NoSuchOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchOriginRequestPolicy\":\n            throw await de_NoSuchOriginRequestPolicyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetPublicKeyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetPublicKeyCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.PublicKey = de_PublicKey(data, context);\n    return contents;\n};\nexports.de_GetPublicKeyCommand = de_GetPublicKeyCommand;\nconst de_GetPublicKeyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"NoSuchPublicKey\":\n        case \"com.amazonaws.cloudfront#NoSuchPublicKey\":\n            throw await de_NoSuchPublicKeyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetPublicKeyConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetPublicKeyConfigCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.PublicKeyConfig = de_PublicKeyConfig(data, context);\n    return contents;\n};\nexports.de_GetPublicKeyConfigCommand = de_GetPublicKeyConfigCommand;\nconst de_GetPublicKeyConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"NoSuchPublicKey\":\n        case \"com.amazonaws.cloudfront#NoSuchPublicKey\":\n            throw await de_NoSuchPublicKeyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetRealtimeLogConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetRealtimeLogConfigCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data[\"RealtimeLogConfig\"] !== undefined) {\n        contents.RealtimeLogConfig = de_RealtimeLogConfig(data[\"RealtimeLogConfig\"], context);\n    }\n    return contents;\n};\nexports.de_GetRealtimeLogConfigCommand = de_GetRealtimeLogConfigCommand;\nconst de_GetRealtimeLogConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"NoSuchRealtimeLogConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchRealtimeLogConfig\":\n            throw await de_NoSuchRealtimeLogConfigRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetResponseHeadersPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetResponseHeadersPolicyCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.ResponseHeadersPolicy = de_ResponseHeadersPolicy(data, context);\n    return contents;\n};\nexports.de_GetResponseHeadersPolicyCommand = de_GetResponseHeadersPolicyCommand;\nconst de_GetResponseHeadersPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"NoSuchResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchResponseHeadersPolicy\":\n            throw await de_NoSuchResponseHeadersPolicyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetResponseHeadersPolicyConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetResponseHeadersPolicyConfigCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.ResponseHeadersPolicyConfig = de_ResponseHeadersPolicyConfig(data, context);\n    return contents;\n};\nexports.de_GetResponseHeadersPolicyConfigCommand = de_GetResponseHeadersPolicyConfigCommand;\nconst de_GetResponseHeadersPolicyConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"NoSuchResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchResponseHeadersPolicy\":\n            throw await de_NoSuchResponseHeadersPolicyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetStreamingDistributionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetStreamingDistributionCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.StreamingDistribution = de_StreamingDistribution(data, context);\n    return contents;\n};\nexports.de_GetStreamingDistributionCommand = de_GetStreamingDistributionCommand;\nconst de_GetStreamingDistributionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"NoSuchStreamingDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchStreamingDistribution\":\n            throw await de_NoSuchStreamingDistributionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetStreamingDistributionConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetStreamingDistributionConfigCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.StreamingDistributionConfig = de_StreamingDistributionConfig(data, context);\n    return contents;\n};\nexports.de_GetStreamingDistributionConfigCommand = de_GetStreamingDistributionConfigCommand;\nconst de_GetStreamingDistributionConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"NoSuchStreamingDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchStreamingDistribution\":\n            throw await de_NoSuchStreamingDistributionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ListCachePoliciesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListCachePoliciesCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.CachePolicyList = de_CachePolicyList(data, context);\n    return contents;\n};\nexports.de_ListCachePoliciesCommand = de_ListCachePoliciesCommand;\nconst de_ListCachePoliciesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"NoSuchCachePolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchCachePolicy\":\n            throw await de_NoSuchCachePolicyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ListCloudFrontOriginAccessIdentitiesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListCloudFrontOriginAccessIdentitiesCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.CloudFrontOriginAccessIdentityList = de_CloudFrontOriginAccessIdentityList(data, context);\n    return contents;\n};\nexports.de_ListCloudFrontOriginAccessIdentitiesCommand = de_ListCloudFrontOriginAccessIdentitiesCommand;\nconst de_ListCloudFrontOriginAccessIdentitiesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ListConflictingAliasesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListConflictingAliasesCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.ConflictingAliasesList = de_ConflictingAliasesList(data, context);\n    return contents;\n};\nexports.de_ListConflictingAliasesCommand = de_ListConflictingAliasesCommand;\nconst de_ListConflictingAliasesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await de_NoSuchDistributionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ListContinuousDeploymentPoliciesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListContinuousDeploymentPoliciesCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.ContinuousDeploymentPolicyList = de_ContinuousDeploymentPolicyList(data, context);\n    return contents;\n};\nexports.de_ListContinuousDeploymentPoliciesCommand = de_ListContinuousDeploymentPoliciesCommand;\nconst de_ListContinuousDeploymentPoliciesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"NoSuchContinuousDeploymentPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchContinuousDeploymentPolicy\":\n            throw await de_NoSuchContinuousDeploymentPolicyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ListDistributionsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListDistributionsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.DistributionList = de_DistributionList(data, context);\n    return contents;\n};\nexports.de_ListDistributionsCommand = de_ListDistributionsCommand;\nconst de_ListDistributionsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ListDistributionsByCachePolicyIdCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListDistributionsByCachePolicyIdCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.DistributionIdList = de_DistributionIdList(data, context);\n    return contents;\n};\nexports.de_ListDistributionsByCachePolicyIdCommand = de_ListDistributionsByCachePolicyIdCommand;\nconst de_ListDistributionsByCachePolicyIdCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"NoSuchCachePolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchCachePolicy\":\n            throw await de_NoSuchCachePolicyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ListDistributionsByKeyGroupCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListDistributionsByKeyGroupCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.DistributionIdList = de_DistributionIdList(data, context);\n    return contents;\n};\nexports.de_ListDistributionsByKeyGroupCommand = de_ListDistributionsByKeyGroupCommand;\nconst de_ListDistributionsByKeyGroupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"NoSuchResource\":\n        case \"com.amazonaws.cloudfront#NoSuchResource\":\n            throw await de_NoSuchResourceRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ListDistributionsByOriginRequestPolicyIdCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListDistributionsByOriginRequestPolicyIdCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.DistributionIdList = de_DistributionIdList(data, context);\n    return contents;\n};\nexports.de_ListDistributionsByOriginRequestPolicyIdCommand = de_ListDistributionsByOriginRequestPolicyIdCommand;\nconst de_ListDistributionsByOriginRequestPolicyIdCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"NoSuchOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchOriginRequestPolicy\":\n            throw await de_NoSuchOriginRequestPolicyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ListDistributionsByRealtimeLogConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListDistributionsByRealtimeLogConfigCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.DistributionList = de_DistributionList(data, context);\n    return contents;\n};\nexports.de_ListDistributionsByRealtimeLogConfigCommand = de_ListDistributionsByRealtimeLogConfigCommand;\nconst de_ListDistributionsByRealtimeLogConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ListDistributionsByResponseHeadersPolicyIdCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListDistributionsByResponseHeadersPolicyIdCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.DistributionIdList = de_DistributionIdList(data, context);\n    return contents;\n};\nexports.de_ListDistributionsByResponseHeadersPolicyIdCommand = de_ListDistributionsByResponseHeadersPolicyIdCommand;\nconst de_ListDistributionsByResponseHeadersPolicyIdCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"NoSuchResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchResponseHeadersPolicy\":\n            throw await de_NoSuchResponseHeadersPolicyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ListDistributionsByWebACLIdCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListDistributionsByWebACLIdCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.DistributionList = de_DistributionList(data, context);\n    return contents;\n};\nexports.de_ListDistributionsByWebACLIdCommand = de_ListDistributionsByWebACLIdCommand;\nconst de_ListDistributionsByWebACLIdCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidWebACLId\":\n        case \"com.amazonaws.cloudfront#InvalidWebACLId\":\n            throw await de_InvalidWebACLIdRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ListFieldLevelEncryptionConfigsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListFieldLevelEncryptionConfigsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FieldLevelEncryptionList = de_FieldLevelEncryptionList(data, context);\n    return contents;\n};\nexports.de_ListFieldLevelEncryptionConfigsCommand = de_ListFieldLevelEncryptionConfigsCommand;\nconst de_ListFieldLevelEncryptionConfigsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ListFieldLevelEncryptionProfilesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListFieldLevelEncryptionProfilesCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FieldLevelEncryptionProfileList = de_FieldLevelEncryptionProfileList(data, context);\n    return contents;\n};\nexports.de_ListFieldLevelEncryptionProfilesCommand = de_ListFieldLevelEncryptionProfilesCommand;\nconst de_ListFieldLevelEncryptionProfilesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ListFunctionsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListFunctionsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FunctionList = de_FunctionList(data, context);\n    return contents;\n};\nexports.de_ListFunctionsCommand = de_ListFunctionsCommand;\nconst de_ListFunctionsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"UnsupportedOperation\":\n        case \"com.amazonaws.cloudfront#UnsupportedOperation\":\n            throw await de_UnsupportedOperationRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ListInvalidationsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListInvalidationsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.InvalidationList = de_InvalidationList(data, context);\n    return contents;\n};\nexports.de_ListInvalidationsCommand = de_ListInvalidationsCommand;\nconst de_ListInvalidationsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await de_NoSuchDistributionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ListKeyGroupsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListKeyGroupsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.KeyGroupList = de_KeyGroupList(data, context);\n    return contents;\n};\nexports.de_ListKeyGroupsCommand = de_ListKeyGroupsCommand;\nconst de_ListKeyGroupsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ListOriginAccessControlsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListOriginAccessControlsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.OriginAccessControlList = de_OriginAccessControlList(data, context);\n    return contents;\n};\nexports.de_ListOriginAccessControlsCommand = de_ListOriginAccessControlsCommand;\nconst de_ListOriginAccessControlsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ListOriginRequestPoliciesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListOriginRequestPoliciesCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.OriginRequestPolicyList = de_OriginRequestPolicyList(data, context);\n    return contents;\n};\nexports.de_ListOriginRequestPoliciesCommand = de_ListOriginRequestPoliciesCommand;\nconst de_ListOriginRequestPoliciesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"NoSuchOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchOriginRequestPolicy\":\n            throw await de_NoSuchOriginRequestPolicyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ListPublicKeysCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListPublicKeysCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.PublicKeyList = de_PublicKeyList(data, context);\n    return contents;\n};\nexports.de_ListPublicKeysCommand = de_ListPublicKeysCommand;\nconst de_ListPublicKeysCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ListRealtimeLogConfigsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListRealtimeLogConfigsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.RealtimeLogConfigs = de_RealtimeLogConfigs(data, context);\n    return contents;\n};\nexports.de_ListRealtimeLogConfigsCommand = de_ListRealtimeLogConfigsCommand;\nconst de_ListRealtimeLogConfigsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"NoSuchRealtimeLogConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchRealtimeLogConfig\":\n            throw await de_NoSuchRealtimeLogConfigRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ListResponseHeadersPoliciesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListResponseHeadersPoliciesCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.ResponseHeadersPolicyList = de_ResponseHeadersPolicyList(data, context);\n    return contents;\n};\nexports.de_ListResponseHeadersPoliciesCommand = de_ListResponseHeadersPoliciesCommand;\nconst de_ListResponseHeadersPoliciesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"NoSuchResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchResponseHeadersPolicy\":\n            throw await de_NoSuchResponseHeadersPolicyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ListStreamingDistributionsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListStreamingDistributionsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.StreamingDistributionList = de_StreamingDistributionList(data, context);\n    return contents;\n};\nexports.de_ListStreamingDistributionsCommand = de_ListStreamingDistributionsCommand;\nconst de_ListStreamingDistributionsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ListTagsForResourceCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListTagsForResourceCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.Tags = de_Tags(data, context);\n    return contents;\n};\nexports.de_ListTagsForResourceCommand = de_ListTagsForResourceCommand;\nconst de_ListTagsForResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidTagging\":\n        case \"com.amazonaws.cloudfront#InvalidTagging\":\n            throw await de_InvalidTaggingRes(parsedOutput, context);\n        case \"NoSuchResource\":\n        case \"com.amazonaws.cloudfront#NoSuchResource\":\n            throw await de_NoSuchResourceRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_PublishFunctionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PublishFunctionCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FunctionSummary = de_FunctionSummary(data, context);\n    return contents;\n};\nexports.de_PublishFunctionCommand = de_PublishFunctionCommand;\nconst de_PublishFunctionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"NoSuchFunctionExists\":\n        case \"com.amazonaws.cloudfront#NoSuchFunctionExists\":\n            throw await de_NoSuchFunctionExistsRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        case \"UnsupportedOperation\":\n        case \"com.amazonaws.cloudfront#UnsupportedOperation\":\n            throw await de_UnsupportedOperationRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_TagResourceCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_TagResourceCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_TagResourceCommand = de_TagResourceCommand;\nconst de_TagResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidTagging\":\n        case \"com.amazonaws.cloudfront#InvalidTagging\":\n            throw await de_InvalidTaggingRes(parsedOutput, context);\n        case \"NoSuchResource\":\n        case \"com.amazonaws.cloudfront#NoSuchResource\":\n            throw await de_NoSuchResourceRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_TestFunctionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_TestFunctionCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.TestResult = de_TestResult(data, context);\n    return contents;\n};\nexports.de_TestFunctionCommand = de_TestFunctionCommand;\nconst de_TestFunctionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"NoSuchFunctionExists\":\n        case \"com.amazonaws.cloudfront#NoSuchFunctionExists\":\n            throw await de_NoSuchFunctionExistsRes(parsedOutput, context);\n        case \"TestFunctionFailed\":\n        case \"com.amazonaws.cloudfront#TestFunctionFailed\":\n            throw await de_TestFunctionFailedRes(parsedOutput, context);\n        case \"UnsupportedOperation\":\n        case \"com.amazonaws.cloudfront#UnsupportedOperation\":\n            throw await de_UnsupportedOperationRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_UntagResourceCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_UntagResourceCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_UntagResourceCommand = de_UntagResourceCommand;\nconst de_UntagResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidTagging\":\n        case \"com.amazonaws.cloudfront#InvalidTagging\":\n            throw await de_InvalidTaggingRes(parsedOutput, context);\n        case \"NoSuchResource\":\n        case \"com.amazonaws.cloudfront#NoSuchResource\":\n            throw await de_NoSuchResourceRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_UpdateCachePolicyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_UpdateCachePolicyCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.CachePolicy = de_CachePolicy(data, context);\n    return contents;\n};\nexports.de_UpdateCachePolicyCommand = de_UpdateCachePolicyCommand;\nconst de_UpdateCachePolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"CachePolicyAlreadyExists\":\n        case \"com.amazonaws.cloudfront#CachePolicyAlreadyExists\":\n            throw await de_CachePolicyAlreadyExistsRes(parsedOutput, context);\n        case \"IllegalUpdate\":\n        case \"com.amazonaws.cloudfront#IllegalUpdate\":\n            throw await de_IllegalUpdateRes(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await de_InconsistentQuantitiesRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"NoSuchCachePolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchCachePolicy\":\n            throw await de_NoSuchCachePolicyRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        case \"TooManyCookiesInCachePolicy\":\n        case \"com.amazonaws.cloudfront#TooManyCookiesInCachePolicy\":\n            throw await de_TooManyCookiesInCachePolicyRes(parsedOutput, context);\n        case \"TooManyHeadersInCachePolicy\":\n        case \"com.amazonaws.cloudfront#TooManyHeadersInCachePolicy\":\n            throw await de_TooManyHeadersInCachePolicyRes(parsedOutput, context);\n        case \"TooManyQueryStringsInCachePolicy\":\n        case \"com.amazonaws.cloudfront#TooManyQueryStringsInCachePolicy\":\n            throw await de_TooManyQueryStringsInCachePolicyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_UpdateCloudFrontOriginAccessIdentityCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_UpdateCloudFrontOriginAccessIdentityCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.CloudFrontOriginAccessIdentity = de_CloudFrontOriginAccessIdentity(data, context);\n    return contents;\n};\nexports.de_UpdateCloudFrontOriginAccessIdentityCommand = de_UpdateCloudFrontOriginAccessIdentityCommand;\nconst de_UpdateCloudFrontOriginAccessIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"IllegalUpdate\":\n        case \"com.amazonaws.cloudfront#IllegalUpdate\":\n            throw await de_IllegalUpdateRes(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await de_InconsistentQuantitiesRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"MissingBody\":\n        case \"com.amazonaws.cloudfront#MissingBody\":\n            throw await de_MissingBodyRes(parsedOutput, context);\n        case \"NoSuchCloudFrontOriginAccessIdentity\":\n        case \"com.amazonaws.cloudfront#NoSuchCloudFrontOriginAccessIdentity\":\n            throw await de_NoSuchCloudFrontOriginAccessIdentityRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_UpdateContinuousDeploymentPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_UpdateContinuousDeploymentPolicyCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.ContinuousDeploymentPolicy = de_ContinuousDeploymentPolicy(data, context);\n    return contents;\n};\nexports.de_UpdateContinuousDeploymentPolicyCommand = de_UpdateContinuousDeploymentPolicyCommand;\nconst de_UpdateContinuousDeploymentPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await de_InconsistentQuantitiesRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"NoSuchContinuousDeploymentPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchContinuousDeploymentPolicy\":\n            throw await de_NoSuchContinuousDeploymentPolicyRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        case \"StagingDistributionInUse\":\n        case \"com.amazonaws.cloudfront#StagingDistributionInUse\":\n            throw await de_StagingDistributionInUseRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_UpdateDistributionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_UpdateDistributionCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.Distribution = de_Distribution(data, context);\n    return contents;\n};\nexports.de_UpdateDistributionCommand = de_UpdateDistributionCommand;\nconst de_UpdateDistributionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"CNAMEAlreadyExists\":\n        case \"com.amazonaws.cloudfront#CNAMEAlreadyExists\":\n            throw await de_CNAMEAlreadyExistsRes(parsedOutput, context);\n        case \"ContinuousDeploymentPolicyInUse\":\n        case \"com.amazonaws.cloudfront#ContinuousDeploymentPolicyInUse\":\n            throw await de_ContinuousDeploymentPolicyInUseRes(parsedOutput, context);\n        case \"IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior\":\n        case \"com.amazonaws.cloudfront#IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior\":\n            throw await de_IllegalFieldLevelEncryptionConfigAssociationWithCacheBehaviorRes(parsedOutput, context);\n        case \"IllegalOriginAccessConfiguration\":\n        case \"com.amazonaws.cloudfront#IllegalOriginAccessConfiguration\":\n            throw await de_IllegalOriginAccessConfigurationRes(parsedOutput, context);\n        case \"IllegalUpdate\":\n        case \"com.amazonaws.cloudfront#IllegalUpdate\":\n            throw await de_IllegalUpdateRes(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await de_InconsistentQuantitiesRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidDefaultRootObject\":\n        case \"com.amazonaws.cloudfront#InvalidDefaultRootObject\":\n            throw await de_InvalidDefaultRootObjectRes(parsedOutput, context);\n        case \"InvalidDomainNameForOriginAccessControl\":\n        case \"com.amazonaws.cloudfront#InvalidDomainNameForOriginAccessControl\":\n            throw await de_InvalidDomainNameForOriginAccessControlRes(parsedOutput, context);\n        case \"InvalidErrorCode\":\n        case \"com.amazonaws.cloudfront#InvalidErrorCode\":\n            throw await de_InvalidErrorCodeRes(parsedOutput, context);\n        case \"InvalidForwardCookies\":\n        case \"com.amazonaws.cloudfront#InvalidForwardCookies\":\n            throw await de_InvalidForwardCookiesRes(parsedOutput, context);\n        case \"InvalidFunctionAssociation\":\n        case \"com.amazonaws.cloudfront#InvalidFunctionAssociation\":\n            throw await de_InvalidFunctionAssociationRes(parsedOutput, context);\n        case \"InvalidGeoRestrictionParameter\":\n        case \"com.amazonaws.cloudfront#InvalidGeoRestrictionParameter\":\n            throw await de_InvalidGeoRestrictionParameterRes(parsedOutput, context);\n        case \"InvalidHeadersForS3Origin\":\n        case \"com.amazonaws.cloudfront#InvalidHeadersForS3Origin\":\n            throw await de_InvalidHeadersForS3OriginRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"InvalidLambdaFunctionAssociation\":\n        case \"com.amazonaws.cloudfront#InvalidLambdaFunctionAssociation\":\n            throw await de_InvalidLambdaFunctionAssociationRes(parsedOutput, context);\n        case \"InvalidLocationCode\":\n        case \"com.amazonaws.cloudfront#InvalidLocationCode\":\n            throw await de_InvalidLocationCodeRes(parsedOutput, context);\n        case \"InvalidMinimumProtocolVersion\":\n        case \"com.amazonaws.cloudfront#InvalidMinimumProtocolVersion\":\n            throw await de_InvalidMinimumProtocolVersionRes(parsedOutput, context);\n        case \"InvalidOriginAccessControl\":\n        case \"com.amazonaws.cloudfront#InvalidOriginAccessControl\":\n            throw await de_InvalidOriginAccessControlRes(parsedOutput, context);\n        case \"InvalidOriginAccessIdentity\":\n        case \"com.amazonaws.cloudfront#InvalidOriginAccessIdentity\":\n            throw await de_InvalidOriginAccessIdentityRes(parsedOutput, context);\n        case \"InvalidOriginKeepaliveTimeout\":\n        case \"com.amazonaws.cloudfront#InvalidOriginKeepaliveTimeout\":\n            throw await de_InvalidOriginKeepaliveTimeoutRes(parsedOutput, context);\n        case \"InvalidOriginReadTimeout\":\n        case \"com.amazonaws.cloudfront#InvalidOriginReadTimeout\":\n            throw await de_InvalidOriginReadTimeoutRes(parsedOutput, context);\n        case \"InvalidQueryStringParameters\":\n        case \"com.amazonaws.cloudfront#InvalidQueryStringParameters\":\n            throw await de_InvalidQueryStringParametersRes(parsedOutput, context);\n        case \"InvalidRelativePath\":\n        case \"com.amazonaws.cloudfront#InvalidRelativePath\":\n            throw await de_InvalidRelativePathRes(parsedOutput, context);\n        case \"InvalidRequiredProtocol\":\n        case \"com.amazonaws.cloudfront#InvalidRequiredProtocol\":\n            throw await de_InvalidRequiredProtocolRes(parsedOutput, context);\n        case \"InvalidResponseCode\":\n        case \"com.amazonaws.cloudfront#InvalidResponseCode\":\n            throw await de_InvalidResponseCodeRes(parsedOutput, context);\n        case \"InvalidTTLOrder\":\n        case \"com.amazonaws.cloudfront#InvalidTTLOrder\":\n            throw await de_InvalidTTLOrderRes(parsedOutput, context);\n        case \"InvalidViewerCertificate\":\n        case \"com.amazonaws.cloudfront#InvalidViewerCertificate\":\n            throw await de_InvalidViewerCertificateRes(parsedOutput, context);\n        case \"InvalidWebACLId\":\n        case \"com.amazonaws.cloudfront#InvalidWebACLId\":\n            throw await de_InvalidWebACLIdRes(parsedOutput, context);\n        case \"MissingBody\":\n        case \"com.amazonaws.cloudfront#MissingBody\":\n            throw await de_MissingBodyRes(parsedOutput, context);\n        case \"NoSuchCachePolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchCachePolicy\":\n            throw await de_NoSuchCachePolicyRes(parsedOutput, context);\n        case \"NoSuchContinuousDeploymentPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchContinuousDeploymentPolicy\":\n            throw await de_NoSuchContinuousDeploymentPolicyRes(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await de_NoSuchDistributionRes(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionConfig\":\n            throw await de_NoSuchFieldLevelEncryptionConfigRes(parsedOutput, context);\n        case \"NoSuchOrigin\":\n        case \"com.amazonaws.cloudfront#NoSuchOrigin\":\n            throw await de_NoSuchOriginRes(parsedOutput, context);\n        case \"NoSuchOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchOriginRequestPolicy\":\n            throw await de_NoSuchOriginRequestPolicyRes(parsedOutput, context);\n        case \"NoSuchRealtimeLogConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchRealtimeLogConfig\":\n            throw await de_NoSuchRealtimeLogConfigRes(parsedOutput, context);\n        case \"NoSuchResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchResponseHeadersPolicy\":\n            throw await de_NoSuchResponseHeadersPolicyRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        case \"RealtimeLogConfigOwnerMismatch\":\n        case \"com.amazonaws.cloudfront#RealtimeLogConfigOwnerMismatch\":\n            throw await de_RealtimeLogConfigOwnerMismatchRes(parsedOutput, context);\n        case \"StagingDistributionInUse\":\n        case \"com.amazonaws.cloudfront#StagingDistributionInUse\":\n            throw await de_StagingDistributionInUseRes(parsedOutput, context);\n        case \"TooManyCacheBehaviors\":\n        case \"com.amazonaws.cloudfront#TooManyCacheBehaviors\":\n            throw await de_TooManyCacheBehaviorsRes(parsedOutput, context);\n        case \"TooManyCertificates\":\n        case \"com.amazonaws.cloudfront#TooManyCertificates\":\n            throw await de_TooManyCertificatesRes(parsedOutput, context);\n        case \"TooManyCookieNamesInWhiteList\":\n        case \"com.amazonaws.cloudfront#TooManyCookieNamesInWhiteList\":\n            throw await de_TooManyCookieNamesInWhiteListRes(parsedOutput, context);\n        case \"TooManyDistributionCNAMEs\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionCNAMEs\":\n            throw await de_TooManyDistributionCNAMEsRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToCachePolicy\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToCachePolicy\":\n            throw await de_TooManyDistributionsAssociatedToCachePolicyRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToFieldLevelEncryptionConfig\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToFieldLevelEncryptionConfig\":\n            throw await de_TooManyDistributionsAssociatedToFieldLevelEncryptionConfigRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToKeyGroup\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToKeyGroup\":\n            throw await de_TooManyDistributionsAssociatedToKeyGroupRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToOriginAccessControl\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToOriginAccessControl\":\n            throw await de_TooManyDistributionsAssociatedToOriginAccessControlRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToOriginRequestPolicy\":\n            throw await de_TooManyDistributionsAssociatedToOriginRequestPolicyRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToResponseHeadersPolicy\":\n            throw await de_TooManyDistributionsAssociatedToResponseHeadersPolicyRes(parsedOutput, context);\n        case \"TooManyDistributionsWithFunctionAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsWithFunctionAssociations\":\n            throw await de_TooManyDistributionsWithFunctionAssociationsRes(parsedOutput, context);\n        case \"TooManyDistributionsWithLambdaAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsWithLambdaAssociations\":\n            throw await de_TooManyDistributionsWithLambdaAssociationsRes(parsedOutput, context);\n        case \"TooManyDistributionsWithSingleFunctionARN\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsWithSingleFunctionARN\":\n            throw await de_TooManyDistributionsWithSingleFunctionARNRes(parsedOutput, context);\n        case \"TooManyFunctionAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyFunctionAssociations\":\n            throw await de_TooManyFunctionAssociationsRes(parsedOutput, context);\n        case \"TooManyHeadersInForwardedValues\":\n        case \"com.amazonaws.cloudfront#TooManyHeadersInForwardedValues\":\n            throw await de_TooManyHeadersInForwardedValuesRes(parsedOutput, context);\n        case \"TooManyKeyGroupsAssociatedToDistribution\":\n        case \"com.amazonaws.cloudfront#TooManyKeyGroupsAssociatedToDistribution\":\n            throw await de_TooManyKeyGroupsAssociatedToDistributionRes(parsedOutput, context);\n        case \"TooManyLambdaFunctionAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyLambdaFunctionAssociations\":\n            throw await de_TooManyLambdaFunctionAssociationsRes(parsedOutput, context);\n        case \"TooManyOriginCustomHeaders\":\n        case \"com.amazonaws.cloudfront#TooManyOriginCustomHeaders\":\n            throw await de_TooManyOriginCustomHeadersRes(parsedOutput, context);\n        case \"TooManyOriginGroupsPerDistribution\":\n        case \"com.amazonaws.cloudfront#TooManyOriginGroupsPerDistribution\":\n            throw await de_TooManyOriginGroupsPerDistributionRes(parsedOutput, context);\n        case \"TooManyOrigins\":\n        case \"com.amazonaws.cloudfront#TooManyOrigins\":\n            throw await de_TooManyOriginsRes(parsedOutput, context);\n        case \"TooManyQueryStringParameters\":\n        case \"com.amazonaws.cloudfront#TooManyQueryStringParameters\":\n            throw await de_TooManyQueryStringParametersRes(parsedOutput, context);\n        case \"TooManyTrustedSigners\":\n        case \"com.amazonaws.cloudfront#TooManyTrustedSigners\":\n            throw await de_TooManyTrustedSignersRes(parsedOutput, context);\n        case \"TrustedKeyGroupDoesNotExist\":\n        case \"com.amazonaws.cloudfront#TrustedKeyGroupDoesNotExist\":\n            throw await de_TrustedKeyGroupDoesNotExistRes(parsedOutput, context);\n        case \"TrustedSignerDoesNotExist\":\n        case \"com.amazonaws.cloudfront#TrustedSignerDoesNotExist\":\n            throw await de_TrustedSignerDoesNotExistRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_UpdateDistributionWithStagingConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_UpdateDistributionWithStagingConfigCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.Distribution = de_Distribution(data, context);\n    return contents;\n};\nexports.de_UpdateDistributionWithStagingConfigCommand = de_UpdateDistributionWithStagingConfigCommand;\nconst de_UpdateDistributionWithStagingConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"CNAMEAlreadyExists\":\n        case \"com.amazonaws.cloudfront#CNAMEAlreadyExists\":\n            throw await de_CNAMEAlreadyExistsRes(parsedOutput, context);\n        case \"IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior\":\n        case \"com.amazonaws.cloudfront#IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior\":\n            throw await de_IllegalFieldLevelEncryptionConfigAssociationWithCacheBehaviorRes(parsedOutput, context);\n        case \"IllegalUpdate\":\n        case \"com.amazonaws.cloudfront#IllegalUpdate\":\n            throw await de_IllegalUpdateRes(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await de_InconsistentQuantitiesRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidDefaultRootObject\":\n        case \"com.amazonaws.cloudfront#InvalidDefaultRootObject\":\n            throw await de_InvalidDefaultRootObjectRes(parsedOutput, context);\n        case \"InvalidErrorCode\":\n        case \"com.amazonaws.cloudfront#InvalidErrorCode\":\n            throw await de_InvalidErrorCodeRes(parsedOutput, context);\n        case \"InvalidForwardCookies\":\n        case \"com.amazonaws.cloudfront#InvalidForwardCookies\":\n            throw await de_InvalidForwardCookiesRes(parsedOutput, context);\n        case \"InvalidFunctionAssociation\":\n        case \"com.amazonaws.cloudfront#InvalidFunctionAssociation\":\n            throw await de_InvalidFunctionAssociationRes(parsedOutput, context);\n        case \"InvalidGeoRestrictionParameter\":\n        case \"com.amazonaws.cloudfront#InvalidGeoRestrictionParameter\":\n            throw await de_InvalidGeoRestrictionParameterRes(parsedOutput, context);\n        case \"InvalidHeadersForS3Origin\":\n        case \"com.amazonaws.cloudfront#InvalidHeadersForS3Origin\":\n            throw await de_InvalidHeadersForS3OriginRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"InvalidLambdaFunctionAssociation\":\n        case \"com.amazonaws.cloudfront#InvalidLambdaFunctionAssociation\":\n            throw await de_InvalidLambdaFunctionAssociationRes(parsedOutput, context);\n        case \"InvalidLocationCode\":\n        case \"com.amazonaws.cloudfront#InvalidLocationCode\":\n            throw await de_InvalidLocationCodeRes(parsedOutput, context);\n        case \"InvalidMinimumProtocolVersion\":\n        case \"com.amazonaws.cloudfront#InvalidMinimumProtocolVersion\":\n            throw await de_InvalidMinimumProtocolVersionRes(parsedOutput, context);\n        case \"InvalidOriginAccessControl\":\n        case \"com.amazonaws.cloudfront#InvalidOriginAccessControl\":\n            throw await de_InvalidOriginAccessControlRes(parsedOutput, context);\n        case \"InvalidOriginAccessIdentity\":\n        case \"com.amazonaws.cloudfront#InvalidOriginAccessIdentity\":\n            throw await de_InvalidOriginAccessIdentityRes(parsedOutput, context);\n        case \"InvalidOriginKeepaliveTimeout\":\n        case \"com.amazonaws.cloudfront#InvalidOriginKeepaliveTimeout\":\n            throw await de_InvalidOriginKeepaliveTimeoutRes(parsedOutput, context);\n        case \"InvalidOriginReadTimeout\":\n        case \"com.amazonaws.cloudfront#InvalidOriginReadTimeout\":\n            throw await de_InvalidOriginReadTimeoutRes(parsedOutput, context);\n        case \"InvalidQueryStringParameters\":\n        case \"com.amazonaws.cloudfront#InvalidQueryStringParameters\":\n            throw await de_InvalidQueryStringParametersRes(parsedOutput, context);\n        case \"InvalidRelativePath\":\n        case \"com.amazonaws.cloudfront#InvalidRelativePath\":\n            throw await de_InvalidRelativePathRes(parsedOutput, context);\n        case \"InvalidRequiredProtocol\":\n        case \"com.amazonaws.cloudfront#InvalidRequiredProtocol\":\n            throw await de_InvalidRequiredProtocolRes(parsedOutput, context);\n        case \"InvalidResponseCode\":\n        case \"com.amazonaws.cloudfront#InvalidResponseCode\":\n            throw await de_InvalidResponseCodeRes(parsedOutput, context);\n        case \"InvalidTTLOrder\":\n        case \"com.amazonaws.cloudfront#InvalidTTLOrder\":\n            throw await de_InvalidTTLOrderRes(parsedOutput, context);\n        case \"InvalidViewerCertificate\":\n        case \"com.amazonaws.cloudfront#InvalidViewerCertificate\":\n            throw await de_InvalidViewerCertificateRes(parsedOutput, context);\n        case \"InvalidWebACLId\":\n        case \"com.amazonaws.cloudfront#InvalidWebACLId\":\n            throw await de_InvalidWebACLIdRes(parsedOutput, context);\n        case \"MissingBody\":\n        case \"com.amazonaws.cloudfront#MissingBody\":\n            throw await de_MissingBodyRes(parsedOutput, context);\n        case \"NoSuchCachePolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchCachePolicy\":\n            throw await de_NoSuchCachePolicyRes(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await de_NoSuchDistributionRes(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionConfig\":\n            throw await de_NoSuchFieldLevelEncryptionConfigRes(parsedOutput, context);\n        case \"NoSuchOrigin\":\n        case \"com.amazonaws.cloudfront#NoSuchOrigin\":\n            throw await de_NoSuchOriginRes(parsedOutput, context);\n        case \"NoSuchOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchOriginRequestPolicy\":\n            throw await de_NoSuchOriginRequestPolicyRes(parsedOutput, context);\n        case \"NoSuchRealtimeLogConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchRealtimeLogConfig\":\n            throw await de_NoSuchRealtimeLogConfigRes(parsedOutput, context);\n        case \"NoSuchResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchResponseHeadersPolicy\":\n            throw await de_NoSuchResponseHeadersPolicyRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        case \"RealtimeLogConfigOwnerMismatch\":\n        case \"com.amazonaws.cloudfront#RealtimeLogConfigOwnerMismatch\":\n            throw await de_RealtimeLogConfigOwnerMismatchRes(parsedOutput, context);\n        case \"TooManyCacheBehaviors\":\n        case \"com.amazonaws.cloudfront#TooManyCacheBehaviors\":\n            throw await de_TooManyCacheBehaviorsRes(parsedOutput, context);\n        case \"TooManyCertificates\":\n        case \"com.amazonaws.cloudfront#TooManyCertificates\":\n            throw await de_TooManyCertificatesRes(parsedOutput, context);\n        case \"TooManyCookieNamesInWhiteList\":\n        case \"com.amazonaws.cloudfront#TooManyCookieNamesInWhiteList\":\n            throw await de_TooManyCookieNamesInWhiteListRes(parsedOutput, context);\n        case \"TooManyDistributionCNAMEs\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionCNAMEs\":\n            throw await de_TooManyDistributionCNAMEsRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToCachePolicy\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToCachePolicy\":\n            throw await de_TooManyDistributionsAssociatedToCachePolicyRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToFieldLevelEncryptionConfig\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToFieldLevelEncryptionConfig\":\n            throw await de_TooManyDistributionsAssociatedToFieldLevelEncryptionConfigRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToKeyGroup\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToKeyGroup\":\n            throw await de_TooManyDistributionsAssociatedToKeyGroupRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToOriginAccessControl\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToOriginAccessControl\":\n            throw await de_TooManyDistributionsAssociatedToOriginAccessControlRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToOriginRequestPolicy\":\n            throw await de_TooManyDistributionsAssociatedToOriginRequestPolicyRes(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToResponseHeadersPolicy\":\n            throw await de_TooManyDistributionsAssociatedToResponseHeadersPolicyRes(parsedOutput, context);\n        case \"TooManyDistributionsWithFunctionAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsWithFunctionAssociations\":\n            throw await de_TooManyDistributionsWithFunctionAssociationsRes(parsedOutput, context);\n        case \"TooManyDistributionsWithLambdaAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsWithLambdaAssociations\":\n            throw await de_TooManyDistributionsWithLambdaAssociationsRes(parsedOutput, context);\n        case \"TooManyDistributionsWithSingleFunctionARN\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsWithSingleFunctionARN\":\n            throw await de_TooManyDistributionsWithSingleFunctionARNRes(parsedOutput, context);\n        case \"TooManyFunctionAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyFunctionAssociations\":\n            throw await de_TooManyFunctionAssociationsRes(parsedOutput, context);\n        case \"TooManyHeadersInForwardedValues\":\n        case \"com.amazonaws.cloudfront#TooManyHeadersInForwardedValues\":\n            throw await de_TooManyHeadersInForwardedValuesRes(parsedOutput, context);\n        case \"TooManyKeyGroupsAssociatedToDistribution\":\n        case \"com.amazonaws.cloudfront#TooManyKeyGroupsAssociatedToDistribution\":\n            throw await de_TooManyKeyGroupsAssociatedToDistributionRes(parsedOutput, context);\n        case \"TooManyLambdaFunctionAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyLambdaFunctionAssociations\":\n            throw await de_TooManyLambdaFunctionAssociationsRes(parsedOutput, context);\n        case \"TooManyOriginCustomHeaders\":\n        case \"com.amazonaws.cloudfront#TooManyOriginCustomHeaders\":\n            throw await de_TooManyOriginCustomHeadersRes(parsedOutput, context);\n        case \"TooManyOriginGroupsPerDistribution\":\n        case \"com.amazonaws.cloudfront#TooManyOriginGroupsPerDistribution\":\n            throw await de_TooManyOriginGroupsPerDistributionRes(parsedOutput, context);\n        case \"TooManyOrigins\":\n        case \"com.amazonaws.cloudfront#TooManyOrigins\":\n            throw await de_TooManyOriginsRes(parsedOutput, context);\n        case \"TooManyQueryStringParameters\":\n        case \"com.amazonaws.cloudfront#TooManyQueryStringParameters\":\n            throw await de_TooManyQueryStringParametersRes(parsedOutput, context);\n        case \"TooManyTrustedSigners\":\n        case \"com.amazonaws.cloudfront#TooManyTrustedSigners\":\n            throw await de_TooManyTrustedSignersRes(parsedOutput, context);\n        case \"TrustedKeyGroupDoesNotExist\":\n        case \"com.amazonaws.cloudfront#TrustedKeyGroupDoesNotExist\":\n            throw await de_TrustedKeyGroupDoesNotExistRes(parsedOutput, context);\n        case \"TrustedSignerDoesNotExist\":\n        case \"com.amazonaws.cloudfront#TrustedSignerDoesNotExist\":\n            throw await de_TrustedSignerDoesNotExistRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_UpdateFieldLevelEncryptionConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_UpdateFieldLevelEncryptionConfigCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FieldLevelEncryption = de_FieldLevelEncryption(data, context);\n    return contents;\n};\nexports.de_UpdateFieldLevelEncryptionConfigCommand = de_UpdateFieldLevelEncryptionConfigCommand;\nconst de_UpdateFieldLevelEncryptionConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"IllegalUpdate\":\n        case \"com.amazonaws.cloudfront#IllegalUpdate\":\n            throw await de_IllegalUpdateRes(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await de_InconsistentQuantitiesRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionConfig\":\n            throw await de_NoSuchFieldLevelEncryptionConfigRes(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionProfile\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionProfile\":\n            throw await de_NoSuchFieldLevelEncryptionProfileRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        case \"QueryArgProfileEmpty\":\n        case \"com.amazonaws.cloudfront#QueryArgProfileEmpty\":\n            throw await de_QueryArgProfileEmptyRes(parsedOutput, context);\n        case \"TooManyFieldLevelEncryptionContentTypeProfiles\":\n        case \"com.amazonaws.cloudfront#TooManyFieldLevelEncryptionContentTypeProfiles\":\n            throw await de_TooManyFieldLevelEncryptionContentTypeProfilesRes(parsedOutput, context);\n        case \"TooManyFieldLevelEncryptionQueryArgProfiles\":\n        case \"com.amazonaws.cloudfront#TooManyFieldLevelEncryptionQueryArgProfiles\":\n            throw await de_TooManyFieldLevelEncryptionQueryArgProfilesRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_UpdateFieldLevelEncryptionProfileCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_UpdateFieldLevelEncryptionProfileCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FieldLevelEncryptionProfile = de_FieldLevelEncryptionProfile(data, context);\n    return contents;\n};\nexports.de_UpdateFieldLevelEncryptionProfileCommand = de_UpdateFieldLevelEncryptionProfileCommand;\nconst de_UpdateFieldLevelEncryptionProfileCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"FieldLevelEncryptionProfileAlreadyExists\":\n        case \"com.amazonaws.cloudfront#FieldLevelEncryptionProfileAlreadyExists\":\n            throw await de_FieldLevelEncryptionProfileAlreadyExistsRes(parsedOutput, context);\n        case \"FieldLevelEncryptionProfileSizeExceeded\":\n        case \"com.amazonaws.cloudfront#FieldLevelEncryptionProfileSizeExceeded\":\n            throw await de_FieldLevelEncryptionProfileSizeExceededRes(parsedOutput, context);\n        case \"IllegalUpdate\":\n        case \"com.amazonaws.cloudfront#IllegalUpdate\":\n            throw await de_IllegalUpdateRes(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await de_InconsistentQuantitiesRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionProfile\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionProfile\":\n            throw await de_NoSuchFieldLevelEncryptionProfileRes(parsedOutput, context);\n        case \"NoSuchPublicKey\":\n        case \"com.amazonaws.cloudfront#NoSuchPublicKey\":\n            throw await de_NoSuchPublicKeyRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        case \"TooManyFieldLevelEncryptionEncryptionEntities\":\n        case \"com.amazonaws.cloudfront#TooManyFieldLevelEncryptionEncryptionEntities\":\n            throw await de_TooManyFieldLevelEncryptionEncryptionEntitiesRes(parsedOutput, context);\n        case \"TooManyFieldLevelEncryptionFieldPatterns\":\n        case \"com.amazonaws.cloudfront#TooManyFieldLevelEncryptionFieldPatterns\":\n            throw await de_TooManyFieldLevelEncryptionFieldPatternsRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_UpdateFunctionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_UpdateFunctionCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"ettag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FunctionSummary = de_FunctionSummary(data, context);\n    return contents;\n};\nexports.de_UpdateFunctionCommand = de_UpdateFunctionCommand;\nconst de_UpdateFunctionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"FunctionSizeLimitExceeded\":\n        case \"com.amazonaws.cloudfront#FunctionSizeLimitExceeded\":\n            throw await de_FunctionSizeLimitExceededRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"NoSuchFunctionExists\":\n        case \"com.amazonaws.cloudfront#NoSuchFunctionExists\":\n            throw await de_NoSuchFunctionExistsRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        case \"UnsupportedOperation\":\n        case \"com.amazonaws.cloudfront#UnsupportedOperation\":\n            throw await de_UnsupportedOperationRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_UpdateKeyGroupCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_UpdateKeyGroupCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.KeyGroup = de_KeyGroup(data, context);\n    return contents;\n};\nexports.de_UpdateKeyGroupCommand = de_UpdateKeyGroupCommand;\nconst de_UpdateKeyGroupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"KeyGroupAlreadyExists\":\n        case \"com.amazonaws.cloudfront#KeyGroupAlreadyExists\":\n            throw await de_KeyGroupAlreadyExistsRes(parsedOutput, context);\n        case \"NoSuchResource\":\n        case \"com.amazonaws.cloudfront#NoSuchResource\":\n            throw await de_NoSuchResourceRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        case \"TooManyPublicKeysInKeyGroup\":\n        case \"com.amazonaws.cloudfront#TooManyPublicKeysInKeyGroup\":\n            throw await de_TooManyPublicKeysInKeyGroupRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_UpdateOriginAccessControlCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_UpdateOriginAccessControlCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.OriginAccessControl = de_OriginAccessControl(data, context);\n    return contents;\n};\nexports.de_UpdateOriginAccessControlCommand = de_UpdateOriginAccessControlCommand;\nconst de_UpdateOriginAccessControlCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"IllegalUpdate\":\n        case \"com.amazonaws.cloudfront#IllegalUpdate\":\n            throw await de_IllegalUpdateRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"NoSuchOriginAccessControl\":\n        case \"com.amazonaws.cloudfront#NoSuchOriginAccessControl\":\n            throw await de_NoSuchOriginAccessControlRes(parsedOutput, context);\n        case \"OriginAccessControlAlreadyExists\":\n        case \"com.amazonaws.cloudfront#OriginAccessControlAlreadyExists\":\n            throw await de_OriginAccessControlAlreadyExistsRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_UpdateOriginRequestPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_UpdateOriginRequestPolicyCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.OriginRequestPolicy = de_OriginRequestPolicy(data, context);\n    return contents;\n};\nexports.de_UpdateOriginRequestPolicyCommand = de_UpdateOriginRequestPolicyCommand;\nconst de_UpdateOriginRequestPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"IllegalUpdate\":\n        case \"com.amazonaws.cloudfront#IllegalUpdate\":\n            throw await de_IllegalUpdateRes(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await de_InconsistentQuantitiesRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"NoSuchOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchOriginRequestPolicy\":\n            throw await de_NoSuchOriginRequestPolicyRes(parsedOutput, context);\n        case \"OriginRequestPolicyAlreadyExists\":\n        case \"com.amazonaws.cloudfront#OriginRequestPolicyAlreadyExists\":\n            throw await de_OriginRequestPolicyAlreadyExistsRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        case \"TooManyCookiesInOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyCookiesInOriginRequestPolicy\":\n            throw await de_TooManyCookiesInOriginRequestPolicyRes(parsedOutput, context);\n        case \"TooManyHeadersInOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyHeadersInOriginRequestPolicy\":\n            throw await de_TooManyHeadersInOriginRequestPolicyRes(parsedOutput, context);\n        case \"TooManyQueryStringsInOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyQueryStringsInOriginRequestPolicy\":\n            throw await de_TooManyQueryStringsInOriginRequestPolicyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_UpdatePublicKeyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_UpdatePublicKeyCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.PublicKey = de_PublicKey(data, context);\n    return contents;\n};\nexports.de_UpdatePublicKeyCommand = de_UpdatePublicKeyCommand;\nconst de_UpdatePublicKeyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"CannotChangeImmutablePublicKeyFields\":\n        case \"com.amazonaws.cloudfront#CannotChangeImmutablePublicKeyFields\":\n            throw await de_CannotChangeImmutablePublicKeyFieldsRes(parsedOutput, context);\n        case \"IllegalUpdate\":\n        case \"com.amazonaws.cloudfront#IllegalUpdate\":\n            throw await de_IllegalUpdateRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"NoSuchPublicKey\":\n        case \"com.amazonaws.cloudfront#NoSuchPublicKey\":\n            throw await de_NoSuchPublicKeyRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_UpdateRealtimeLogConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_UpdateRealtimeLogConfigCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data[\"RealtimeLogConfig\"] !== undefined) {\n        contents.RealtimeLogConfig = de_RealtimeLogConfig(data[\"RealtimeLogConfig\"], context);\n    }\n    return contents;\n};\nexports.de_UpdateRealtimeLogConfigCommand = de_UpdateRealtimeLogConfigCommand;\nconst de_UpdateRealtimeLogConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"NoSuchRealtimeLogConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchRealtimeLogConfig\":\n            throw await de_NoSuchRealtimeLogConfigRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_UpdateResponseHeadersPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_UpdateResponseHeadersPolicyCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.ResponseHeadersPolicy = de_ResponseHeadersPolicy(data, context);\n    return contents;\n};\nexports.de_UpdateResponseHeadersPolicyCommand = de_UpdateResponseHeadersPolicyCommand;\nconst de_UpdateResponseHeadersPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"IllegalUpdate\":\n        case \"com.amazonaws.cloudfront#IllegalUpdate\":\n            throw await de_IllegalUpdateRes(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await de_InconsistentQuantitiesRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"NoSuchResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchResponseHeadersPolicy\":\n            throw await de_NoSuchResponseHeadersPolicyRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        case \"ResponseHeadersPolicyAlreadyExists\":\n        case \"com.amazonaws.cloudfront#ResponseHeadersPolicyAlreadyExists\":\n            throw await de_ResponseHeadersPolicyAlreadyExistsRes(parsedOutput, context);\n        case \"TooLongCSPInResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#TooLongCSPInResponseHeadersPolicy\":\n            throw await de_TooLongCSPInResponseHeadersPolicyRes(parsedOutput, context);\n        case \"TooManyCustomHeadersInResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyCustomHeadersInResponseHeadersPolicy\":\n            throw await de_TooManyCustomHeadersInResponseHeadersPolicyRes(parsedOutput, context);\n        case \"TooManyRemoveHeadersInResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyRemoveHeadersInResponseHeadersPolicy\":\n            throw await de_TooManyRemoveHeadersInResponseHeadersPolicyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_UpdateStreamingDistributionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_UpdateStreamingDistributionCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.StreamingDistribution = de_StreamingDistribution(data, context);\n    return contents;\n};\nexports.de_UpdateStreamingDistributionCommand = de_UpdateStreamingDistributionCommand;\nconst de_UpdateStreamingDistributionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await de_AccessDeniedRes(parsedOutput, context);\n        case \"CNAMEAlreadyExists\":\n        case \"com.amazonaws.cloudfront#CNAMEAlreadyExists\":\n            throw await de_CNAMEAlreadyExistsRes(parsedOutput, context);\n        case \"IllegalUpdate\":\n        case \"com.amazonaws.cloudfront#IllegalUpdate\":\n            throw await de_IllegalUpdateRes(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await de_InconsistentQuantitiesRes(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await de_InvalidArgumentRes(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await de_InvalidIfMatchVersionRes(parsedOutput, context);\n        case \"InvalidOriginAccessControl\":\n        case \"com.amazonaws.cloudfront#InvalidOriginAccessControl\":\n            throw await de_InvalidOriginAccessControlRes(parsedOutput, context);\n        case \"InvalidOriginAccessIdentity\":\n        case \"com.amazonaws.cloudfront#InvalidOriginAccessIdentity\":\n            throw await de_InvalidOriginAccessIdentityRes(parsedOutput, context);\n        case \"MissingBody\":\n        case \"com.amazonaws.cloudfront#MissingBody\":\n            throw await de_MissingBodyRes(parsedOutput, context);\n        case \"NoSuchStreamingDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchStreamingDistribution\":\n            throw await de_NoSuchStreamingDistributionRes(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await de_PreconditionFailedRes(parsedOutput, context);\n        case \"TooManyStreamingDistributionCNAMEs\":\n        case \"com.amazonaws.cloudfront#TooManyStreamingDistributionCNAMEs\":\n            throw await de_TooManyStreamingDistributionCNAMEsRes(parsedOutput, context);\n        case \"TooManyTrustedSigners\":\n        case \"com.amazonaws.cloudfront#TooManyTrustedSigners\":\n            throw await de_TooManyTrustedSignersRes(parsedOutput, context);\n        case \"TrustedSignerDoesNotExist\":\n        case \"com.amazonaws.cloudfront#TrustedSignerDoesNotExist\":\n            throw await de_TrustedSignerDoesNotExistRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst throwDefaultError = (0, smithy_client_1.withBaseException)(CloudFrontServiceException_1.CloudFrontServiceException);\nconst de_AccessDeniedRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.AccessDenied({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_BatchTooLargeRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.BatchTooLarge({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_CachePolicyAlreadyExistsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.CachePolicyAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_CachePolicyInUseRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.CachePolicyInUse({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_CannotChangeImmutablePublicKeyFieldsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.CannotChangeImmutablePublicKeyFields({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_CloudFrontOriginAccessIdentityAlreadyExistsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.CloudFrontOriginAccessIdentityAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_CloudFrontOriginAccessIdentityInUseRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.CloudFrontOriginAccessIdentityInUse({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_CNAMEAlreadyExistsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.CNAMEAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_ContinuousDeploymentPolicyAlreadyExistsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.ContinuousDeploymentPolicyAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_ContinuousDeploymentPolicyInUseRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.ContinuousDeploymentPolicyInUse({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_DistributionAlreadyExistsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.DistributionAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_DistributionNotDisabledRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.DistributionNotDisabled({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_FieldLevelEncryptionConfigAlreadyExistsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.FieldLevelEncryptionConfigAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_FieldLevelEncryptionConfigInUseRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.FieldLevelEncryptionConfigInUse({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_FieldLevelEncryptionProfileAlreadyExistsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.FieldLevelEncryptionProfileAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_FieldLevelEncryptionProfileInUseRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.FieldLevelEncryptionProfileInUse({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_FieldLevelEncryptionProfileSizeExceededRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.FieldLevelEncryptionProfileSizeExceeded({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_FunctionAlreadyExistsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.FunctionAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_FunctionInUseRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.FunctionInUse({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_FunctionSizeLimitExceededRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.FunctionSizeLimitExceeded({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_IllegalDeleteRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.IllegalDelete({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_IllegalFieldLevelEncryptionConfigAssociationWithCacheBehaviorRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_IllegalOriginAccessConfigurationRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.IllegalOriginAccessConfiguration({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_IllegalUpdateRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.IllegalUpdate({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InconsistentQuantitiesRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InconsistentQuantities({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidArgumentRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidArgument({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidDefaultRootObjectRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidDefaultRootObject({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidDomainNameForOriginAccessControlRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidDomainNameForOriginAccessControl({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidErrorCodeRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidErrorCode({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidForwardCookiesRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidForwardCookies({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidFunctionAssociationRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidFunctionAssociation({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidGeoRestrictionParameterRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidGeoRestrictionParameter({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidHeadersForS3OriginRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidHeadersForS3Origin({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidIfMatchVersionRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidIfMatchVersion({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidLambdaFunctionAssociationRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidLambdaFunctionAssociation({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidLocationCodeRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidLocationCode({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidMinimumProtocolVersionRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidMinimumProtocolVersion({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidOriginRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidOrigin({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidOriginAccessControlRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidOriginAccessControl({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidOriginAccessIdentityRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidOriginAccessIdentity({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidOriginKeepaliveTimeoutRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidOriginKeepaliveTimeout({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidOriginReadTimeoutRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidOriginReadTimeout({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidProtocolSettingsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidProtocolSettings({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidQueryStringParametersRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidQueryStringParameters({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidRelativePathRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidRelativePath({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidRequiredProtocolRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidRequiredProtocol({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidResponseCodeRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidResponseCode({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidTaggingRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidTagging({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidTTLOrderRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidTTLOrder({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidViewerCertificateRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidViewerCertificate({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_InvalidWebACLIdRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidWebACLId({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_KeyGroupAlreadyExistsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.KeyGroupAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_MissingBodyRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.MissingBody({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_MonitoringSubscriptionAlreadyExistsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.MonitoringSubscriptionAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_NoSuchCachePolicyRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.NoSuchCachePolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_NoSuchCloudFrontOriginAccessIdentityRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.NoSuchCloudFrontOriginAccessIdentity({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_NoSuchContinuousDeploymentPolicyRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.NoSuchContinuousDeploymentPolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_NoSuchDistributionRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.NoSuchDistribution({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_NoSuchFieldLevelEncryptionConfigRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.NoSuchFieldLevelEncryptionConfig({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_NoSuchFieldLevelEncryptionProfileRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.NoSuchFieldLevelEncryptionProfile({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_NoSuchFunctionExistsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.NoSuchFunctionExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_NoSuchInvalidationRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.NoSuchInvalidation({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_NoSuchMonitoringSubscriptionRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.NoSuchMonitoringSubscription({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_NoSuchOriginRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.NoSuchOrigin({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_NoSuchOriginAccessControlRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.NoSuchOriginAccessControl({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_NoSuchOriginRequestPolicyRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.NoSuchOriginRequestPolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_NoSuchPublicKeyRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.NoSuchPublicKey({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_NoSuchRealtimeLogConfigRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.NoSuchRealtimeLogConfig({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_NoSuchResourceRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.NoSuchResource({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_NoSuchResponseHeadersPolicyRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.NoSuchResponseHeadersPolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_NoSuchStreamingDistributionRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.NoSuchStreamingDistribution({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_OriginAccessControlAlreadyExistsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.OriginAccessControlAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_OriginAccessControlInUseRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.OriginAccessControlInUse({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_OriginRequestPolicyAlreadyExistsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.OriginRequestPolicyAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_OriginRequestPolicyInUseRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.OriginRequestPolicyInUse({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_PreconditionFailedRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.PreconditionFailed({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_PublicKeyAlreadyExistsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.PublicKeyAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_PublicKeyInUseRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.PublicKeyInUse({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_QueryArgProfileEmptyRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.QueryArgProfileEmpty({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_RealtimeLogConfigAlreadyExistsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.RealtimeLogConfigAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_RealtimeLogConfigInUseRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.RealtimeLogConfigInUse({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_RealtimeLogConfigOwnerMismatchRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.RealtimeLogConfigOwnerMismatch({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_ResourceInUseRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.ResourceInUse({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_ResponseHeadersPolicyAlreadyExistsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.ResponseHeadersPolicyAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_ResponseHeadersPolicyInUseRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.ResponseHeadersPolicyInUse({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_StagingDistributionInUseRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.StagingDistributionInUse({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_StreamingDistributionAlreadyExistsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.StreamingDistributionAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_StreamingDistributionNotDisabledRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.StreamingDistributionNotDisabled({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TestFunctionFailedRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.TestFunctionFailed({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooLongCSPInResponseHeadersPolicyRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.TooLongCSPInResponseHeadersPolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyCacheBehaviorsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyCacheBehaviors({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyCachePoliciesRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyCachePolicies({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyCertificatesRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyCertificates({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyCloudFrontOriginAccessIdentitiesRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyCloudFrontOriginAccessIdentities({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyContinuousDeploymentPoliciesRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyContinuousDeploymentPolicies({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyCookieNamesInWhiteListRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyCookieNamesInWhiteList({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyCookiesInCachePolicyRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyCookiesInCachePolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyCookiesInOriginRequestPolicyRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyCookiesInOriginRequestPolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyCustomHeadersInResponseHeadersPolicyRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.TooManyCustomHeadersInResponseHeadersPolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyDistributionCNAMEsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyDistributionCNAMEs({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyDistributionsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyDistributions({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyDistributionsAssociatedToCachePolicyRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyDistributionsAssociatedToCachePolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyDistributionsAssociatedToFieldLevelEncryptionConfigRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyDistributionsAssociatedToFieldLevelEncryptionConfig({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyDistributionsAssociatedToKeyGroupRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyDistributionsAssociatedToKeyGroup({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyDistributionsAssociatedToOriginAccessControlRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyDistributionsAssociatedToOriginAccessControl({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyDistributionsAssociatedToOriginRequestPolicyRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyDistributionsAssociatedToOriginRequestPolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyDistributionsAssociatedToResponseHeadersPolicyRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyDistributionsAssociatedToResponseHeadersPolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyDistributionsWithFunctionAssociationsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyDistributionsWithFunctionAssociations({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyDistributionsWithLambdaAssociationsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyDistributionsWithLambdaAssociations({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyDistributionsWithSingleFunctionARNRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyDistributionsWithSingleFunctionARN({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyFieldLevelEncryptionConfigsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyFieldLevelEncryptionConfigs({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyFieldLevelEncryptionContentTypeProfilesRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyFieldLevelEncryptionContentTypeProfiles({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyFieldLevelEncryptionEncryptionEntitiesRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyFieldLevelEncryptionEncryptionEntities({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyFieldLevelEncryptionFieldPatternsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyFieldLevelEncryptionFieldPatterns({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyFieldLevelEncryptionProfilesRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyFieldLevelEncryptionProfiles({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyFieldLevelEncryptionQueryArgProfilesRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyFieldLevelEncryptionQueryArgProfiles({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyFunctionAssociationsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyFunctionAssociations({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyFunctionsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyFunctions({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyHeadersInCachePolicyRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyHeadersInCachePolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyHeadersInForwardedValuesRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyHeadersInForwardedValues({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyHeadersInOriginRequestPolicyRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyHeadersInOriginRequestPolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyInvalidationsInProgressRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyInvalidationsInProgress({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyKeyGroupsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyKeyGroups({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyKeyGroupsAssociatedToDistributionRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyKeyGroupsAssociatedToDistribution({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyLambdaFunctionAssociationsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyLambdaFunctionAssociations({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyOriginAccessControlsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyOriginAccessControls({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyOriginCustomHeadersRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyOriginCustomHeaders({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyOriginGroupsPerDistributionRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyOriginGroupsPerDistribution({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyOriginRequestPoliciesRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyOriginRequestPolicies({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyOriginsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyOrigins({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyPublicKeysRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyPublicKeys({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyPublicKeysInKeyGroupRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyPublicKeysInKeyGroup({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyQueryStringParametersRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyQueryStringParameters({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyQueryStringsInCachePolicyRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyQueryStringsInCachePolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyQueryStringsInOriginRequestPolicyRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyQueryStringsInOriginRequestPolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyRealtimeLogConfigsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyRealtimeLogConfigs({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyRemoveHeadersInResponseHeadersPolicyRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.TooManyRemoveHeadersInResponseHeadersPolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyResponseHeadersPoliciesRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.TooManyResponseHeadersPolicies({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyStreamingDistributionCNAMEsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.TooManyStreamingDistributionCNAMEs({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyStreamingDistributionsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.TooManyStreamingDistributions({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TooManyTrustedSignersRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyTrustedSigners({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TrustedKeyGroupDoesNotExistRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TrustedKeyGroupDoesNotExist({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_TrustedSignerDoesNotExistRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TrustedSignerDoesNotExist({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst de_UnsupportedOperationRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.UnsupportedOperation({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst se_AccessControlAllowHeadersList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"Header\");\n    });\n};\nconst se_AccessControlAllowMethodsList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"ResponseHeadersPolicyAccessControlAllowMethodsValues\", entry);\n        return node.withName(\"Method\");\n    });\n};\nconst se_AccessControlAllowOriginsList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"Origin\");\n    });\n};\nconst se_AccessControlExposeHeadersList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"Header\");\n    });\n};\nconst se_Aliases = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Aliases\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_AliasList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_AliasList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"CNAME\");\n    });\n};\nconst se_AllowedMethods = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"AllowedMethods\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_MethodsList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    if (input.CachedMethods != null) {\n        const node = se_CachedMethods(input.CachedMethods, context).withName(\"CachedMethods\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_AwsAccountNumberList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"AwsAccountNumber\");\n    });\n};\nconst se_CacheBehavior = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CacheBehavior\");\n    if (input.PathPattern != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.PathPattern).withName(\"PathPattern\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.TargetOriginId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.TargetOriginId).withName(\"TargetOriginId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.TrustedSigners != null) {\n        const node = se_TrustedSigners(input.TrustedSigners, context).withName(\"TrustedSigners\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.TrustedKeyGroups != null) {\n        const node = se_TrustedKeyGroups(input.TrustedKeyGroups, context).withName(\"TrustedKeyGroups\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ViewerProtocolPolicy != null) {\n        const node = xml_builder_1.XmlNode.of(\"ViewerProtocolPolicy\", input.ViewerProtocolPolicy).withName(\"ViewerProtocolPolicy\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AllowedMethods != null) {\n        const node = se_AllowedMethods(input.AllowedMethods, context).withName(\"AllowedMethods\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SmoothStreaming != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.SmoothStreaming)).withName(\"SmoothStreaming\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Compress != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Compress)).withName(\"Compress\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.LambdaFunctionAssociations != null) {\n        const node = se_LambdaFunctionAssociations(input.LambdaFunctionAssociations, context).withName(\"LambdaFunctionAssociations\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FunctionAssociations != null) {\n        const node = se_FunctionAssociations(input.FunctionAssociations, context).withName(\"FunctionAssociations\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FieldLevelEncryptionId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.FieldLevelEncryptionId).withName(\"FieldLevelEncryptionId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RealtimeLogConfigArn != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.RealtimeLogConfigArn).withName(\"RealtimeLogConfigArn\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CachePolicyId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.CachePolicyId).withName(\"CachePolicyId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginRequestPolicyId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.OriginRequestPolicyId).withName(\"OriginRequestPolicyId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ResponseHeadersPolicyId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ResponseHeadersPolicyId).withName(\"ResponseHeadersPolicyId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ForwardedValues != null) {\n        const node = se_ForwardedValues(input.ForwardedValues, context).withName(\"ForwardedValues\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.MinTTL != null) {\n        const node = xml_builder_1.XmlNode.of(\"long\", String(input.MinTTL)).withName(\"MinTTL\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.DefaultTTL != null) {\n        const node = xml_builder_1.XmlNode.of(\"long\", String(input.DefaultTTL)).withName(\"DefaultTTL\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.MaxTTL != null) {\n        const node = xml_builder_1.XmlNode.of(\"long\", String(input.MaxTTL)).withName(\"MaxTTL\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_CacheBehaviorList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_CacheBehavior(entry, context);\n        return node.withName(\"CacheBehavior\");\n    });\n};\nconst se_CacheBehaviors = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CacheBehaviors\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_CacheBehaviorList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_CachedMethods = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CachedMethods\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_MethodsList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_CachePolicyConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CachePolicyConfig\");\n    if (input.Comment != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Comment).withName(\"Comment\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Name != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.DefaultTTL != null) {\n        const node = xml_builder_1.XmlNode.of(\"long\", String(input.DefaultTTL)).withName(\"DefaultTTL\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.MaxTTL != null) {\n        const node = xml_builder_1.XmlNode.of(\"long\", String(input.MaxTTL)).withName(\"MaxTTL\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.MinTTL != null) {\n        const node = xml_builder_1.XmlNode.of(\"long\", String(input.MinTTL)).withName(\"MinTTL\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ParametersInCacheKeyAndForwardedToOrigin != null) {\n        const node = se_ParametersInCacheKeyAndForwardedToOrigin(input.ParametersInCacheKeyAndForwardedToOrigin, context).withName(\"ParametersInCacheKeyAndForwardedToOrigin\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_CachePolicyCookiesConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CachePolicyCookiesConfig\");\n    if (input.CookieBehavior != null) {\n        const node = xml_builder_1.XmlNode.of(\"CachePolicyCookieBehavior\", input.CookieBehavior).withName(\"CookieBehavior\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Cookies != null) {\n        const node = se_CookieNames(input.Cookies, context).withName(\"Cookies\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_CachePolicyHeadersConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CachePolicyHeadersConfig\");\n    if (input.HeaderBehavior != null) {\n        const node = xml_builder_1.XmlNode.of(\"CachePolicyHeaderBehavior\", input.HeaderBehavior).withName(\"HeaderBehavior\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Headers != null) {\n        const node = se_Headers(input.Headers, context).withName(\"Headers\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_CachePolicyQueryStringsConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CachePolicyQueryStringsConfig\");\n    if (input.QueryStringBehavior != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"CachePolicyQueryStringBehavior\", input.QueryStringBehavior)\n            .withName(\"QueryStringBehavior\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QueryStrings != null) {\n        const node = se_QueryStringNames(input.QueryStrings, context).withName(\"QueryStrings\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_CloudFrontOriginAccessIdentityConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CloudFrontOriginAccessIdentityConfig\");\n    if (input.CallerReference != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.CallerReference).withName(\"CallerReference\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Comment != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Comment).withName(\"Comment\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ContentTypeProfile = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ContentTypeProfile\");\n    if (input.Format != null) {\n        const node = xml_builder_1.XmlNode.of(\"Format\", input.Format).withName(\"Format\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ProfileId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ProfileId).withName(\"ProfileId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ContentType != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ContentType).withName(\"ContentType\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ContentTypeProfileConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ContentTypeProfileConfig\");\n    if (input.ForwardWhenContentTypeIsUnknown != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"boolean\", String(input.ForwardWhenContentTypeIsUnknown))\n            .withName(\"ForwardWhenContentTypeIsUnknown\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ContentTypeProfiles != null) {\n        const node = se_ContentTypeProfiles(input.ContentTypeProfiles, context).withName(\"ContentTypeProfiles\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ContentTypeProfileList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_ContentTypeProfile(entry, context);\n        return node.withName(\"ContentTypeProfile\");\n    });\n};\nconst se_ContentTypeProfiles = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ContentTypeProfiles\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_ContentTypeProfileList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_ContinuousDeploymentPolicyConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ContinuousDeploymentPolicyConfig\");\n    if (input.StagingDistributionDnsNames != null) {\n        const node = se_StagingDistributionDnsNames(input.StagingDistributionDnsNames, context).withName(\"StagingDistributionDnsNames\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Enabled != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Enabled)).withName(\"Enabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.TrafficConfig != null) {\n        const node = se_TrafficConfig(input.TrafficConfig, context).withName(\"TrafficConfig\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ContinuousDeploymentSingleHeaderConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ContinuousDeploymentSingleHeaderConfig\");\n    if (input.Header != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Header).withName(\"Header\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Value != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Value).withName(\"Value\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ContinuousDeploymentSingleWeightConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ContinuousDeploymentSingleWeightConfig\");\n    if (input.Weight != null) {\n        const node = xml_builder_1.XmlNode.of(\"float\", String(input.Weight)).withName(\"Weight\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SessionStickinessConfig != null) {\n        const node = se_SessionStickinessConfig(input.SessionStickinessConfig, context).withName(\"SessionStickinessConfig\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_CookieNameList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"Name\");\n    });\n};\nconst se_CookieNames = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CookieNames\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_CookieNameList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_CookiePreference = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CookiePreference\");\n    if (input.Forward != null) {\n        const node = xml_builder_1.XmlNode.of(\"ItemSelection\", input.Forward).withName(\"Forward\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.WhitelistedNames != null) {\n        const node = se_CookieNames(input.WhitelistedNames, context).withName(\"WhitelistedNames\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_CustomErrorResponse = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CustomErrorResponse\");\n    if (input.ErrorCode != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.ErrorCode)).withName(\"ErrorCode\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ResponsePagePath != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ResponsePagePath).withName(\"ResponsePagePath\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ResponseCode != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ResponseCode).withName(\"ResponseCode\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ErrorCachingMinTTL != null) {\n        const node = xml_builder_1.XmlNode.of(\"long\", String(input.ErrorCachingMinTTL)).withName(\"ErrorCachingMinTTL\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_CustomErrorResponseList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_CustomErrorResponse(entry, context);\n        return node.withName(\"CustomErrorResponse\");\n    });\n};\nconst se_CustomErrorResponses = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CustomErrorResponses\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_CustomErrorResponseList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_CustomHeaders = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CustomHeaders\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_OriginCustomHeadersList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_CustomOriginConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CustomOriginConfig\");\n    if (input.HTTPPort != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.HTTPPort)).withName(\"HTTPPort\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.HTTPSPort != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.HTTPSPort)).withName(\"HTTPSPort\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginProtocolPolicy != null) {\n        const node = xml_builder_1.XmlNode.of(\"OriginProtocolPolicy\", input.OriginProtocolPolicy).withName(\"OriginProtocolPolicy\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginSslProtocols != null) {\n        const node = se_OriginSslProtocols(input.OriginSslProtocols, context).withName(\"OriginSslProtocols\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginReadTimeout != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.OriginReadTimeout)).withName(\"OriginReadTimeout\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginKeepaliveTimeout != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.OriginKeepaliveTimeout)).withName(\"OriginKeepaliveTimeout\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_DefaultCacheBehavior = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"DefaultCacheBehavior\");\n    if (input.TargetOriginId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.TargetOriginId).withName(\"TargetOriginId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.TrustedSigners != null) {\n        const node = se_TrustedSigners(input.TrustedSigners, context).withName(\"TrustedSigners\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.TrustedKeyGroups != null) {\n        const node = se_TrustedKeyGroups(input.TrustedKeyGroups, context).withName(\"TrustedKeyGroups\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ViewerProtocolPolicy != null) {\n        const node = xml_builder_1.XmlNode.of(\"ViewerProtocolPolicy\", input.ViewerProtocolPolicy).withName(\"ViewerProtocolPolicy\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AllowedMethods != null) {\n        const node = se_AllowedMethods(input.AllowedMethods, context).withName(\"AllowedMethods\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SmoothStreaming != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.SmoothStreaming)).withName(\"SmoothStreaming\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Compress != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Compress)).withName(\"Compress\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.LambdaFunctionAssociations != null) {\n        const node = se_LambdaFunctionAssociations(input.LambdaFunctionAssociations, context).withName(\"LambdaFunctionAssociations\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FunctionAssociations != null) {\n        const node = se_FunctionAssociations(input.FunctionAssociations, context).withName(\"FunctionAssociations\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FieldLevelEncryptionId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.FieldLevelEncryptionId).withName(\"FieldLevelEncryptionId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RealtimeLogConfigArn != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.RealtimeLogConfigArn).withName(\"RealtimeLogConfigArn\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CachePolicyId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.CachePolicyId).withName(\"CachePolicyId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginRequestPolicyId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.OriginRequestPolicyId).withName(\"OriginRequestPolicyId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ResponseHeadersPolicyId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ResponseHeadersPolicyId).withName(\"ResponseHeadersPolicyId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ForwardedValues != null) {\n        const node = se_ForwardedValues(input.ForwardedValues, context).withName(\"ForwardedValues\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.MinTTL != null) {\n        const node = xml_builder_1.XmlNode.of(\"long\", String(input.MinTTL)).withName(\"MinTTL\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.DefaultTTL != null) {\n        const node = xml_builder_1.XmlNode.of(\"long\", String(input.DefaultTTL)).withName(\"DefaultTTL\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.MaxTTL != null) {\n        const node = xml_builder_1.XmlNode.of(\"long\", String(input.MaxTTL)).withName(\"MaxTTL\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_DistributionConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"DistributionConfig\");\n    if (input.CallerReference != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.CallerReference).withName(\"CallerReference\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Aliases != null) {\n        const node = se_Aliases(input.Aliases, context).withName(\"Aliases\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.DefaultRootObject != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.DefaultRootObject).withName(\"DefaultRootObject\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Origins != null) {\n        const node = se_Origins(input.Origins, context).withName(\"Origins\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginGroups != null) {\n        const node = se_OriginGroups(input.OriginGroups, context).withName(\"OriginGroups\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.DefaultCacheBehavior != null) {\n        const node = se_DefaultCacheBehavior(input.DefaultCacheBehavior, context).withName(\"DefaultCacheBehavior\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CacheBehaviors != null) {\n        const node = se_CacheBehaviors(input.CacheBehaviors, context).withName(\"CacheBehaviors\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CustomErrorResponses != null) {\n        const node = se_CustomErrorResponses(input.CustomErrorResponses, context).withName(\"CustomErrorResponses\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Comment != null) {\n        const node = xml_builder_1.XmlNode.of(\"CommentType\", input.Comment).withName(\"Comment\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Logging != null) {\n        const node = se_LoggingConfig(input.Logging, context).withName(\"Logging\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.PriceClass != null) {\n        const node = xml_builder_1.XmlNode.of(\"PriceClass\", input.PriceClass).withName(\"PriceClass\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Enabled != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Enabled)).withName(\"Enabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ViewerCertificate != null) {\n        const node = se_ViewerCertificate(input.ViewerCertificate, context).withName(\"ViewerCertificate\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Restrictions != null) {\n        const node = se_Restrictions(input.Restrictions, context).withName(\"Restrictions\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.WebACLId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.WebACLId).withName(\"WebACLId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.HttpVersion != null) {\n        const node = xml_builder_1.XmlNode.of(\"HttpVersion\", input.HttpVersion).withName(\"HttpVersion\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IsIPV6Enabled != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.IsIPV6Enabled)).withName(\"IsIPV6Enabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ContinuousDeploymentPolicyId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ContinuousDeploymentPolicyId).withName(\"ContinuousDeploymentPolicyId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Staging != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Staging)).withName(\"Staging\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_DistributionConfigWithTags = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"DistributionConfigWithTags\");\n    if (input.DistributionConfig != null) {\n        const node = se_DistributionConfig(input.DistributionConfig, context).withName(\"DistributionConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags != null) {\n        const node = se_Tags(input.Tags, context).withName(\"Tags\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_EncryptionEntities = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"EncryptionEntities\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_EncryptionEntityList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_EncryptionEntity = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"EncryptionEntity\");\n    if (input.PublicKeyId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.PublicKeyId).withName(\"PublicKeyId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ProviderId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ProviderId).withName(\"ProviderId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FieldPatterns != null) {\n        const node = se_FieldPatterns(input.FieldPatterns, context).withName(\"FieldPatterns\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_EncryptionEntityList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_EncryptionEntity(entry, context);\n        return node.withName(\"EncryptionEntity\");\n    });\n};\nconst se_EndPoint = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"EndPoint\");\n    if (input.StreamType != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.StreamType).withName(\"StreamType\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.KinesisStreamConfig != null) {\n        const node = se_KinesisStreamConfig(input.KinesisStreamConfig, context).withName(\"KinesisStreamConfig\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_EndPointList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_EndPoint(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_FieldLevelEncryptionConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"FieldLevelEncryptionConfig\");\n    if (input.CallerReference != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.CallerReference).withName(\"CallerReference\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Comment != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Comment).withName(\"Comment\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QueryArgProfileConfig != null) {\n        const node = se_QueryArgProfileConfig(input.QueryArgProfileConfig, context).withName(\"QueryArgProfileConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ContentTypeProfileConfig != null) {\n        const node = se_ContentTypeProfileConfig(input.ContentTypeProfileConfig, context).withName(\"ContentTypeProfileConfig\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_FieldLevelEncryptionProfileConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"FieldLevelEncryptionProfileConfig\");\n    if (input.Name != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CallerReference != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.CallerReference).withName(\"CallerReference\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Comment != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Comment).withName(\"Comment\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EncryptionEntities != null) {\n        const node = se_EncryptionEntities(input.EncryptionEntities, context).withName(\"EncryptionEntities\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_FieldList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"Field\");\n    });\n};\nconst se_FieldPatternList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"FieldPattern\");\n    });\n};\nconst se_FieldPatterns = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"FieldPatterns\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_FieldPatternList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_ForwardedValues = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ForwardedValues\");\n    if (input.QueryString != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.QueryString)).withName(\"QueryString\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Cookies != null) {\n        const node = se_CookiePreference(input.Cookies, context).withName(\"Cookies\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Headers != null) {\n        const node = se_Headers(input.Headers, context).withName(\"Headers\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QueryStringCacheKeys != null) {\n        const node = se_QueryStringCacheKeys(input.QueryStringCacheKeys, context).withName(\"QueryStringCacheKeys\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_FunctionAssociation = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"FunctionAssociation\");\n    if (input.FunctionARN != null) {\n        const node = xml_builder_1.XmlNode.of(\"FunctionARN\", input.FunctionARN).withName(\"FunctionARN\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EventType != null) {\n        const node = xml_builder_1.XmlNode.of(\"EventType\", input.EventType).withName(\"EventType\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_FunctionAssociationList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_FunctionAssociation(entry, context);\n        return node.withName(\"FunctionAssociation\");\n    });\n};\nconst se_FunctionAssociations = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"FunctionAssociations\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_FunctionAssociationList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_FunctionConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"FunctionConfig\");\n    if (input.Comment != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Comment).withName(\"Comment\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Runtime != null) {\n        const node = xml_builder_1.XmlNode.of(\"FunctionRuntime\", input.Runtime).withName(\"Runtime\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_GeoRestriction = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"GeoRestriction\");\n    if (input.RestrictionType != null) {\n        const node = xml_builder_1.XmlNode.of(\"GeoRestrictionType\", input.RestrictionType).withName(\"RestrictionType\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_LocationList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_HeaderList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"Name\");\n    });\n};\nconst se_Headers = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Headers\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_HeaderList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_InvalidationBatch = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"InvalidationBatch\");\n    if (input.Paths != null) {\n        const node = se_Paths(input.Paths, context).withName(\"Paths\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CallerReference != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.CallerReference).withName(\"CallerReference\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_KeyGroupConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"KeyGroupConfig\");\n    if (input.Name != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_PublicKeyIdList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    if (input.Comment != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Comment).withName(\"Comment\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_KinesisStreamConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"KinesisStreamConfig\");\n    if (input.RoleARN != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.RoleARN).withName(\"RoleARN\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.StreamARN != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.StreamARN).withName(\"StreamARN\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_LambdaFunctionAssociation = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"LambdaFunctionAssociation\");\n    if (input.LambdaFunctionARN != null) {\n        const node = xml_builder_1.XmlNode.of(\"LambdaFunctionARN\", input.LambdaFunctionARN).withName(\"LambdaFunctionARN\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EventType != null) {\n        const node = xml_builder_1.XmlNode.of(\"EventType\", input.EventType).withName(\"EventType\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IncludeBody != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.IncludeBody)).withName(\"IncludeBody\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_LambdaFunctionAssociationList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_LambdaFunctionAssociation(entry, context);\n        return node.withName(\"LambdaFunctionAssociation\");\n    });\n};\nconst se_LambdaFunctionAssociations = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"LambdaFunctionAssociations\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_LambdaFunctionAssociationList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_LocationList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"Location\");\n    });\n};\nconst se_LoggingConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"LoggingConfig\");\n    if (input.Enabled != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Enabled)).withName(\"Enabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IncludeCookies != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.IncludeCookies)).withName(\"IncludeCookies\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Bucket != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Bucket).withName(\"Bucket\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_MethodsList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"Method\", entry);\n        return node.withName(\"Method\");\n    });\n};\nconst se_MonitoringSubscription = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"MonitoringSubscription\");\n    if (input.RealtimeMetricsSubscriptionConfig != null) {\n        const node = se_RealtimeMetricsSubscriptionConfig(input.RealtimeMetricsSubscriptionConfig, context).withName(\"RealtimeMetricsSubscriptionConfig\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_Origin = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Origin\");\n    if (input.Id != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Id).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.DomainName != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.DomainName).withName(\"DomainName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginPath != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.OriginPath).withName(\"OriginPath\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CustomHeaders != null) {\n        const node = se_CustomHeaders(input.CustomHeaders, context).withName(\"CustomHeaders\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.S3OriginConfig != null) {\n        const node = se_S3OriginConfig(input.S3OriginConfig, context).withName(\"S3OriginConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CustomOriginConfig != null) {\n        const node = se_CustomOriginConfig(input.CustomOriginConfig, context).withName(\"CustomOriginConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ConnectionAttempts != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.ConnectionAttempts)).withName(\"ConnectionAttempts\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ConnectionTimeout != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.ConnectionTimeout)).withName(\"ConnectionTimeout\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginShield != null) {\n        const node = se_OriginShield(input.OriginShield, context).withName(\"OriginShield\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginAccessControlId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.OriginAccessControlId).withName(\"OriginAccessControlId\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_OriginAccessControlConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OriginAccessControlConfig\");\n    if (input.Name != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Description != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Description).withName(\"Description\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SigningProtocol != null) {\n        const node = xml_builder_1.XmlNode.of(\"OriginAccessControlSigningProtocols\", input.SigningProtocol).withName(\"SigningProtocol\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SigningBehavior != null) {\n        const node = xml_builder_1.XmlNode.of(\"OriginAccessControlSigningBehaviors\", input.SigningBehavior).withName(\"SigningBehavior\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginAccessControlOriginType != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"OriginAccessControlOriginTypes\", input.OriginAccessControlOriginType)\n            .withName(\"OriginAccessControlOriginType\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_OriginCustomHeader = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OriginCustomHeader\");\n    if (input.HeaderName != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.HeaderName).withName(\"HeaderName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.HeaderValue != null) {\n        const node = xml_builder_1.XmlNode.of(\"sensitiveStringType\", input.HeaderValue).withName(\"HeaderValue\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_OriginCustomHeadersList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_OriginCustomHeader(entry, context);\n        return node.withName(\"OriginCustomHeader\");\n    });\n};\nconst se_OriginGroup = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OriginGroup\");\n    if (input.Id != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Id).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FailoverCriteria != null) {\n        const node = se_OriginGroupFailoverCriteria(input.FailoverCriteria, context).withName(\"FailoverCriteria\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Members != null) {\n        const node = se_OriginGroupMembers(input.Members, context).withName(\"Members\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_OriginGroupFailoverCriteria = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OriginGroupFailoverCriteria\");\n    if (input.StatusCodes != null) {\n        const node = se_StatusCodes(input.StatusCodes, context).withName(\"StatusCodes\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_OriginGroupList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_OriginGroup(entry, context);\n        return node.withName(\"OriginGroup\");\n    });\n};\nconst se_OriginGroupMember = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OriginGroupMember\");\n    if (input.OriginId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.OriginId).withName(\"OriginId\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_OriginGroupMemberList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_OriginGroupMember(entry, context);\n        return node.withName(\"OriginGroupMember\");\n    });\n};\nconst se_OriginGroupMembers = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OriginGroupMembers\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_OriginGroupMemberList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_OriginGroups = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OriginGroups\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_OriginGroupList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_OriginList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_Origin(entry, context);\n        return node.withName(\"Origin\");\n    });\n};\nconst se_OriginRequestPolicyConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OriginRequestPolicyConfig\");\n    if (input.Comment != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Comment).withName(\"Comment\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Name != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.HeadersConfig != null) {\n        const node = se_OriginRequestPolicyHeadersConfig(input.HeadersConfig, context).withName(\"HeadersConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CookiesConfig != null) {\n        const node = se_OriginRequestPolicyCookiesConfig(input.CookiesConfig, context).withName(\"CookiesConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QueryStringsConfig != null) {\n        const node = se_OriginRequestPolicyQueryStringsConfig(input.QueryStringsConfig, context).withName(\"QueryStringsConfig\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_OriginRequestPolicyCookiesConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OriginRequestPolicyCookiesConfig\");\n    if (input.CookieBehavior != null) {\n        const node = xml_builder_1.XmlNode.of(\"OriginRequestPolicyCookieBehavior\", input.CookieBehavior).withName(\"CookieBehavior\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Cookies != null) {\n        const node = se_CookieNames(input.Cookies, context).withName(\"Cookies\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_OriginRequestPolicyHeadersConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OriginRequestPolicyHeadersConfig\");\n    if (input.HeaderBehavior != null) {\n        const node = xml_builder_1.XmlNode.of(\"OriginRequestPolicyHeaderBehavior\", input.HeaderBehavior).withName(\"HeaderBehavior\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Headers != null) {\n        const node = se_Headers(input.Headers, context).withName(\"Headers\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_OriginRequestPolicyQueryStringsConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OriginRequestPolicyQueryStringsConfig\");\n    if (input.QueryStringBehavior != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"OriginRequestPolicyQueryStringBehavior\", input.QueryStringBehavior)\n            .withName(\"QueryStringBehavior\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QueryStrings != null) {\n        const node = se_QueryStringNames(input.QueryStrings, context).withName(\"QueryStrings\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_Origins = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Origins\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_OriginList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_OriginShield = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OriginShield\");\n    if (input.Enabled != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Enabled)).withName(\"Enabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginShieldRegion != null) {\n        const node = xml_builder_1.XmlNode.of(\"OriginShieldRegion\", input.OriginShieldRegion).withName(\"OriginShieldRegion\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_OriginSslProtocols = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OriginSslProtocols\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_SslProtocolsList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_ParametersInCacheKeyAndForwardedToOrigin = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ParametersInCacheKeyAndForwardedToOrigin\");\n    if (input.EnableAcceptEncodingGzip != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.EnableAcceptEncodingGzip)).withName(\"EnableAcceptEncodingGzip\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EnableAcceptEncodingBrotli != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"boolean\", String(input.EnableAcceptEncodingBrotli))\n            .withName(\"EnableAcceptEncodingBrotli\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.HeadersConfig != null) {\n        const node = se_CachePolicyHeadersConfig(input.HeadersConfig, context).withName(\"HeadersConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CookiesConfig != null) {\n        const node = se_CachePolicyCookiesConfig(input.CookiesConfig, context).withName(\"CookiesConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QueryStringsConfig != null) {\n        const node = se_CachePolicyQueryStringsConfig(input.QueryStringsConfig, context).withName(\"QueryStringsConfig\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_PathList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"Path\");\n    });\n};\nconst se_Paths = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Paths\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_PathList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_PublicKeyConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"PublicKeyConfig\");\n    if (input.CallerReference != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.CallerReference).withName(\"CallerReference\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Name != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EncodedKey != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.EncodedKey).withName(\"EncodedKey\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Comment != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Comment).withName(\"Comment\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_PublicKeyIdList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"PublicKey\");\n    });\n};\nconst se_QueryArgProfile = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"QueryArgProfile\");\n    if (input.QueryArg != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.QueryArg).withName(\"QueryArg\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ProfileId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ProfileId).withName(\"ProfileId\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_QueryArgProfileConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"QueryArgProfileConfig\");\n    if (input.ForwardWhenQueryArgProfileIsUnknown != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"boolean\", String(input.ForwardWhenQueryArgProfileIsUnknown))\n            .withName(\"ForwardWhenQueryArgProfileIsUnknown\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QueryArgProfiles != null) {\n        const node = se_QueryArgProfiles(input.QueryArgProfiles, context).withName(\"QueryArgProfiles\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_QueryArgProfileList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_QueryArgProfile(entry, context);\n        return node.withName(\"QueryArgProfile\");\n    });\n};\nconst se_QueryArgProfiles = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"QueryArgProfiles\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_QueryArgProfileList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_QueryStringCacheKeys = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"QueryStringCacheKeys\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_QueryStringCacheKeysList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_QueryStringCacheKeysList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"Name\");\n    });\n};\nconst se_QueryStringNames = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"QueryStringNames\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_QueryStringNamesList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_QueryStringNamesList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"Name\");\n    });\n};\nconst se_RealtimeMetricsSubscriptionConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"RealtimeMetricsSubscriptionConfig\");\n    if (input.RealtimeMetricsSubscriptionStatus != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"RealtimeMetricsSubscriptionStatus\", input.RealtimeMetricsSubscriptionStatus)\n            .withName(\"RealtimeMetricsSubscriptionStatus\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ResponseHeadersPolicyAccessControlAllowHeaders = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyAccessControlAllowHeaders\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_AccessControlAllowHeadersList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_ResponseHeadersPolicyAccessControlAllowMethods = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyAccessControlAllowMethods\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_AccessControlAllowMethodsList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_ResponseHeadersPolicyAccessControlAllowOrigins = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyAccessControlAllowOrigins\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_AccessControlAllowOriginsList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_ResponseHeadersPolicyAccessControlExposeHeaders = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyAccessControlExposeHeaders\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_AccessControlExposeHeadersList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_ResponseHeadersPolicyConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyConfig\");\n    if (input.Comment != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Comment).withName(\"Comment\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Name != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CorsConfig != null) {\n        const node = se_ResponseHeadersPolicyCorsConfig(input.CorsConfig, context).withName(\"CorsConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SecurityHeadersConfig != null) {\n        const node = se_ResponseHeadersPolicySecurityHeadersConfig(input.SecurityHeadersConfig, context).withName(\"SecurityHeadersConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ServerTimingHeadersConfig != null) {\n        const node = se_ResponseHeadersPolicyServerTimingHeadersConfig(input.ServerTimingHeadersConfig, context).withName(\"ServerTimingHeadersConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CustomHeadersConfig != null) {\n        const node = se_ResponseHeadersPolicyCustomHeadersConfig(input.CustomHeadersConfig, context).withName(\"CustomHeadersConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RemoveHeadersConfig != null) {\n        const node = se_ResponseHeadersPolicyRemoveHeadersConfig(input.RemoveHeadersConfig, context).withName(\"RemoveHeadersConfig\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ResponseHeadersPolicyContentSecurityPolicy = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyContentSecurityPolicy\");\n    if (input.Override != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Override)).withName(\"Override\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ContentSecurityPolicy != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ContentSecurityPolicy).withName(\"ContentSecurityPolicy\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ResponseHeadersPolicyContentTypeOptions = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyContentTypeOptions\");\n    if (input.Override != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Override)).withName(\"Override\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ResponseHeadersPolicyCorsConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyCorsConfig\");\n    if (input.AccessControlAllowOrigins != null) {\n        const node = se_ResponseHeadersPolicyAccessControlAllowOrigins(input.AccessControlAllowOrigins, context).withName(\"AccessControlAllowOrigins\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessControlAllowHeaders != null) {\n        const node = se_ResponseHeadersPolicyAccessControlAllowHeaders(input.AccessControlAllowHeaders, context).withName(\"AccessControlAllowHeaders\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessControlAllowMethods != null) {\n        const node = se_ResponseHeadersPolicyAccessControlAllowMethods(input.AccessControlAllowMethods, context).withName(\"AccessControlAllowMethods\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessControlAllowCredentials != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"boolean\", String(input.AccessControlAllowCredentials))\n            .withName(\"AccessControlAllowCredentials\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessControlExposeHeaders != null) {\n        const node = se_ResponseHeadersPolicyAccessControlExposeHeaders(input.AccessControlExposeHeaders, context).withName(\"AccessControlExposeHeaders\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessControlMaxAgeSec != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.AccessControlMaxAgeSec)).withName(\"AccessControlMaxAgeSec\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginOverride != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.OriginOverride)).withName(\"OriginOverride\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ResponseHeadersPolicyCustomHeader = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyCustomHeader\");\n    if (input.Header != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Header).withName(\"Header\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Value != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Value).withName(\"Value\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Override != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Override)).withName(\"Override\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ResponseHeadersPolicyCustomHeaderList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_ResponseHeadersPolicyCustomHeader(entry, context);\n        return node.withName(\"ResponseHeadersPolicyCustomHeader\");\n    });\n};\nconst se_ResponseHeadersPolicyCustomHeadersConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyCustomHeadersConfig\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_ResponseHeadersPolicyCustomHeaderList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_ResponseHeadersPolicyFrameOptions = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyFrameOptions\");\n    if (input.Override != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Override)).withName(\"Override\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FrameOption != null) {\n        const node = xml_builder_1.XmlNode.of(\"FrameOptionsList\", input.FrameOption).withName(\"FrameOption\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ResponseHeadersPolicyReferrerPolicy = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyReferrerPolicy\");\n    if (input.Override != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Override)).withName(\"Override\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReferrerPolicy != null) {\n        const node = xml_builder_1.XmlNode.of(\"ReferrerPolicyList\", input.ReferrerPolicy).withName(\"ReferrerPolicy\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ResponseHeadersPolicyRemoveHeader = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyRemoveHeader\");\n    if (input.Header != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Header).withName(\"Header\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ResponseHeadersPolicyRemoveHeaderList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_ResponseHeadersPolicyRemoveHeader(entry, context);\n        return node.withName(\"ResponseHeadersPolicyRemoveHeader\");\n    });\n};\nconst se_ResponseHeadersPolicyRemoveHeadersConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyRemoveHeadersConfig\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_ResponseHeadersPolicyRemoveHeaderList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_ResponseHeadersPolicySecurityHeadersConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicySecurityHeadersConfig\");\n    if (input.XSSProtection != null) {\n        const node = se_ResponseHeadersPolicyXSSProtection(input.XSSProtection, context).withName(\"XSSProtection\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FrameOptions != null) {\n        const node = se_ResponseHeadersPolicyFrameOptions(input.FrameOptions, context).withName(\"FrameOptions\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReferrerPolicy != null) {\n        const node = se_ResponseHeadersPolicyReferrerPolicy(input.ReferrerPolicy, context).withName(\"ReferrerPolicy\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ContentSecurityPolicy != null) {\n        const node = se_ResponseHeadersPolicyContentSecurityPolicy(input.ContentSecurityPolicy, context).withName(\"ContentSecurityPolicy\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ContentTypeOptions != null) {\n        const node = se_ResponseHeadersPolicyContentTypeOptions(input.ContentTypeOptions, context).withName(\"ContentTypeOptions\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.StrictTransportSecurity != null) {\n        const node = se_ResponseHeadersPolicyStrictTransportSecurity(input.StrictTransportSecurity, context).withName(\"StrictTransportSecurity\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ResponseHeadersPolicyServerTimingHeadersConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyServerTimingHeadersConfig\");\n    if (input.Enabled != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Enabled)).withName(\"Enabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SamplingRate != null) {\n        const node = xml_builder_1.XmlNode.of(\"SamplingRate\", String(input.SamplingRate)).withName(\"SamplingRate\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ResponseHeadersPolicyStrictTransportSecurity = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyStrictTransportSecurity\");\n    if (input.Override != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Override)).withName(\"Override\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IncludeSubdomains != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.IncludeSubdomains)).withName(\"IncludeSubdomains\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Preload != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Preload)).withName(\"Preload\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessControlMaxAgeSec != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.AccessControlMaxAgeSec)).withName(\"AccessControlMaxAgeSec\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ResponseHeadersPolicyXSSProtection = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyXSSProtection\");\n    if (input.Override != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Override)).withName(\"Override\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Protection != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Protection)).withName(\"Protection\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ModeBlock != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.ModeBlock)).withName(\"ModeBlock\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReportUri != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ReportUri).withName(\"ReportUri\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_Restrictions = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Restrictions\");\n    if (input.GeoRestriction != null) {\n        const node = se_GeoRestriction(input.GeoRestriction, context).withName(\"GeoRestriction\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_S3Origin = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"S3Origin\");\n    if (input.DomainName != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.DomainName).withName(\"DomainName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginAccessIdentity != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.OriginAccessIdentity).withName(\"OriginAccessIdentity\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_S3OriginConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"S3OriginConfig\");\n    if (input.OriginAccessIdentity != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.OriginAccessIdentity).withName(\"OriginAccessIdentity\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_SessionStickinessConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"SessionStickinessConfig\");\n    if (input.IdleTTL != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.IdleTTL)).withName(\"IdleTTL\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.MaximumTTL != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.MaximumTTL)).withName(\"MaximumTTL\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_SslProtocolsList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"SslProtocol\", entry);\n        return node.withName(\"SslProtocol\");\n    });\n};\nconst se_StagingDistributionDnsNameList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"DnsName\");\n    });\n};\nconst se_StagingDistributionDnsNames = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"StagingDistributionDnsNames\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_StagingDistributionDnsNameList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_StatusCodeList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(entry));\n        return node.withName(\"StatusCode\");\n    });\n};\nconst se_StatusCodes = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"StatusCodes\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_StatusCodeList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_StreamingDistributionConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"StreamingDistributionConfig\");\n    if (input.CallerReference != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.CallerReference).withName(\"CallerReference\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.S3Origin != null) {\n        const node = se_S3Origin(input.S3Origin, context).withName(\"S3Origin\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Aliases != null) {\n        const node = se_Aliases(input.Aliases, context).withName(\"Aliases\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Comment != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Comment).withName(\"Comment\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Logging != null) {\n        const node = se_StreamingLoggingConfig(input.Logging, context).withName(\"Logging\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.TrustedSigners != null) {\n        const node = se_TrustedSigners(input.TrustedSigners, context).withName(\"TrustedSigners\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.PriceClass != null) {\n        const node = xml_builder_1.XmlNode.of(\"PriceClass\", input.PriceClass).withName(\"PriceClass\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Enabled != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Enabled)).withName(\"Enabled\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_StreamingDistributionConfigWithTags = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"StreamingDistributionConfigWithTags\");\n    if (input.StreamingDistributionConfig != null) {\n        const node = se_StreamingDistributionConfig(input.StreamingDistributionConfig, context).withName(\"StreamingDistributionConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags != null) {\n        const node = se_Tags(input.Tags, context).withName(\"Tags\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_StreamingLoggingConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"StreamingLoggingConfig\");\n    if (input.Enabled != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Enabled)).withName(\"Enabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Bucket != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Bucket).withName(\"Bucket\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_Tag = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Tag\");\n    if (input.Key != null) {\n        const node = xml_builder_1.XmlNode.of(\"TagKey\", input.Key).withName(\"Key\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Value != null) {\n        const node = xml_builder_1.XmlNode.of(\"TagValue\", input.Value).withName(\"Value\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_TagKeyList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"TagKey\", entry);\n        return node.withName(\"Key\");\n    });\n};\nconst se_TagKeys = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"TagKeys\");\n    if (input.Items != null) {\n        const nodes = se_TagKeyList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_TagList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_Tag(entry, context);\n        return node.withName(\"Tag\");\n    });\n};\nconst se_Tags = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Tags\");\n    if (input.Items != null) {\n        const nodes = se_TagList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_TrafficConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"TrafficConfig\");\n    if (input.SingleWeightConfig != null) {\n        const node = se_ContinuousDeploymentSingleWeightConfig(input.SingleWeightConfig, context).withName(\"SingleWeightConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SingleHeaderConfig != null) {\n        const node = se_ContinuousDeploymentSingleHeaderConfig(input.SingleHeaderConfig, context).withName(\"SingleHeaderConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Type != null) {\n        const node = xml_builder_1.XmlNode.of(\"ContinuousDeploymentPolicyType\", input.Type).withName(\"Type\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_TrustedKeyGroupIdList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"KeyGroup\");\n    });\n};\nconst se_TrustedKeyGroups = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"TrustedKeyGroups\");\n    if (input.Enabled != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Enabled)).withName(\"Enabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_TrustedKeyGroupIdList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_TrustedSigners = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"TrustedSigners\");\n    if (input.Enabled != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Enabled)).withName(\"Enabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = se_AwsAccountNumberList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_ViewerCertificate = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ViewerCertificate\");\n    if (input.CloudFrontDefaultCertificate != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"boolean\", String(input.CloudFrontDefaultCertificate))\n            .withName(\"CloudFrontDefaultCertificate\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IAMCertificateId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.IAMCertificateId).withName(\"IAMCertificateId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ACMCertificateArn != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ACMCertificateArn).withName(\"ACMCertificateArn\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SSLSupportMethod != null) {\n        const node = xml_builder_1.XmlNode.of(\"SSLSupportMethod\", input.SSLSupportMethod).withName(\"SSLSupportMethod\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.MinimumProtocolVersion != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"MinimumProtocolVersion\", input.MinimumProtocolVersion)\n            .withName(\"MinimumProtocolVersion\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Certificate != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Certificate).withName(\"Certificate\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CertificateSource != null) {\n        const node = xml_builder_1.XmlNode.of(\"CertificateSource\", input.CertificateSource).withName(\"CertificateSource\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst de_AccessControlAllowHeadersList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_AccessControlAllowMethodsList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_AccessControlAllowOriginsList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_AccessControlExposeHeadersList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_ActiveTrustedKeyGroups = (output, context) => {\n    const contents = {};\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = (0, smithy_client_1.parseBoolean)(output[\"Enabled\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"KeyGroup\"] !== undefined) {\n        contents.Items = de_KGKeyPairIdsList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"KeyGroup\"]), context);\n    }\n    return contents;\n};\nconst de_ActiveTrustedSigners = (output, context) => {\n    const contents = {};\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = (0, smithy_client_1.parseBoolean)(output[\"Enabled\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Signer\"] !== undefined) {\n        contents.Items = de_SignerList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Signer\"]), context);\n    }\n    return contents;\n};\nconst de_Aliases = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"CNAME\"] !== undefined) {\n        contents.Items = de_AliasList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"CNAME\"]), context);\n    }\n    return contents;\n};\nconst de_AliasICPRecordal = (output, context) => {\n    const contents = {};\n    if (output[\"CNAME\"] !== undefined) {\n        contents.CNAME = (0, smithy_client_1.expectString)(output[\"CNAME\"]);\n    }\n    if (output[\"ICPRecordalStatus\"] !== undefined) {\n        contents.ICPRecordalStatus = (0, smithy_client_1.expectString)(output[\"ICPRecordalStatus\"]);\n    }\n    return contents;\n};\nconst de_AliasICPRecordals = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_AliasICPRecordal(entry, context);\n    });\n};\nconst de_AliasList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_AllowedMethods = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Method\"] !== undefined) {\n        contents.Items = de_MethodsList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Method\"]), context);\n    }\n    if (output[\"CachedMethods\"] !== undefined) {\n        contents.CachedMethods = de_CachedMethods(output[\"CachedMethods\"], context);\n    }\n    return contents;\n};\nconst de_AwsAccountNumberList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_CacheBehavior = (output, context) => {\n    const contents = {};\n    if (output[\"PathPattern\"] !== undefined) {\n        contents.PathPattern = (0, smithy_client_1.expectString)(output[\"PathPattern\"]);\n    }\n    if (output[\"TargetOriginId\"] !== undefined) {\n        contents.TargetOriginId = (0, smithy_client_1.expectString)(output[\"TargetOriginId\"]);\n    }\n    if (output[\"TrustedSigners\"] !== undefined) {\n        contents.TrustedSigners = de_TrustedSigners(output[\"TrustedSigners\"], context);\n    }\n    if (output[\"TrustedKeyGroups\"] !== undefined) {\n        contents.TrustedKeyGroups = de_TrustedKeyGroups(output[\"TrustedKeyGroups\"], context);\n    }\n    if (output[\"ViewerProtocolPolicy\"] !== undefined) {\n        contents.ViewerProtocolPolicy = (0, smithy_client_1.expectString)(output[\"ViewerProtocolPolicy\"]);\n    }\n    if (output[\"AllowedMethods\"] !== undefined) {\n        contents.AllowedMethods = de_AllowedMethods(output[\"AllowedMethods\"], context);\n    }\n    if (output[\"SmoothStreaming\"] !== undefined) {\n        contents.SmoothStreaming = (0, smithy_client_1.parseBoolean)(output[\"SmoothStreaming\"]);\n    }\n    if (output[\"Compress\"] !== undefined) {\n        contents.Compress = (0, smithy_client_1.parseBoolean)(output[\"Compress\"]);\n    }\n    if (output[\"LambdaFunctionAssociations\"] !== undefined) {\n        contents.LambdaFunctionAssociations = de_LambdaFunctionAssociations(output[\"LambdaFunctionAssociations\"], context);\n    }\n    if (output[\"FunctionAssociations\"] !== undefined) {\n        contents.FunctionAssociations = de_FunctionAssociations(output[\"FunctionAssociations\"], context);\n    }\n    if (output[\"FieldLevelEncryptionId\"] !== undefined) {\n        contents.FieldLevelEncryptionId = (0, smithy_client_1.expectString)(output[\"FieldLevelEncryptionId\"]);\n    }\n    if (output[\"RealtimeLogConfigArn\"] !== undefined) {\n        contents.RealtimeLogConfigArn = (0, smithy_client_1.expectString)(output[\"RealtimeLogConfigArn\"]);\n    }\n    if (output[\"CachePolicyId\"] !== undefined) {\n        contents.CachePolicyId = (0, smithy_client_1.expectString)(output[\"CachePolicyId\"]);\n    }\n    if (output[\"OriginRequestPolicyId\"] !== undefined) {\n        contents.OriginRequestPolicyId = (0, smithy_client_1.expectString)(output[\"OriginRequestPolicyId\"]);\n    }\n    if (output[\"ResponseHeadersPolicyId\"] !== undefined) {\n        contents.ResponseHeadersPolicyId = (0, smithy_client_1.expectString)(output[\"ResponseHeadersPolicyId\"]);\n    }\n    if (output[\"ForwardedValues\"] !== undefined) {\n        contents.ForwardedValues = de_ForwardedValues(output[\"ForwardedValues\"], context);\n    }\n    if (output[\"MinTTL\"] !== undefined) {\n        contents.MinTTL = (0, smithy_client_1.strictParseLong)(output[\"MinTTL\"]);\n    }\n    if (output[\"DefaultTTL\"] !== undefined) {\n        contents.DefaultTTL = (0, smithy_client_1.strictParseLong)(output[\"DefaultTTL\"]);\n    }\n    if (output[\"MaxTTL\"] !== undefined) {\n        contents.MaxTTL = (0, smithy_client_1.strictParseLong)(output[\"MaxTTL\"]);\n    }\n    return contents;\n};\nconst de_CacheBehaviorList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_CacheBehavior(entry, context);\n    });\n};\nconst de_CacheBehaviors = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"CacheBehavior\"] !== undefined) {\n        contents.Items = de_CacheBehaviorList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"CacheBehavior\"]), context);\n    }\n    return contents;\n};\nconst de_CachedMethods = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Method\"] !== undefined) {\n        contents.Items = de_MethodsList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Method\"]), context);\n    }\n    return contents;\n};\nconst de_CachePolicy = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"LastModifiedTime\"]));\n    }\n    if (output[\"CachePolicyConfig\"] !== undefined) {\n        contents.CachePolicyConfig = de_CachePolicyConfig(output[\"CachePolicyConfig\"], context);\n    }\n    return contents;\n};\nconst de_CachePolicyConfig = (output, context) => {\n    const contents = {};\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(output[\"Name\"]);\n    }\n    if (output[\"DefaultTTL\"] !== undefined) {\n        contents.DefaultTTL = (0, smithy_client_1.strictParseLong)(output[\"DefaultTTL\"]);\n    }\n    if (output[\"MaxTTL\"] !== undefined) {\n        contents.MaxTTL = (0, smithy_client_1.strictParseLong)(output[\"MaxTTL\"]);\n    }\n    if (output[\"MinTTL\"] !== undefined) {\n        contents.MinTTL = (0, smithy_client_1.strictParseLong)(output[\"MinTTL\"]);\n    }\n    if (output[\"ParametersInCacheKeyAndForwardedToOrigin\"] !== undefined) {\n        contents.ParametersInCacheKeyAndForwardedToOrigin = de_ParametersInCacheKeyAndForwardedToOrigin(output[\"ParametersInCacheKeyAndForwardedToOrigin\"], context);\n    }\n    return contents;\n};\nconst de_CachePolicyCookiesConfig = (output, context) => {\n    const contents = {};\n    if (output[\"CookieBehavior\"] !== undefined) {\n        contents.CookieBehavior = (0, smithy_client_1.expectString)(output[\"CookieBehavior\"]);\n    }\n    if (output[\"Cookies\"] !== undefined) {\n        contents.Cookies = de_CookieNames(output[\"Cookies\"], context);\n    }\n    return contents;\n};\nconst de_CachePolicyHeadersConfig = (output, context) => {\n    const contents = {};\n    if (output[\"HeaderBehavior\"] !== undefined) {\n        contents.HeaderBehavior = (0, smithy_client_1.expectString)(output[\"HeaderBehavior\"]);\n    }\n    if (output[\"Headers\"] !== undefined) {\n        contents.Headers = de_Headers(output[\"Headers\"], context);\n    }\n    return contents;\n};\nconst de_CachePolicyList = (output, context) => {\n    const contents = {};\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"CachePolicySummary\"] !== undefined) {\n        contents.Items = de_CachePolicySummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"CachePolicySummary\"]), context);\n    }\n    return contents;\n};\nconst de_CachePolicyQueryStringsConfig = (output, context) => {\n    const contents = {};\n    if (output[\"QueryStringBehavior\"] !== undefined) {\n        contents.QueryStringBehavior = (0, smithy_client_1.expectString)(output[\"QueryStringBehavior\"]);\n    }\n    if (output[\"QueryStrings\"] !== undefined) {\n        contents.QueryStrings = de_QueryStringNames(output[\"QueryStrings\"], context);\n    }\n    return contents;\n};\nconst de_CachePolicySummary = (output, context) => {\n    const contents = {};\n    if (output[\"Type\"] !== undefined) {\n        contents.Type = (0, smithy_client_1.expectString)(output[\"Type\"]);\n    }\n    if (output[\"CachePolicy\"] !== undefined) {\n        contents.CachePolicy = de_CachePolicy(output[\"CachePolicy\"], context);\n    }\n    return contents;\n};\nconst de_CachePolicySummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_CachePolicySummary(entry, context);\n    });\n};\nconst de_CloudFrontOriginAccessIdentity = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"S3CanonicalUserId\"] !== undefined) {\n        contents.S3CanonicalUserId = (0, smithy_client_1.expectString)(output[\"S3CanonicalUserId\"]);\n    }\n    if (output[\"CloudFrontOriginAccessIdentityConfig\"] !== undefined) {\n        contents.CloudFrontOriginAccessIdentityConfig = de_CloudFrontOriginAccessIdentityConfig(output[\"CloudFrontOriginAccessIdentityConfig\"], context);\n    }\n    return contents;\n};\nconst de_CloudFrontOriginAccessIdentityConfig = (output, context) => {\n    const contents = {};\n    if (output[\"CallerReference\"] !== undefined) {\n        contents.CallerReference = (0, smithy_client_1.expectString)(output[\"CallerReference\"]);\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    return contents;\n};\nconst de_CloudFrontOriginAccessIdentityList = (output, context) => {\n    const contents = {};\n    if (output[\"Marker\"] !== undefined) {\n        contents.Marker = (0, smithy_client_1.expectString)(output[\"Marker\"]);\n    }\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = (0, smithy_client_1.parseBoolean)(output[\"IsTruncated\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"CloudFrontOriginAccessIdentitySummary\"] !== undefined) {\n        contents.Items = de_CloudFrontOriginAccessIdentitySummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"CloudFrontOriginAccessIdentitySummary\"]), context);\n    }\n    return contents;\n};\nconst de_CloudFrontOriginAccessIdentitySummary = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"S3CanonicalUserId\"] !== undefined) {\n        contents.S3CanonicalUserId = (0, smithy_client_1.expectString)(output[\"S3CanonicalUserId\"]);\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    return contents;\n};\nconst de_CloudFrontOriginAccessIdentitySummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_CloudFrontOriginAccessIdentitySummary(entry, context);\n    });\n};\nconst de_ConflictingAlias = (output, context) => {\n    const contents = {};\n    if (output[\"Alias\"] !== undefined) {\n        contents.Alias = (0, smithy_client_1.expectString)(output[\"Alias\"]);\n    }\n    if (output[\"DistributionId\"] !== undefined) {\n        contents.DistributionId = (0, smithy_client_1.expectString)(output[\"DistributionId\"]);\n    }\n    if (output[\"AccountId\"] !== undefined) {\n        contents.AccountId = (0, smithy_client_1.expectString)(output[\"AccountId\"]);\n    }\n    return contents;\n};\nconst de_ConflictingAliases = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ConflictingAlias(entry, context);\n    });\n};\nconst de_ConflictingAliasesList = (output, context) => {\n    const contents = {};\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"ConflictingAlias\"] !== undefined) {\n        contents.Items = de_ConflictingAliases((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"ConflictingAlias\"]), context);\n    }\n    return contents;\n};\nconst de_ContentTypeProfile = (output, context) => {\n    const contents = {};\n    if (output[\"Format\"] !== undefined) {\n        contents.Format = (0, smithy_client_1.expectString)(output[\"Format\"]);\n    }\n    if (output[\"ProfileId\"] !== undefined) {\n        contents.ProfileId = (0, smithy_client_1.expectString)(output[\"ProfileId\"]);\n    }\n    if (output[\"ContentType\"] !== undefined) {\n        contents.ContentType = (0, smithy_client_1.expectString)(output[\"ContentType\"]);\n    }\n    return contents;\n};\nconst de_ContentTypeProfileConfig = (output, context) => {\n    const contents = {};\n    if (output[\"ForwardWhenContentTypeIsUnknown\"] !== undefined) {\n        contents.ForwardWhenContentTypeIsUnknown = (0, smithy_client_1.parseBoolean)(output[\"ForwardWhenContentTypeIsUnknown\"]);\n    }\n    if (output[\"ContentTypeProfiles\"] !== undefined) {\n        contents.ContentTypeProfiles = de_ContentTypeProfiles(output[\"ContentTypeProfiles\"], context);\n    }\n    return contents;\n};\nconst de_ContentTypeProfileList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ContentTypeProfile(entry, context);\n    });\n};\nconst de_ContentTypeProfiles = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"ContentTypeProfile\"] !== undefined) {\n        contents.Items = de_ContentTypeProfileList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"ContentTypeProfile\"]), context);\n    }\n    return contents;\n};\nconst de_ContinuousDeploymentPolicy = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"LastModifiedTime\"]));\n    }\n    if (output[\"ContinuousDeploymentPolicyConfig\"] !== undefined) {\n        contents.ContinuousDeploymentPolicyConfig = de_ContinuousDeploymentPolicyConfig(output[\"ContinuousDeploymentPolicyConfig\"], context);\n    }\n    return contents;\n};\nconst de_ContinuousDeploymentPolicyConfig = (output, context) => {\n    const contents = {};\n    if (output[\"StagingDistributionDnsNames\"] !== undefined) {\n        contents.StagingDistributionDnsNames = de_StagingDistributionDnsNames(output[\"StagingDistributionDnsNames\"], context);\n    }\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = (0, smithy_client_1.parseBoolean)(output[\"Enabled\"]);\n    }\n    if (output[\"TrafficConfig\"] !== undefined) {\n        contents.TrafficConfig = de_TrafficConfig(output[\"TrafficConfig\"], context);\n    }\n    return contents;\n};\nconst de_ContinuousDeploymentPolicyList = (output, context) => {\n    const contents = {};\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"ContinuousDeploymentPolicySummary\"] !== undefined) {\n        contents.Items = de_ContinuousDeploymentPolicySummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"ContinuousDeploymentPolicySummary\"]), context);\n    }\n    return contents;\n};\nconst de_ContinuousDeploymentPolicySummary = (output, context) => {\n    const contents = {};\n    if (output[\"ContinuousDeploymentPolicy\"] !== undefined) {\n        contents.ContinuousDeploymentPolicy = de_ContinuousDeploymentPolicy(output[\"ContinuousDeploymentPolicy\"], context);\n    }\n    return contents;\n};\nconst de_ContinuousDeploymentPolicySummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ContinuousDeploymentPolicySummary(entry, context);\n    });\n};\nconst de_ContinuousDeploymentSingleHeaderConfig = (output, context) => {\n    const contents = {};\n    if (output[\"Header\"] !== undefined) {\n        contents.Header = (0, smithy_client_1.expectString)(output[\"Header\"]);\n    }\n    if (output[\"Value\"] !== undefined) {\n        contents.Value = (0, smithy_client_1.expectString)(output[\"Value\"]);\n    }\n    return contents;\n};\nconst de_ContinuousDeploymentSingleWeightConfig = (output, context) => {\n    const contents = {};\n    if (output[\"Weight\"] !== undefined) {\n        contents.Weight = (0, smithy_client_1.strictParseFloat)(output[\"Weight\"]);\n    }\n    if (output[\"SessionStickinessConfig\"] !== undefined) {\n        contents.SessionStickinessConfig = de_SessionStickinessConfig(output[\"SessionStickinessConfig\"], context);\n    }\n    return contents;\n};\nconst de_CookieNameList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_CookieNames = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Name\"] !== undefined) {\n        contents.Items = de_CookieNameList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Name\"]), context);\n    }\n    return contents;\n};\nconst de_CookiePreference = (output, context) => {\n    const contents = {};\n    if (output[\"Forward\"] !== undefined) {\n        contents.Forward = (0, smithy_client_1.expectString)(output[\"Forward\"]);\n    }\n    if (output[\"WhitelistedNames\"] !== undefined) {\n        contents.WhitelistedNames = de_CookieNames(output[\"WhitelistedNames\"], context);\n    }\n    return contents;\n};\nconst de_CustomErrorResponse = (output, context) => {\n    const contents = {};\n    if (output[\"ErrorCode\"] !== undefined) {\n        contents.ErrorCode = (0, smithy_client_1.strictParseInt32)(output[\"ErrorCode\"]);\n    }\n    if (output[\"ResponsePagePath\"] !== undefined) {\n        contents.ResponsePagePath = (0, smithy_client_1.expectString)(output[\"ResponsePagePath\"]);\n    }\n    if (output[\"ResponseCode\"] !== undefined) {\n        contents.ResponseCode = (0, smithy_client_1.expectString)(output[\"ResponseCode\"]);\n    }\n    if (output[\"ErrorCachingMinTTL\"] !== undefined) {\n        contents.ErrorCachingMinTTL = (0, smithy_client_1.strictParseLong)(output[\"ErrorCachingMinTTL\"]);\n    }\n    return contents;\n};\nconst de_CustomErrorResponseList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_CustomErrorResponse(entry, context);\n    });\n};\nconst de_CustomErrorResponses = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"CustomErrorResponse\"] !== undefined) {\n        contents.Items = de_CustomErrorResponseList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"CustomErrorResponse\"]), context);\n    }\n    return contents;\n};\nconst de_CustomHeaders = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"OriginCustomHeader\"] !== undefined) {\n        contents.Items = de_OriginCustomHeadersList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"OriginCustomHeader\"]), context);\n    }\n    return contents;\n};\nconst de_CustomOriginConfig = (output, context) => {\n    const contents = {};\n    if (output[\"HTTPPort\"] !== undefined) {\n        contents.HTTPPort = (0, smithy_client_1.strictParseInt32)(output[\"HTTPPort\"]);\n    }\n    if (output[\"HTTPSPort\"] !== undefined) {\n        contents.HTTPSPort = (0, smithy_client_1.strictParseInt32)(output[\"HTTPSPort\"]);\n    }\n    if (output[\"OriginProtocolPolicy\"] !== undefined) {\n        contents.OriginProtocolPolicy = (0, smithy_client_1.expectString)(output[\"OriginProtocolPolicy\"]);\n    }\n    if (output[\"OriginSslProtocols\"] !== undefined) {\n        contents.OriginSslProtocols = de_OriginSslProtocols(output[\"OriginSslProtocols\"], context);\n    }\n    if (output[\"OriginReadTimeout\"] !== undefined) {\n        contents.OriginReadTimeout = (0, smithy_client_1.strictParseInt32)(output[\"OriginReadTimeout\"]);\n    }\n    if (output[\"OriginKeepaliveTimeout\"] !== undefined) {\n        contents.OriginKeepaliveTimeout = (0, smithy_client_1.strictParseInt32)(output[\"OriginKeepaliveTimeout\"]);\n    }\n    return contents;\n};\nconst de_DefaultCacheBehavior = (output, context) => {\n    const contents = {};\n    if (output[\"TargetOriginId\"] !== undefined) {\n        contents.TargetOriginId = (0, smithy_client_1.expectString)(output[\"TargetOriginId\"]);\n    }\n    if (output[\"TrustedSigners\"] !== undefined) {\n        contents.TrustedSigners = de_TrustedSigners(output[\"TrustedSigners\"], context);\n    }\n    if (output[\"TrustedKeyGroups\"] !== undefined) {\n        contents.TrustedKeyGroups = de_TrustedKeyGroups(output[\"TrustedKeyGroups\"], context);\n    }\n    if (output[\"ViewerProtocolPolicy\"] !== undefined) {\n        contents.ViewerProtocolPolicy = (0, smithy_client_1.expectString)(output[\"ViewerProtocolPolicy\"]);\n    }\n    if (output[\"AllowedMethods\"] !== undefined) {\n        contents.AllowedMethods = de_AllowedMethods(output[\"AllowedMethods\"], context);\n    }\n    if (output[\"SmoothStreaming\"] !== undefined) {\n        contents.SmoothStreaming = (0, smithy_client_1.parseBoolean)(output[\"SmoothStreaming\"]);\n    }\n    if (output[\"Compress\"] !== undefined) {\n        contents.Compress = (0, smithy_client_1.parseBoolean)(output[\"Compress\"]);\n    }\n    if (output[\"LambdaFunctionAssociations\"] !== undefined) {\n        contents.LambdaFunctionAssociations = de_LambdaFunctionAssociations(output[\"LambdaFunctionAssociations\"], context);\n    }\n    if (output[\"FunctionAssociations\"] !== undefined) {\n        contents.FunctionAssociations = de_FunctionAssociations(output[\"FunctionAssociations\"], context);\n    }\n    if (output[\"FieldLevelEncryptionId\"] !== undefined) {\n        contents.FieldLevelEncryptionId = (0, smithy_client_1.expectString)(output[\"FieldLevelEncryptionId\"]);\n    }\n    if (output[\"RealtimeLogConfigArn\"] !== undefined) {\n        contents.RealtimeLogConfigArn = (0, smithy_client_1.expectString)(output[\"RealtimeLogConfigArn\"]);\n    }\n    if (output[\"CachePolicyId\"] !== undefined) {\n        contents.CachePolicyId = (0, smithy_client_1.expectString)(output[\"CachePolicyId\"]);\n    }\n    if (output[\"OriginRequestPolicyId\"] !== undefined) {\n        contents.OriginRequestPolicyId = (0, smithy_client_1.expectString)(output[\"OriginRequestPolicyId\"]);\n    }\n    if (output[\"ResponseHeadersPolicyId\"] !== undefined) {\n        contents.ResponseHeadersPolicyId = (0, smithy_client_1.expectString)(output[\"ResponseHeadersPolicyId\"]);\n    }\n    if (output[\"ForwardedValues\"] !== undefined) {\n        contents.ForwardedValues = de_ForwardedValues(output[\"ForwardedValues\"], context);\n    }\n    if (output[\"MinTTL\"] !== undefined) {\n        contents.MinTTL = (0, smithy_client_1.strictParseLong)(output[\"MinTTL\"]);\n    }\n    if (output[\"DefaultTTL\"] !== undefined) {\n        contents.DefaultTTL = (0, smithy_client_1.strictParseLong)(output[\"DefaultTTL\"]);\n    }\n    if (output[\"MaxTTL\"] !== undefined) {\n        contents.MaxTTL = (0, smithy_client_1.strictParseLong)(output[\"MaxTTL\"]);\n    }\n    return contents;\n};\nconst de_Distribution = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"ARN\"] !== undefined) {\n        contents.ARN = (0, smithy_client_1.expectString)(output[\"ARN\"]);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(output[\"Status\"]);\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"LastModifiedTime\"]));\n    }\n    if (output[\"InProgressInvalidationBatches\"] !== undefined) {\n        contents.InProgressInvalidationBatches = (0, smithy_client_1.strictParseInt32)(output[\"InProgressInvalidationBatches\"]);\n    }\n    if (output[\"DomainName\"] !== undefined) {\n        contents.DomainName = (0, smithy_client_1.expectString)(output[\"DomainName\"]);\n    }\n    if (output[\"ActiveTrustedSigners\"] !== undefined) {\n        contents.ActiveTrustedSigners = de_ActiveTrustedSigners(output[\"ActiveTrustedSigners\"], context);\n    }\n    if (output[\"ActiveTrustedKeyGroups\"] !== undefined) {\n        contents.ActiveTrustedKeyGroups = de_ActiveTrustedKeyGroups(output[\"ActiveTrustedKeyGroups\"], context);\n    }\n    if (output[\"DistributionConfig\"] !== undefined) {\n        contents.DistributionConfig = de_DistributionConfig(output[\"DistributionConfig\"], context);\n    }\n    if (output.AliasICPRecordals === \"\") {\n        contents.AliasICPRecordals = [];\n    }\n    else if (output[\"AliasICPRecordals\"] !== undefined &&\n        output[\"AliasICPRecordals\"][\"AliasICPRecordal\"] !== undefined) {\n        contents.AliasICPRecordals = de_AliasICPRecordals((0, smithy_client_1.getArrayIfSingleItem)(output[\"AliasICPRecordals\"][\"AliasICPRecordal\"]), context);\n    }\n    return contents;\n};\nconst de_DistributionConfig = (output, context) => {\n    const contents = {};\n    if (output[\"CallerReference\"] !== undefined) {\n        contents.CallerReference = (0, smithy_client_1.expectString)(output[\"CallerReference\"]);\n    }\n    if (output[\"Aliases\"] !== undefined) {\n        contents.Aliases = de_Aliases(output[\"Aliases\"], context);\n    }\n    if (output[\"DefaultRootObject\"] !== undefined) {\n        contents.DefaultRootObject = (0, smithy_client_1.expectString)(output[\"DefaultRootObject\"]);\n    }\n    if (output[\"Origins\"] !== undefined) {\n        contents.Origins = de_Origins(output[\"Origins\"], context);\n    }\n    if (output[\"OriginGroups\"] !== undefined) {\n        contents.OriginGroups = de_OriginGroups(output[\"OriginGroups\"], context);\n    }\n    if (output[\"DefaultCacheBehavior\"] !== undefined) {\n        contents.DefaultCacheBehavior = de_DefaultCacheBehavior(output[\"DefaultCacheBehavior\"], context);\n    }\n    if (output[\"CacheBehaviors\"] !== undefined) {\n        contents.CacheBehaviors = de_CacheBehaviors(output[\"CacheBehaviors\"], context);\n    }\n    if (output[\"CustomErrorResponses\"] !== undefined) {\n        contents.CustomErrorResponses = de_CustomErrorResponses(output[\"CustomErrorResponses\"], context);\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    if (output[\"Logging\"] !== undefined) {\n        contents.Logging = de_LoggingConfig(output[\"Logging\"], context);\n    }\n    if (output[\"PriceClass\"] !== undefined) {\n        contents.PriceClass = (0, smithy_client_1.expectString)(output[\"PriceClass\"]);\n    }\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = (0, smithy_client_1.parseBoolean)(output[\"Enabled\"]);\n    }\n    if (output[\"ViewerCertificate\"] !== undefined) {\n        contents.ViewerCertificate = de_ViewerCertificate(output[\"ViewerCertificate\"], context);\n    }\n    if (output[\"Restrictions\"] !== undefined) {\n        contents.Restrictions = de_Restrictions(output[\"Restrictions\"], context);\n    }\n    if (output[\"WebACLId\"] !== undefined) {\n        contents.WebACLId = (0, smithy_client_1.expectString)(output[\"WebACLId\"]);\n    }\n    if (output[\"HttpVersion\"] !== undefined) {\n        contents.HttpVersion = (0, smithy_client_1.expectString)(output[\"HttpVersion\"]);\n    }\n    if (output[\"IsIPV6Enabled\"] !== undefined) {\n        contents.IsIPV6Enabled = (0, smithy_client_1.parseBoolean)(output[\"IsIPV6Enabled\"]);\n    }\n    if (output[\"ContinuousDeploymentPolicyId\"] !== undefined) {\n        contents.ContinuousDeploymentPolicyId = (0, smithy_client_1.expectString)(output[\"ContinuousDeploymentPolicyId\"]);\n    }\n    if (output[\"Staging\"] !== undefined) {\n        contents.Staging = (0, smithy_client_1.parseBoolean)(output[\"Staging\"]);\n    }\n    return contents;\n};\nconst de_DistributionIdList = (output, context) => {\n    const contents = {};\n    if (output[\"Marker\"] !== undefined) {\n        contents.Marker = (0, smithy_client_1.expectString)(output[\"Marker\"]);\n    }\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = (0, smithy_client_1.parseBoolean)(output[\"IsTruncated\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"DistributionId\"] !== undefined) {\n        contents.Items = de_DistributionIdListSummary((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"DistributionId\"]), context);\n    }\n    return contents;\n};\nconst de_DistributionIdListSummary = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_DistributionList = (output, context) => {\n    const contents = {};\n    if (output[\"Marker\"] !== undefined) {\n        contents.Marker = (0, smithy_client_1.expectString)(output[\"Marker\"]);\n    }\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = (0, smithy_client_1.parseBoolean)(output[\"IsTruncated\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"DistributionSummary\"] !== undefined) {\n        contents.Items = de_DistributionSummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"DistributionSummary\"]), context);\n    }\n    return contents;\n};\nconst de_DistributionSummary = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"ARN\"] !== undefined) {\n        contents.ARN = (0, smithy_client_1.expectString)(output[\"ARN\"]);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(output[\"Status\"]);\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"LastModifiedTime\"]));\n    }\n    if (output[\"DomainName\"] !== undefined) {\n        contents.DomainName = (0, smithy_client_1.expectString)(output[\"DomainName\"]);\n    }\n    if (output[\"Aliases\"] !== undefined) {\n        contents.Aliases = de_Aliases(output[\"Aliases\"], context);\n    }\n    if (output[\"Origins\"] !== undefined) {\n        contents.Origins = de_Origins(output[\"Origins\"], context);\n    }\n    if (output[\"OriginGroups\"] !== undefined) {\n        contents.OriginGroups = de_OriginGroups(output[\"OriginGroups\"], context);\n    }\n    if (output[\"DefaultCacheBehavior\"] !== undefined) {\n        contents.DefaultCacheBehavior = de_DefaultCacheBehavior(output[\"DefaultCacheBehavior\"], context);\n    }\n    if (output[\"CacheBehaviors\"] !== undefined) {\n        contents.CacheBehaviors = de_CacheBehaviors(output[\"CacheBehaviors\"], context);\n    }\n    if (output[\"CustomErrorResponses\"] !== undefined) {\n        contents.CustomErrorResponses = de_CustomErrorResponses(output[\"CustomErrorResponses\"], context);\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    if (output[\"PriceClass\"] !== undefined) {\n        contents.PriceClass = (0, smithy_client_1.expectString)(output[\"PriceClass\"]);\n    }\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = (0, smithy_client_1.parseBoolean)(output[\"Enabled\"]);\n    }\n    if (output[\"ViewerCertificate\"] !== undefined) {\n        contents.ViewerCertificate = de_ViewerCertificate(output[\"ViewerCertificate\"], context);\n    }\n    if (output[\"Restrictions\"] !== undefined) {\n        contents.Restrictions = de_Restrictions(output[\"Restrictions\"], context);\n    }\n    if (output[\"WebACLId\"] !== undefined) {\n        contents.WebACLId = (0, smithy_client_1.expectString)(output[\"WebACLId\"]);\n    }\n    if (output[\"HttpVersion\"] !== undefined) {\n        contents.HttpVersion = (0, smithy_client_1.expectString)(output[\"HttpVersion\"]);\n    }\n    if (output[\"IsIPV6Enabled\"] !== undefined) {\n        contents.IsIPV6Enabled = (0, smithy_client_1.parseBoolean)(output[\"IsIPV6Enabled\"]);\n    }\n    if (output.AliasICPRecordals === \"\") {\n        contents.AliasICPRecordals = [];\n    }\n    else if (output[\"AliasICPRecordals\"] !== undefined &&\n        output[\"AliasICPRecordals\"][\"AliasICPRecordal\"] !== undefined) {\n        contents.AliasICPRecordals = de_AliasICPRecordals((0, smithy_client_1.getArrayIfSingleItem)(output[\"AliasICPRecordals\"][\"AliasICPRecordal\"]), context);\n    }\n    if (output[\"Staging\"] !== undefined) {\n        contents.Staging = (0, smithy_client_1.parseBoolean)(output[\"Staging\"]);\n    }\n    return contents;\n};\nconst de_DistributionSummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_DistributionSummary(entry, context);\n    });\n};\nconst de_EncryptionEntities = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"EncryptionEntity\"] !== undefined) {\n        contents.Items = de_EncryptionEntityList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"EncryptionEntity\"]), context);\n    }\n    return contents;\n};\nconst de_EncryptionEntity = (output, context) => {\n    const contents = {};\n    if (output[\"PublicKeyId\"] !== undefined) {\n        contents.PublicKeyId = (0, smithy_client_1.expectString)(output[\"PublicKeyId\"]);\n    }\n    if (output[\"ProviderId\"] !== undefined) {\n        contents.ProviderId = (0, smithy_client_1.expectString)(output[\"ProviderId\"]);\n    }\n    if (output[\"FieldPatterns\"] !== undefined) {\n        contents.FieldPatterns = de_FieldPatterns(output[\"FieldPatterns\"], context);\n    }\n    return contents;\n};\nconst de_EncryptionEntityList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_EncryptionEntity(entry, context);\n    });\n};\nconst de_EndPoint = (output, context) => {\n    const contents = {};\n    if (output[\"StreamType\"] !== undefined) {\n        contents.StreamType = (0, smithy_client_1.expectString)(output[\"StreamType\"]);\n    }\n    if (output[\"KinesisStreamConfig\"] !== undefined) {\n        contents.KinesisStreamConfig = de_KinesisStreamConfig(output[\"KinesisStreamConfig\"], context);\n    }\n    return contents;\n};\nconst de_EndPointList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_EndPoint(entry, context);\n    });\n};\nconst de_FieldLevelEncryption = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"LastModifiedTime\"]));\n    }\n    if (output[\"FieldLevelEncryptionConfig\"] !== undefined) {\n        contents.FieldLevelEncryptionConfig = de_FieldLevelEncryptionConfig(output[\"FieldLevelEncryptionConfig\"], context);\n    }\n    return contents;\n};\nconst de_FieldLevelEncryptionConfig = (output, context) => {\n    const contents = {};\n    if (output[\"CallerReference\"] !== undefined) {\n        contents.CallerReference = (0, smithy_client_1.expectString)(output[\"CallerReference\"]);\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    if (output[\"QueryArgProfileConfig\"] !== undefined) {\n        contents.QueryArgProfileConfig = de_QueryArgProfileConfig(output[\"QueryArgProfileConfig\"], context);\n    }\n    if (output[\"ContentTypeProfileConfig\"] !== undefined) {\n        contents.ContentTypeProfileConfig = de_ContentTypeProfileConfig(output[\"ContentTypeProfileConfig\"], context);\n    }\n    return contents;\n};\nconst de_FieldLevelEncryptionList = (output, context) => {\n    const contents = {};\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"FieldLevelEncryptionSummary\"] !== undefined) {\n        contents.Items = de_FieldLevelEncryptionSummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"FieldLevelEncryptionSummary\"]), context);\n    }\n    return contents;\n};\nconst de_FieldLevelEncryptionProfile = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"LastModifiedTime\"]));\n    }\n    if (output[\"FieldLevelEncryptionProfileConfig\"] !== undefined) {\n        contents.FieldLevelEncryptionProfileConfig = de_FieldLevelEncryptionProfileConfig(output[\"FieldLevelEncryptionProfileConfig\"], context);\n    }\n    return contents;\n};\nconst de_FieldLevelEncryptionProfileConfig = (output, context) => {\n    const contents = {};\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(output[\"Name\"]);\n    }\n    if (output[\"CallerReference\"] !== undefined) {\n        contents.CallerReference = (0, smithy_client_1.expectString)(output[\"CallerReference\"]);\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    if (output[\"EncryptionEntities\"] !== undefined) {\n        contents.EncryptionEntities = de_EncryptionEntities(output[\"EncryptionEntities\"], context);\n    }\n    return contents;\n};\nconst de_FieldLevelEncryptionProfileList = (output, context) => {\n    const contents = {};\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"FieldLevelEncryptionProfileSummary\"] !== undefined) {\n        contents.Items = de_FieldLevelEncryptionProfileSummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"FieldLevelEncryptionProfileSummary\"]), context);\n    }\n    return contents;\n};\nconst de_FieldLevelEncryptionProfileSummary = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"LastModifiedTime\"]));\n    }\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(output[\"Name\"]);\n    }\n    if (output[\"EncryptionEntities\"] !== undefined) {\n        contents.EncryptionEntities = de_EncryptionEntities(output[\"EncryptionEntities\"], context);\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    return contents;\n};\nconst de_FieldLevelEncryptionProfileSummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_FieldLevelEncryptionProfileSummary(entry, context);\n    });\n};\nconst de_FieldLevelEncryptionSummary = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"LastModifiedTime\"]));\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    if (output[\"QueryArgProfileConfig\"] !== undefined) {\n        contents.QueryArgProfileConfig = de_QueryArgProfileConfig(output[\"QueryArgProfileConfig\"], context);\n    }\n    if (output[\"ContentTypeProfileConfig\"] !== undefined) {\n        contents.ContentTypeProfileConfig = de_ContentTypeProfileConfig(output[\"ContentTypeProfileConfig\"], context);\n    }\n    return contents;\n};\nconst de_FieldLevelEncryptionSummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_FieldLevelEncryptionSummary(entry, context);\n    });\n};\nconst de_FieldList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_FieldPatternList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_FieldPatterns = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"FieldPattern\"] !== undefined) {\n        contents.Items = de_FieldPatternList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"FieldPattern\"]), context);\n    }\n    return contents;\n};\nconst de_ForwardedValues = (output, context) => {\n    const contents = {};\n    if (output[\"QueryString\"] !== undefined) {\n        contents.QueryString = (0, smithy_client_1.parseBoolean)(output[\"QueryString\"]);\n    }\n    if (output[\"Cookies\"] !== undefined) {\n        contents.Cookies = de_CookiePreference(output[\"Cookies\"], context);\n    }\n    if (output[\"Headers\"] !== undefined) {\n        contents.Headers = de_Headers(output[\"Headers\"], context);\n    }\n    if (output[\"QueryStringCacheKeys\"] !== undefined) {\n        contents.QueryStringCacheKeys = de_QueryStringCacheKeys(output[\"QueryStringCacheKeys\"], context);\n    }\n    return contents;\n};\nconst de_FunctionAssociation = (output, context) => {\n    const contents = {};\n    if (output[\"FunctionARN\"] !== undefined) {\n        contents.FunctionARN = (0, smithy_client_1.expectString)(output[\"FunctionARN\"]);\n    }\n    if (output[\"EventType\"] !== undefined) {\n        contents.EventType = (0, smithy_client_1.expectString)(output[\"EventType\"]);\n    }\n    return contents;\n};\nconst de_FunctionAssociationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_FunctionAssociation(entry, context);\n    });\n};\nconst de_FunctionAssociations = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"FunctionAssociation\"] !== undefined) {\n        contents.Items = de_FunctionAssociationList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"FunctionAssociation\"]), context);\n    }\n    return contents;\n};\nconst de_FunctionConfig = (output, context) => {\n    const contents = {};\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    if (output[\"Runtime\"] !== undefined) {\n        contents.Runtime = (0, smithy_client_1.expectString)(output[\"Runtime\"]);\n    }\n    return contents;\n};\nconst de_FunctionExecutionLogList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_FunctionList = (output, context) => {\n    const contents = {};\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"FunctionSummary\"] !== undefined) {\n        contents.Items = de_FunctionSummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"FunctionSummary\"]), context);\n    }\n    return contents;\n};\nconst de_FunctionMetadata = (output, context) => {\n    const contents = {};\n    if (output[\"FunctionARN\"] !== undefined) {\n        contents.FunctionARN = (0, smithy_client_1.expectString)(output[\"FunctionARN\"]);\n    }\n    if (output[\"Stage\"] !== undefined) {\n        contents.Stage = (0, smithy_client_1.expectString)(output[\"Stage\"]);\n    }\n    if (output[\"CreatedTime\"] !== undefined) {\n        contents.CreatedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"CreatedTime\"]));\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"LastModifiedTime\"]));\n    }\n    return contents;\n};\nconst de_FunctionSummary = (output, context) => {\n    const contents = {};\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(output[\"Name\"]);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(output[\"Status\"]);\n    }\n    if (output[\"FunctionConfig\"] !== undefined) {\n        contents.FunctionConfig = de_FunctionConfig(output[\"FunctionConfig\"], context);\n    }\n    if (output[\"FunctionMetadata\"] !== undefined) {\n        contents.FunctionMetadata = de_FunctionMetadata(output[\"FunctionMetadata\"], context);\n    }\n    return contents;\n};\nconst de_FunctionSummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_FunctionSummary(entry, context);\n    });\n};\nconst de_GeoRestriction = (output, context) => {\n    const contents = {};\n    if (output[\"RestrictionType\"] !== undefined) {\n        contents.RestrictionType = (0, smithy_client_1.expectString)(output[\"RestrictionType\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Location\"] !== undefined) {\n        contents.Items = de_LocationList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Location\"]), context);\n    }\n    return contents;\n};\nconst de_HeaderList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_Headers = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Name\"] !== undefined) {\n        contents.Items = de_HeaderList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Name\"]), context);\n    }\n    return contents;\n};\nconst de_Invalidation = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(output[\"Status\"]);\n    }\n    if (output[\"CreateTime\"] !== undefined) {\n        contents.CreateTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"CreateTime\"]));\n    }\n    if (output[\"InvalidationBatch\"] !== undefined) {\n        contents.InvalidationBatch = de_InvalidationBatch(output[\"InvalidationBatch\"], context);\n    }\n    return contents;\n};\nconst de_InvalidationBatch = (output, context) => {\n    const contents = {};\n    if (output[\"Paths\"] !== undefined) {\n        contents.Paths = de_Paths(output[\"Paths\"], context);\n    }\n    if (output[\"CallerReference\"] !== undefined) {\n        contents.CallerReference = (0, smithy_client_1.expectString)(output[\"CallerReference\"]);\n    }\n    return contents;\n};\nconst de_InvalidationList = (output, context) => {\n    const contents = {};\n    if (output[\"Marker\"] !== undefined) {\n        contents.Marker = (0, smithy_client_1.expectString)(output[\"Marker\"]);\n    }\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = (0, smithy_client_1.parseBoolean)(output[\"IsTruncated\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"InvalidationSummary\"] !== undefined) {\n        contents.Items = de_InvalidationSummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"InvalidationSummary\"]), context);\n    }\n    return contents;\n};\nconst de_InvalidationSummary = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"CreateTime\"] !== undefined) {\n        contents.CreateTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"CreateTime\"]));\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(output[\"Status\"]);\n    }\n    return contents;\n};\nconst de_InvalidationSummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_InvalidationSummary(entry, context);\n    });\n};\nconst de_KeyGroup = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"LastModifiedTime\"]));\n    }\n    if (output[\"KeyGroupConfig\"] !== undefined) {\n        contents.KeyGroupConfig = de_KeyGroupConfig(output[\"KeyGroupConfig\"], context);\n    }\n    return contents;\n};\nconst de_KeyGroupConfig = (output, context) => {\n    const contents = {};\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(output[\"Name\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"PublicKey\"] !== undefined) {\n        contents.Items = de_PublicKeyIdList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"PublicKey\"]), context);\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    return contents;\n};\nconst de_KeyGroupList = (output, context) => {\n    const contents = {};\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"KeyGroupSummary\"] !== undefined) {\n        contents.Items = de_KeyGroupSummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"KeyGroupSummary\"]), context);\n    }\n    return contents;\n};\nconst de_KeyGroupSummary = (output, context) => {\n    const contents = {};\n    if (output[\"KeyGroup\"] !== undefined) {\n        contents.KeyGroup = de_KeyGroup(output[\"KeyGroup\"], context);\n    }\n    return contents;\n};\nconst de_KeyGroupSummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_KeyGroupSummary(entry, context);\n    });\n};\nconst de_KeyPairIdList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_KeyPairIds = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"KeyPairId\"] !== undefined) {\n        contents.Items = de_KeyPairIdList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"KeyPairId\"]), context);\n    }\n    return contents;\n};\nconst de_KGKeyPairIds = (output, context) => {\n    const contents = {};\n    if (output[\"KeyGroupId\"] !== undefined) {\n        contents.KeyGroupId = (0, smithy_client_1.expectString)(output[\"KeyGroupId\"]);\n    }\n    if (output[\"KeyPairIds\"] !== undefined) {\n        contents.KeyPairIds = de_KeyPairIds(output[\"KeyPairIds\"], context);\n    }\n    return contents;\n};\nconst de_KGKeyPairIdsList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_KGKeyPairIds(entry, context);\n    });\n};\nconst de_KinesisStreamConfig = (output, context) => {\n    const contents = {};\n    if (output[\"RoleARN\"] !== undefined) {\n        contents.RoleARN = (0, smithy_client_1.expectString)(output[\"RoleARN\"]);\n    }\n    if (output[\"StreamARN\"] !== undefined) {\n        contents.StreamARN = (0, smithy_client_1.expectString)(output[\"StreamARN\"]);\n    }\n    return contents;\n};\nconst de_LambdaFunctionAssociation = (output, context) => {\n    const contents = {};\n    if (output[\"LambdaFunctionARN\"] !== undefined) {\n        contents.LambdaFunctionARN = (0, smithy_client_1.expectString)(output[\"LambdaFunctionARN\"]);\n    }\n    if (output[\"EventType\"] !== undefined) {\n        contents.EventType = (0, smithy_client_1.expectString)(output[\"EventType\"]);\n    }\n    if (output[\"IncludeBody\"] !== undefined) {\n        contents.IncludeBody = (0, smithy_client_1.parseBoolean)(output[\"IncludeBody\"]);\n    }\n    return contents;\n};\nconst de_LambdaFunctionAssociationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_LambdaFunctionAssociation(entry, context);\n    });\n};\nconst de_LambdaFunctionAssociations = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"LambdaFunctionAssociation\"] !== undefined) {\n        contents.Items = de_LambdaFunctionAssociationList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"LambdaFunctionAssociation\"]), context);\n    }\n    return contents;\n};\nconst de_LocationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_LoggingConfig = (output, context) => {\n    const contents = {};\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = (0, smithy_client_1.parseBoolean)(output[\"Enabled\"]);\n    }\n    if (output[\"IncludeCookies\"] !== undefined) {\n        contents.IncludeCookies = (0, smithy_client_1.parseBoolean)(output[\"IncludeCookies\"]);\n    }\n    if (output[\"Bucket\"] !== undefined) {\n        contents.Bucket = (0, smithy_client_1.expectString)(output[\"Bucket\"]);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = (0, smithy_client_1.expectString)(output[\"Prefix\"]);\n    }\n    return contents;\n};\nconst de_MethodsList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_MonitoringSubscription = (output, context) => {\n    const contents = {};\n    if (output[\"RealtimeMetricsSubscriptionConfig\"] !== undefined) {\n        contents.RealtimeMetricsSubscriptionConfig = de_RealtimeMetricsSubscriptionConfig(output[\"RealtimeMetricsSubscriptionConfig\"], context);\n    }\n    return contents;\n};\nconst de_Origin = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"DomainName\"] !== undefined) {\n        contents.DomainName = (0, smithy_client_1.expectString)(output[\"DomainName\"]);\n    }\n    if (output[\"OriginPath\"] !== undefined) {\n        contents.OriginPath = (0, smithy_client_1.expectString)(output[\"OriginPath\"]);\n    }\n    if (output[\"CustomHeaders\"] !== undefined) {\n        contents.CustomHeaders = de_CustomHeaders(output[\"CustomHeaders\"], context);\n    }\n    if (output[\"S3OriginConfig\"] !== undefined) {\n        contents.S3OriginConfig = de_S3OriginConfig(output[\"S3OriginConfig\"], context);\n    }\n    if (output[\"CustomOriginConfig\"] !== undefined) {\n        contents.CustomOriginConfig = de_CustomOriginConfig(output[\"CustomOriginConfig\"], context);\n    }\n    if (output[\"ConnectionAttempts\"] !== undefined) {\n        contents.ConnectionAttempts = (0, smithy_client_1.strictParseInt32)(output[\"ConnectionAttempts\"]);\n    }\n    if (output[\"ConnectionTimeout\"] !== undefined) {\n        contents.ConnectionTimeout = (0, smithy_client_1.strictParseInt32)(output[\"ConnectionTimeout\"]);\n    }\n    if (output[\"OriginShield\"] !== undefined) {\n        contents.OriginShield = de_OriginShield(output[\"OriginShield\"], context);\n    }\n    if (output[\"OriginAccessControlId\"] !== undefined) {\n        contents.OriginAccessControlId = (0, smithy_client_1.expectString)(output[\"OriginAccessControlId\"]);\n    }\n    return contents;\n};\nconst de_OriginAccessControl = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"OriginAccessControlConfig\"] !== undefined) {\n        contents.OriginAccessControlConfig = de_OriginAccessControlConfig(output[\"OriginAccessControlConfig\"], context);\n    }\n    return contents;\n};\nconst de_OriginAccessControlConfig = (output, context) => {\n    const contents = {};\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(output[\"Name\"]);\n    }\n    if (output[\"Description\"] !== undefined) {\n        contents.Description = (0, smithy_client_1.expectString)(output[\"Description\"]);\n    }\n    if (output[\"SigningProtocol\"] !== undefined) {\n        contents.SigningProtocol = (0, smithy_client_1.expectString)(output[\"SigningProtocol\"]);\n    }\n    if (output[\"SigningBehavior\"] !== undefined) {\n        contents.SigningBehavior = (0, smithy_client_1.expectString)(output[\"SigningBehavior\"]);\n    }\n    if (output[\"OriginAccessControlOriginType\"] !== undefined) {\n        contents.OriginAccessControlOriginType = (0, smithy_client_1.expectString)(output[\"OriginAccessControlOriginType\"]);\n    }\n    return contents;\n};\nconst de_OriginAccessControlList = (output, context) => {\n    const contents = {};\n    if (output[\"Marker\"] !== undefined) {\n        contents.Marker = (0, smithy_client_1.expectString)(output[\"Marker\"]);\n    }\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = (0, smithy_client_1.parseBoolean)(output[\"IsTruncated\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"OriginAccessControlSummary\"] !== undefined) {\n        contents.Items = de_OriginAccessControlSummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"OriginAccessControlSummary\"]), context);\n    }\n    return contents;\n};\nconst de_OriginAccessControlSummary = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"Description\"] !== undefined) {\n        contents.Description = (0, smithy_client_1.expectString)(output[\"Description\"]);\n    }\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(output[\"Name\"]);\n    }\n    if (output[\"SigningProtocol\"] !== undefined) {\n        contents.SigningProtocol = (0, smithy_client_1.expectString)(output[\"SigningProtocol\"]);\n    }\n    if (output[\"SigningBehavior\"] !== undefined) {\n        contents.SigningBehavior = (0, smithy_client_1.expectString)(output[\"SigningBehavior\"]);\n    }\n    if (output[\"OriginAccessControlOriginType\"] !== undefined) {\n        contents.OriginAccessControlOriginType = (0, smithy_client_1.expectString)(output[\"OriginAccessControlOriginType\"]);\n    }\n    return contents;\n};\nconst de_OriginAccessControlSummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_OriginAccessControlSummary(entry, context);\n    });\n};\nconst de_OriginCustomHeader = (output, context) => {\n    const contents = {};\n    if (output[\"HeaderName\"] !== undefined) {\n        contents.HeaderName = (0, smithy_client_1.expectString)(output[\"HeaderName\"]);\n    }\n    if (output[\"HeaderValue\"] !== undefined) {\n        contents.HeaderValue = (0, smithy_client_1.expectString)(output[\"HeaderValue\"]);\n    }\n    return contents;\n};\nconst de_OriginCustomHeadersList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_OriginCustomHeader(entry, context);\n    });\n};\nconst de_OriginGroup = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"FailoverCriteria\"] !== undefined) {\n        contents.FailoverCriteria = de_OriginGroupFailoverCriteria(output[\"FailoverCriteria\"], context);\n    }\n    if (output[\"Members\"] !== undefined) {\n        contents.Members = de_OriginGroupMembers(output[\"Members\"], context);\n    }\n    return contents;\n};\nconst de_OriginGroupFailoverCriteria = (output, context) => {\n    const contents = {};\n    if (output[\"StatusCodes\"] !== undefined) {\n        contents.StatusCodes = de_StatusCodes(output[\"StatusCodes\"], context);\n    }\n    return contents;\n};\nconst de_OriginGroupList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_OriginGroup(entry, context);\n    });\n};\nconst de_OriginGroupMember = (output, context) => {\n    const contents = {};\n    if (output[\"OriginId\"] !== undefined) {\n        contents.OriginId = (0, smithy_client_1.expectString)(output[\"OriginId\"]);\n    }\n    return contents;\n};\nconst de_OriginGroupMemberList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_OriginGroupMember(entry, context);\n    });\n};\nconst de_OriginGroupMembers = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"OriginGroupMember\"] !== undefined) {\n        contents.Items = de_OriginGroupMemberList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"OriginGroupMember\"]), context);\n    }\n    return contents;\n};\nconst de_OriginGroups = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"OriginGroup\"] !== undefined) {\n        contents.Items = de_OriginGroupList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"OriginGroup\"]), context);\n    }\n    return contents;\n};\nconst de_OriginList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Origin(entry, context);\n    });\n};\nconst de_OriginRequestPolicy = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"LastModifiedTime\"]));\n    }\n    if (output[\"OriginRequestPolicyConfig\"] !== undefined) {\n        contents.OriginRequestPolicyConfig = de_OriginRequestPolicyConfig(output[\"OriginRequestPolicyConfig\"], context);\n    }\n    return contents;\n};\nconst de_OriginRequestPolicyConfig = (output, context) => {\n    const contents = {};\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(output[\"Name\"]);\n    }\n    if (output[\"HeadersConfig\"] !== undefined) {\n        contents.HeadersConfig = de_OriginRequestPolicyHeadersConfig(output[\"HeadersConfig\"], context);\n    }\n    if (output[\"CookiesConfig\"] !== undefined) {\n        contents.CookiesConfig = de_OriginRequestPolicyCookiesConfig(output[\"CookiesConfig\"], context);\n    }\n    if (output[\"QueryStringsConfig\"] !== undefined) {\n        contents.QueryStringsConfig = de_OriginRequestPolicyQueryStringsConfig(output[\"QueryStringsConfig\"], context);\n    }\n    return contents;\n};\nconst de_OriginRequestPolicyCookiesConfig = (output, context) => {\n    const contents = {};\n    if (output[\"CookieBehavior\"] !== undefined) {\n        contents.CookieBehavior = (0, smithy_client_1.expectString)(output[\"CookieBehavior\"]);\n    }\n    if (output[\"Cookies\"] !== undefined) {\n        contents.Cookies = de_CookieNames(output[\"Cookies\"], context);\n    }\n    return contents;\n};\nconst de_OriginRequestPolicyHeadersConfig = (output, context) => {\n    const contents = {};\n    if (output[\"HeaderBehavior\"] !== undefined) {\n        contents.HeaderBehavior = (0, smithy_client_1.expectString)(output[\"HeaderBehavior\"]);\n    }\n    if (output[\"Headers\"] !== undefined) {\n        contents.Headers = de_Headers(output[\"Headers\"], context);\n    }\n    return contents;\n};\nconst de_OriginRequestPolicyList = (output, context) => {\n    const contents = {};\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"OriginRequestPolicySummary\"] !== undefined) {\n        contents.Items = de_OriginRequestPolicySummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"OriginRequestPolicySummary\"]), context);\n    }\n    return contents;\n};\nconst de_OriginRequestPolicyQueryStringsConfig = (output, context) => {\n    const contents = {};\n    if (output[\"QueryStringBehavior\"] !== undefined) {\n        contents.QueryStringBehavior = (0, smithy_client_1.expectString)(output[\"QueryStringBehavior\"]);\n    }\n    if (output[\"QueryStrings\"] !== undefined) {\n        contents.QueryStrings = de_QueryStringNames(output[\"QueryStrings\"], context);\n    }\n    return contents;\n};\nconst de_OriginRequestPolicySummary = (output, context) => {\n    const contents = {};\n    if (output[\"Type\"] !== undefined) {\n        contents.Type = (0, smithy_client_1.expectString)(output[\"Type\"]);\n    }\n    if (output[\"OriginRequestPolicy\"] !== undefined) {\n        contents.OriginRequestPolicy = de_OriginRequestPolicy(output[\"OriginRequestPolicy\"], context);\n    }\n    return contents;\n};\nconst de_OriginRequestPolicySummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_OriginRequestPolicySummary(entry, context);\n    });\n};\nconst de_Origins = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Origin\"] !== undefined) {\n        contents.Items = de_OriginList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Origin\"]), context);\n    }\n    return contents;\n};\nconst de_OriginShield = (output, context) => {\n    const contents = {};\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = (0, smithy_client_1.parseBoolean)(output[\"Enabled\"]);\n    }\n    if (output[\"OriginShieldRegion\"] !== undefined) {\n        contents.OriginShieldRegion = (0, smithy_client_1.expectString)(output[\"OriginShieldRegion\"]);\n    }\n    return contents;\n};\nconst de_OriginSslProtocols = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"SslProtocol\"] !== undefined) {\n        contents.Items = de_SslProtocolsList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"SslProtocol\"]), context);\n    }\n    return contents;\n};\nconst de_ParametersInCacheKeyAndForwardedToOrigin = (output, context) => {\n    const contents = {};\n    if (output[\"EnableAcceptEncodingGzip\"] !== undefined) {\n        contents.EnableAcceptEncodingGzip = (0, smithy_client_1.parseBoolean)(output[\"EnableAcceptEncodingGzip\"]);\n    }\n    if (output[\"EnableAcceptEncodingBrotli\"] !== undefined) {\n        contents.EnableAcceptEncodingBrotli = (0, smithy_client_1.parseBoolean)(output[\"EnableAcceptEncodingBrotli\"]);\n    }\n    if (output[\"HeadersConfig\"] !== undefined) {\n        contents.HeadersConfig = de_CachePolicyHeadersConfig(output[\"HeadersConfig\"], context);\n    }\n    if (output[\"CookiesConfig\"] !== undefined) {\n        contents.CookiesConfig = de_CachePolicyCookiesConfig(output[\"CookiesConfig\"], context);\n    }\n    if (output[\"QueryStringsConfig\"] !== undefined) {\n        contents.QueryStringsConfig = de_CachePolicyQueryStringsConfig(output[\"QueryStringsConfig\"], context);\n    }\n    return contents;\n};\nconst de_PathList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_Paths = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Path\"] !== undefined) {\n        contents.Items = de_PathList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Path\"]), context);\n    }\n    return contents;\n};\nconst de_PublicKey = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"CreatedTime\"] !== undefined) {\n        contents.CreatedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"CreatedTime\"]));\n    }\n    if (output[\"PublicKeyConfig\"] !== undefined) {\n        contents.PublicKeyConfig = de_PublicKeyConfig(output[\"PublicKeyConfig\"], context);\n    }\n    return contents;\n};\nconst de_PublicKeyConfig = (output, context) => {\n    const contents = {};\n    if (output[\"CallerReference\"] !== undefined) {\n        contents.CallerReference = (0, smithy_client_1.expectString)(output[\"CallerReference\"]);\n    }\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(output[\"Name\"]);\n    }\n    if (output[\"EncodedKey\"] !== undefined) {\n        contents.EncodedKey = (0, smithy_client_1.expectString)(output[\"EncodedKey\"]);\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    return contents;\n};\nconst de_PublicKeyIdList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_PublicKeyList = (output, context) => {\n    const contents = {};\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"PublicKeySummary\"] !== undefined) {\n        contents.Items = de_PublicKeySummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"PublicKeySummary\"]), context);\n    }\n    return contents;\n};\nconst de_PublicKeySummary = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(output[\"Name\"]);\n    }\n    if (output[\"CreatedTime\"] !== undefined) {\n        contents.CreatedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"CreatedTime\"]));\n    }\n    if (output[\"EncodedKey\"] !== undefined) {\n        contents.EncodedKey = (0, smithy_client_1.expectString)(output[\"EncodedKey\"]);\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    return contents;\n};\nconst de_PublicKeySummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_PublicKeySummary(entry, context);\n    });\n};\nconst de_QueryArgProfile = (output, context) => {\n    const contents = {};\n    if (output[\"QueryArg\"] !== undefined) {\n        contents.QueryArg = (0, smithy_client_1.expectString)(output[\"QueryArg\"]);\n    }\n    if (output[\"ProfileId\"] !== undefined) {\n        contents.ProfileId = (0, smithy_client_1.expectString)(output[\"ProfileId\"]);\n    }\n    return contents;\n};\nconst de_QueryArgProfileConfig = (output, context) => {\n    const contents = {};\n    if (output[\"ForwardWhenQueryArgProfileIsUnknown\"] !== undefined) {\n        contents.ForwardWhenQueryArgProfileIsUnknown = (0, smithy_client_1.parseBoolean)(output[\"ForwardWhenQueryArgProfileIsUnknown\"]);\n    }\n    if (output[\"QueryArgProfiles\"] !== undefined) {\n        contents.QueryArgProfiles = de_QueryArgProfiles(output[\"QueryArgProfiles\"], context);\n    }\n    return contents;\n};\nconst de_QueryArgProfileList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_QueryArgProfile(entry, context);\n    });\n};\nconst de_QueryArgProfiles = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"QueryArgProfile\"] !== undefined) {\n        contents.Items = de_QueryArgProfileList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"QueryArgProfile\"]), context);\n    }\n    return contents;\n};\nconst de_QueryStringCacheKeys = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Name\"] !== undefined) {\n        contents.Items = de_QueryStringCacheKeysList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Name\"]), context);\n    }\n    return contents;\n};\nconst de_QueryStringCacheKeysList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_QueryStringNames = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Name\"] !== undefined) {\n        contents.Items = de_QueryStringNamesList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Name\"]), context);\n    }\n    return contents;\n};\nconst de_QueryStringNamesList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_RealtimeLogConfig = (output, context) => {\n    const contents = {};\n    if (output[\"ARN\"] !== undefined) {\n        contents.ARN = (0, smithy_client_1.expectString)(output[\"ARN\"]);\n    }\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(output[\"Name\"]);\n    }\n    if (output[\"SamplingRate\"] !== undefined) {\n        contents.SamplingRate = (0, smithy_client_1.strictParseLong)(output[\"SamplingRate\"]);\n    }\n    if (output.EndPoints === \"\") {\n        contents.EndPoints = [];\n    }\n    else if (output[\"EndPoints\"] !== undefined && output[\"EndPoints\"][\"member\"] !== undefined) {\n        contents.EndPoints = de_EndPointList((0, smithy_client_1.getArrayIfSingleItem)(output[\"EndPoints\"][\"member\"]), context);\n    }\n    if (output.Fields === \"\") {\n        contents.Fields = [];\n    }\n    else if (output[\"Fields\"] !== undefined && output[\"Fields\"][\"Field\"] !== undefined) {\n        contents.Fields = de_FieldList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Fields\"][\"Field\"]), context);\n    }\n    return contents;\n};\nconst de_RealtimeLogConfigList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_RealtimeLogConfig(entry, context);\n    });\n};\nconst de_RealtimeLogConfigs = (output, context) => {\n    const contents = {};\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"member\"] !== undefined) {\n        contents.Items = de_RealtimeLogConfigList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"member\"]), context);\n    }\n    if (output[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = (0, smithy_client_1.parseBoolean)(output[\"IsTruncated\"]);\n    }\n    if (output[\"Marker\"] !== undefined) {\n        contents.Marker = (0, smithy_client_1.expectString)(output[\"Marker\"]);\n    }\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    return contents;\n};\nconst de_RealtimeMetricsSubscriptionConfig = (output, context) => {\n    const contents = {};\n    if (output[\"RealtimeMetricsSubscriptionStatus\"] !== undefined) {\n        contents.RealtimeMetricsSubscriptionStatus = (0, smithy_client_1.expectString)(output[\"RealtimeMetricsSubscriptionStatus\"]);\n    }\n    return contents;\n};\nconst de_ResponseHeadersPolicy = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"LastModifiedTime\"]));\n    }\n    if (output[\"ResponseHeadersPolicyConfig\"] !== undefined) {\n        contents.ResponseHeadersPolicyConfig = de_ResponseHeadersPolicyConfig(output[\"ResponseHeadersPolicyConfig\"], context);\n    }\n    return contents;\n};\nconst de_ResponseHeadersPolicyAccessControlAllowHeaders = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Header\"] !== undefined) {\n        contents.Items = de_AccessControlAllowHeadersList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Header\"]), context);\n    }\n    return contents;\n};\nconst de_ResponseHeadersPolicyAccessControlAllowMethods = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Method\"] !== undefined) {\n        contents.Items = de_AccessControlAllowMethodsList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Method\"]), context);\n    }\n    return contents;\n};\nconst de_ResponseHeadersPolicyAccessControlAllowOrigins = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Origin\"] !== undefined) {\n        contents.Items = de_AccessControlAllowOriginsList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Origin\"]), context);\n    }\n    return contents;\n};\nconst de_ResponseHeadersPolicyAccessControlExposeHeaders = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Header\"] !== undefined) {\n        contents.Items = de_AccessControlExposeHeadersList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Header\"]), context);\n    }\n    return contents;\n};\nconst de_ResponseHeadersPolicyConfig = (output, context) => {\n    const contents = {};\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(output[\"Name\"]);\n    }\n    if (output[\"CorsConfig\"] !== undefined) {\n        contents.CorsConfig = de_ResponseHeadersPolicyCorsConfig(output[\"CorsConfig\"], context);\n    }\n    if (output[\"SecurityHeadersConfig\"] !== undefined) {\n        contents.SecurityHeadersConfig = de_ResponseHeadersPolicySecurityHeadersConfig(output[\"SecurityHeadersConfig\"], context);\n    }\n    if (output[\"ServerTimingHeadersConfig\"] !== undefined) {\n        contents.ServerTimingHeadersConfig = de_ResponseHeadersPolicyServerTimingHeadersConfig(output[\"ServerTimingHeadersConfig\"], context);\n    }\n    if (output[\"CustomHeadersConfig\"] !== undefined) {\n        contents.CustomHeadersConfig = de_ResponseHeadersPolicyCustomHeadersConfig(output[\"CustomHeadersConfig\"], context);\n    }\n    if (output[\"RemoveHeadersConfig\"] !== undefined) {\n        contents.RemoveHeadersConfig = de_ResponseHeadersPolicyRemoveHeadersConfig(output[\"RemoveHeadersConfig\"], context);\n    }\n    return contents;\n};\nconst de_ResponseHeadersPolicyContentSecurityPolicy = (output, context) => {\n    const contents = {};\n    if (output[\"Override\"] !== undefined) {\n        contents.Override = (0, smithy_client_1.parseBoolean)(output[\"Override\"]);\n    }\n    if (output[\"ContentSecurityPolicy\"] !== undefined) {\n        contents.ContentSecurityPolicy = (0, smithy_client_1.expectString)(output[\"ContentSecurityPolicy\"]);\n    }\n    return contents;\n};\nconst de_ResponseHeadersPolicyContentTypeOptions = (output, context) => {\n    const contents = {};\n    if (output[\"Override\"] !== undefined) {\n        contents.Override = (0, smithy_client_1.parseBoolean)(output[\"Override\"]);\n    }\n    return contents;\n};\nconst de_ResponseHeadersPolicyCorsConfig = (output, context) => {\n    const contents = {};\n    if (output[\"AccessControlAllowOrigins\"] !== undefined) {\n        contents.AccessControlAllowOrigins = de_ResponseHeadersPolicyAccessControlAllowOrigins(output[\"AccessControlAllowOrigins\"], context);\n    }\n    if (output[\"AccessControlAllowHeaders\"] !== undefined) {\n        contents.AccessControlAllowHeaders = de_ResponseHeadersPolicyAccessControlAllowHeaders(output[\"AccessControlAllowHeaders\"], context);\n    }\n    if (output[\"AccessControlAllowMethods\"] !== undefined) {\n        contents.AccessControlAllowMethods = de_ResponseHeadersPolicyAccessControlAllowMethods(output[\"AccessControlAllowMethods\"], context);\n    }\n    if (output[\"AccessControlAllowCredentials\"] !== undefined) {\n        contents.AccessControlAllowCredentials = (0, smithy_client_1.parseBoolean)(output[\"AccessControlAllowCredentials\"]);\n    }\n    if (output[\"AccessControlExposeHeaders\"] !== undefined) {\n        contents.AccessControlExposeHeaders = de_ResponseHeadersPolicyAccessControlExposeHeaders(output[\"AccessControlExposeHeaders\"], context);\n    }\n    if (output[\"AccessControlMaxAgeSec\"] !== undefined) {\n        contents.AccessControlMaxAgeSec = (0, smithy_client_1.strictParseInt32)(output[\"AccessControlMaxAgeSec\"]);\n    }\n    if (output[\"OriginOverride\"] !== undefined) {\n        contents.OriginOverride = (0, smithy_client_1.parseBoolean)(output[\"OriginOverride\"]);\n    }\n    return contents;\n};\nconst de_ResponseHeadersPolicyCustomHeader = (output, context) => {\n    const contents = {};\n    if (output[\"Header\"] !== undefined) {\n        contents.Header = (0, smithy_client_1.expectString)(output[\"Header\"]);\n    }\n    if (output[\"Value\"] !== undefined) {\n        contents.Value = (0, smithy_client_1.expectString)(output[\"Value\"]);\n    }\n    if (output[\"Override\"] !== undefined) {\n        contents.Override = (0, smithy_client_1.parseBoolean)(output[\"Override\"]);\n    }\n    return contents;\n};\nconst de_ResponseHeadersPolicyCustomHeaderList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ResponseHeadersPolicyCustomHeader(entry, context);\n    });\n};\nconst de_ResponseHeadersPolicyCustomHeadersConfig = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"ResponseHeadersPolicyCustomHeader\"] !== undefined) {\n        contents.Items = de_ResponseHeadersPolicyCustomHeaderList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"ResponseHeadersPolicyCustomHeader\"]), context);\n    }\n    return contents;\n};\nconst de_ResponseHeadersPolicyFrameOptions = (output, context) => {\n    const contents = {};\n    if (output[\"Override\"] !== undefined) {\n        contents.Override = (0, smithy_client_1.parseBoolean)(output[\"Override\"]);\n    }\n    if (output[\"FrameOption\"] !== undefined) {\n        contents.FrameOption = (0, smithy_client_1.expectString)(output[\"FrameOption\"]);\n    }\n    return contents;\n};\nconst de_ResponseHeadersPolicyList = (output, context) => {\n    const contents = {};\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"ResponseHeadersPolicySummary\"] !== undefined) {\n        contents.Items = de_ResponseHeadersPolicySummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"ResponseHeadersPolicySummary\"]), context);\n    }\n    return contents;\n};\nconst de_ResponseHeadersPolicyReferrerPolicy = (output, context) => {\n    const contents = {};\n    if (output[\"Override\"] !== undefined) {\n        contents.Override = (0, smithy_client_1.parseBoolean)(output[\"Override\"]);\n    }\n    if (output[\"ReferrerPolicy\"] !== undefined) {\n        contents.ReferrerPolicy = (0, smithy_client_1.expectString)(output[\"ReferrerPolicy\"]);\n    }\n    return contents;\n};\nconst de_ResponseHeadersPolicyRemoveHeader = (output, context) => {\n    const contents = {};\n    if (output[\"Header\"] !== undefined) {\n        contents.Header = (0, smithy_client_1.expectString)(output[\"Header\"]);\n    }\n    return contents;\n};\nconst de_ResponseHeadersPolicyRemoveHeaderList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ResponseHeadersPolicyRemoveHeader(entry, context);\n    });\n};\nconst de_ResponseHeadersPolicyRemoveHeadersConfig = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"ResponseHeadersPolicyRemoveHeader\"] !== undefined) {\n        contents.Items = de_ResponseHeadersPolicyRemoveHeaderList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"ResponseHeadersPolicyRemoveHeader\"]), context);\n    }\n    return contents;\n};\nconst de_ResponseHeadersPolicySecurityHeadersConfig = (output, context) => {\n    const contents = {};\n    if (output[\"XSSProtection\"] !== undefined) {\n        contents.XSSProtection = de_ResponseHeadersPolicyXSSProtection(output[\"XSSProtection\"], context);\n    }\n    if (output[\"FrameOptions\"] !== undefined) {\n        contents.FrameOptions = de_ResponseHeadersPolicyFrameOptions(output[\"FrameOptions\"], context);\n    }\n    if (output[\"ReferrerPolicy\"] !== undefined) {\n        contents.ReferrerPolicy = de_ResponseHeadersPolicyReferrerPolicy(output[\"ReferrerPolicy\"], context);\n    }\n    if (output[\"ContentSecurityPolicy\"] !== undefined) {\n        contents.ContentSecurityPolicy = de_ResponseHeadersPolicyContentSecurityPolicy(output[\"ContentSecurityPolicy\"], context);\n    }\n    if (output[\"ContentTypeOptions\"] !== undefined) {\n        contents.ContentTypeOptions = de_ResponseHeadersPolicyContentTypeOptions(output[\"ContentTypeOptions\"], context);\n    }\n    if (output[\"StrictTransportSecurity\"] !== undefined) {\n        contents.StrictTransportSecurity = de_ResponseHeadersPolicyStrictTransportSecurity(output[\"StrictTransportSecurity\"], context);\n    }\n    return contents;\n};\nconst de_ResponseHeadersPolicyServerTimingHeadersConfig = (output, context) => {\n    const contents = {};\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = (0, smithy_client_1.parseBoolean)(output[\"Enabled\"]);\n    }\n    if (output[\"SamplingRate\"] !== undefined) {\n        contents.SamplingRate = (0, smithy_client_1.strictParseFloat)(output[\"SamplingRate\"]);\n    }\n    return contents;\n};\nconst de_ResponseHeadersPolicyStrictTransportSecurity = (output, context) => {\n    const contents = {};\n    if (output[\"Override\"] !== undefined) {\n        contents.Override = (0, smithy_client_1.parseBoolean)(output[\"Override\"]);\n    }\n    if (output[\"IncludeSubdomains\"] !== undefined) {\n        contents.IncludeSubdomains = (0, smithy_client_1.parseBoolean)(output[\"IncludeSubdomains\"]);\n    }\n    if (output[\"Preload\"] !== undefined) {\n        contents.Preload = (0, smithy_client_1.parseBoolean)(output[\"Preload\"]);\n    }\n    if (output[\"AccessControlMaxAgeSec\"] !== undefined) {\n        contents.AccessControlMaxAgeSec = (0, smithy_client_1.strictParseInt32)(output[\"AccessControlMaxAgeSec\"]);\n    }\n    return contents;\n};\nconst de_ResponseHeadersPolicySummary = (output, context) => {\n    const contents = {};\n    if (output[\"Type\"] !== undefined) {\n        contents.Type = (0, smithy_client_1.expectString)(output[\"Type\"]);\n    }\n    if (output[\"ResponseHeadersPolicy\"] !== undefined) {\n        contents.ResponseHeadersPolicy = de_ResponseHeadersPolicy(output[\"ResponseHeadersPolicy\"], context);\n    }\n    return contents;\n};\nconst de_ResponseHeadersPolicySummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ResponseHeadersPolicySummary(entry, context);\n    });\n};\nconst de_ResponseHeadersPolicyXSSProtection = (output, context) => {\n    const contents = {};\n    if (output[\"Override\"] !== undefined) {\n        contents.Override = (0, smithy_client_1.parseBoolean)(output[\"Override\"]);\n    }\n    if (output[\"Protection\"] !== undefined) {\n        contents.Protection = (0, smithy_client_1.parseBoolean)(output[\"Protection\"]);\n    }\n    if (output[\"ModeBlock\"] !== undefined) {\n        contents.ModeBlock = (0, smithy_client_1.parseBoolean)(output[\"ModeBlock\"]);\n    }\n    if (output[\"ReportUri\"] !== undefined) {\n        contents.ReportUri = (0, smithy_client_1.expectString)(output[\"ReportUri\"]);\n    }\n    return contents;\n};\nconst de_Restrictions = (output, context) => {\n    const contents = {};\n    if (output[\"GeoRestriction\"] !== undefined) {\n        contents.GeoRestriction = de_GeoRestriction(output[\"GeoRestriction\"], context);\n    }\n    return contents;\n};\nconst de_S3Origin = (output, context) => {\n    const contents = {};\n    if (output[\"DomainName\"] !== undefined) {\n        contents.DomainName = (0, smithy_client_1.expectString)(output[\"DomainName\"]);\n    }\n    if (output[\"OriginAccessIdentity\"] !== undefined) {\n        contents.OriginAccessIdentity = (0, smithy_client_1.expectString)(output[\"OriginAccessIdentity\"]);\n    }\n    return contents;\n};\nconst de_S3OriginConfig = (output, context) => {\n    const contents = {};\n    if (output[\"OriginAccessIdentity\"] !== undefined) {\n        contents.OriginAccessIdentity = (0, smithy_client_1.expectString)(output[\"OriginAccessIdentity\"]);\n    }\n    return contents;\n};\nconst de_SessionStickinessConfig = (output, context) => {\n    const contents = {};\n    if (output[\"IdleTTL\"] !== undefined) {\n        contents.IdleTTL = (0, smithy_client_1.strictParseInt32)(output[\"IdleTTL\"]);\n    }\n    if (output[\"MaximumTTL\"] !== undefined) {\n        contents.MaximumTTL = (0, smithy_client_1.strictParseInt32)(output[\"MaximumTTL\"]);\n    }\n    return contents;\n};\nconst de_Signer = (output, context) => {\n    const contents = {};\n    if (output[\"AwsAccountNumber\"] !== undefined) {\n        contents.AwsAccountNumber = (0, smithy_client_1.expectString)(output[\"AwsAccountNumber\"]);\n    }\n    if (output[\"KeyPairIds\"] !== undefined) {\n        contents.KeyPairIds = de_KeyPairIds(output[\"KeyPairIds\"], context);\n    }\n    return contents;\n};\nconst de_SignerList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Signer(entry, context);\n    });\n};\nconst de_SslProtocolsList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_StagingDistributionDnsNameList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_StagingDistributionDnsNames = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"DnsName\"] !== undefined) {\n        contents.Items = de_StagingDistributionDnsNameList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"DnsName\"]), context);\n    }\n    return contents;\n};\nconst de_StatusCodeList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.strictParseInt32)(entry);\n    });\n};\nconst de_StatusCodes = (output, context) => {\n    const contents = {};\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"StatusCode\"] !== undefined) {\n        contents.Items = de_StatusCodeList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"StatusCode\"]), context);\n    }\n    return contents;\n};\nconst de_StreamingDistribution = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"ARN\"] !== undefined) {\n        contents.ARN = (0, smithy_client_1.expectString)(output[\"ARN\"]);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(output[\"Status\"]);\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"LastModifiedTime\"]));\n    }\n    if (output[\"DomainName\"] !== undefined) {\n        contents.DomainName = (0, smithy_client_1.expectString)(output[\"DomainName\"]);\n    }\n    if (output[\"ActiveTrustedSigners\"] !== undefined) {\n        contents.ActiveTrustedSigners = de_ActiveTrustedSigners(output[\"ActiveTrustedSigners\"], context);\n    }\n    if (output[\"StreamingDistributionConfig\"] !== undefined) {\n        contents.StreamingDistributionConfig = de_StreamingDistributionConfig(output[\"StreamingDistributionConfig\"], context);\n    }\n    return contents;\n};\nconst de_StreamingDistributionConfig = (output, context) => {\n    const contents = {};\n    if (output[\"CallerReference\"] !== undefined) {\n        contents.CallerReference = (0, smithy_client_1.expectString)(output[\"CallerReference\"]);\n    }\n    if (output[\"S3Origin\"] !== undefined) {\n        contents.S3Origin = de_S3Origin(output[\"S3Origin\"], context);\n    }\n    if (output[\"Aliases\"] !== undefined) {\n        contents.Aliases = de_Aliases(output[\"Aliases\"], context);\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    if (output[\"Logging\"] !== undefined) {\n        contents.Logging = de_StreamingLoggingConfig(output[\"Logging\"], context);\n    }\n    if (output[\"TrustedSigners\"] !== undefined) {\n        contents.TrustedSigners = de_TrustedSigners(output[\"TrustedSigners\"], context);\n    }\n    if (output[\"PriceClass\"] !== undefined) {\n        contents.PriceClass = (0, smithy_client_1.expectString)(output[\"PriceClass\"]);\n    }\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = (0, smithy_client_1.parseBoolean)(output[\"Enabled\"]);\n    }\n    return contents;\n};\nconst de_StreamingDistributionList = (output, context) => {\n    const contents = {};\n    if (output[\"Marker\"] !== undefined) {\n        contents.Marker = (0, smithy_client_1.expectString)(output[\"Marker\"]);\n    }\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = (0, smithy_client_1.parseBoolean)(output[\"IsTruncated\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"StreamingDistributionSummary\"] !== undefined) {\n        contents.Items = de_StreamingDistributionSummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"StreamingDistributionSummary\"]), context);\n    }\n    return contents;\n};\nconst de_StreamingDistributionSummary = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"ARN\"] !== undefined) {\n        contents.ARN = (0, smithy_client_1.expectString)(output[\"ARN\"]);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(output[\"Status\"]);\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"LastModifiedTime\"]));\n    }\n    if (output[\"DomainName\"] !== undefined) {\n        contents.DomainName = (0, smithy_client_1.expectString)(output[\"DomainName\"]);\n    }\n    if (output[\"S3Origin\"] !== undefined) {\n        contents.S3Origin = de_S3Origin(output[\"S3Origin\"], context);\n    }\n    if (output[\"Aliases\"] !== undefined) {\n        contents.Aliases = de_Aliases(output[\"Aliases\"], context);\n    }\n    if (output[\"TrustedSigners\"] !== undefined) {\n        contents.TrustedSigners = de_TrustedSigners(output[\"TrustedSigners\"], context);\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    if (output[\"PriceClass\"] !== undefined) {\n        contents.PriceClass = (0, smithy_client_1.expectString)(output[\"PriceClass\"]);\n    }\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = (0, smithy_client_1.parseBoolean)(output[\"Enabled\"]);\n    }\n    return contents;\n};\nconst de_StreamingDistributionSummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_StreamingDistributionSummary(entry, context);\n    });\n};\nconst de_StreamingLoggingConfig = (output, context) => {\n    const contents = {};\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = (0, smithy_client_1.parseBoolean)(output[\"Enabled\"]);\n    }\n    if (output[\"Bucket\"] !== undefined) {\n        contents.Bucket = (0, smithy_client_1.expectString)(output[\"Bucket\"]);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = (0, smithy_client_1.expectString)(output[\"Prefix\"]);\n    }\n    return contents;\n};\nconst de_Tag = (output, context) => {\n    const contents = {};\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = (0, smithy_client_1.expectString)(output[\"Key\"]);\n    }\n    if (output[\"Value\"] !== undefined) {\n        contents.Value = (0, smithy_client_1.expectString)(output[\"Value\"]);\n    }\n    return contents;\n};\nconst de_TagList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Tag(entry, context);\n    });\n};\nconst de_Tags = (output, context) => {\n    const contents = {};\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Tag\"] !== undefined) {\n        contents.Items = de_TagList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Tag\"]), context);\n    }\n    return contents;\n};\nconst de_TestResult = (output, context) => {\n    const contents = {};\n    if (output[\"FunctionSummary\"] !== undefined) {\n        contents.FunctionSummary = de_FunctionSummary(output[\"FunctionSummary\"], context);\n    }\n    if (output[\"ComputeUtilization\"] !== undefined) {\n        contents.ComputeUtilization = (0, smithy_client_1.expectString)(output[\"ComputeUtilization\"]);\n    }\n    if (output.FunctionExecutionLogs === \"\") {\n        contents.FunctionExecutionLogs = [];\n    }\n    else if (output[\"FunctionExecutionLogs\"] !== undefined && output[\"FunctionExecutionLogs\"][\"member\"] !== undefined) {\n        contents.FunctionExecutionLogs = de_FunctionExecutionLogList((0, smithy_client_1.getArrayIfSingleItem)(output[\"FunctionExecutionLogs\"][\"member\"]), context);\n    }\n    if (output[\"FunctionErrorMessage\"] !== undefined) {\n        contents.FunctionErrorMessage = (0, smithy_client_1.expectString)(output[\"FunctionErrorMessage\"]);\n    }\n    if (output[\"FunctionOutput\"] !== undefined) {\n        contents.FunctionOutput = (0, smithy_client_1.expectString)(output[\"FunctionOutput\"]);\n    }\n    return contents;\n};\nconst de_TrafficConfig = (output, context) => {\n    const contents = {};\n    if (output[\"SingleWeightConfig\"] !== undefined) {\n        contents.SingleWeightConfig = de_ContinuousDeploymentSingleWeightConfig(output[\"SingleWeightConfig\"], context);\n    }\n    if (output[\"SingleHeaderConfig\"] !== undefined) {\n        contents.SingleHeaderConfig = de_ContinuousDeploymentSingleHeaderConfig(output[\"SingleHeaderConfig\"], context);\n    }\n    if (output[\"Type\"] !== undefined) {\n        contents.Type = (0, smithy_client_1.expectString)(output[\"Type\"]);\n    }\n    return contents;\n};\nconst de_TrustedKeyGroupIdList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_TrustedKeyGroups = (output, context) => {\n    const contents = {};\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = (0, smithy_client_1.parseBoolean)(output[\"Enabled\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"KeyGroup\"] !== undefined) {\n        contents.Items = de_TrustedKeyGroupIdList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"KeyGroup\"]), context);\n    }\n    return contents;\n};\nconst de_TrustedSigners = (output, context) => {\n    const contents = {};\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = (0, smithy_client_1.parseBoolean)(output[\"Enabled\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"AwsAccountNumber\"] !== undefined) {\n        contents.Items = de_AwsAccountNumberList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"AwsAccountNumber\"]), context);\n    }\n    return contents;\n};\nconst de_ViewerCertificate = (output, context) => {\n    const contents = {};\n    if (output[\"CloudFrontDefaultCertificate\"] !== undefined) {\n        contents.CloudFrontDefaultCertificate = (0, smithy_client_1.parseBoolean)(output[\"CloudFrontDefaultCertificate\"]);\n    }\n    if (output[\"IAMCertificateId\"] !== undefined) {\n        contents.IAMCertificateId = (0, smithy_client_1.expectString)(output[\"IAMCertificateId\"]);\n    }\n    if (output[\"ACMCertificateArn\"] !== undefined) {\n        contents.ACMCertificateArn = (0, smithy_client_1.expectString)(output[\"ACMCertificateArn\"]);\n    }\n    if (output[\"SSLSupportMethod\"] !== undefined) {\n        contents.SSLSupportMethod = (0, smithy_client_1.expectString)(output[\"SSLSupportMethod\"]);\n    }\n    if (output[\"MinimumProtocolVersion\"] !== undefined) {\n        contents.MinimumProtocolVersion = (0, smithy_client_1.expectString)(output[\"MinimumProtocolVersion\"]);\n    }\n    if (output[\"Certificate\"] !== undefined) {\n        contents.Certificate = (0, smithy_client_1.expectString)(output[\"Certificate\"]);\n    }\n    if (output[\"CertificateSource\"] !== undefined) {\n        contents.CertificateSource = (0, smithy_client_1.expectString)(output[\"CertificateSource\"]);\n    }\n    return contents;\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => (0, smithy_client_1.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body));\nconst isSerializableHeaderValue = (value) => value !== undefined &&\n    value !== null &&\n    value !== \"\" &&\n    (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n    (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        const parser = new fast_xml_parser_1.XMLParser({\n            attributeNamePrefix: \"\",\n            htmlEntities: true,\n            ignoreAttributes: false,\n            ignoreDeclaration: true,\n            parseTagValue: false,\n            trimValues: false,\n            tagValueProcessor: (_, val) => (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : undefined),\n        });\n        parser.addEntity(\"#xD\", \"\\r\");\n        parser.addEntity(\"#10\", \"\\n\");\n        const parsedObj = parser.parse(encoded);\n        const textNodeName = \"#text\";\n        const key = Object.keys(parsedObj)[0];\n        const parsedObjToReturn = parsedObj[key];\n        if (parsedObjToReturn[textNodeName]) {\n            parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n            delete parsedObjToReturn[textNodeName];\n        }\n        return (0, smithy_client_1.getValueFromTextNode)(parsedObjToReturn);\n    }\n    return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n    const value = await parseBody(errorBody, context);\n    if (value.Error) {\n        value.Error.message = value.Error.message ?? value.Error.Message;\n    }\n    return value;\n};\nconst loadRestXmlErrorCode = (output, data) => {\n    if (data.Error?.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"../package.json\"));\nconst client_sts_1 = require(\"@aws-sdk/client-sts\");\nconst credential_provider_node_1 = require(\"@aws-sdk/credential-provider-node\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst config_resolver_1 = require(\"@smithy/config-resolver\");\nconst hash_node_1 = require(\"@smithy/hash-node\");\nconst middleware_retry_1 = require(\"@smithy/middleware-retry\");\nconst node_config_provider_1 = require(\"@smithy/node-config-provider\");\nconst node_http_handler_1 = require(\"@smithy/node-http-handler\");\nconst util_body_length_node_1 = require(\"@smithy/util-body-length-node\");\nconst util_retry_1 = require(\"@smithy/util-retry\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst util_defaults_mode_node_1 = require(\"@smithy/util-defaults-mode-node\");\nconst smithy_client_2 = require(\"@smithy/smithy-client\");\nconst getRuntimeConfig = (config) => {\n    (0, smithy_client_2.emitWarningIfUnsupportedVersion)(process.version);\n    const defaultsMode = (0, util_defaults_mode_node_1.resolveDefaultsModeConfig)(config);\n    const defaultConfigProvider = () => defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = (0, runtimeConfig_shared_1.getRuntimeConfig)(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? util_body_length_node_1.calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? (0, client_sts_1.decorateDefaultCredentialProvider)(credential_provider_node_1.defaultProvider),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            (0, util_user_agent_node_1.defaultUserAgent)({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        maxAttempts: config?.maxAttempts ?? (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: config?.requestHandler ?? new node_http_handler_1.NodeHttpHandler(defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            (0, node_config_provider_1.loadConfig)({\n                ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || util_retry_1.DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? node_http_handler_1.streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst url_parser_1 = require(\"@smithy/url-parser\");\nconst util_base64_1 = require(\"@smithy/util-base64\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst endpointResolver_1 = require(\"./endpoint/endpointResolver\");\nconst getRuntimeConfig = (config) => ({\n    apiVersion: \"2020-05-31\",\n    base64Decoder: config?.base64Decoder ?? util_base64_1.fromBase64,\n    base64Encoder: config?.base64Encoder ?? util_base64_1.toBase64,\n    disableHostPrefix: config?.disableHostPrefix ?? false,\n    endpointProvider: config?.endpointProvider ?? endpointResolver_1.defaultEndpointResolver,\n    extensions: config?.extensions ?? [],\n    logger: config?.logger ?? new smithy_client_1.NoOpLogger(),\n    serviceId: config?.serviceId ?? \"CloudFront\",\n    urlParser: config?.urlParser ?? url_parser_1.parseUrl,\n    utf8Decoder: config?.utf8Decoder ?? util_utf8_1.fromUtf8,\n    utf8Encoder: config?.utf8Encoder ?? util_utf8_1.toUtf8,\n});\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveRuntimeExtensions = void 0;\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst asPartial = (t) => t;\nconst resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = {\n        ...asPartial((0, smithy_client_1.getDefaultExtensionConfiguration)(runtimeConfig)),\n    };\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return {\n        ...runtimeConfig,\n        ...(0, smithy_client_1.resolveDefaultRuntimeConfig)(extensionConfiguration),\n    };\n};\nexports.resolveRuntimeExtensions = resolveRuntimeExtensions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./waitForDistributionDeployed\"), exports);\ntslib_1.__exportStar(require(\"./waitForInvalidationCompleted\"), exports);\ntslib_1.__exportStar(require(\"./waitForStreamingDistributionDeployed\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitUntilDistributionDeployed = exports.waitForDistributionDeployed = void 0;\nconst util_waiter_1 = require(\"@smithy/util-waiter\");\nconst GetDistributionCommand_1 = require(\"../commands/GetDistributionCommand\");\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        const result = await client.send(new GetDistributionCommand_1.GetDistributionCommand(input));\n        reason = result;\n        try {\n            const returnComparator = () => {\n                return result.Distribution.Status;\n            };\n            if (returnComparator() === \"Deployed\") {\n                return { state: util_waiter_1.WaiterState.SUCCESS, reason };\n            }\n        }\n        catch (e) { }\n    }\n    catch (exception) {\n        reason = exception;\n    }\n    return { state: util_waiter_1.WaiterState.RETRY, reason };\n};\nconst waitForDistributionDeployed = async (params, input) => {\n    const serviceDefaults = { minDelay: 60, maxDelay: 120 };\n    return (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n};\nexports.waitForDistributionDeployed = waitForDistributionDeployed;\nconst waitUntilDistributionDeployed = async (params, input) => {\n    const serviceDefaults = { minDelay: 60, maxDelay: 120 };\n    const result = await (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n    return (0, util_waiter_1.checkExceptions)(result);\n};\nexports.waitUntilDistributionDeployed = waitUntilDistributionDeployed;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitUntilInvalidationCompleted = exports.waitForInvalidationCompleted = void 0;\nconst util_waiter_1 = require(\"@smithy/util-waiter\");\nconst GetInvalidationCommand_1 = require(\"../commands/GetInvalidationCommand\");\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        const result = await client.send(new GetInvalidationCommand_1.GetInvalidationCommand(input));\n        reason = result;\n        try {\n            const returnComparator = () => {\n                return result.Invalidation.Status;\n            };\n            if (returnComparator() === \"Completed\") {\n                return { state: util_waiter_1.WaiterState.SUCCESS, reason };\n            }\n        }\n        catch (e) { }\n    }\n    catch (exception) {\n        reason = exception;\n    }\n    return { state: util_waiter_1.WaiterState.RETRY, reason };\n};\nconst waitForInvalidationCompleted = async (params, input) => {\n    const serviceDefaults = { minDelay: 20, maxDelay: 120 };\n    return (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n};\nexports.waitForInvalidationCompleted = waitForInvalidationCompleted;\nconst waitUntilInvalidationCompleted = async (params, input) => {\n    const serviceDefaults = { minDelay: 20, maxDelay: 120 };\n    const result = await (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n    return (0, util_waiter_1.checkExceptions)(result);\n};\nexports.waitUntilInvalidationCompleted = waitUntilInvalidationCompleted;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitUntilStreamingDistributionDeployed = exports.waitForStreamingDistributionDeployed = void 0;\nconst util_waiter_1 = require(\"@smithy/util-waiter\");\nconst GetStreamingDistributionCommand_1 = require(\"../commands/GetStreamingDistributionCommand\");\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        const result = await client.send(new GetStreamingDistributionCommand_1.GetStreamingDistributionCommand(input));\n        reason = result;\n        try {\n            const returnComparator = () => {\n                return result.StreamingDistribution.Status;\n            };\n            if (returnComparator() === \"Deployed\") {\n                return { state: util_waiter_1.WaiterState.SUCCESS, reason };\n            }\n        }\n        catch (e) { }\n    }\n    catch (exception) {\n        reason = exception;\n    }\n    return { state: util_waiter_1.WaiterState.RETRY, reason };\n};\nconst waitForStreamingDistributionDeployed = async (params, input) => {\n    const serviceDefaults = { minDelay: 60, maxDelay: 120 };\n    return (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n};\nexports.waitForStreamingDistributionDeployed = waitForStreamingDistributionDeployed;\nconst waitUntilStreamingDistributionDeployed = async (params, input) => {\n    const serviceDefaults = { minDelay: 60, maxDelay: 120 };\n    const result = await (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n    return (0, util_waiter_1.checkExceptions)(result);\n};\nexports.waitUntilStreamingDistributionDeployed = waitUntilStreamingDistributionDeployed;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.S3 = void 0;\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst AbortMultipartUploadCommand_1 = require(\"./commands/AbortMultipartUploadCommand\");\nconst CompleteMultipartUploadCommand_1 = require(\"./commands/CompleteMultipartUploadCommand\");\nconst CopyObjectCommand_1 = require(\"./commands/CopyObjectCommand\");\nconst CreateBucketCommand_1 = require(\"./commands/CreateBucketCommand\");\nconst CreateMultipartUploadCommand_1 = require(\"./commands/CreateMultipartUploadCommand\");\nconst DeleteBucketAnalyticsConfigurationCommand_1 = require(\"./commands/DeleteBucketAnalyticsConfigurationCommand\");\nconst DeleteBucketCommand_1 = require(\"./commands/DeleteBucketCommand\");\nconst DeleteBucketCorsCommand_1 = require(\"./commands/DeleteBucketCorsCommand\");\nconst DeleteBucketEncryptionCommand_1 = require(\"./commands/DeleteBucketEncryptionCommand\");\nconst DeleteBucketIntelligentTieringConfigurationCommand_1 = require(\"./commands/DeleteBucketIntelligentTieringConfigurationCommand\");\nconst DeleteBucketInventoryConfigurationCommand_1 = require(\"./commands/DeleteBucketInventoryConfigurationCommand\");\nconst DeleteBucketLifecycleCommand_1 = require(\"./commands/DeleteBucketLifecycleCommand\");\nconst DeleteBucketMetricsConfigurationCommand_1 = require(\"./commands/DeleteBucketMetricsConfigurationCommand\");\nconst DeleteBucketOwnershipControlsCommand_1 = require(\"./commands/DeleteBucketOwnershipControlsCommand\");\nconst DeleteBucketPolicyCommand_1 = require(\"./commands/DeleteBucketPolicyCommand\");\nconst DeleteBucketReplicationCommand_1 = require(\"./commands/DeleteBucketReplicationCommand\");\nconst DeleteBucketTaggingCommand_1 = require(\"./commands/DeleteBucketTaggingCommand\");\nconst DeleteBucketWebsiteCommand_1 = require(\"./commands/DeleteBucketWebsiteCommand\");\nconst DeleteObjectCommand_1 = require(\"./commands/DeleteObjectCommand\");\nconst DeleteObjectsCommand_1 = require(\"./commands/DeleteObjectsCommand\");\nconst DeleteObjectTaggingCommand_1 = require(\"./commands/DeleteObjectTaggingCommand\");\nconst DeletePublicAccessBlockCommand_1 = require(\"./commands/DeletePublicAccessBlockCommand\");\nconst GetBucketAccelerateConfigurationCommand_1 = require(\"./commands/GetBucketAccelerateConfigurationCommand\");\nconst GetBucketAclCommand_1 = require(\"./commands/GetBucketAclCommand\");\nconst GetBucketAnalyticsConfigurationCommand_1 = require(\"./commands/GetBucketAnalyticsConfigurationCommand\");\nconst GetBucketCorsCommand_1 = require(\"./commands/GetBucketCorsCommand\");\nconst GetBucketEncryptionCommand_1 = require(\"./commands/GetBucketEncryptionCommand\");\nconst GetBucketIntelligentTieringConfigurationCommand_1 = require(\"./commands/GetBucketIntelligentTieringConfigurationCommand\");\nconst GetBucketInventoryConfigurationCommand_1 = require(\"./commands/GetBucketInventoryConfigurationCommand\");\nconst GetBucketLifecycleConfigurationCommand_1 = require(\"./commands/GetBucketLifecycleConfigurationCommand\");\nconst GetBucketLocationCommand_1 = require(\"./commands/GetBucketLocationCommand\");\nconst GetBucketLoggingCommand_1 = require(\"./commands/GetBucketLoggingCommand\");\nconst GetBucketMetricsConfigurationCommand_1 = require(\"./commands/GetBucketMetricsConfigurationCommand\");\nconst GetBucketNotificationConfigurationCommand_1 = require(\"./commands/GetBucketNotificationConfigurationCommand\");\nconst GetBucketOwnershipControlsCommand_1 = require(\"./commands/GetBucketOwnershipControlsCommand\");\nconst GetBucketPolicyCommand_1 = require(\"./commands/GetBucketPolicyCommand\");\nconst GetBucketPolicyStatusCommand_1 = require(\"./commands/GetBucketPolicyStatusCommand\");\nconst GetBucketReplicationCommand_1 = require(\"./commands/GetBucketReplicationCommand\");\nconst GetBucketRequestPaymentCommand_1 = require(\"./commands/GetBucketRequestPaymentCommand\");\nconst GetBucketTaggingCommand_1 = require(\"./commands/GetBucketTaggingCommand\");\nconst GetBucketVersioningCommand_1 = require(\"./commands/GetBucketVersioningCommand\");\nconst GetBucketWebsiteCommand_1 = require(\"./commands/GetBucketWebsiteCommand\");\nconst GetObjectAclCommand_1 = require(\"./commands/GetObjectAclCommand\");\nconst GetObjectAttributesCommand_1 = require(\"./commands/GetObjectAttributesCommand\");\nconst GetObjectCommand_1 = require(\"./commands/GetObjectCommand\");\nconst GetObjectLegalHoldCommand_1 = require(\"./commands/GetObjectLegalHoldCommand\");\nconst GetObjectLockConfigurationCommand_1 = require(\"./commands/GetObjectLockConfigurationCommand\");\nconst GetObjectRetentionCommand_1 = require(\"./commands/GetObjectRetentionCommand\");\nconst GetObjectTaggingCommand_1 = require(\"./commands/GetObjectTaggingCommand\");\nconst GetObjectTorrentCommand_1 = require(\"./commands/GetObjectTorrentCommand\");\nconst GetPublicAccessBlockCommand_1 = require(\"./commands/GetPublicAccessBlockCommand\");\nconst HeadBucketCommand_1 = require(\"./commands/HeadBucketCommand\");\nconst HeadObjectCommand_1 = require(\"./commands/HeadObjectCommand\");\nconst ListBucketAnalyticsConfigurationsCommand_1 = require(\"./commands/ListBucketAnalyticsConfigurationsCommand\");\nconst ListBucketIntelligentTieringConfigurationsCommand_1 = require(\"./commands/ListBucketIntelligentTieringConfigurationsCommand\");\nconst ListBucketInventoryConfigurationsCommand_1 = require(\"./commands/ListBucketInventoryConfigurationsCommand\");\nconst ListBucketMetricsConfigurationsCommand_1 = require(\"./commands/ListBucketMetricsConfigurationsCommand\");\nconst ListBucketsCommand_1 = require(\"./commands/ListBucketsCommand\");\nconst ListMultipartUploadsCommand_1 = require(\"./commands/ListMultipartUploadsCommand\");\nconst ListObjectsCommand_1 = require(\"./commands/ListObjectsCommand\");\nconst ListObjectsV2Command_1 = require(\"./commands/ListObjectsV2Command\");\nconst ListObjectVersionsCommand_1 = require(\"./commands/ListObjectVersionsCommand\");\nconst ListPartsCommand_1 = require(\"./commands/ListPartsCommand\");\nconst PutBucketAccelerateConfigurationCommand_1 = require(\"./commands/PutBucketAccelerateConfigurationCommand\");\nconst PutBucketAclCommand_1 = require(\"./commands/PutBucketAclCommand\");\nconst PutBucketAnalyticsConfigurationCommand_1 = require(\"./commands/PutBucketAnalyticsConfigurationCommand\");\nconst PutBucketCorsCommand_1 = require(\"./commands/PutBucketCorsCommand\");\nconst PutBucketEncryptionCommand_1 = require(\"./commands/PutBucketEncryptionCommand\");\nconst PutBucketIntelligentTieringConfigurationCommand_1 = require(\"./commands/PutBucketIntelligentTieringConfigurationCommand\");\nconst PutBucketInventoryConfigurationCommand_1 = require(\"./commands/PutBucketInventoryConfigurationCommand\");\nconst PutBucketLifecycleConfigurationCommand_1 = require(\"./commands/PutBucketLifecycleConfigurationCommand\");\nconst PutBucketLoggingCommand_1 = require(\"./commands/PutBucketLoggingCommand\");\nconst PutBucketMetricsConfigurationCommand_1 = require(\"./commands/PutBucketMetricsConfigurationCommand\");\nconst PutBucketNotificationConfigurationCommand_1 = require(\"./commands/PutBucketNotificationConfigurationCommand\");\nconst PutBucketOwnershipControlsCommand_1 = require(\"./commands/PutBucketOwnershipControlsCommand\");\nconst PutBucketPolicyCommand_1 = require(\"./commands/PutBucketPolicyCommand\");\nconst PutBucketReplicationCommand_1 = require(\"./commands/PutBucketReplicationCommand\");\nconst PutBucketRequestPaymentCommand_1 = require(\"./commands/PutBucketRequestPaymentCommand\");\nconst PutBucketTaggingCommand_1 = require(\"./commands/PutBucketTaggingCommand\");\nconst PutBucketVersioningCommand_1 = require(\"./commands/PutBucketVersioningCommand\");\nconst PutBucketWebsiteCommand_1 = require(\"./commands/PutBucketWebsiteCommand\");\nconst PutObjectAclCommand_1 = require(\"./commands/PutObjectAclCommand\");\nconst PutObjectCommand_1 = require(\"./commands/PutObjectCommand\");\nconst PutObjectLegalHoldCommand_1 = require(\"./commands/PutObjectLegalHoldCommand\");\nconst PutObjectLockConfigurationCommand_1 = require(\"./commands/PutObjectLockConfigurationCommand\");\nconst PutObjectRetentionCommand_1 = require(\"./commands/PutObjectRetentionCommand\");\nconst PutObjectTaggingCommand_1 = require(\"./commands/PutObjectTaggingCommand\");\nconst PutPublicAccessBlockCommand_1 = require(\"./commands/PutPublicAccessBlockCommand\");\nconst RestoreObjectCommand_1 = require(\"./commands/RestoreObjectCommand\");\nconst SelectObjectContentCommand_1 = require(\"./commands/SelectObjectContentCommand\");\nconst UploadPartCommand_1 = require(\"./commands/UploadPartCommand\");\nconst UploadPartCopyCommand_1 = require(\"./commands/UploadPartCopyCommand\");\nconst WriteGetObjectResponseCommand_1 = require(\"./commands/WriteGetObjectResponseCommand\");\nconst S3Client_1 = require(\"./S3Client\");\nconst commands = {\n    AbortMultipartUploadCommand: AbortMultipartUploadCommand_1.AbortMultipartUploadCommand,\n    CompleteMultipartUploadCommand: CompleteMultipartUploadCommand_1.CompleteMultipartUploadCommand,\n    CopyObjectCommand: CopyObjectCommand_1.CopyObjectCommand,\n    CreateBucketCommand: CreateBucketCommand_1.CreateBucketCommand,\n    CreateMultipartUploadCommand: CreateMultipartUploadCommand_1.CreateMultipartUploadCommand,\n    DeleteBucketCommand: DeleteBucketCommand_1.DeleteBucketCommand,\n    DeleteBucketAnalyticsConfigurationCommand: DeleteBucketAnalyticsConfigurationCommand_1.DeleteBucketAnalyticsConfigurationCommand,\n    DeleteBucketCorsCommand: DeleteBucketCorsCommand_1.DeleteBucketCorsCommand,\n    DeleteBucketEncryptionCommand: DeleteBucketEncryptionCommand_1.DeleteBucketEncryptionCommand,\n    DeleteBucketIntelligentTieringConfigurationCommand: DeleteBucketIntelligentTieringConfigurationCommand_1.DeleteBucketIntelligentTieringConfigurationCommand,\n    DeleteBucketInventoryConfigurationCommand: DeleteBucketInventoryConfigurationCommand_1.DeleteBucketInventoryConfigurationCommand,\n    DeleteBucketLifecycleCommand: DeleteBucketLifecycleCommand_1.DeleteBucketLifecycleCommand,\n    DeleteBucketMetricsConfigurationCommand: DeleteBucketMetricsConfigurationCommand_1.DeleteBucketMetricsConfigurationCommand,\n    DeleteBucketOwnershipControlsCommand: DeleteBucketOwnershipControlsCommand_1.DeleteBucketOwnershipControlsCommand,\n    DeleteBucketPolicyCommand: DeleteBucketPolicyCommand_1.DeleteBucketPolicyCommand,\n    DeleteBucketReplicationCommand: DeleteBucketReplicationCommand_1.DeleteBucketReplicationCommand,\n    DeleteBucketTaggingCommand: DeleteBucketTaggingCommand_1.DeleteBucketTaggingCommand,\n    DeleteBucketWebsiteCommand: DeleteBucketWebsiteCommand_1.DeleteBucketWebsiteCommand,\n    DeleteObjectCommand: DeleteObjectCommand_1.DeleteObjectCommand,\n    DeleteObjectsCommand: DeleteObjectsCommand_1.DeleteObjectsCommand,\n    DeleteObjectTaggingCommand: DeleteObjectTaggingCommand_1.DeleteObjectTaggingCommand,\n    DeletePublicAccessBlockCommand: DeletePublicAccessBlockCommand_1.DeletePublicAccessBlockCommand,\n    GetBucketAccelerateConfigurationCommand: GetBucketAccelerateConfigurationCommand_1.GetBucketAccelerateConfigurationCommand,\n    GetBucketAclCommand: GetBucketAclCommand_1.GetBucketAclCommand,\n    GetBucketAnalyticsConfigurationCommand: GetBucketAnalyticsConfigurationCommand_1.GetBucketAnalyticsConfigurationCommand,\n    GetBucketCorsCommand: GetBucketCorsCommand_1.GetBucketCorsCommand,\n    GetBucketEncryptionCommand: GetBucketEncryptionCommand_1.GetBucketEncryptionCommand,\n    GetBucketIntelligentTieringConfigurationCommand: GetBucketIntelligentTieringConfigurationCommand_1.GetBucketIntelligentTieringConfigurationCommand,\n    GetBucketInventoryConfigurationCommand: GetBucketInventoryConfigurationCommand_1.GetBucketInventoryConfigurationCommand,\n    GetBucketLifecycleConfigurationCommand: GetBucketLifecycleConfigurationCommand_1.GetBucketLifecycleConfigurationCommand,\n    GetBucketLocationCommand: GetBucketLocationCommand_1.GetBucketLocationCommand,\n    GetBucketLoggingCommand: GetBucketLoggingCommand_1.GetBucketLoggingCommand,\n    GetBucketMetricsConfigurationCommand: GetBucketMetricsConfigurationCommand_1.GetBucketMetricsConfigurationCommand,\n    GetBucketNotificationConfigurationCommand: GetBucketNotificationConfigurationCommand_1.GetBucketNotificationConfigurationCommand,\n    GetBucketOwnershipControlsCommand: GetBucketOwnershipControlsCommand_1.GetBucketOwnershipControlsCommand,\n    GetBucketPolicyCommand: GetBucketPolicyCommand_1.GetBucketPolicyCommand,\n    GetBucketPolicyStatusCommand: GetBucketPolicyStatusCommand_1.GetBucketPolicyStatusCommand,\n    GetBucketReplicationCommand: GetBucketReplicationCommand_1.GetBucketReplicationCommand,\n    GetBucketRequestPaymentCommand: GetBucketRequestPaymentCommand_1.GetBucketRequestPaymentCommand,\n    GetBucketTaggingCommand: GetBucketTaggingCommand_1.GetBucketTaggingCommand,\n    GetBucketVersioningCommand: GetBucketVersioningCommand_1.GetBucketVersioningCommand,\n    GetBucketWebsiteCommand: GetBucketWebsiteCommand_1.GetBucketWebsiteCommand,\n    GetObjectCommand: GetObjectCommand_1.GetObjectCommand,\n    GetObjectAclCommand: GetObjectAclCommand_1.GetObjectAclCommand,\n    GetObjectAttributesCommand: GetObjectAttributesCommand_1.GetObjectAttributesCommand,\n    GetObjectLegalHoldCommand: GetObjectLegalHoldCommand_1.GetObjectLegalHoldCommand,\n    GetObjectLockConfigurationCommand: GetObjectLockConfigurationCommand_1.GetObjectLockConfigurationCommand,\n    GetObjectRetentionCommand: GetObjectRetentionCommand_1.GetObjectRetentionCommand,\n    GetObjectTaggingCommand: GetObjectTaggingCommand_1.GetObjectTaggingCommand,\n    GetObjectTorrentCommand: GetObjectTorrentCommand_1.GetObjectTorrentCommand,\n    GetPublicAccessBlockCommand: GetPublicAccessBlockCommand_1.GetPublicAccessBlockCommand,\n    HeadBucketCommand: HeadBucketCommand_1.HeadBucketCommand,\n    HeadObjectCommand: HeadObjectCommand_1.HeadObjectCommand,\n    ListBucketAnalyticsConfigurationsCommand: ListBucketAnalyticsConfigurationsCommand_1.ListBucketAnalyticsConfigurationsCommand,\n    ListBucketIntelligentTieringConfigurationsCommand: ListBucketIntelligentTieringConfigurationsCommand_1.ListBucketIntelligentTieringConfigurationsCommand,\n    ListBucketInventoryConfigurationsCommand: ListBucketInventoryConfigurationsCommand_1.ListBucketInventoryConfigurationsCommand,\n    ListBucketMetricsConfigurationsCommand: ListBucketMetricsConfigurationsCommand_1.ListBucketMetricsConfigurationsCommand,\n    ListBucketsCommand: ListBucketsCommand_1.ListBucketsCommand,\n    ListMultipartUploadsCommand: ListMultipartUploadsCommand_1.ListMultipartUploadsCommand,\n    ListObjectsCommand: ListObjectsCommand_1.ListObjectsCommand,\n    ListObjectsV2Command: ListObjectsV2Command_1.ListObjectsV2Command,\n    ListObjectVersionsCommand: ListObjectVersionsCommand_1.ListObjectVersionsCommand,\n    ListPartsCommand: ListPartsCommand_1.ListPartsCommand,\n    PutBucketAccelerateConfigurationCommand: PutBucketAccelerateConfigurationCommand_1.PutBucketAccelerateConfigurationCommand,\n    PutBucketAclCommand: PutBucketAclCommand_1.PutBucketAclCommand,\n    PutBucketAnalyticsConfigurationCommand: PutBucketAnalyticsConfigurationCommand_1.PutBucketAnalyticsConfigurationCommand,\n    PutBucketCorsCommand: PutBucketCorsCommand_1.PutBucketCorsCommand,\n    PutBucketEncryptionCommand: PutBucketEncryptionCommand_1.PutBucketEncryptionCommand,\n    PutBucketIntelligentTieringConfigurationCommand: PutBucketIntelligentTieringConfigurationCommand_1.PutBucketIntelligentTieringConfigurationCommand,\n    PutBucketInventoryConfigurationCommand: PutBucketInventoryConfigurationCommand_1.PutBucketInventoryConfigurationCommand,\n    PutBucketLifecycleConfigurationCommand: PutBucketLifecycleConfigurationCommand_1.PutBucketLifecycleConfigurationCommand,\n    PutBucketLoggingCommand: PutBucketLoggingCommand_1.PutBucketLoggingCommand,\n    PutBucketMetricsConfigurationCommand: PutBucketMetricsConfigurationCommand_1.PutBucketMetricsConfigurationCommand,\n    PutBucketNotificationConfigurationCommand: PutBucketNotificationConfigurationCommand_1.PutBucketNotificationConfigurationCommand,\n    PutBucketOwnershipControlsCommand: PutBucketOwnershipControlsCommand_1.PutBucketOwnershipControlsCommand,\n    PutBucketPolicyCommand: PutBucketPolicyCommand_1.PutBucketPolicyCommand,\n    PutBucketReplicationCommand: PutBucketReplicationCommand_1.PutBucketReplicationCommand,\n    PutBucketRequestPaymentCommand: PutBucketRequestPaymentCommand_1.PutBucketRequestPaymentCommand,\n    PutBucketTaggingCommand: PutBucketTaggingCommand_1.PutBucketTaggingCommand,\n    PutBucketVersioningCommand: PutBucketVersioningCommand_1.PutBucketVersioningCommand,\n    PutBucketWebsiteCommand: PutBucketWebsiteCommand_1.PutBucketWebsiteCommand,\n    PutObjectCommand: PutObjectCommand_1.PutObjectCommand,\n    PutObjectAclCommand: PutObjectAclCommand_1.PutObjectAclCommand,\n    PutObjectLegalHoldCommand: PutObjectLegalHoldCommand_1.PutObjectLegalHoldCommand,\n    PutObjectLockConfigurationCommand: PutObjectLockConfigurationCommand_1.PutObjectLockConfigurationCommand,\n    PutObjectRetentionCommand: PutObjectRetentionCommand_1.PutObjectRetentionCommand,\n    PutObjectTaggingCommand: PutObjectTaggingCommand_1.PutObjectTaggingCommand,\n    PutPublicAccessBlockCommand: PutPublicAccessBlockCommand_1.PutPublicAccessBlockCommand,\n    RestoreObjectCommand: RestoreObjectCommand_1.RestoreObjectCommand,\n    SelectObjectContentCommand: SelectObjectContentCommand_1.SelectObjectContentCommand,\n    UploadPartCommand: UploadPartCommand_1.UploadPartCommand,\n    UploadPartCopyCommand: UploadPartCopyCommand_1.UploadPartCopyCommand,\n    WriteGetObjectResponseCommand: WriteGetObjectResponseCommand_1.WriteGetObjectResponseCommand,\n};\nclass S3 extends S3Client_1.S3Client {\n}\nexports.S3 = S3;\n(0, smithy_client_1.createAggregatedClient)(commands, S3);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.S3Client = exports.__Client = void 0;\nconst middleware_expect_continue_1 = require(\"@aws-sdk/middleware-expect-continue\");\nconst middleware_host_header_1 = require(\"@aws-sdk/middleware-host-header\");\nconst middleware_logger_1 = require(\"@aws-sdk/middleware-logger\");\nconst middleware_recursion_detection_1 = require(\"@aws-sdk/middleware-recursion-detection\");\nconst middleware_sdk_s3_1 = require(\"@aws-sdk/middleware-sdk-s3\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst middleware_user_agent_1 = require(\"@aws-sdk/middleware-user-agent\");\nconst config_resolver_1 = require(\"@smithy/config-resolver\");\nconst eventstream_serde_config_resolver_1 = require(\"@smithy/eventstream-serde-config-resolver\");\nconst middleware_content_length_1 = require(\"@smithy/middleware-content-length\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_retry_1 = require(\"@smithy/middleware-retry\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"__Client\", { enumerable: true, get: function () { return smithy_client_1.Client; } });\nconst EndpointParameters_1 = require(\"./endpoint/EndpointParameters\");\nconst runtimeConfig_1 = require(\"./runtimeConfig\");\nconst runtimeExtensions_1 = require(\"./runtimeExtensions\");\nclass S3Client extends smithy_client_1.Client {\n    constructor(...[configuration]) {\n        const _config_0 = (0, runtimeConfig_1.getRuntimeConfig)(configuration || {});\n        const _config_1 = (0, EndpointParameters_1.resolveClientEndpointParameters)(_config_0);\n        const _config_2 = (0, config_resolver_1.resolveRegionConfig)(_config_1);\n        const _config_3 = (0, middleware_endpoint_1.resolveEndpointConfig)(_config_2);\n        const _config_4 = (0, middleware_retry_1.resolveRetryConfig)(_config_3);\n        const _config_5 = (0, middleware_host_header_1.resolveHostHeaderConfig)(_config_4);\n        const _config_6 = (0, middleware_signing_1.resolveAwsAuthConfig)(_config_5);\n        const _config_7 = (0, middleware_sdk_s3_1.resolveS3Config)(_config_6);\n        const _config_8 = (0, middleware_user_agent_1.resolveUserAgentConfig)(_config_7);\n        const _config_9 = (0, eventstream_serde_config_resolver_1.resolveEventStreamSerdeConfig)(_config_8);\n        const _config_10 = (0, runtimeExtensions_1.resolveRuntimeExtensions)(_config_9, configuration?.extensions || []);\n        super(_config_10);\n        this.config = _config_10;\n        this.middlewareStack.use((0, middleware_retry_1.getRetryPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_content_length_1.getContentLengthPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_host_header_1.getHostHeaderPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_logger_1.getLoggerPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_recursion_detection_1.getRecursionDetectionPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_signing_1.getAwsAuthPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_sdk_s3_1.getValidateBucketNamePlugin)(this.config));\n        this.middlewareStack.use((0, middleware_expect_continue_1.getAddExpectContinuePlugin)(this.config));\n        this.middlewareStack.use((0, middleware_user_agent_1.getUserAgentPlugin)(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\nexports.S3Client = S3Client;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbortMultipartUploadCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass AbortMultipartUploadCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, AbortMultipartUploadCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"AbortMultipartUploadCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_AbortMultipartUploadCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_AbortMultipartUploadCommand)(output, context);\n    }\n}\nexports.AbortMultipartUploadCommand = AbortMultipartUploadCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompleteMultipartUploadCommand = exports.$Command = void 0;\nconst middleware_sdk_s3_1 = require(\"@aws-sdk/middleware-sdk-s3\");\nconst middleware_ssec_1 = require(\"@aws-sdk/middleware-ssec\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CompleteMultipartUploadCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, CompleteMultipartUploadCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_sdk_s3_1.getThrow200ExceptionsPlugin)(configuration));\n        this.middlewareStack.use((0, middleware_ssec_1.getSsecPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"CompleteMultipartUploadCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CompleteMultipartUploadRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CompleteMultipartUploadOutputFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_CompleteMultipartUploadCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_CompleteMultipartUploadCommand)(output, context);\n    }\n}\nexports.CompleteMultipartUploadCommand = CompleteMultipartUploadCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CopyObjectCommand = exports.$Command = void 0;\nconst middleware_sdk_s3_1 = require(\"@aws-sdk/middleware-sdk-s3\");\nconst middleware_ssec_1 = require(\"@aws-sdk/middleware-ssec\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CopyObjectCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, CopyObjectCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_sdk_s3_1.getThrow200ExceptionsPlugin)(configuration));\n        this.middlewareStack.use((0, middleware_ssec_1.getSsecPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"CopyObjectCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CopyObjectRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CopyObjectOutputFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_CopyObjectCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_CopyObjectCommand)(output, context);\n    }\n}\nexports.CopyObjectCommand = CopyObjectCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateBucketCommand = exports.$Command = void 0;\nconst middleware_location_constraint_1 = require(\"@aws-sdk/middleware-location-constraint\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateBucketCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            DisableAccessPoints: { type: \"staticContextParams\", value: true },\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, CreateBucketCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_location_constraint_1.getLocationConstraintPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"CreateBucketCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_CreateBucketCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_CreateBucketCommand)(output, context);\n    }\n}\nexports.CreateBucketCommand = CreateBucketCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateMultipartUploadCommand = exports.$Command = void 0;\nconst middleware_ssec_1 = require(\"@aws-sdk/middleware-ssec\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateMultipartUploadCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, CreateMultipartUploadCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_ssec_1.getSsecPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"CreateMultipartUploadCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateMultipartUploadRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateMultipartUploadOutputFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_CreateMultipartUploadCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_CreateMultipartUploadCommand)(output, context);\n    }\n}\nexports.CreateMultipartUploadCommand = CreateMultipartUploadCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteBucketAnalyticsConfigurationCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteBucketAnalyticsConfigurationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteBucketAnalyticsConfigurationCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"DeleteBucketAnalyticsConfigurationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteBucketAnalyticsConfigurationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteBucketAnalyticsConfigurationCommand)(output, context);\n    }\n}\nexports.DeleteBucketAnalyticsConfigurationCommand = DeleteBucketAnalyticsConfigurationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteBucketCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteBucketCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteBucketCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"DeleteBucketCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteBucketCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteBucketCommand)(output, context);\n    }\n}\nexports.DeleteBucketCommand = DeleteBucketCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteBucketCorsCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteBucketCorsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteBucketCorsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"DeleteBucketCorsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteBucketCorsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteBucketCorsCommand)(output, context);\n    }\n}\nexports.DeleteBucketCorsCommand = DeleteBucketCorsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteBucketEncryptionCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteBucketEncryptionCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteBucketEncryptionCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"DeleteBucketEncryptionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteBucketEncryptionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteBucketEncryptionCommand)(output, context);\n    }\n}\nexports.DeleteBucketEncryptionCommand = DeleteBucketEncryptionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteBucketIntelligentTieringConfigurationCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteBucketIntelligentTieringConfigurationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteBucketIntelligentTieringConfigurationCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"DeleteBucketIntelligentTieringConfigurationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteBucketIntelligentTieringConfigurationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteBucketIntelligentTieringConfigurationCommand)(output, context);\n    }\n}\nexports.DeleteBucketIntelligentTieringConfigurationCommand = DeleteBucketIntelligentTieringConfigurationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteBucketInventoryConfigurationCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteBucketInventoryConfigurationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteBucketInventoryConfigurationCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"DeleteBucketInventoryConfigurationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteBucketInventoryConfigurationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteBucketInventoryConfigurationCommand)(output, context);\n    }\n}\nexports.DeleteBucketInventoryConfigurationCommand = DeleteBucketInventoryConfigurationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteBucketLifecycleCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteBucketLifecycleCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteBucketLifecycleCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"DeleteBucketLifecycleCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteBucketLifecycleCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteBucketLifecycleCommand)(output, context);\n    }\n}\nexports.DeleteBucketLifecycleCommand = DeleteBucketLifecycleCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteBucketMetricsConfigurationCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteBucketMetricsConfigurationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteBucketMetricsConfigurationCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"DeleteBucketMetricsConfigurationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteBucketMetricsConfigurationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteBucketMetricsConfigurationCommand)(output, context);\n    }\n}\nexports.DeleteBucketMetricsConfigurationCommand = DeleteBucketMetricsConfigurationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteBucketOwnershipControlsCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteBucketOwnershipControlsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteBucketOwnershipControlsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"DeleteBucketOwnershipControlsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteBucketOwnershipControlsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteBucketOwnershipControlsCommand)(output, context);\n    }\n}\nexports.DeleteBucketOwnershipControlsCommand = DeleteBucketOwnershipControlsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteBucketPolicyCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteBucketPolicyCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteBucketPolicyCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"DeleteBucketPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteBucketPolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteBucketPolicyCommand)(output, context);\n    }\n}\nexports.DeleteBucketPolicyCommand = DeleteBucketPolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteBucketReplicationCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteBucketReplicationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteBucketReplicationCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"DeleteBucketReplicationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteBucketReplicationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteBucketReplicationCommand)(output, context);\n    }\n}\nexports.DeleteBucketReplicationCommand = DeleteBucketReplicationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteBucketTaggingCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteBucketTaggingCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteBucketTaggingCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"DeleteBucketTaggingCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteBucketTaggingCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteBucketTaggingCommand)(output, context);\n    }\n}\nexports.DeleteBucketTaggingCommand = DeleteBucketTaggingCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteBucketWebsiteCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteBucketWebsiteCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteBucketWebsiteCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"DeleteBucketWebsiteCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteBucketWebsiteCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteBucketWebsiteCommand)(output, context);\n    }\n}\nexports.DeleteBucketWebsiteCommand = DeleteBucketWebsiteCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteObjectCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteObjectCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteObjectCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"DeleteObjectCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteObjectCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteObjectCommand)(output, context);\n    }\n}\nexports.DeleteObjectCommand = DeleteObjectCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteObjectTaggingCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteObjectTaggingCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteObjectTaggingCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"DeleteObjectTaggingCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteObjectTaggingCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteObjectTaggingCommand)(output, context);\n    }\n}\nexports.DeleteObjectTaggingCommand = DeleteObjectTaggingCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteObjectsCommand = exports.$Command = void 0;\nconst middleware_flexible_checksums_1 = require(\"@aws-sdk/middleware-flexible-checksums\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteObjectsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeleteObjectsCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_flexible_checksums_1.getFlexibleChecksumsPlugin)(configuration, {\n            input: this.input,\n            requestAlgorithmMember: \"ChecksumAlgorithm\",\n            requestChecksumRequired: true,\n        }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"DeleteObjectsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeleteObjectsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeleteObjectsCommand)(output, context);\n    }\n}\nexports.DeleteObjectsCommand = DeleteObjectsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeletePublicAccessBlockCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeletePublicAccessBlockCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DeletePublicAccessBlockCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"DeletePublicAccessBlockCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_DeletePublicAccessBlockCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_DeletePublicAccessBlockCommand)(output, context);\n    }\n}\nexports.DeletePublicAccessBlockCommand = DeletePublicAccessBlockCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetBucketAccelerateConfigurationCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetBucketAccelerateConfigurationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetBucketAccelerateConfigurationCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetBucketAccelerateConfigurationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetBucketAccelerateConfigurationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetBucketAccelerateConfigurationCommand)(output, context);\n    }\n}\nexports.GetBucketAccelerateConfigurationCommand = GetBucketAccelerateConfigurationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetBucketAclCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetBucketAclCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetBucketAclCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetBucketAclCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetBucketAclCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetBucketAclCommand)(output, context);\n    }\n}\nexports.GetBucketAclCommand = GetBucketAclCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetBucketAnalyticsConfigurationCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetBucketAnalyticsConfigurationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetBucketAnalyticsConfigurationCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetBucketAnalyticsConfigurationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetBucketAnalyticsConfigurationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetBucketAnalyticsConfigurationCommand)(output, context);\n    }\n}\nexports.GetBucketAnalyticsConfigurationCommand = GetBucketAnalyticsConfigurationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetBucketCorsCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetBucketCorsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetBucketCorsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetBucketCorsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetBucketCorsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetBucketCorsCommand)(output, context);\n    }\n}\nexports.GetBucketCorsCommand = GetBucketCorsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetBucketEncryptionCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetBucketEncryptionCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetBucketEncryptionCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetBucketEncryptionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: models_0_1.GetBucketEncryptionOutputFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetBucketEncryptionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetBucketEncryptionCommand)(output, context);\n    }\n}\nexports.GetBucketEncryptionCommand = GetBucketEncryptionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetBucketIntelligentTieringConfigurationCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetBucketIntelligentTieringConfigurationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetBucketIntelligentTieringConfigurationCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetBucketIntelligentTieringConfigurationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetBucketIntelligentTieringConfigurationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetBucketIntelligentTieringConfigurationCommand)(output, context);\n    }\n}\nexports.GetBucketIntelligentTieringConfigurationCommand = GetBucketIntelligentTieringConfigurationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetBucketInventoryConfigurationCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetBucketInventoryConfigurationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetBucketInventoryConfigurationCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetBucketInventoryConfigurationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: models_0_1.GetBucketInventoryConfigurationOutputFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetBucketInventoryConfigurationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetBucketInventoryConfigurationCommand)(output, context);\n    }\n}\nexports.GetBucketInventoryConfigurationCommand = GetBucketInventoryConfigurationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetBucketLifecycleConfigurationCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetBucketLifecycleConfigurationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetBucketLifecycleConfigurationCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetBucketLifecycleConfigurationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetBucketLifecycleConfigurationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetBucketLifecycleConfigurationCommand)(output, context);\n    }\n}\nexports.GetBucketLifecycleConfigurationCommand = GetBucketLifecycleConfigurationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetBucketLocationCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetBucketLocationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetBucketLocationCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetBucketLocationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetBucketLocationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetBucketLocationCommand)(output, context);\n    }\n}\nexports.GetBucketLocationCommand = GetBucketLocationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetBucketLoggingCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetBucketLoggingCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetBucketLoggingCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetBucketLoggingCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetBucketLoggingCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetBucketLoggingCommand)(output, context);\n    }\n}\nexports.GetBucketLoggingCommand = GetBucketLoggingCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetBucketMetricsConfigurationCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetBucketMetricsConfigurationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetBucketMetricsConfigurationCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetBucketMetricsConfigurationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetBucketMetricsConfigurationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetBucketMetricsConfigurationCommand)(output, context);\n    }\n}\nexports.GetBucketMetricsConfigurationCommand = GetBucketMetricsConfigurationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetBucketNotificationConfigurationCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetBucketNotificationConfigurationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetBucketNotificationConfigurationCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetBucketNotificationConfigurationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetBucketNotificationConfigurationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetBucketNotificationConfigurationCommand)(output, context);\n    }\n}\nexports.GetBucketNotificationConfigurationCommand = GetBucketNotificationConfigurationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetBucketOwnershipControlsCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetBucketOwnershipControlsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetBucketOwnershipControlsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetBucketOwnershipControlsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetBucketOwnershipControlsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetBucketOwnershipControlsCommand)(output, context);\n    }\n}\nexports.GetBucketOwnershipControlsCommand = GetBucketOwnershipControlsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetBucketPolicyCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetBucketPolicyCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetBucketPolicyCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetBucketPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetBucketPolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetBucketPolicyCommand)(output, context);\n    }\n}\nexports.GetBucketPolicyCommand = GetBucketPolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetBucketPolicyStatusCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetBucketPolicyStatusCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetBucketPolicyStatusCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetBucketPolicyStatusCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetBucketPolicyStatusCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetBucketPolicyStatusCommand)(output, context);\n    }\n}\nexports.GetBucketPolicyStatusCommand = GetBucketPolicyStatusCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetBucketReplicationCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetBucketReplicationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetBucketReplicationCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetBucketReplicationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetBucketReplicationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetBucketReplicationCommand)(output, context);\n    }\n}\nexports.GetBucketReplicationCommand = GetBucketReplicationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetBucketRequestPaymentCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetBucketRequestPaymentCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetBucketRequestPaymentCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetBucketRequestPaymentCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetBucketRequestPaymentCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetBucketRequestPaymentCommand)(output, context);\n    }\n}\nexports.GetBucketRequestPaymentCommand = GetBucketRequestPaymentCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetBucketTaggingCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetBucketTaggingCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetBucketTaggingCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetBucketTaggingCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetBucketTaggingCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetBucketTaggingCommand)(output, context);\n    }\n}\nexports.GetBucketTaggingCommand = GetBucketTaggingCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetBucketVersioningCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetBucketVersioningCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetBucketVersioningCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetBucketVersioningCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetBucketVersioningCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetBucketVersioningCommand)(output, context);\n    }\n}\nexports.GetBucketVersioningCommand = GetBucketVersioningCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetBucketWebsiteCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetBucketWebsiteCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetBucketWebsiteCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetBucketWebsiteCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetBucketWebsiteCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetBucketWebsiteCommand)(output, context);\n    }\n}\nexports.GetBucketWebsiteCommand = GetBucketWebsiteCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetObjectAclCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetObjectAclCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetObjectAclCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetObjectAclCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetObjectAclCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetObjectAclCommand)(output, context);\n    }\n}\nexports.GetObjectAclCommand = GetObjectAclCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetObjectAttributesCommand = exports.$Command = void 0;\nconst middleware_ssec_1 = require(\"@aws-sdk/middleware-ssec\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetObjectAttributesCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetObjectAttributesCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_ssec_1.getSsecPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetObjectAttributesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetObjectAttributesRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetObjectAttributesCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetObjectAttributesCommand)(output, context);\n    }\n}\nexports.GetObjectAttributesCommand = GetObjectAttributesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetObjectCommand = exports.$Command = void 0;\nconst middleware_flexible_checksums_1 = require(\"@aws-sdk/middleware-flexible-checksums\");\nconst middleware_ssec_1 = require(\"@aws-sdk/middleware-ssec\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetObjectCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetObjectCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_ssec_1.getSsecPlugin)(configuration));\n        this.middlewareStack.use((0, middleware_flexible_checksums_1.getFlexibleChecksumsPlugin)(configuration, {\n            input: this.input,\n            requestChecksumRequired: false,\n            requestValidationModeMember: \"ChecksumMode\",\n            responseAlgorithms: [\"CRC32\", \"CRC32C\", \"SHA256\", \"SHA1\"],\n        }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetObjectCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetObjectRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetObjectOutputFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetObjectCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetObjectCommand)(output, context);\n    }\n}\nexports.GetObjectCommand = GetObjectCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetObjectLegalHoldCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetObjectLegalHoldCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetObjectLegalHoldCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetObjectLegalHoldCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetObjectLegalHoldCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetObjectLegalHoldCommand)(output, context);\n    }\n}\nexports.GetObjectLegalHoldCommand = GetObjectLegalHoldCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetObjectLockConfigurationCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetObjectLockConfigurationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetObjectLockConfigurationCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetObjectLockConfigurationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetObjectLockConfigurationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetObjectLockConfigurationCommand)(output, context);\n    }\n}\nexports.GetObjectLockConfigurationCommand = GetObjectLockConfigurationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetObjectRetentionCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetObjectRetentionCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetObjectRetentionCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetObjectRetentionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetObjectRetentionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetObjectRetentionCommand)(output, context);\n    }\n}\nexports.GetObjectRetentionCommand = GetObjectRetentionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetObjectTaggingCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetObjectTaggingCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetObjectTaggingCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetObjectTaggingCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetObjectTaggingCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetObjectTaggingCommand)(output, context);\n    }\n}\nexports.GetObjectTaggingCommand = GetObjectTaggingCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetObjectTorrentCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetObjectTorrentCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetObjectTorrentCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetObjectTorrentCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: models_0_1.GetObjectTorrentOutputFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetObjectTorrentCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetObjectTorrentCommand)(output, context);\n    }\n}\nexports.GetObjectTorrentCommand = GetObjectTorrentCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetPublicAccessBlockCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetPublicAccessBlockCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetPublicAccessBlockCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"GetPublicAccessBlockCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_GetPublicAccessBlockCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_GetPublicAccessBlockCommand)(output, context);\n    }\n}\nexports.GetPublicAccessBlockCommand = GetPublicAccessBlockCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HeadBucketCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass HeadBucketCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, HeadBucketCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"HeadBucketCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_HeadBucketCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_HeadBucketCommand)(output, context);\n    }\n}\nexports.HeadBucketCommand = HeadBucketCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HeadObjectCommand = exports.$Command = void 0;\nconst middleware_ssec_1 = require(\"@aws-sdk/middleware-ssec\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass HeadObjectCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, HeadObjectCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_ssec_1.getSsecPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"HeadObjectCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.HeadObjectRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.HeadObjectOutputFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_HeadObjectCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_HeadObjectCommand)(output, context);\n    }\n}\nexports.HeadObjectCommand = HeadObjectCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListBucketAnalyticsConfigurationsCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListBucketAnalyticsConfigurationsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListBucketAnalyticsConfigurationsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"ListBucketAnalyticsConfigurationsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListBucketAnalyticsConfigurationsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListBucketAnalyticsConfigurationsCommand)(output, context);\n    }\n}\nexports.ListBucketAnalyticsConfigurationsCommand = ListBucketAnalyticsConfigurationsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListBucketIntelligentTieringConfigurationsCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListBucketIntelligentTieringConfigurationsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListBucketIntelligentTieringConfigurationsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"ListBucketIntelligentTieringConfigurationsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListBucketIntelligentTieringConfigurationsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListBucketIntelligentTieringConfigurationsCommand)(output, context);\n    }\n}\nexports.ListBucketIntelligentTieringConfigurationsCommand = ListBucketIntelligentTieringConfigurationsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListBucketInventoryConfigurationsCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListBucketInventoryConfigurationsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListBucketInventoryConfigurationsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"ListBucketInventoryConfigurationsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: models_0_1.ListBucketInventoryConfigurationsOutputFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListBucketInventoryConfigurationsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListBucketInventoryConfigurationsCommand)(output, context);\n    }\n}\nexports.ListBucketInventoryConfigurationsCommand = ListBucketInventoryConfigurationsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListBucketMetricsConfigurationsCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListBucketMetricsConfigurationsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListBucketMetricsConfigurationsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"ListBucketMetricsConfigurationsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListBucketMetricsConfigurationsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListBucketMetricsConfigurationsCommand)(output, context);\n    }\n}\nexports.ListBucketMetricsConfigurationsCommand = ListBucketMetricsConfigurationsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListBucketsCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListBucketsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListBucketsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"ListBucketsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListBucketsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListBucketsCommand)(output, context);\n    }\n}\nexports.ListBucketsCommand = ListBucketsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListMultipartUploadsCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListMultipartUploadsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListMultipartUploadsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"ListMultipartUploadsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListMultipartUploadsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListMultipartUploadsCommand)(output, context);\n    }\n}\nexports.ListMultipartUploadsCommand = ListMultipartUploadsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListObjectVersionsCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListObjectVersionsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListObjectVersionsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"ListObjectVersionsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListObjectVersionsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListObjectVersionsCommand)(output, context);\n    }\n}\nexports.ListObjectVersionsCommand = ListObjectVersionsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListObjectsCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListObjectsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListObjectsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"ListObjectsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListObjectsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListObjectsCommand)(output, context);\n    }\n}\nexports.ListObjectsCommand = ListObjectsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListObjectsV2Command = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListObjectsV2Command extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListObjectsV2Command.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"ListObjectsV2Command\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListObjectsV2Command)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListObjectsV2Command)(output, context);\n    }\n}\nexports.ListObjectsV2Command = ListObjectsV2Command;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListPartsCommand = exports.$Command = void 0;\nconst middleware_ssec_1 = require(\"@aws-sdk/middleware-ssec\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListPartsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListPartsCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_ssec_1.getSsecPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"ListPartsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListPartsRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_ListPartsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_ListPartsCommand)(output, context);\n    }\n}\nexports.ListPartsCommand = ListPartsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutBucketAccelerateConfigurationCommand = exports.$Command = void 0;\nconst middleware_flexible_checksums_1 = require(\"@aws-sdk/middleware-flexible-checksums\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PutBucketAccelerateConfigurationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PutBucketAccelerateConfigurationCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_flexible_checksums_1.getFlexibleChecksumsPlugin)(configuration, {\n            input: this.input,\n            requestAlgorithmMember: \"ChecksumAlgorithm\",\n            requestChecksumRequired: false,\n        }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutBucketAccelerateConfigurationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PutBucketAccelerateConfigurationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PutBucketAccelerateConfigurationCommand)(output, context);\n    }\n}\nexports.PutBucketAccelerateConfigurationCommand = PutBucketAccelerateConfigurationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutBucketAclCommand = exports.$Command = void 0;\nconst middleware_flexible_checksums_1 = require(\"@aws-sdk/middleware-flexible-checksums\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PutBucketAclCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PutBucketAclCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_flexible_checksums_1.getFlexibleChecksumsPlugin)(configuration, {\n            input: this.input,\n            requestAlgorithmMember: \"ChecksumAlgorithm\",\n            requestChecksumRequired: true,\n        }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutBucketAclCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PutBucketAclCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PutBucketAclCommand)(output, context);\n    }\n}\nexports.PutBucketAclCommand = PutBucketAclCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutBucketAnalyticsConfigurationCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PutBucketAnalyticsConfigurationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PutBucketAnalyticsConfigurationCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutBucketAnalyticsConfigurationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PutBucketAnalyticsConfigurationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PutBucketAnalyticsConfigurationCommand)(output, context);\n    }\n}\nexports.PutBucketAnalyticsConfigurationCommand = PutBucketAnalyticsConfigurationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutBucketCorsCommand = exports.$Command = void 0;\nconst middleware_flexible_checksums_1 = require(\"@aws-sdk/middleware-flexible-checksums\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PutBucketCorsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PutBucketCorsCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_flexible_checksums_1.getFlexibleChecksumsPlugin)(configuration, {\n            input: this.input,\n            requestAlgorithmMember: \"ChecksumAlgorithm\",\n            requestChecksumRequired: true,\n        }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutBucketCorsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PutBucketCorsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PutBucketCorsCommand)(output, context);\n    }\n}\nexports.PutBucketCorsCommand = PutBucketCorsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutBucketEncryptionCommand = exports.$Command = void 0;\nconst middleware_flexible_checksums_1 = require(\"@aws-sdk/middleware-flexible-checksums\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PutBucketEncryptionCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PutBucketEncryptionCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_flexible_checksums_1.getFlexibleChecksumsPlugin)(configuration, {\n            input: this.input,\n            requestAlgorithmMember: \"ChecksumAlgorithm\",\n            requestChecksumRequired: true,\n        }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutBucketEncryptionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.PutBucketEncryptionRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PutBucketEncryptionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PutBucketEncryptionCommand)(output, context);\n    }\n}\nexports.PutBucketEncryptionCommand = PutBucketEncryptionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutBucketIntelligentTieringConfigurationCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PutBucketIntelligentTieringConfigurationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PutBucketIntelligentTieringConfigurationCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutBucketIntelligentTieringConfigurationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PutBucketIntelligentTieringConfigurationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PutBucketIntelligentTieringConfigurationCommand)(output, context);\n    }\n}\nexports.PutBucketIntelligentTieringConfigurationCommand = PutBucketIntelligentTieringConfigurationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutBucketInventoryConfigurationCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PutBucketInventoryConfigurationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PutBucketInventoryConfigurationCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutBucketInventoryConfigurationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.PutBucketInventoryConfigurationRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PutBucketInventoryConfigurationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PutBucketInventoryConfigurationCommand)(output, context);\n    }\n}\nexports.PutBucketInventoryConfigurationCommand = PutBucketInventoryConfigurationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutBucketLifecycleConfigurationCommand = exports.$Command = void 0;\nconst middleware_flexible_checksums_1 = require(\"@aws-sdk/middleware-flexible-checksums\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PutBucketLifecycleConfigurationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PutBucketLifecycleConfigurationCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_flexible_checksums_1.getFlexibleChecksumsPlugin)(configuration, {\n            input: this.input,\n            requestAlgorithmMember: \"ChecksumAlgorithm\",\n            requestChecksumRequired: true,\n        }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutBucketLifecycleConfigurationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PutBucketLifecycleConfigurationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PutBucketLifecycleConfigurationCommand)(output, context);\n    }\n}\nexports.PutBucketLifecycleConfigurationCommand = PutBucketLifecycleConfigurationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutBucketLoggingCommand = exports.$Command = void 0;\nconst middleware_flexible_checksums_1 = require(\"@aws-sdk/middleware-flexible-checksums\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PutBucketLoggingCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PutBucketLoggingCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_flexible_checksums_1.getFlexibleChecksumsPlugin)(configuration, {\n            input: this.input,\n            requestAlgorithmMember: \"ChecksumAlgorithm\",\n            requestChecksumRequired: true,\n        }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutBucketLoggingCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PutBucketLoggingCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PutBucketLoggingCommand)(output, context);\n    }\n}\nexports.PutBucketLoggingCommand = PutBucketLoggingCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutBucketMetricsConfigurationCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PutBucketMetricsConfigurationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PutBucketMetricsConfigurationCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutBucketMetricsConfigurationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PutBucketMetricsConfigurationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PutBucketMetricsConfigurationCommand)(output, context);\n    }\n}\nexports.PutBucketMetricsConfigurationCommand = PutBucketMetricsConfigurationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutBucketNotificationConfigurationCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PutBucketNotificationConfigurationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PutBucketNotificationConfigurationCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutBucketNotificationConfigurationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PutBucketNotificationConfigurationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PutBucketNotificationConfigurationCommand)(output, context);\n    }\n}\nexports.PutBucketNotificationConfigurationCommand = PutBucketNotificationConfigurationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutBucketOwnershipControlsCommand = exports.$Command = void 0;\nconst middleware_flexible_checksums_1 = require(\"@aws-sdk/middleware-flexible-checksums\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PutBucketOwnershipControlsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PutBucketOwnershipControlsCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_flexible_checksums_1.getFlexibleChecksumsPlugin)(configuration, { input: this.input, requestChecksumRequired: true }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutBucketOwnershipControlsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PutBucketOwnershipControlsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PutBucketOwnershipControlsCommand)(output, context);\n    }\n}\nexports.PutBucketOwnershipControlsCommand = PutBucketOwnershipControlsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutBucketPolicyCommand = exports.$Command = void 0;\nconst middleware_flexible_checksums_1 = require(\"@aws-sdk/middleware-flexible-checksums\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PutBucketPolicyCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PutBucketPolicyCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_flexible_checksums_1.getFlexibleChecksumsPlugin)(configuration, {\n            input: this.input,\n            requestAlgorithmMember: \"ChecksumAlgorithm\",\n            requestChecksumRequired: true,\n        }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutBucketPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PutBucketPolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PutBucketPolicyCommand)(output, context);\n    }\n}\nexports.PutBucketPolicyCommand = PutBucketPolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutBucketReplicationCommand = exports.$Command = void 0;\nconst middleware_flexible_checksums_1 = require(\"@aws-sdk/middleware-flexible-checksums\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PutBucketReplicationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PutBucketReplicationCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_flexible_checksums_1.getFlexibleChecksumsPlugin)(configuration, {\n            input: this.input,\n            requestAlgorithmMember: \"ChecksumAlgorithm\",\n            requestChecksumRequired: true,\n        }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutBucketReplicationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PutBucketReplicationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PutBucketReplicationCommand)(output, context);\n    }\n}\nexports.PutBucketReplicationCommand = PutBucketReplicationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutBucketRequestPaymentCommand = exports.$Command = void 0;\nconst middleware_flexible_checksums_1 = require(\"@aws-sdk/middleware-flexible-checksums\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PutBucketRequestPaymentCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PutBucketRequestPaymentCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_flexible_checksums_1.getFlexibleChecksumsPlugin)(configuration, {\n            input: this.input,\n            requestAlgorithmMember: \"ChecksumAlgorithm\",\n            requestChecksumRequired: true,\n        }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutBucketRequestPaymentCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PutBucketRequestPaymentCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PutBucketRequestPaymentCommand)(output, context);\n    }\n}\nexports.PutBucketRequestPaymentCommand = PutBucketRequestPaymentCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutBucketTaggingCommand = exports.$Command = void 0;\nconst middleware_flexible_checksums_1 = require(\"@aws-sdk/middleware-flexible-checksums\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PutBucketTaggingCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PutBucketTaggingCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_flexible_checksums_1.getFlexibleChecksumsPlugin)(configuration, {\n            input: this.input,\n            requestAlgorithmMember: \"ChecksumAlgorithm\",\n            requestChecksumRequired: true,\n        }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutBucketTaggingCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PutBucketTaggingCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PutBucketTaggingCommand)(output, context);\n    }\n}\nexports.PutBucketTaggingCommand = PutBucketTaggingCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutBucketVersioningCommand = exports.$Command = void 0;\nconst middleware_flexible_checksums_1 = require(\"@aws-sdk/middleware-flexible-checksums\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PutBucketVersioningCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PutBucketVersioningCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_flexible_checksums_1.getFlexibleChecksumsPlugin)(configuration, {\n            input: this.input,\n            requestAlgorithmMember: \"ChecksumAlgorithm\",\n            requestChecksumRequired: true,\n        }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutBucketVersioningCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PutBucketVersioningCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PutBucketVersioningCommand)(output, context);\n    }\n}\nexports.PutBucketVersioningCommand = PutBucketVersioningCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutBucketWebsiteCommand = exports.$Command = void 0;\nconst middleware_flexible_checksums_1 = require(\"@aws-sdk/middleware-flexible-checksums\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PutBucketWebsiteCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PutBucketWebsiteCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_flexible_checksums_1.getFlexibleChecksumsPlugin)(configuration, {\n            input: this.input,\n            requestAlgorithmMember: \"ChecksumAlgorithm\",\n            requestChecksumRequired: true,\n        }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutBucketWebsiteCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PutBucketWebsiteCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PutBucketWebsiteCommand)(output, context);\n    }\n}\nexports.PutBucketWebsiteCommand = PutBucketWebsiteCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutObjectAclCommand = exports.$Command = void 0;\nconst middleware_flexible_checksums_1 = require(\"@aws-sdk/middleware-flexible-checksums\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PutObjectAclCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PutObjectAclCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_flexible_checksums_1.getFlexibleChecksumsPlugin)(configuration, {\n            input: this.input,\n            requestAlgorithmMember: \"ChecksumAlgorithm\",\n            requestChecksumRequired: true,\n        }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutObjectAclCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PutObjectAclCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PutObjectAclCommand)(output, context);\n    }\n}\nexports.PutObjectAclCommand = PutObjectAclCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutObjectCommand = exports.$Command = void 0;\nconst middleware_flexible_checksums_1 = require(\"@aws-sdk/middleware-flexible-checksums\");\nconst middleware_sdk_s3_1 = require(\"@aws-sdk/middleware-sdk-s3\");\nconst middleware_ssec_1 = require(\"@aws-sdk/middleware-ssec\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PutObjectCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PutObjectCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_sdk_s3_1.getCheckContentLengthHeaderPlugin)(configuration));\n        this.middlewareStack.use((0, middleware_ssec_1.getSsecPlugin)(configuration));\n        this.middlewareStack.use((0, middleware_flexible_checksums_1.getFlexibleChecksumsPlugin)(configuration, {\n            input: this.input,\n            requestAlgorithmMember: \"ChecksumAlgorithm\",\n            requestChecksumRequired: false,\n        }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutObjectCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.PutObjectRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.PutObjectOutputFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PutObjectCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PutObjectCommand)(output, context);\n    }\n}\nexports.PutObjectCommand = PutObjectCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutObjectLegalHoldCommand = exports.$Command = void 0;\nconst middleware_flexible_checksums_1 = require(\"@aws-sdk/middleware-flexible-checksums\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PutObjectLegalHoldCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PutObjectLegalHoldCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_flexible_checksums_1.getFlexibleChecksumsPlugin)(configuration, {\n            input: this.input,\n            requestAlgorithmMember: \"ChecksumAlgorithm\",\n            requestChecksumRequired: true,\n        }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutObjectLegalHoldCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PutObjectLegalHoldCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PutObjectLegalHoldCommand)(output, context);\n    }\n}\nexports.PutObjectLegalHoldCommand = PutObjectLegalHoldCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutObjectLockConfigurationCommand = exports.$Command = void 0;\nconst middleware_flexible_checksums_1 = require(\"@aws-sdk/middleware-flexible-checksums\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PutObjectLockConfigurationCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PutObjectLockConfigurationCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_flexible_checksums_1.getFlexibleChecksumsPlugin)(configuration, {\n            input: this.input,\n            requestAlgorithmMember: \"ChecksumAlgorithm\",\n            requestChecksumRequired: true,\n        }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutObjectLockConfigurationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PutObjectLockConfigurationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PutObjectLockConfigurationCommand)(output, context);\n    }\n}\nexports.PutObjectLockConfigurationCommand = PutObjectLockConfigurationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutObjectRetentionCommand = exports.$Command = void 0;\nconst middleware_flexible_checksums_1 = require(\"@aws-sdk/middleware-flexible-checksums\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PutObjectRetentionCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PutObjectRetentionCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_flexible_checksums_1.getFlexibleChecksumsPlugin)(configuration, {\n            input: this.input,\n            requestAlgorithmMember: \"ChecksumAlgorithm\",\n            requestChecksumRequired: true,\n        }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutObjectRetentionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PutObjectRetentionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PutObjectRetentionCommand)(output, context);\n    }\n}\nexports.PutObjectRetentionCommand = PutObjectRetentionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutObjectTaggingCommand = exports.$Command = void 0;\nconst middleware_flexible_checksums_1 = require(\"@aws-sdk/middleware-flexible-checksums\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PutObjectTaggingCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PutObjectTaggingCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_flexible_checksums_1.getFlexibleChecksumsPlugin)(configuration, {\n            input: this.input,\n            requestAlgorithmMember: \"ChecksumAlgorithm\",\n            requestChecksumRequired: true,\n        }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutObjectTaggingCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PutObjectTaggingCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PutObjectTaggingCommand)(output, context);\n    }\n}\nexports.PutObjectTaggingCommand = PutObjectTaggingCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutPublicAccessBlockCommand = exports.$Command = void 0;\nconst middleware_flexible_checksums_1 = require(\"@aws-sdk/middleware-flexible-checksums\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PutPublicAccessBlockCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, PutPublicAccessBlockCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_flexible_checksums_1.getFlexibleChecksumsPlugin)(configuration, {\n            input: this.input,\n            requestAlgorithmMember: \"ChecksumAlgorithm\",\n            requestChecksumRequired: true,\n        }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"PutPublicAccessBlockCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_PutPublicAccessBlockCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_PutPublicAccessBlockCommand)(output, context);\n    }\n}\nexports.PutPublicAccessBlockCommand = PutPublicAccessBlockCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RestoreObjectCommand = exports.$Command = void 0;\nconst middleware_flexible_checksums_1 = require(\"@aws-sdk/middleware-flexible-checksums\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass RestoreObjectCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, RestoreObjectCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_flexible_checksums_1.getFlexibleChecksumsPlugin)(configuration, {\n            input: this.input,\n            requestAlgorithmMember: \"ChecksumAlgorithm\",\n            requestChecksumRequired: false,\n        }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"RestoreObjectCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.RestoreObjectRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_RestoreObjectCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_RestoreObjectCommand)(output, context);\n    }\n}\nexports.RestoreObjectCommand = RestoreObjectCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SelectObjectContentCommand = exports.$Command = void 0;\nconst middleware_ssec_1 = require(\"@aws-sdk/middleware-ssec\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass SelectObjectContentCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, SelectObjectContentCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_ssec_1.getSsecPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"SelectObjectContentCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.SelectObjectContentRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.SelectObjectContentOutputFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_SelectObjectContentCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_SelectObjectContentCommand)(output, context);\n    }\n}\nexports.SelectObjectContentCommand = SelectObjectContentCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UploadPartCommand = exports.$Command = void 0;\nconst middleware_flexible_checksums_1 = require(\"@aws-sdk/middleware-flexible-checksums\");\nconst middleware_ssec_1 = require(\"@aws-sdk/middleware-ssec\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UploadPartCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, UploadPartCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_ssec_1.getSsecPlugin)(configuration));\n        this.middlewareStack.use((0, middleware_flexible_checksums_1.getFlexibleChecksumsPlugin)(configuration, {\n            input: this.input,\n            requestAlgorithmMember: \"ChecksumAlgorithm\",\n            requestChecksumRequired: false,\n        }));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"UploadPartCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.UploadPartRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.UploadPartOutputFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_UploadPartCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_UploadPartCommand)(output, context);\n    }\n}\nexports.UploadPartCommand = UploadPartCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UploadPartCopyCommand = exports.$Command = void 0;\nconst middleware_sdk_s3_1 = require(\"@aws-sdk/middleware-sdk-s3\");\nconst middleware_ssec_1 = require(\"@aws-sdk/middleware-ssec\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UploadPartCopyCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            Bucket: { type: \"contextParams\", name: \"Bucket\" },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, UploadPartCopyCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_sdk_s3_1.getThrow200ExceptionsPlugin)(configuration));\n        this.middlewareStack.use((0, middleware_ssec_1.getSsecPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"UploadPartCopyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.UploadPartCopyRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.UploadPartCopyOutputFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_UploadPartCopyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_UploadPartCopyCommand)(output, context);\n    }\n}\nexports.UploadPartCopyCommand = UploadPartCopyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WriteGetObjectResponseCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass WriteGetObjectResponseCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseObjectLambdaEndpoint: { type: \"staticContextParams\", value: true },\n            ForcePathStyle: { type: \"clientContextParams\", name: \"forcePathStyle\" },\n            UseArnRegion: { type: \"clientContextParams\", name: \"useArnRegion\" },\n            DisableMultiRegionAccessPoints: { type: \"clientContextParams\", name: \"disableMultiregionAccessPoints\" },\n            Accelerate: { type: \"clientContextParams\", name: \"useAccelerateEndpoint\" },\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, WriteGetObjectResponseCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"S3Client\";\n        const commandName = \"WriteGetObjectResponseCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.WriteGetObjectResponseRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.se_WriteGetObjectResponseCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.de_WriteGetObjectResponseCommand)(output, context);\n    }\n}\nexports.WriteGetObjectResponseCommand = WriteGetObjectResponseCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./AbortMultipartUploadCommand\"), exports);\ntslib_1.__exportStar(require(\"./CompleteMultipartUploadCommand\"), exports);\ntslib_1.__exportStar(require(\"./CopyObjectCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateBucketCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateMultipartUploadCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteBucketAnalyticsConfigurationCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteBucketCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteBucketCorsCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteBucketEncryptionCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteBucketIntelligentTieringConfigurationCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteBucketInventoryConfigurationCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteBucketLifecycleCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteBucketMetricsConfigurationCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteBucketOwnershipControlsCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteBucketPolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteBucketReplicationCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteBucketTaggingCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteBucketWebsiteCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteObjectCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteObjectTaggingCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteObjectsCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeletePublicAccessBlockCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetBucketAccelerateConfigurationCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetBucketAclCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetBucketAnalyticsConfigurationCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetBucketCorsCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetBucketEncryptionCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetBucketIntelligentTieringConfigurationCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetBucketInventoryConfigurationCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetBucketLifecycleConfigurationCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetBucketLocationCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetBucketLoggingCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetBucketMetricsConfigurationCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetBucketNotificationConfigurationCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetBucketOwnershipControlsCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetBucketPolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetBucketPolicyStatusCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetBucketReplicationCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetBucketRequestPaymentCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetBucketTaggingCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetBucketVersioningCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetBucketWebsiteCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetObjectAclCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetObjectAttributesCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetObjectCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetObjectLegalHoldCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetObjectLockConfigurationCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetObjectRetentionCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetObjectTaggingCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetObjectTorrentCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetPublicAccessBlockCommand\"), exports);\ntslib_1.__exportStar(require(\"./HeadBucketCommand\"), exports);\ntslib_1.__exportStar(require(\"./HeadObjectCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListBucketAnalyticsConfigurationsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListBucketIntelligentTieringConfigurationsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListBucketInventoryConfigurationsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListBucketMetricsConfigurationsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListBucketsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListMultipartUploadsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListObjectVersionsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListObjectsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListObjectsV2Command\"), exports);\ntslib_1.__exportStar(require(\"./ListPartsCommand\"), exports);\ntslib_1.__exportStar(require(\"./PutBucketAccelerateConfigurationCommand\"), exports);\ntslib_1.__exportStar(require(\"./PutBucketAclCommand\"), exports);\ntslib_1.__exportStar(require(\"./PutBucketAnalyticsConfigurationCommand\"), exports);\ntslib_1.__exportStar(require(\"./PutBucketCorsCommand\"), exports);\ntslib_1.__exportStar(require(\"./PutBucketEncryptionCommand\"), exports);\ntslib_1.__exportStar(require(\"./PutBucketIntelligentTieringConfigurationCommand\"), exports);\ntslib_1.__exportStar(require(\"./PutBucketInventoryConfigurationCommand\"), exports);\ntslib_1.__exportStar(require(\"./PutBucketLifecycleConfigurationCommand\"), exports);\ntslib_1.__exportStar(require(\"./PutBucketLoggingCommand\"), exports);\ntslib_1.__exportStar(require(\"./PutBucketMetricsConfigurationCommand\"), exports);\ntslib_1.__exportStar(require(\"./PutBucketNotificationConfigurationCommand\"), exports);\ntslib_1.__exportStar(require(\"./PutBucketOwnershipControlsCommand\"), exports);\ntslib_1.__exportStar(require(\"./PutBucketPolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./PutBucketReplicationCommand\"), exports);\ntslib_1.__exportStar(require(\"./PutBucketRequestPaymentCommand\"), exports);\ntslib_1.__exportStar(require(\"./PutBucketTaggingCommand\"), exports);\ntslib_1.__exportStar(require(\"./PutBucketVersioningCommand\"), exports);\ntslib_1.__exportStar(require(\"./PutBucketWebsiteCommand\"), exports);\ntslib_1.__exportStar(require(\"./PutObjectAclCommand\"), exports);\ntslib_1.__exportStar(require(\"./PutObjectCommand\"), exports);\ntslib_1.__exportStar(require(\"./PutObjectLegalHoldCommand\"), exports);\ntslib_1.__exportStar(require(\"./PutObjectLockConfigurationCommand\"), exports);\ntslib_1.__exportStar(require(\"./PutObjectRetentionCommand\"), exports);\ntslib_1.__exportStar(require(\"./PutObjectTaggingCommand\"), exports);\ntslib_1.__exportStar(require(\"./PutPublicAccessBlockCommand\"), exports);\ntslib_1.__exportStar(require(\"./RestoreObjectCommand\"), exports);\ntslib_1.__exportStar(require(\"./SelectObjectContentCommand\"), exports);\ntslib_1.__exportStar(require(\"./UploadPartCommand\"), exports);\ntslib_1.__exportStar(require(\"./UploadPartCopyCommand\"), exports);\ntslib_1.__exportStar(require(\"./WriteGetObjectResponseCommand\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveClientEndpointParameters = void 0;\nconst resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        forcePathStyle: options.forcePathStyle ?? false,\n        useAccelerateEndpoint: options.useAccelerateEndpoint ?? false,\n        useGlobalEndpoint: options.useGlobalEndpoint ?? false,\n        disableMultiregionAccessPoints: options.disableMultiregionAccessPoints ?? false,\n        defaultSigningName: \"s3\",\n    };\n};\nexports.resolveClientEndpointParameters = resolveClientEndpointParameters;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultEndpointResolver = void 0;\nconst util_endpoints_1 = require(\"@aws-sdk/util-endpoints\");\nconst ruleset_1 = require(\"./ruleset\");\nconst defaultEndpointResolver = (endpointParams, context = {}) => {\n    return (0, util_endpoints_1.resolveEndpoint)(ruleset_1.ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\nexports.defaultEndpointResolver = defaultEndpointResolver;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ruleSet = void 0;\nconst bJ = \"required\", bK = \"type\", bL = \"conditions\", bM = \"fn\", bN = \"argv\", bO = \"ref\", bP = \"assign\", bQ = \"url\", bR = \"properties\", bS = \"authSchemes\", bT = \"disableDoubleEncoding\", bU = \"signingName\", bV = \"signingRegion\", bW = \"headers\";\nconst a = false, b = true, c = \"isSet\", d = \"tree\", e = \"booleanEquals\", f = \"error\", g = \"aws.partition\", h = \"stringEquals\", i = \"getAttr\", j = \"name\", k = \"substring\", l = \"hardwareType\", m = \"regionPrefix\", n = \"bucketAliasSuffix\", o = \"outpostId\", p = \"isValidHostLabel\", q = \"not\", r = \"parseURL\", s = \"s3-outposts\", t = \"endpoint\", u = \"aws.isVirtualHostableS3Bucket\", v = \"s3\", w = \"{url#scheme}://{url#authority}{url#normalizedPath}{Bucket}\", x = \"{url#scheme}://{Bucket}.{url#authority}{url#path}\", y = \"https://{Bucket}.s3-accelerate.{partitionResult#dnsSuffix}\", z = \"https://{Bucket}.s3.{partitionResult#dnsSuffix}\", A = \"aws.parseArn\", B = \"bucketArn\", C = \"arnType\", D = \"\", E = \"s3-object-lambda\", F = \"accesspoint\", G = \"accessPointName\", H = \"{url#scheme}://{accessPointName}-{bucketArn#accountId}.{url#authority}{url#path}\", I = \"mrapPartition\", J = \"outpostType\", K = \"arnPrefix\", L = \"{url#scheme}://{url#authority}{url#normalizedPath}{uri_encoded_bucket}\", M = \"https://s3.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\", N = \"{url#scheme}://{url#authority}{url#path}\", O = \"https://s3.{partitionResult#dnsSuffix}\", P = { [bJ]: false, [bK]: \"String\" }, Q = { [bJ]: true, \"default\": false, [bK]: \"Boolean\" }, R = { [bJ]: false, [bK]: \"Boolean\" }, S = { [bM]: e, [bN]: [{ [bO]: \"Accelerate\" }, true] }, T = { [bM]: e, [bN]: [{ [bO]: \"UseFIPS\" }, true] }, U = { [bM]: e, [bN]: [{ [bO]: \"UseDualStack\" }, true] }, V = { [bM]: c, [bN]: [{ [bO]: \"Endpoint\" }] }, W = { [bM]: g, [bN]: [{ [bO]: \"Region\" }], [bP]: \"partitionResult\" }, X = { [bM]: h, [bN]: [{ [bM]: i, [bN]: [{ [bO]: \"partitionResult\" }, j] }, \"aws-cn\"] }, Y = { [bM]: c, [bN]: [{ [bO]: \"Bucket\" }] }, Z = { [bO]: \"Bucket\" }, aa = { [bO]: l }, ab = { [bL]: [{ [bM]: q, [bN]: [V] }], [f]: \"Expected a endpoint to be specified but no endpoint was found\", [bK]: f }, ac = { [bM]: q, [bN]: [V] }, ad = { [bM]: r, [bN]: [{ [bO]: \"Endpoint\" }], [bP]: \"url\" }, ae = { [bS]: [{ [bT]: true, [j]: \"sigv4\", [bU]: s, [bV]: \"{Region}\" }] }, af = {}, ag = { [bM]: e, [bN]: [{ [bO]: \"ForcePathStyle\" }, false] }, ah = { [bO]: \"ForcePathStyle\" }, ai = { [bM]: e, [bN]: [{ [bO]: \"Accelerate\" }, false] }, aj = { [bM]: h, [bN]: [{ [bO]: \"Region\" }, \"aws-global\"] }, ak = { [bS]: [{ [bT]: true, [j]: \"sigv4\", [bU]: v, [bV]: \"us-east-1\" }] }, al = { [bM]: q, [bN]: [aj] }, am = { [bM]: e, [bN]: [{ [bO]: \"UseGlobalEndpoint\" }, true] }, an = { [bQ]: \"https://{Bucket}.s3-fips.dualstack.{Region}.{partitionResult#dnsSuffix}\", [bR]: { [bS]: [{ [bT]: true, [j]: \"sigv4\", [bU]: v, [bV]: \"{Region}\" }] }, [bW]: {} }, ao = { [bS]: [{ [bT]: true, [j]: \"sigv4\", [bU]: v, [bV]: \"{Region}\" }] }, ap = { [bM]: e, [bN]: [{ [bO]: \"UseGlobalEndpoint\" }, false] }, aq = { [bM]: e, [bN]: [{ [bO]: \"UseDualStack\" }, false] }, ar = { [bQ]: \"https://{Bucket}.s3-fips.{Region}.{partitionResult#dnsSuffix}\", [bR]: ao, [bW]: {} }, as = { [bM]: e, [bN]: [{ [bO]: \"UseFIPS\" }, false] }, at = { [bQ]: \"https://{Bucket}.s3-accelerate.dualstack.{partitionResult#dnsSuffix}\", [bR]: ao, [bW]: {} }, au = { [bQ]: \"https://{Bucket}.s3.dualstack.{Region}.{partitionResult#dnsSuffix}\", [bR]: ao, [bW]: {} }, av = { [bM]: e, [bN]: [{ [bM]: i, [bN]: [{ [bO]: \"url\" }, \"isIp\"] }, true] }, aw = { [bO]: \"url\" }, ax = { [bM]: e, [bN]: [{ [bM]: i, [bN]: [aw, \"isIp\"] }, false] }, ay = { [bQ]: w, [bR]: ao, [bW]: {} }, az = { [bQ]: x, [bR]: ao, [bW]: {} }, aA = { [t]: az, [bK]: t }, aB = { [bQ]: y, [bR]: ao, [bW]: {} }, aC = { [bQ]: \"https://{Bucket}.s3.{Region}.{partitionResult#dnsSuffix}\", [bR]: ao, [bW]: {} }, aD = { [f]: \"Invalid region: region was not a valid DNS name.\", [bK]: f }, aE = { [bO]: B }, aF = { [bO]: C }, aG = { [bM]: i, [bN]: [aE, \"service\"] }, aH = { [bO]: G }, aI = { [bL]: [U], [f]: \"S3 Object Lambda does not support Dual-stack\", [bK]: f }, aJ = { [bL]: [S], [f]: \"S3 Object Lambda does not support S3 Accelerate\", [bK]: f }, aK = { [bL]: [{ [bM]: c, [bN]: [{ [bO]: \"DisableAccessPoints\" }] }, { [bM]: e, [bN]: [{ [bO]: \"DisableAccessPoints\" }, true] }], [f]: \"Access points are not supported for this operation\", [bK]: f }, aL = { [bL]: [{ [bM]: c, [bN]: [{ [bO]: \"UseArnRegion\" }] }, { [bM]: e, [bN]: [{ [bO]: \"UseArnRegion\" }, false] }, { [bM]: q, [bN]: [{ [bM]: h, [bN]: [{ [bM]: i, [bN]: [aE, \"region\"] }, \"{Region}\"] }] }], [f]: \"Invalid configuration: region from ARN `{bucketArn#region}` does not match client region `{Region}` and UseArnRegion is `false`\", [bK]: f }, aM = { [bM]: i, [bN]: [{ [bO]: \"bucketPartition\" }, j] }, aN = { [bM]: i, [bN]: [aE, \"accountId\"] }, aO = { [bS]: [{ [bT]: true, [j]: \"sigv4\", [bU]: E, [bV]: \"{bucketArn#region}\" }] }, aP = { [f]: \"Invalid ARN: The access point name may only contain a-z, A-Z, 0-9 and `-`. Found: `{accessPointName}`\", [bK]: f }, aQ = { [f]: \"Invalid ARN: The account id may only contain a-z, A-Z, 0-9 and `-`. Found: `{bucketArn#accountId}`\", [bK]: f }, aR = { [f]: \"Invalid region in ARN: `{bucketArn#region}` (invalid DNS name)\", [bK]: f }, aS = { [f]: \"Client was configured for partition `{partitionResult#name}` but ARN (`{Bucket}`) has `{bucketPartition#name}`\", [bK]: f }, aT = { [f]: \"Invalid ARN: The ARN may only contain a single resource component after `accesspoint`.\", [bK]: f }, aU = { [f]: \"Invalid ARN: Expected a resource of the format `accesspoint:<accesspoint name>` but no name was provided\", [bK]: f }, aV = { [bS]: [{ [bT]: true, [j]: \"sigv4\", [bU]: v, [bV]: \"{bucketArn#region}\" }] }, aW = { [bS]: [{ [bT]: true, [j]: \"sigv4\", [bU]: s, [bV]: \"{bucketArn#region}\" }] }, aX = { [bM]: A, [bN]: [Z] }, aY = { [bQ]: \"https://s3-fips.dualstack.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\", [bR]: ao, [bW]: {} }, aZ = { [bQ]: \"https://s3-fips.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\", [bR]: ao, [bW]: {} }, ba = { [bQ]: \"https://s3.dualstack.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\", [bR]: ao, [bW]: {} }, bb = { [bQ]: L, [bR]: ao, [bW]: {} }, bc = { [bQ]: \"https://s3.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\", [bR]: ao, [bW]: {} }, bd = { [bO]: \"UseObjectLambdaEndpoint\" }, be = { [bS]: [{ [bT]: true, [j]: \"sigv4\", [bU]: E, [bV]: \"{Region}\" }] }, bf = { [bQ]: \"https://s3-fips.dualstack.{Region}.{partitionResult#dnsSuffix}\", [bR]: ao, [bW]: {} }, bg = { [bQ]: \"https://s3-fips.{Region}.{partitionResult#dnsSuffix}\", [bR]: ao, [bW]: {} }, bh = { [bQ]: \"https://s3.dualstack.{Region}.{partitionResult#dnsSuffix}\", [bR]: ao, [bW]: {} }, bi = { [bQ]: N, [bR]: ao, [bW]: {} }, bj = { [bQ]: \"https://s3.{Region}.{partitionResult#dnsSuffix}\", [bR]: ao, [bW]: {} }, bk = [{ [bO]: \"Region\" }], bl = [{ [bO]: \"Endpoint\" }], bm = [Z], bn = [{ [bM]: p, [bN]: [{ [bO]: o }, false] }], bo = [{ [bM]: h, [bN]: [{ [bO]: m }, \"beta\"] }], bp = [V, ad], bq = [Y], br = [W], bs = [{ [bM]: p, [bN]: [{ [bO]: \"Region\" }, false] }], bt = [{ [bM]: h, [bN]: [{ [bO]: \"Region\" }, \"us-east-1\"] }], bu = [{ [bM]: h, [bN]: [aF, F] }], bv = [{ [bM]: i, [bN]: [aE, \"resourceId[1]\"], [bP]: G }, { [bM]: q, [bN]: [{ [bM]: h, [bN]: [aH, D] }] }], bw = [aE, \"resourceId[1]\"], bx = [U], by = [S], bz = [{ [bM]: q, [bN]: [{ [bM]: h, [bN]: [{ [bM]: i, [bN]: [aE, \"region\"] }, D] }] }], bA = [{ [bM]: q, [bN]: [{ [bM]: c, [bN]: [{ [bM]: i, [bN]: [aE, \"resourceId[2]\"] }] }] }], bB = [aE, \"resourceId[2]\"], bC = [{ [bM]: g, [bN]: [{ [bM]: i, [bN]: [aE, \"region\"] }], [bP]: \"bucketPartition\" }], bD = [{ [bM]: h, [bN]: [aM, { [bM]: i, [bN]: [{ [bO]: \"partitionResult\" }, j] }] }], bE = [{ [bM]: p, [bN]: [{ [bM]: i, [bN]: [aE, \"region\"] }, true] }], bF = [{ [bM]: p, [bN]: [aN, false] }], bG = [{ [bM]: p, [bN]: [aH, false] }], bH = [T], bI = [{ [bM]: p, [bN]: [{ [bO]: \"Region\" }, true] }];\nconst _data = { version: \"1.0\", parameters: { Bucket: P, Region: P, UseFIPS: Q, UseDualStack: Q, Endpoint: P, ForcePathStyle: Q, Accelerate: Q, UseGlobalEndpoint: Q, UseObjectLambdaEndpoint: R, DisableAccessPoints: R, DisableMultiRegionAccessPoints: Q, UseArnRegion: R }, rules: [{ [bL]: [{ [bM]: c, [bN]: bk }], [bK]: d, rules: [{ [bL]: [S, T], error: \"Accelerate cannot be used with FIPS\", [bK]: f }, { [bL]: [U, V], error: \"Cannot set dual-stack in combination with a custom endpoint.\", [bK]: f }, { [bL]: [V, T], error: \"A custom endpoint cannot be combined with FIPS\", [bK]: f }, { [bL]: [V, S], error: \"A custom endpoint cannot be combined with S3 Accelerate\", [bK]: f }, { [bL]: [T, W, X], error: \"Partition does not support FIPS\", [bK]: f }, { [bL]: [Y, { [bM]: k, [bN]: [Z, 49, 50, b], [bP]: l }, { [bM]: k, [bN]: [Z, 8, 12, b], [bP]: m }, { [bM]: k, [bN]: [Z, 0, 7, b], [bP]: n }, { [bM]: k, [bN]: [Z, 32, 49, b], [bP]: o }, { [bM]: g, [bN]: bk, [bP]: \"regionPartition\" }, { [bM]: h, [bN]: [{ [bO]: n }, \"--op-s3\"] }], [bK]: d, rules: [{ [bL]: bn, [bK]: d, rules: [{ [bL]: [{ [bM]: h, [bN]: [aa, \"e\"] }], [bK]: d, rules: [{ [bL]: bo, [bK]: d, rules: [ab, { [bL]: bp, endpoint: { [bQ]: \"https://{Bucket}.ec2.{url#authority}\", [bR]: ae, [bW]: af }, [bK]: t }] }, { endpoint: { [bQ]: \"https://{Bucket}.ec2.s3-outposts.{Region}.{regionPartition#dnsSuffix}\", [bR]: ae, [bW]: af }, [bK]: t }] }, { [bL]: [{ [bM]: h, [bN]: [aa, \"o\"] }], [bK]: d, rules: [{ [bL]: bo, [bK]: d, rules: [ab, { [bL]: bp, endpoint: { [bQ]: \"https://{Bucket}.op-{outpostId}.{url#authority}\", [bR]: ae, [bW]: af }, [bK]: t }] }, { endpoint: { [bQ]: \"https://{Bucket}.op-{outpostId}.s3-outposts.{Region}.{regionPartition#dnsSuffix}\", [bR]: ae, [bW]: af }, [bK]: t }] }, { error: \"Unrecognized hardware type: \\\"Expected hardware type o or e but got {hardwareType}\\\"\", [bK]: f }] }, { error: \"Invalid ARN: The outpost Id must only contain a-z, A-Z, 0-9 and `-`.\", [bK]: f }] }, { [bL]: bq, [bK]: d, rules: [{ [bL]: [V, { [bM]: q, [bN]: [{ [bM]: c, [bN]: [{ [bM]: r, [bN]: bl }] }] }], error: \"Custom endpoint `{Endpoint}` was not a valid URI\", [bK]: f }, { [bL]: [ag, { [bM]: u, [bN]: [Z, a] }], [bK]: d, rules: [{ [bL]: br, [bK]: d, rules: [{ [bL]: bs, [bK]: d, rules: [{ [bL]: [S, X], error: \"S3 Accelerate cannot be used in this region\", [bK]: f }, { [bL]: [U, T, ai, ac, aj], endpoint: { [bQ]: \"https://{Bucket}.s3-fips.dualstack.us-east-1.{partitionResult#dnsSuffix}\", [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [U, T, ai, ac, al, am], [bK]: d, rules: [{ endpoint: an, [bK]: t }] }, { [bL]: [U, T, ai, ac, al, ap], endpoint: an, [bK]: t }, { [bL]: [aq, T, ai, ac, aj], endpoint: { [bQ]: \"https://{Bucket}.s3-fips.us-east-1.{partitionResult#dnsSuffix}\", [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [aq, T, ai, ac, al, am], [bK]: d, rules: [{ endpoint: ar, [bK]: t }] }, { [bL]: [aq, T, ai, ac, al, ap], endpoint: ar, [bK]: t }, { [bL]: [U, as, S, ac, aj], endpoint: { [bQ]: \"https://{Bucket}.s3-accelerate.dualstack.us-east-1.{partitionResult#dnsSuffix}\", [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [U, as, S, ac, al, am], [bK]: d, rules: [{ endpoint: at, [bK]: t }] }, { [bL]: [U, as, S, ac, al, ap], endpoint: at, [bK]: t }, { [bL]: [U, as, ai, ac, aj], endpoint: { [bQ]: \"https://{Bucket}.s3.dualstack.us-east-1.{partitionResult#dnsSuffix}\", [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [U, as, ai, ac, al, am], [bK]: d, rules: [{ endpoint: au, [bK]: t }] }, { [bL]: [U, as, ai, ac, al, ap], endpoint: au, [bK]: t }, { [bL]: [aq, as, ai, V, ad, av, aj], endpoint: { [bQ]: w, [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [aq, as, ai, V, ad, ax, aj], endpoint: { [bQ]: x, [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [aq, as, ai, V, ad, av, al, am], [bK]: d, rules: [{ [bL]: bt, endpoint: ay, [bK]: t }, { endpoint: ay, [bK]: t }] }, { [bL]: [aq, as, ai, V, ad, ax, al, am], [bK]: d, rules: [{ [bL]: bt, endpoint: az, [bK]: t }, aA] }, { [bL]: [aq, as, ai, V, ad, av, al, ap], endpoint: ay, [bK]: t }, { [bL]: [aq, as, ai, V, ad, ax, al, ap], endpoint: az, [bK]: t }, { [bL]: [aq, as, S, ac, aj], endpoint: { [bQ]: y, [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [aq, as, S, ac, al, am], [bK]: d, rules: [{ [bL]: bt, endpoint: aB, [bK]: t }, { endpoint: aB, [bK]: t }] }, { [bL]: [aq, as, S, ac, al, ap], endpoint: aB, [bK]: t }, { [bL]: [aq, as, ai, ac, aj], endpoint: { [bQ]: z, [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [aq, as, ai, ac, al, am], [bK]: d, rules: [{ [bL]: bt, endpoint: { [bQ]: z, [bR]: ao, [bW]: af }, [bK]: t }, { endpoint: aC, [bK]: t }] }, { [bL]: [aq, as, ai, ac, al, ap], endpoint: aC, [bK]: t }] }, aD] }] }, { [bL]: [V, ad, { [bM]: h, [bN]: [{ [bM]: i, [bN]: [aw, \"scheme\"] }, \"http\"] }, { [bM]: u, [bN]: [Z, b] }, ag, as, aq, ai], [bK]: d, rules: [{ [bL]: br, [bK]: d, rules: [{ [bL]: bs, [bK]: d, rules: [aA] }, aD] }] }, { [bL]: [ag, { [bM]: A, [bN]: bm, [bP]: B }], [bK]: d, rules: [{ [bL]: [{ [bM]: i, [bN]: [aE, \"resourceId[0]\"], [bP]: C }, { [bM]: q, [bN]: [{ [bM]: h, [bN]: [aF, D] }] }], [bK]: d, rules: [{ [bL]: [{ [bM]: h, [bN]: [aG, E] }], [bK]: d, rules: [{ [bL]: bu, [bK]: d, rules: [{ [bL]: bv, [bK]: d, rules: [aI, aJ, { [bL]: bz, [bK]: d, rules: [aK, { [bL]: bA, [bK]: d, rules: [aL, { [bL]: bC, [bK]: d, rules: [{ [bL]: br, [bK]: d, rules: [{ [bL]: bD, [bK]: d, rules: [{ [bL]: bE, [bK]: d, rules: [{ [bL]: [{ [bM]: h, [bN]: [aN, D] }], error: \"Invalid ARN: Missing account id\", [bK]: f }, { [bL]: bF, [bK]: d, rules: [{ [bL]: bG, [bK]: d, rules: [{ [bL]: bp, endpoint: { [bQ]: H, [bR]: aO, [bW]: af }, [bK]: t }, { [bL]: bH, endpoint: { [bQ]: \"https://{accessPointName}-{bucketArn#accountId}.s3-object-lambda-fips.{bucketArn#region}.{bucketPartition#dnsSuffix}\", [bR]: aO, [bW]: af }, [bK]: t }, { endpoint: { [bQ]: \"https://{accessPointName}-{bucketArn#accountId}.s3-object-lambda.{bucketArn#region}.{bucketPartition#dnsSuffix}\", [bR]: aO, [bW]: af }, [bK]: t }] }, aP] }, aQ] }, aR] }, aS] }] }] }, aT] }, { error: \"Invalid ARN: bucket ARN is missing a region\", [bK]: f }] }, aU] }, { error: \"Invalid ARN: Object Lambda ARNs only support `accesspoint` arn types, but found: `{arnType}`\", [bK]: f }] }, { [bL]: bu, [bK]: d, rules: [{ [bL]: bv, [bK]: d, rules: [{ [bL]: bz, [bK]: d, rules: [{ [bL]: bu, [bK]: d, rules: [{ [bL]: bz, [bK]: d, rules: [aK, { [bL]: bA, [bK]: d, rules: [aL, { [bL]: bC, [bK]: d, rules: [{ [bL]: br, [bK]: d, rules: [{ [bL]: [{ [bM]: h, [bN]: [aM, \"{partitionResult#name}\"] }], [bK]: d, rules: [{ [bL]: bE, [bK]: d, rules: [{ [bL]: [{ [bM]: h, [bN]: [aG, v] }], [bK]: d, rules: [{ [bL]: bF, [bK]: d, rules: [{ [bL]: bG, [bK]: d, rules: [{ [bL]: by, error: \"Access Points do not support S3 Accelerate\", [bK]: f }, { [bL]: [T, U], endpoint: { [bQ]: \"https://{accessPointName}-{bucketArn#accountId}.s3-accesspoint-fips.dualstack.{bucketArn#region}.{bucketPartition#dnsSuffix}\", [bR]: aV, [bW]: af }, [bK]: t }, { [bL]: [T, aq], endpoint: { [bQ]: \"https://{accessPointName}-{bucketArn#accountId}.s3-accesspoint-fips.{bucketArn#region}.{bucketPartition#dnsSuffix}\", [bR]: aV, [bW]: af }, [bK]: t }, { [bL]: [as, U], endpoint: { [bQ]: \"https://{accessPointName}-{bucketArn#accountId}.s3-accesspoint.dualstack.{bucketArn#region}.{bucketPartition#dnsSuffix}\", [bR]: aV, [bW]: af }, [bK]: t }, { [bL]: [as, aq, V, ad], endpoint: { [bQ]: H, [bR]: aV, [bW]: af }, [bK]: t }, { [bL]: [as, aq], endpoint: { [bQ]: \"https://{accessPointName}-{bucketArn#accountId}.s3-accesspoint.{bucketArn#region}.{bucketPartition#dnsSuffix}\", [bR]: aV, [bW]: af }, [bK]: t }] }, aP] }, aQ] }, { error: \"Invalid ARN: The ARN was not for the S3 service, found: {bucketArn#service}\", [bK]: f }] }, aR] }, aS] }] }] }, aT] }] }] }, { [bL]: [{ [bM]: p, [bN]: [aH, b] }], [bK]: d, rules: [{ [bL]: bx, error: \"S3 MRAP does not support dual-stack\", [bK]: f }, { [bL]: bH, error: \"S3 MRAP does not support FIPS\", [bK]: f }, { [bL]: by, error: \"S3 MRAP does not support S3 Accelerate\", [bK]: f }, { [bL]: [{ [bM]: e, [bN]: [{ [bO]: \"DisableMultiRegionAccessPoints\" }, b] }], error: \"Invalid configuration: Multi-Region Access Point ARNs are disabled.\", [bK]: f }, { [bL]: [{ [bM]: g, [bN]: bk, [bP]: I }], [bK]: d, rules: [{ [bL]: [{ [bM]: h, [bN]: [{ [bM]: i, [bN]: [{ [bO]: I }, j] }, { [bM]: i, [bN]: [aE, \"partition\"] }] }], [bK]: d, rules: [{ endpoint: { [bQ]: \"https://{accessPointName}.accesspoint.s3-global.{mrapPartition#dnsSuffix}\", [bR]: { [bS]: [{ [bT]: b, name: \"sigv4a\", [bU]: v, signingRegionSet: [\"*\"] }] }, [bW]: af }, [bK]: t }] }, { error: \"Client was configured for partition `{mrapPartition#name}` but bucket referred to partition `{bucketArn#partition}`\", [bK]: f }] }] }, { error: \"Invalid Access Point Name\", [bK]: f }] }, aU] }, { [bL]: [{ [bM]: h, [bN]: [aG, s] }], [bK]: d, rules: [{ [bL]: bx, error: \"S3 Outposts does not support Dual-stack\", [bK]: f }, { [bL]: bH, error: \"S3 Outposts does not support FIPS\", [bK]: f }, { [bL]: by, error: \"S3 Outposts does not support S3 Accelerate\", [bK]: f }, { [bL]: [{ [bM]: c, [bN]: [{ [bM]: i, [bN]: [aE, \"resourceId[4]\"] }] }], error: \"Invalid Arn: Outpost Access Point ARN contains sub resources\", [bK]: f }, { [bL]: [{ [bM]: i, [bN]: bw, [bP]: o }], [bK]: d, rules: [{ [bL]: bn, [bK]: d, rules: [aL, { [bL]: bC, [bK]: d, rules: [{ [bL]: br, [bK]: d, rules: [{ [bL]: bD, [bK]: d, rules: [{ [bL]: bE, [bK]: d, rules: [{ [bL]: bF, [bK]: d, rules: [{ [bL]: [{ [bM]: i, [bN]: bB, [bP]: J }], [bK]: d, rules: [{ [bL]: [{ [bM]: i, [bN]: [aE, \"resourceId[3]\"], [bP]: G }], [bK]: d, rules: [{ [bL]: [{ [bM]: h, [bN]: [{ [bO]: J }, F] }], [bK]: d, rules: [{ [bL]: bp, endpoint: { [bQ]: \"https://{accessPointName}-{bucketArn#accountId}.{outpostId}.{url#authority}\", [bR]: aW, [bW]: af }, [bK]: t }, { endpoint: { [bQ]: \"https://{accessPointName}-{bucketArn#accountId}.{outpostId}.s3-outposts.{bucketArn#region}.{bucketPartition#dnsSuffix}\", [bR]: aW, [bW]: af }, [bK]: t }] }, { error: \"Expected an outpost type `accesspoint`, found {outpostType}\", [bK]: f }] }, { error: \"Invalid ARN: expected an access point name\", [bK]: f }] }, { error: \"Invalid ARN: Expected a 4-component resource\", [bK]: f }] }, aQ] }, aR] }, aS] }] }] }, { error: \"Invalid ARN: The outpost Id may only contain a-z, A-Z, 0-9 and `-`. Found: `{outpostId}`\", [bK]: f }] }, { error: \"Invalid ARN: The Outpost Id was not set\", [bK]: f }] }, { error: \"Invalid ARN: Unrecognized format: {Bucket} (type: {arnType})\", [bK]: f }] }, { error: \"Invalid ARN: No ARN type specified\", [bK]: f }] }, { [bL]: [{ [bM]: k, [bN]: [Z, 0, 4, a], [bP]: K }, { [bM]: h, [bN]: [{ [bO]: K }, \"arn:\"] }, { [bM]: q, [bN]: [{ [bM]: c, [bN]: [aX] }] }], error: \"Invalid ARN: `{Bucket}` was not a valid ARN\", [bK]: f }, { [bL]: [{ [bM]: e, [bN]: [ah, b] }, aX], error: \"Path-style addressing cannot be used with ARN buckets\", [bK]: f }, { [bL]: [{ [bM]: \"uriEncode\", [bN]: bm, [bP]: \"uri_encoded_bucket\" }], [bK]: d, rules: [{ [bL]: br, [bK]: d, rules: [{ [bL]: [ai], [bK]: d, rules: [{ [bL]: [U, ac, T, aj], endpoint: { [bQ]: \"https://s3-fips.dualstack.us-east-1.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\", [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [U, ac, T, al, am], [bK]: d, rules: [{ endpoint: aY, [bK]: t }] }, { [bL]: [U, ac, T, al, ap], endpoint: aY, [bK]: t }, { [bL]: [aq, ac, T, aj], endpoint: { [bQ]: \"https://s3-fips.us-east-1.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\", [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [aq, ac, T, al, am], [bK]: d, rules: [{ endpoint: aZ, [bK]: t }] }, { [bL]: [aq, ac, T, al, ap], endpoint: aZ, [bK]: t }, { [bL]: [U, ac, as, aj], endpoint: { [bQ]: \"https://s3.dualstack.us-east-1.{partitionResult#dnsSuffix}/{uri_encoded_bucket}\", [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [U, ac, as, al, am], [bK]: d, rules: [{ endpoint: ba, [bK]: t }] }, { [bL]: [U, ac, as, al, ap], endpoint: ba, [bK]: t }, { [bL]: [aq, V, ad, as, aj], endpoint: { [bQ]: L, [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [aq, V, ad, as, al, am], [bK]: d, rules: [{ [bL]: bt, endpoint: bb, [bK]: t }, { endpoint: bb, [bK]: t }] }, { [bL]: [aq, V, ad, as, al, ap], endpoint: bb, [bK]: t }, { [bL]: [aq, ac, as, aj], endpoint: { [bQ]: M, [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [aq, ac, as, al, am], [bK]: d, rules: [{ [bL]: bt, endpoint: { [bQ]: M, [bR]: ao, [bW]: af }, [bK]: t }, { endpoint: bc, [bK]: t }] }, { [bL]: [aq, ac, as, al, ap], endpoint: bc, [bK]: t }] }, { error: \"Path-style addressing cannot be used with S3 Accelerate\", [bK]: f }] }] }] }, { [bL]: [{ [bM]: c, [bN]: [bd] }, { [bM]: e, [bN]: [bd, b] }], [bK]: d, rules: [{ [bL]: br, [bK]: d, rules: [{ [bL]: bI, [bK]: d, rules: [aI, aJ, { [bL]: bp, endpoint: { [bQ]: N, [bR]: be, [bW]: af }, [bK]: t }, { [bL]: bH, endpoint: { [bQ]: \"https://s3-object-lambda-fips.{Region}.{partitionResult#dnsSuffix}\", [bR]: be, [bW]: af }, [bK]: t }, { endpoint: { [bQ]: \"https://s3-object-lambda.{Region}.{partitionResult#dnsSuffix}\", [bR]: be, [bW]: af }, [bK]: t }] }, aD] }] }, { [bL]: [{ [bM]: q, [bN]: bq }], [bK]: d, rules: [{ [bL]: br, [bK]: d, rules: [{ [bL]: bI, [bK]: d, rules: [{ [bL]: [T, U, ac, aj], endpoint: { [bQ]: \"https://s3-fips.dualstack.us-east-1.{partitionResult#dnsSuffix}\", [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [T, U, ac, al, am], [bK]: d, rules: [{ endpoint: bf, [bK]: t }] }, { [bL]: [T, U, ac, al, ap], endpoint: bf, [bK]: t }, { [bL]: [T, aq, ac, aj], endpoint: { [bQ]: \"https://s3-fips.us-east-1.{partitionResult#dnsSuffix}\", [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [T, aq, ac, al, am], [bK]: d, rules: [{ endpoint: bg, [bK]: t }] }, { [bL]: [T, aq, ac, al, ap], endpoint: bg, [bK]: t }, { [bL]: [as, U, ac, aj], endpoint: { [bQ]: \"https://s3.dualstack.us-east-1.{partitionResult#dnsSuffix}\", [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [as, U, ac, al, am], [bK]: d, rules: [{ endpoint: bh, [bK]: t }] }, { [bL]: [as, U, ac, al, ap], endpoint: bh, [bK]: t }, { [bL]: [as, aq, V, ad, aj], endpoint: { [bQ]: N, [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [as, aq, V, ad, al, am], [bK]: d, rules: [{ [bL]: bt, endpoint: bi, [bK]: t }, { endpoint: bi, [bK]: t }] }, { [bL]: [as, aq, V, ad, al, ap], endpoint: bi, [bK]: t }, { [bL]: [as, aq, ac, aj], endpoint: { [bQ]: O, [bR]: ak, [bW]: af }, [bK]: t }, { [bL]: [as, aq, ac, al, am], [bK]: d, rules: [{ [bL]: bt, endpoint: { [bQ]: O, [bR]: ao, [bW]: af }, [bK]: t }, { endpoint: bj, [bK]: t }] }, { [bL]: [as, aq, ac, al, ap], endpoint: bj, [bK]: t }] }, aD] }] }] }, { error: \"A region must be set when sending requests to S3.\", [bK]: f }] };\nexports.ruleSet = _data;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.S3ServiceException = void 0;\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./S3Client\"), exports);\ntslib_1.__exportStar(require(\"./S3\"), exports);\ntslib_1.__exportStar(require(\"./commands\"), exports);\ntslib_1.__exportStar(require(\"./pagination\"), exports);\ntslib_1.__exportStar(require(\"./waiters\"), exports);\ntslib_1.__exportStar(require(\"./models\"), exports);\nvar S3ServiceException_1 = require(\"./models/S3ServiceException\");\nObject.defineProperty(exports, \"S3ServiceException\", { enumerable: true, get: function () { return S3ServiceException_1.S3ServiceException; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.S3ServiceException = exports.__ServiceException = void 0;\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"__ServiceException\", { enumerable: true, get: function () { return smithy_client_1.ServiceException; } });\nclass S3ServiceException extends smithy_client_1.ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, S3ServiceException.prototype);\n    }\n}\nexports.S3ServiceException = S3ServiceException;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./models_0\"), exports);\ntslib_1.__exportStar(require(\"./models_1\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReplicationStatus = exports.Protocol = exports.BucketVersioningStatus = exports.MFADeleteStatus = exports.Payer = exports.ReplicationRuleStatus = exports.SseKmsEncryptedObjectsStatus = exports.ReplicaModificationsStatus = exports.ReplicationRuleFilter = exports.ExistingObjectReplicationStatus = exports.ReplicationTimeStatus = exports.MetricsStatus = exports.DeleteMarkerReplicationStatus = exports.FilterRuleName = exports.Event = exports.MetricsFilter = exports.BucketLogsPermission = exports.ExpirationStatus = exports.TransitionStorageClass = exports.LifecycleRuleFilter = exports.InventoryFrequency = exports.InventoryOptionalField = exports.InventoryIncludedObjectVersions = exports.InventoryFormat = exports.IntelligentTieringAccessTier = exports.IntelligentTieringStatus = exports.StorageClassAnalysisSchemaVersion = exports.AnalyticsS3ExportFileFormat = exports.AnalyticsFilter = exports.ObjectOwnership = exports.BucketLocationConstraint = exports.BucketCannedACL = exports.BucketAlreadyOwnedByYou = exports.BucketAlreadyExists = exports.ObjectNotInActiveTierError = exports.TaggingDirective = exports.StorageClass = exports.ObjectLockMode = exports.ObjectLockLegalHoldStatus = exports.MetadataDirective = exports.ChecksumAlgorithm = exports.ObjectCannedACL = exports.ServerSideEncryption = exports.OwnerOverride = exports.Permission = exports.Type = exports.BucketAccelerateStatus = exports.NoSuchUpload = exports.RequestPayer = exports.RequestCharged = void 0;\nexports.PutObjectRequestFilterSensitiveLog = exports.PutObjectOutputFilterSensitiveLog = exports.PutBucketInventoryConfigurationRequestFilterSensitiveLog = exports.PutBucketEncryptionRequestFilterSensitiveLog = exports.ListPartsRequestFilterSensitiveLog = exports.ListBucketInventoryConfigurationsOutputFilterSensitiveLog = exports.HeadObjectRequestFilterSensitiveLog = exports.HeadObjectOutputFilterSensitiveLog = exports.GetObjectTorrentOutputFilterSensitiveLog = exports.GetObjectAttributesRequestFilterSensitiveLog = exports.GetObjectRequestFilterSensitiveLog = exports.GetObjectOutputFilterSensitiveLog = exports.GetBucketInventoryConfigurationOutputFilterSensitiveLog = exports.InventoryConfigurationFilterSensitiveLog = exports.InventoryDestinationFilterSensitiveLog = exports.InventoryS3BucketDestinationFilterSensitiveLog = exports.InventoryEncryptionFilterSensitiveLog = exports.SSEKMSFilterSensitiveLog = exports.GetBucketEncryptionOutputFilterSensitiveLog = exports.ServerSideEncryptionConfigurationFilterSensitiveLog = exports.ServerSideEncryptionRuleFilterSensitiveLog = exports.ServerSideEncryptionByDefaultFilterSensitiveLog = exports.CreateMultipartUploadRequestFilterSensitiveLog = exports.CreateMultipartUploadOutputFilterSensitiveLog = exports.CopyObjectRequestFilterSensitiveLog = exports.CopyObjectOutputFilterSensitiveLog = exports.CompleteMultipartUploadRequestFilterSensitiveLog = exports.CompleteMultipartUploadOutputFilterSensitiveLog = exports.MFADelete = exports.ObjectVersionStorageClass = exports.NoSuchBucket = exports.OptionalObjectAttributes = exports.ObjectStorageClass = exports.EncodingType = exports.ArchiveStatus = exports.NotFound = exports.ObjectLockRetentionMode = exports.ObjectLockEnabled = exports.ObjectAttributes = exports.NoSuchKey = exports.InvalidObjectState = exports.ChecksumMode = void 0;\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst S3ServiceException_1 = require(\"./S3ServiceException\");\nexports.RequestCharged = {\n    requester: \"requester\",\n};\nexports.RequestPayer = {\n    requester: \"requester\",\n};\nclass NoSuchUpload extends S3ServiceException_1.S3ServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchUpload\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchUpload\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchUpload.prototype);\n    }\n}\nexports.NoSuchUpload = NoSuchUpload;\nexports.BucketAccelerateStatus = {\n    Enabled: \"Enabled\",\n    Suspended: \"Suspended\",\n};\nexports.Type = {\n    AmazonCustomerByEmail: \"AmazonCustomerByEmail\",\n    CanonicalUser: \"CanonicalUser\",\n    Group: \"Group\",\n};\nexports.Permission = {\n    FULL_CONTROL: \"FULL_CONTROL\",\n    READ: \"READ\",\n    READ_ACP: \"READ_ACP\",\n    WRITE: \"WRITE\",\n    WRITE_ACP: \"WRITE_ACP\",\n};\nexports.OwnerOverride = {\n    Destination: \"Destination\",\n};\nexports.ServerSideEncryption = {\n    AES256: \"AES256\",\n    aws_kms: \"aws:kms\",\n    aws_kms_dsse: \"aws:kms:dsse\",\n};\nexports.ObjectCannedACL = {\n    authenticated_read: \"authenticated-read\",\n    aws_exec_read: \"aws-exec-read\",\n    bucket_owner_full_control: \"bucket-owner-full-control\",\n    bucket_owner_read: \"bucket-owner-read\",\n    private: \"private\",\n    public_read: \"public-read\",\n    public_read_write: \"public-read-write\",\n};\nexports.ChecksumAlgorithm = {\n    CRC32: \"CRC32\",\n    CRC32C: \"CRC32C\",\n    SHA1: \"SHA1\",\n    SHA256: \"SHA256\",\n};\nexports.MetadataDirective = {\n    COPY: \"COPY\",\n    REPLACE: \"REPLACE\",\n};\nexports.ObjectLockLegalHoldStatus = {\n    OFF: \"OFF\",\n    ON: \"ON\",\n};\nexports.ObjectLockMode = {\n    COMPLIANCE: \"COMPLIANCE\",\n    GOVERNANCE: \"GOVERNANCE\",\n};\nexports.StorageClass = {\n    DEEP_ARCHIVE: \"DEEP_ARCHIVE\",\n    GLACIER: \"GLACIER\",\n    GLACIER_IR: \"GLACIER_IR\",\n    INTELLIGENT_TIERING: \"INTELLIGENT_TIERING\",\n    ONEZONE_IA: \"ONEZONE_IA\",\n    OUTPOSTS: \"OUTPOSTS\",\n    REDUCED_REDUNDANCY: \"REDUCED_REDUNDANCY\",\n    SNOW: \"SNOW\",\n    STANDARD: \"STANDARD\",\n    STANDARD_IA: \"STANDARD_IA\",\n};\nexports.TaggingDirective = {\n    COPY: \"COPY\",\n    REPLACE: \"REPLACE\",\n};\nclass ObjectNotInActiveTierError extends S3ServiceException_1.S3ServiceException {\n    constructor(opts) {\n        super({\n            name: \"ObjectNotInActiveTierError\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ObjectNotInActiveTierError\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ObjectNotInActiveTierError.prototype);\n    }\n}\nexports.ObjectNotInActiveTierError = ObjectNotInActiveTierError;\nclass BucketAlreadyExists extends S3ServiceException_1.S3ServiceException {\n    constructor(opts) {\n        super({\n            name: \"BucketAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"BucketAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, BucketAlreadyExists.prototype);\n    }\n}\nexports.BucketAlreadyExists = BucketAlreadyExists;\nclass BucketAlreadyOwnedByYou extends S3ServiceException_1.S3ServiceException {\n    constructor(opts) {\n        super({\n            name: \"BucketAlreadyOwnedByYou\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"BucketAlreadyOwnedByYou\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, BucketAlreadyOwnedByYou.prototype);\n    }\n}\nexports.BucketAlreadyOwnedByYou = BucketAlreadyOwnedByYou;\nexports.BucketCannedACL = {\n    authenticated_read: \"authenticated-read\",\n    private: \"private\",\n    public_read: \"public-read\",\n    public_read_write: \"public-read-write\",\n};\nexports.BucketLocationConstraint = {\n    EU: \"EU\",\n    af_south_1: \"af-south-1\",\n    ap_east_1: \"ap-east-1\",\n    ap_northeast_1: \"ap-northeast-1\",\n    ap_northeast_2: \"ap-northeast-2\",\n    ap_northeast_3: \"ap-northeast-3\",\n    ap_south_1: \"ap-south-1\",\n    ap_south_2: \"ap-south-2\",\n    ap_southeast_1: \"ap-southeast-1\",\n    ap_southeast_2: \"ap-southeast-2\",\n    ap_southeast_3: \"ap-southeast-3\",\n    ca_central_1: \"ca-central-1\",\n    cn_north_1: \"cn-north-1\",\n    cn_northwest_1: \"cn-northwest-1\",\n    eu_central_1: \"eu-central-1\",\n    eu_north_1: \"eu-north-1\",\n    eu_south_1: \"eu-south-1\",\n    eu_south_2: \"eu-south-2\",\n    eu_west_1: \"eu-west-1\",\n    eu_west_2: \"eu-west-2\",\n    eu_west_3: \"eu-west-3\",\n    me_south_1: \"me-south-1\",\n    sa_east_1: \"sa-east-1\",\n    us_east_2: \"us-east-2\",\n    us_gov_east_1: \"us-gov-east-1\",\n    us_gov_west_1: \"us-gov-west-1\",\n    us_west_1: \"us-west-1\",\n    us_west_2: \"us-west-2\",\n};\nexports.ObjectOwnership = {\n    BucketOwnerEnforced: \"BucketOwnerEnforced\",\n    BucketOwnerPreferred: \"BucketOwnerPreferred\",\n    ObjectWriter: \"ObjectWriter\",\n};\nvar AnalyticsFilter;\n(function (AnalyticsFilter) {\n    AnalyticsFilter.visit = (value, visitor) => {\n        if (value.Prefix !== undefined)\n            return visitor.Prefix(value.Prefix);\n        if (value.Tag !== undefined)\n            return visitor.Tag(value.Tag);\n        if (value.And !== undefined)\n            return visitor.And(value.And);\n        return visitor._(value.$unknown[0], value.$unknown[1]);\n    };\n})(AnalyticsFilter = exports.AnalyticsFilter || (exports.AnalyticsFilter = {}));\nexports.AnalyticsS3ExportFileFormat = {\n    CSV: \"CSV\",\n};\nexports.StorageClassAnalysisSchemaVersion = {\n    V_1: \"V_1\",\n};\nexports.IntelligentTieringStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexports.IntelligentTieringAccessTier = {\n    ARCHIVE_ACCESS: \"ARCHIVE_ACCESS\",\n    DEEP_ARCHIVE_ACCESS: \"DEEP_ARCHIVE_ACCESS\",\n};\nexports.InventoryFormat = {\n    CSV: \"CSV\",\n    ORC: \"ORC\",\n    Parquet: \"Parquet\",\n};\nexports.InventoryIncludedObjectVersions = {\n    All: \"All\",\n    Current: \"Current\",\n};\nexports.InventoryOptionalField = {\n    BucketKeyStatus: \"BucketKeyStatus\",\n    ChecksumAlgorithm: \"ChecksumAlgorithm\",\n    ETag: \"ETag\",\n    EncryptionStatus: \"EncryptionStatus\",\n    IntelligentTieringAccessTier: \"IntelligentTieringAccessTier\",\n    IsMultipartUploaded: \"IsMultipartUploaded\",\n    LastModifiedDate: \"LastModifiedDate\",\n    ObjectAccessControlList: \"ObjectAccessControlList\",\n    ObjectLockLegalHoldStatus: \"ObjectLockLegalHoldStatus\",\n    ObjectLockMode: \"ObjectLockMode\",\n    ObjectLockRetainUntilDate: \"ObjectLockRetainUntilDate\",\n    ObjectOwner: \"ObjectOwner\",\n    ReplicationStatus: \"ReplicationStatus\",\n    Size: \"Size\",\n    StorageClass: \"StorageClass\",\n};\nexports.InventoryFrequency = {\n    Daily: \"Daily\",\n    Weekly: \"Weekly\",\n};\nvar LifecycleRuleFilter;\n(function (LifecycleRuleFilter) {\n    LifecycleRuleFilter.visit = (value, visitor) => {\n        if (value.Prefix !== undefined)\n            return visitor.Prefix(value.Prefix);\n        if (value.Tag !== undefined)\n            return visitor.Tag(value.Tag);\n        if (value.ObjectSizeGreaterThan !== undefined)\n            return visitor.ObjectSizeGreaterThan(value.ObjectSizeGreaterThan);\n        if (value.ObjectSizeLessThan !== undefined)\n            return visitor.ObjectSizeLessThan(value.ObjectSizeLessThan);\n        if (value.And !== undefined)\n            return visitor.And(value.And);\n        return visitor._(value.$unknown[0], value.$unknown[1]);\n    };\n})(LifecycleRuleFilter = exports.LifecycleRuleFilter || (exports.LifecycleRuleFilter = {}));\nexports.TransitionStorageClass = {\n    DEEP_ARCHIVE: \"DEEP_ARCHIVE\",\n    GLACIER: \"GLACIER\",\n    GLACIER_IR: \"GLACIER_IR\",\n    INTELLIGENT_TIERING: \"INTELLIGENT_TIERING\",\n    ONEZONE_IA: \"ONEZONE_IA\",\n    STANDARD_IA: \"STANDARD_IA\",\n};\nexports.ExpirationStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexports.BucketLogsPermission = {\n    FULL_CONTROL: \"FULL_CONTROL\",\n    READ: \"READ\",\n    WRITE: \"WRITE\",\n};\nvar MetricsFilter;\n(function (MetricsFilter) {\n    MetricsFilter.visit = (value, visitor) => {\n        if (value.Prefix !== undefined)\n            return visitor.Prefix(value.Prefix);\n        if (value.Tag !== undefined)\n            return visitor.Tag(value.Tag);\n        if (value.AccessPointArn !== undefined)\n            return visitor.AccessPointArn(value.AccessPointArn);\n        if (value.And !== undefined)\n            return visitor.And(value.And);\n        return visitor._(value.$unknown[0], value.$unknown[1]);\n    };\n})(MetricsFilter = exports.MetricsFilter || (exports.MetricsFilter = {}));\nexports.Event = {\n    s3_IntelligentTiering: \"s3:IntelligentTiering\",\n    s3_LifecycleExpiration_: \"s3:LifecycleExpiration:*\",\n    s3_LifecycleExpiration_Delete: \"s3:LifecycleExpiration:Delete\",\n    s3_LifecycleExpiration_DeleteMarkerCreated: \"s3:LifecycleExpiration:DeleteMarkerCreated\",\n    s3_LifecycleTransition: \"s3:LifecycleTransition\",\n    s3_ObjectAcl_Put: \"s3:ObjectAcl:Put\",\n    s3_ObjectCreated_: \"s3:ObjectCreated:*\",\n    s3_ObjectCreated_CompleteMultipartUpload: \"s3:ObjectCreated:CompleteMultipartUpload\",\n    s3_ObjectCreated_Copy: \"s3:ObjectCreated:Copy\",\n    s3_ObjectCreated_Post: \"s3:ObjectCreated:Post\",\n    s3_ObjectCreated_Put: \"s3:ObjectCreated:Put\",\n    s3_ObjectRemoved_: \"s3:ObjectRemoved:*\",\n    s3_ObjectRemoved_Delete: \"s3:ObjectRemoved:Delete\",\n    s3_ObjectRemoved_DeleteMarkerCreated: \"s3:ObjectRemoved:DeleteMarkerCreated\",\n    s3_ObjectRestore_: \"s3:ObjectRestore:*\",\n    s3_ObjectRestore_Completed: \"s3:ObjectRestore:Completed\",\n    s3_ObjectRestore_Delete: \"s3:ObjectRestore:Delete\",\n    s3_ObjectRestore_Post: \"s3:ObjectRestore:Post\",\n    s3_ObjectTagging_: \"s3:ObjectTagging:*\",\n    s3_ObjectTagging_Delete: \"s3:ObjectTagging:Delete\",\n    s3_ObjectTagging_Put: \"s3:ObjectTagging:Put\",\n    s3_ReducedRedundancyLostObject: \"s3:ReducedRedundancyLostObject\",\n    s3_Replication_: \"s3:Replication:*\",\n    s3_Replication_OperationFailedReplication: \"s3:Replication:OperationFailedReplication\",\n    s3_Replication_OperationMissedThreshold: \"s3:Replication:OperationMissedThreshold\",\n    s3_Replication_OperationNotTracked: \"s3:Replication:OperationNotTracked\",\n    s3_Replication_OperationReplicatedAfterThreshold: \"s3:Replication:OperationReplicatedAfterThreshold\",\n};\nexports.FilterRuleName = {\n    prefix: \"prefix\",\n    suffix: \"suffix\",\n};\nexports.DeleteMarkerReplicationStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexports.MetricsStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexports.ReplicationTimeStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexports.ExistingObjectReplicationStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nvar ReplicationRuleFilter;\n(function (ReplicationRuleFilter) {\n    ReplicationRuleFilter.visit = (value, visitor) => {\n        if (value.Prefix !== undefined)\n            return visitor.Prefix(value.Prefix);\n        if (value.Tag !== undefined)\n            return visitor.Tag(value.Tag);\n        if (value.And !== undefined)\n            return visitor.And(value.And);\n        return visitor._(value.$unknown[0], value.$unknown[1]);\n    };\n})(ReplicationRuleFilter = exports.ReplicationRuleFilter || (exports.ReplicationRuleFilter = {}));\nexports.ReplicaModificationsStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexports.SseKmsEncryptedObjectsStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexports.ReplicationRuleStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexports.Payer = {\n    BucketOwner: \"BucketOwner\",\n    Requester: \"Requester\",\n};\nexports.MFADeleteStatus = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nexports.BucketVersioningStatus = {\n    Enabled: \"Enabled\",\n    Suspended: \"Suspended\",\n};\nexports.Protocol = {\n    http: \"http\",\n    https: \"https\",\n};\nexports.ReplicationStatus = {\n    COMPLETE: \"COMPLETE\",\n    FAILED: \"FAILED\",\n    PENDING: \"PENDING\",\n    REPLICA: \"REPLICA\",\n};\nexports.ChecksumMode = {\n    ENABLED: \"ENABLED\",\n};\nclass InvalidObjectState extends S3ServiceException_1.S3ServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidObjectState\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidObjectState\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidObjectState.prototype);\n        this.StorageClass = opts.StorageClass;\n        this.AccessTier = opts.AccessTier;\n    }\n}\nexports.InvalidObjectState = InvalidObjectState;\nclass NoSuchKey extends S3ServiceException_1.S3ServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchKey\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchKey\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchKey.prototype);\n    }\n}\nexports.NoSuchKey = NoSuchKey;\nexports.ObjectAttributes = {\n    CHECKSUM: \"Checksum\",\n    ETAG: \"ETag\",\n    OBJECT_PARTS: \"ObjectParts\",\n    OBJECT_SIZE: \"ObjectSize\",\n    STORAGE_CLASS: \"StorageClass\",\n};\nexports.ObjectLockEnabled = {\n    Enabled: \"Enabled\",\n};\nexports.ObjectLockRetentionMode = {\n    COMPLIANCE: \"COMPLIANCE\",\n    GOVERNANCE: \"GOVERNANCE\",\n};\nclass NotFound extends S3ServiceException_1.S3ServiceException {\n    constructor(opts) {\n        super({\n            name: \"NotFound\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NotFound\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NotFound.prototype);\n    }\n}\nexports.NotFound = NotFound;\nexports.ArchiveStatus = {\n    ARCHIVE_ACCESS: \"ARCHIVE_ACCESS\",\n    DEEP_ARCHIVE_ACCESS: \"DEEP_ARCHIVE_ACCESS\",\n};\nexports.EncodingType = {\n    url: \"url\",\n};\nexports.ObjectStorageClass = {\n    DEEP_ARCHIVE: \"DEEP_ARCHIVE\",\n    GLACIER: \"GLACIER\",\n    GLACIER_IR: \"GLACIER_IR\",\n    INTELLIGENT_TIERING: \"INTELLIGENT_TIERING\",\n    ONEZONE_IA: \"ONEZONE_IA\",\n    OUTPOSTS: \"OUTPOSTS\",\n    REDUCED_REDUNDANCY: \"REDUCED_REDUNDANCY\",\n    SNOW: \"SNOW\",\n    STANDARD: \"STANDARD\",\n    STANDARD_IA: \"STANDARD_IA\",\n};\nexports.OptionalObjectAttributes = {\n    RESTORE_STATUS: \"RestoreStatus\",\n};\nclass NoSuchBucket extends S3ServiceException_1.S3ServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchBucket\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchBucket\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchBucket.prototype);\n    }\n}\nexports.NoSuchBucket = NoSuchBucket;\nexports.ObjectVersionStorageClass = {\n    STANDARD: \"STANDARD\",\n};\nexports.MFADelete = {\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n};\nconst CompleteMultipartUploadOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.CompleteMultipartUploadOutputFilterSensitiveLog = CompleteMultipartUploadOutputFilterSensitiveLog;\nconst CompleteMultipartUploadRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.CompleteMultipartUploadRequestFilterSensitiveLog = CompleteMultipartUploadRequestFilterSensitiveLog;\nconst CopyObjectOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: smithy_client_1.SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.CopyObjectOutputFilterSensitiveLog = CopyObjectOutputFilterSensitiveLog;\nconst CopyObjectRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: smithy_client_1.SENSITIVE_STRING }),\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: smithy_client_1.SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: smithy_client_1.SENSITIVE_STRING }),\n    ...(obj.CopySourceSSECustomerKey && { CopySourceSSECustomerKey: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.CopyObjectRequestFilterSensitiveLog = CopyObjectRequestFilterSensitiveLog;\nconst CreateMultipartUploadOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: smithy_client_1.SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.CreateMultipartUploadOutputFilterSensitiveLog = CreateMultipartUploadOutputFilterSensitiveLog;\nconst CreateMultipartUploadRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: smithy_client_1.SENSITIVE_STRING }),\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: smithy_client_1.SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.CreateMultipartUploadRequestFilterSensitiveLog = CreateMultipartUploadRequestFilterSensitiveLog;\nconst ServerSideEncryptionByDefaultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.KMSMasterKeyID && { KMSMasterKeyID: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.ServerSideEncryptionByDefaultFilterSensitiveLog = ServerSideEncryptionByDefaultFilterSensitiveLog;\nconst ServerSideEncryptionRuleFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ApplyServerSideEncryptionByDefault && {\n        ApplyServerSideEncryptionByDefault: (0, exports.ServerSideEncryptionByDefaultFilterSensitiveLog)(obj.ApplyServerSideEncryptionByDefault),\n    }),\n});\nexports.ServerSideEncryptionRuleFilterSensitiveLog = ServerSideEncryptionRuleFilterSensitiveLog;\nconst ServerSideEncryptionConfigurationFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Rules && { Rules: obj.Rules.map((item) => (0, exports.ServerSideEncryptionRuleFilterSensitiveLog)(item)) }),\n});\nexports.ServerSideEncryptionConfigurationFilterSensitiveLog = ServerSideEncryptionConfigurationFilterSensitiveLog;\nconst GetBucketEncryptionOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ServerSideEncryptionConfiguration && {\n        ServerSideEncryptionConfiguration: (0, exports.ServerSideEncryptionConfigurationFilterSensitiveLog)(obj.ServerSideEncryptionConfiguration),\n    }),\n});\nexports.GetBucketEncryptionOutputFilterSensitiveLog = GetBucketEncryptionOutputFilterSensitiveLog;\nconst SSEKMSFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.KeyId && { KeyId: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.SSEKMSFilterSensitiveLog = SSEKMSFilterSensitiveLog;\nconst InventoryEncryptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMS && { SSEKMS: (0, exports.SSEKMSFilterSensitiveLog)(obj.SSEKMS) }),\n});\nexports.InventoryEncryptionFilterSensitiveLog = InventoryEncryptionFilterSensitiveLog;\nconst InventoryS3BucketDestinationFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Encryption && { Encryption: (0, exports.InventoryEncryptionFilterSensitiveLog)(obj.Encryption) }),\n});\nexports.InventoryS3BucketDestinationFilterSensitiveLog = InventoryS3BucketDestinationFilterSensitiveLog;\nconst InventoryDestinationFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.S3BucketDestination && {\n        S3BucketDestination: (0, exports.InventoryS3BucketDestinationFilterSensitiveLog)(obj.S3BucketDestination),\n    }),\n});\nexports.InventoryDestinationFilterSensitiveLog = InventoryDestinationFilterSensitiveLog;\nconst InventoryConfigurationFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Destination && { Destination: (0, exports.InventoryDestinationFilterSensitiveLog)(obj.Destination) }),\n});\nexports.InventoryConfigurationFilterSensitiveLog = InventoryConfigurationFilterSensitiveLog;\nconst GetBucketInventoryConfigurationOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.InventoryConfiguration && {\n        InventoryConfiguration: (0, exports.InventoryConfigurationFilterSensitiveLog)(obj.InventoryConfiguration),\n    }),\n});\nexports.GetBucketInventoryConfigurationOutputFilterSensitiveLog = GetBucketInventoryConfigurationOutputFilterSensitiveLog;\nconst GetObjectOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.GetObjectOutputFilterSensitiveLog = GetObjectOutputFilterSensitiveLog;\nconst GetObjectRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.GetObjectRequestFilterSensitiveLog = GetObjectRequestFilterSensitiveLog;\nconst GetObjectAttributesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.GetObjectAttributesRequestFilterSensitiveLog = GetObjectAttributesRequestFilterSensitiveLog;\nconst GetObjectTorrentOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetObjectTorrentOutputFilterSensitiveLog = GetObjectTorrentOutputFilterSensitiveLog;\nconst HeadObjectOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.HeadObjectOutputFilterSensitiveLog = HeadObjectOutputFilterSensitiveLog;\nconst HeadObjectRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.HeadObjectRequestFilterSensitiveLog = HeadObjectRequestFilterSensitiveLog;\nconst ListBucketInventoryConfigurationsOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.InventoryConfigurationList && {\n        InventoryConfigurationList: obj.InventoryConfigurationList.map((item) => (0, exports.InventoryConfigurationFilterSensitiveLog)(item)),\n    }),\n});\nexports.ListBucketInventoryConfigurationsOutputFilterSensitiveLog = ListBucketInventoryConfigurationsOutputFilterSensitiveLog;\nconst ListPartsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.ListPartsRequestFilterSensitiveLog = ListPartsRequestFilterSensitiveLog;\nconst PutBucketEncryptionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ServerSideEncryptionConfiguration && {\n        ServerSideEncryptionConfiguration: (0, exports.ServerSideEncryptionConfigurationFilterSensitiveLog)(obj.ServerSideEncryptionConfiguration),\n    }),\n});\nexports.PutBucketEncryptionRequestFilterSensitiveLog = PutBucketEncryptionRequestFilterSensitiveLog;\nconst PutBucketInventoryConfigurationRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.InventoryConfiguration && {\n        InventoryConfiguration: (0, exports.InventoryConfigurationFilterSensitiveLog)(obj.InventoryConfiguration),\n    }),\n});\nexports.PutBucketInventoryConfigurationRequestFilterSensitiveLog = PutBucketInventoryConfigurationRequestFilterSensitiveLog;\nconst PutObjectOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: smithy_client_1.SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.PutObjectOutputFilterSensitiveLog = PutObjectOutputFilterSensitiveLog;\nconst PutObjectRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: smithy_client_1.SENSITIVE_STRING }),\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: smithy_client_1.SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.PutObjectRequestFilterSensitiveLog = PutObjectRequestFilterSensitiveLog;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WriteGetObjectResponseRequestFilterSensitiveLog = exports.UploadPartCopyRequestFilterSensitiveLog = exports.UploadPartCopyOutputFilterSensitiveLog = exports.UploadPartRequestFilterSensitiveLog = exports.UploadPartOutputFilterSensitiveLog = exports.SelectObjectContentRequestFilterSensitiveLog = exports.SelectObjectContentOutputFilterSensitiveLog = exports.SelectObjectContentEventStreamFilterSensitiveLog = exports.RestoreObjectRequestFilterSensitiveLog = exports.RestoreRequestFilterSensitiveLog = exports.OutputLocationFilterSensitiveLog = exports.S3LocationFilterSensitiveLog = exports.EncryptionFilterSensitiveLog = exports.SelectObjectContentEventStream = exports.RestoreRequestType = exports.QuoteFields = exports.JSONType = exports.FileHeaderInfo = exports.CompressionType = exports.ExpressionType = exports.Tier = exports.ObjectAlreadyInActiveTierError = void 0;\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst S3ServiceException_1 = require(\"./S3ServiceException\");\nclass ObjectAlreadyInActiveTierError extends S3ServiceException_1.S3ServiceException {\n    constructor(opts) {\n        super({\n            name: \"ObjectAlreadyInActiveTierError\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ObjectAlreadyInActiveTierError\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ObjectAlreadyInActiveTierError.prototype);\n    }\n}\nexports.ObjectAlreadyInActiveTierError = ObjectAlreadyInActiveTierError;\nexports.Tier = {\n    Bulk: \"Bulk\",\n    Expedited: \"Expedited\",\n    Standard: \"Standard\",\n};\nexports.ExpressionType = {\n    SQL: \"SQL\",\n};\nexports.CompressionType = {\n    BZIP2: \"BZIP2\",\n    GZIP: \"GZIP\",\n    NONE: \"NONE\",\n};\nexports.FileHeaderInfo = {\n    IGNORE: \"IGNORE\",\n    NONE: \"NONE\",\n    USE: \"USE\",\n};\nexports.JSONType = {\n    DOCUMENT: \"DOCUMENT\",\n    LINES: \"LINES\",\n};\nexports.QuoteFields = {\n    ALWAYS: \"ALWAYS\",\n    ASNEEDED: \"ASNEEDED\",\n};\nexports.RestoreRequestType = {\n    SELECT: \"SELECT\",\n};\nvar SelectObjectContentEventStream;\n(function (SelectObjectContentEventStream) {\n    SelectObjectContentEventStream.visit = (value, visitor) => {\n        if (value.Records !== undefined)\n            return visitor.Records(value.Records);\n        if (value.Stats !== undefined)\n            return visitor.Stats(value.Stats);\n        if (value.Progress !== undefined)\n            return visitor.Progress(value.Progress);\n        if (value.Cont !== undefined)\n            return visitor.Cont(value.Cont);\n        if (value.End !== undefined)\n            return visitor.End(value.End);\n        return visitor._(value.$unknown[0], value.$unknown[1]);\n    };\n})(SelectObjectContentEventStream = exports.SelectObjectContentEventStream || (exports.SelectObjectContentEventStream = {}));\nconst EncryptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.KMSKeyId && { KMSKeyId: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.EncryptionFilterSensitiveLog = EncryptionFilterSensitiveLog;\nconst S3LocationFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Encryption && { Encryption: (0, exports.EncryptionFilterSensitiveLog)(obj.Encryption) }),\n});\nexports.S3LocationFilterSensitiveLog = S3LocationFilterSensitiveLog;\nconst OutputLocationFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.S3 && { S3: (0, exports.S3LocationFilterSensitiveLog)(obj.S3) }),\n});\nexports.OutputLocationFilterSensitiveLog = OutputLocationFilterSensitiveLog;\nconst RestoreRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.OutputLocation && { OutputLocation: (0, exports.OutputLocationFilterSensitiveLog)(obj.OutputLocation) }),\n});\nexports.RestoreRequestFilterSensitiveLog = RestoreRequestFilterSensitiveLog;\nconst RestoreObjectRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.RestoreRequest && { RestoreRequest: (0, exports.RestoreRequestFilterSensitiveLog)(obj.RestoreRequest) }),\n});\nexports.RestoreObjectRequestFilterSensitiveLog = RestoreObjectRequestFilterSensitiveLog;\nconst SelectObjectContentEventStreamFilterSensitiveLog = (obj) => {\n    if (obj.Records !== undefined)\n        return { Records: obj.Records };\n    if (obj.Stats !== undefined)\n        return { Stats: obj.Stats };\n    if (obj.Progress !== undefined)\n        return { Progress: obj.Progress };\n    if (obj.Cont !== undefined)\n        return { Cont: obj.Cont };\n    if (obj.End !== undefined)\n        return { End: obj.End };\n    if (obj.$unknown !== undefined)\n        return { [obj.$unknown[0]]: \"UNKNOWN\" };\n};\nexports.SelectObjectContentEventStreamFilterSensitiveLog = SelectObjectContentEventStreamFilterSensitiveLog;\nconst SelectObjectContentOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Payload && { Payload: \"STREAMING_CONTENT\" }),\n});\nexports.SelectObjectContentOutputFilterSensitiveLog = SelectObjectContentOutputFilterSensitiveLog;\nconst SelectObjectContentRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.SelectObjectContentRequestFilterSensitiveLog = SelectObjectContentRequestFilterSensitiveLog;\nconst UploadPartOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.UploadPartOutputFilterSensitiveLog = UploadPartOutputFilterSensitiveLog;\nconst UploadPartRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.UploadPartRequestFilterSensitiveLog = UploadPartRequestFilterSensitiveLog;\nconst UploadPartCopyOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.UploadPartCopyOutputFilterSensitiveLog = UploadPartCopyOutputFilterSensitiveLog;\nconst UploadPartCopyRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: smithy_client_1.SENSITIVE_STRING }),\n    ...(obj.CopySourceSSECustomerKey && { CopySourceSSECustomerKey: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.UploadPartCopyRequestFilterSensitiveLog = UploadPartCopyRequestFilterSensitiveLog;\nconst WriteGetObjectResponseRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.WriteGetObjectResponseRequestFilterSensitiveLog = WriteGetObjectResponseRequestFilterSensitiveLog;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListObjectsV2 = void 0;\nconst ListObjectsV2Command_1 = require(\"../commands/ListObjectsV2Command\");\nconst S3Client_1 = require(\"../S3Client\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListObjectsV2Command_1.ListObjectsV2Command(input), ...args);\n};\nasync function* paginateListObjectsV2(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.ContinuationToken = token;\n        input[\"MaxKeys\"] = config.pageSize;\n        if (config.client instanceof S3Client_1.S3Client) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected S3 | S3Client\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.NextContinuationToken;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\nexports.paginateListObjectsV2 = paginateListObjectsV2;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListParts = void 0;\nconst ListPartsCommand_1 = require(\"../commands/ListPartsCommand\");\nconst S3Client_1 = require(\"../S3Client\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListPartsCommand_1.ListPartsCommand(input), ...args);\n};\nasync function* paginateListParts(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.PartNumberMarker = token;\n        input[\"MaxParts\"] = config.pageSize;\n        if (config.client instanceof S3Client_1.S3Client) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected S3 | S3Client\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.NextPartNumberMarker;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\nexports.paginateListParts = paginateListParts;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./Interfaces\"), exports);\ntslib_1.__exportStar(require(\"./ListObjectsV2Paginator\"), exports);\ntslib_1.__exportStar(require(\"./ListPartsPaginator\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.se_GetObjectTorrentCommand = exports.se_GetObjectTaggingCommand = exports.se_GetObjectRetentionCommand = exports.se_GetObjectLockConfigurationCommand = exports.se_GetObjectLegalHoldCommand = exports.se_GetObjectAttributesCommand = exports.se_GetObjectAclCommand = exports.se_GetObjectCommand = exports.se_GetBucketWebsiteCommand = exports.se_GetBucketVersioningCommand = exports.se_GetBucketTaggingCommand = exports.se_GetBucketRequestPaymentCommand = exports.se_GetBucketReplicationCommand = exports.se_GetBucketPolicyStatusCommand = exports.se_GetBucketPolicyCommand = exports.se_GetBucketOwnershipControlsCommand = exports.se_GetBucketNotificationConfigurationCommand = exports.se_GetBucketMetricsConfigurationCommand = exports.se_GetBucketLoggingCommand = exports.se_GetBucketLocationCommand = exports.se_GetBucketLifecycleConfigurationCommand = exports.se_GetBucketInventoryConfigurationCommand = exports.se_GetBucketIntelligentTieringConfigurationCommand = exports.se_GetBucketEncryptionCommand = exports.se_GetBucketCorsCommand = exports.se_GetBucketAnalyticsConfigurationCommand = exports.se_GetBucketAclCommand = exports.se_GetBucketAccelerateConfigurationCommand = exports.se_DeletePublicAccessBlockCommand = exports.se_DeleteObjectTaggingCommand = exports.se_DeleteObjectsCommand = exports.se_DeleteObjectCommand = exports.se_DeleteBucketWebsiteCommand = exports.se_DeleteBucketTaggingCommand = exports.se_DeleteBucketReplicationCommand = exports.se_DeleteBucketPolicyCommand = exports.se_DeleteBucketOwnershipControlsCommand = exports.se_DeleteBucketMetricsConfigurationCommand = exports.se_DeleteBucketLifecycleCommand = exports.se_DeleteBucketInventoryConfigurationCommand = exports.se_DeleteBucketIntelligentTieringConfigurationCommand = exports.se_DeleteBucketEncryptionCommand = exports.se_DeleteBucketCorsCommand = exports.se_DeleteBucketAnalyticsConfigurationCommand = exports.se_DeleteBucketCommand = exports.se_CreateMultipartUploadCommand = exports.se_CreateBucketCommand = exports.se_CopyObjectCommand = exports.se_CompleteMultipartUploadCommand = exports.se_AbortMultipartUploadCommand = void 0;\nexports.de_DeleteBucketAnalyticsConfigurationCommand = exports.de_DeleteBucketCommand = exports.de_CreateMultipartUploadCommand = exports.de_CreateBucketCommand = exports.de_CopyObjectCommand = exports.de_CompleteMultipartUploadCommand = exports.de_AbortMultipartUploadCommand = exports.se_WriteGetObjectResponseCommand = exports.se_UploadPartCopyCommand = exports.se_UploadPartCommand = exports.se_SelectObjectContentCommand = exports.se_RestoreObjectCommand = exports.se_PutPublicAccessBlockCommand = exports.se_PutObjectTaggingCommand = exports.se_PutObjectRetentionCommand = exports.se_PutObjectLockConfigurationCommand = exports.se_PutObjectLegalHoldCommand = exports.se_PutObjectAclCommand = exports.se_PutObjectCommand = exports.se_PutBucketWebsiteCommand = exports.se_PutBucketVersioningCommand = exports.se_PutBucketTaggingCommand = exports.se_PutBucketRequestPaymentCommand = exports.se_PutBucketReplicationCommand = exports.se_PutBucketPolicyCommand = exports.se_PutBucketOwnershipControlsCommand = exports.se_PutBucketNotificationConfigurationCommand = exports.se_PutBucketMetricsConfigurationCommand = exports.se_PutBucketLoggingCommand = exports.se_PutBucketLifecycleConfigurationCommand = exports.se_PutBucketInventoryConfigurationCommand = exports.se_PutBucketIntelligentTieringConfigurationCommand = exports.se_PutBucketEncryptionCommand = exports.se_PutBucketCorsCommand = exports.se_PutBucketAnalyticsConfigurationCommand = exports.se_PutBucketAclCommand = exports.se_PutBucketAccelerateConfigurationCommand = exports.se_ListPartsCommand = exports.se_ListObjectVersionsCommand = exports.se_ListObjectsV2Command = exports.se_ListObjectsCommand = exports.se_ListMultipartUploadsCommand = exports.se_ListBucketsCommand = exports.se_ListBucketMetricsConfigurationsCommand = exports.se_ListBucketInventoryConfigurationsCommand = exports.se_ListBucketIntelligentTieringConfigurationsCommand = exports.se_ListBucketAnalyticsConfigurationsCommand = exports.se_HeadObjectCommand = exports.se_HeadBucketCommand = exports.se_GetPublicAccessBlockCommand = void 0;\nexports.de_ListBucketMetricsConfigurationsCommand = exports.de_ListBucketInventoryConfigurationsCommand = exports.de_ListBucketIntelligentTieringConfigurationsCommand = exports.de_ListBucketAnalyticsConfigurationsCommand = exports.de_HeadObjectCommand = exports.de_HeadBucketCommand = exports.de_GetPublicAccessBlockCommand = exports.de_GetObjectTorrentCommand = exports.de_GetObjectTaggingCommand = exports.de_GetObjectRetentionCommand = exports.de_GetObjectLockConfigurationCommand = exports.de_GetObjectLegalHoldCommand = exports.de_GetObjectAttributesCommand = exports.de_GetObjectAclCommand = exports.de_GetObjectCommand = exports.de_GetBucketWebsiteCommand = exports.de_GetBucketVersioningCommand = exports.de_GetBucketTaggingCommand = exports.de_GetBucketRequestPaymentCommand = exports.de_GetBucketReplicationCommand = exports.de_GetBucketPolicyStatusCommand = exports.de_GetBucketPolicyCommand = exports.de_GetBucketOwnershipControlsCommand = exports.de_GetBucketNotificationConfigurationCommand = exports.de_GetBucketMetricsConfigurationCommand = exports.de_GetBucketLoggingCommand = exports.de_GetBucketLocationCommand = exports.de_GetBucketLifecycleConfigurationCommand = exports.de_GetBucketInventoryConfigurationCommand = exports.de_GetBucketIntelligentTieringConfigurationCommand = exports.de_GetBucketEncryptionCommand = exports.de_GetBucketCorsCommand = exports.de_GetBucketAnalyticsConfigurationCommand = exports.de_GetBucketAclCommand = exports.de_GetBucketAccelerateConfigurationCommand = exports.de_DeletePublicAccessBlockCommand = exports.de_DeleteObjectTaggingCommand = exports.de_DeleteObjectsCommand = exports.de_DeleteObjectCommand = exports.de_DeleteBucketWebsiteCommand = exports.de_DeleteBucketTaggingCommand = exports.de_DeleteBucketReplicationCommand = exports.de_DeleteBucketPolicyCommand = exports.de_DeleteBucketOwnershipControlsCommand = exports.de_DeleteBucketMetricsConfigurationCommand = exports.de_DeleteBucketLifecycleCommand = exports.de_DeleteBucketInventoryConfigurationCommand = exports.de_DeleteBucketIntelligentTieringConfigurationCommand = exports.de_DeleteBucketEncryptionCommand = exports.de_DeleteBucketCorsCommand = void 0;\nexports.de_WriteGetObjectResponseCommand = exports.de_UploadPartCopyCommand = exports.de_UploadPartCommand = exports.de_SelectObjectContentCommand = exports.de_RestoreObjectCommand = exports.de_PutPublicAccessBlockCommand = exports.de_PutObjectTaggingCommand = exports.de_PutObjectRetentionCommand = exports.de_PutObjectLockConfigurationCommand = exports.de_PutObjectLegalHoldCommand = exports.de_PutObjectAclCommand = exports.de_PutObjectCommand = exports.de_PutBucketWebsiteCommand = exports.de_PutBucketVersioningCommand = exports.de_PutBucketTaggingCommand = exports.de_PutBucketRequestPaymentCommand = exports.de_PutBucketReplicationCommand = exports.de_PutBucketPolicyCommand = exports.de_PutBucketOwnershipControlsCommand = exports.de_PutBucketNotificationConfigurationCommand = exports.de_PutBucketMetricsConfigurationCommand = exports.de_PutBucketLoggingCommand = exports.de_PutBucketLifecycleConfigurationCommand = exports.de_PutBucketInventoryConfigurationCommand = exports.de_PutBucketIntelligentTieringConfigurationCommand = exports.de_PutBucketEncryptionCommand = exports.de_PutBucketCorsCommand = exports.de_PutBucketAnalyticsConfigurationCommand = exports.de_PutBucketAclCommand = exports.de_PutBucketAccelerateConfigurationCommand = exports.de_ListPartsCommand = exports.de_ListObjectVersionsCommand = exports.de_ListObjectsV2Command = exports.de_ListObjectsCommand = exports.de_ListMultipartUploadsCommand = exports.de_ListBucketsCommand = void 0;\nconst xml_builder_1 = require(\"@aws-sdk/xml-builder\");\nconst protocol_http_1 = require(\"@smithy/protocol-http\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst fast_xml_parser_1 = require(\"fast-xml-parser\");\nconst models_0_1 = require(\"../models/models_0\");\nconst models_1_1 = require(\"../models/models_1\");\nconst S3ServiceException_1 = require(\"../models/S3ServiceException\");\nconst se_AbortMultipartUploadCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = (0, smithy_client_1.map)({\n        \"x-id\": [, \"AbortMultipartUpload\"],\n        uploadId: [, (0, smithy_client_1.expectNonNull)(input.UploadId, `UploadId`)],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_AbortMultipartUploadCommand = se_AbortMultipartUploadCommand;\nconst se_CompleteMultipartUploadCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-checksum-crc32\": input.ChecksumCRC32,\n        \"x-amz-checksum-crc32c\": input.ChecksumCRC32C,\n        \"x-amz-checksum-sha1\": input.ChecksumSHA1,\n        \"x-amz-checksum-sha256\": input.ChecksumSHA256,\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n        \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n        \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = (0, smithy_client_1.map)({\n        \"x-id\": [, \"CompleteMultipartUpload\"],\n        uploadId: [, (0, smithy_client_1.expectNonNull)(input.UploadId, `UploadId`)],\n    });\n    let body;\n    if (input.MultipartUpload !== undefined) {\n        body = se_CompletedMultipartUpload(input.MultipartUpload, context);\n    }\n    let contents;\n    if (input.MultipartUpload !== undefined) {\n        contents = se_CompletedMultipartUpload(input.MultipartUpload, context);\n        contents = contents.withName(\"CompleteMultipartUpload\");\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_CompleteMultipartUploadCommand = se_CompleteMultipartUploadCommand;\nconst se_CopyObjectCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-acl\": input.ACL,\n        \"cache-control\": input.CacheControl,\n        \"x-amz-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"content-disposition\": input.ContentDisposition,\n        \"content-encoding\": input.ContentEncoding,\n        \"content-language\": input.ContentLanguage,\n        \"content-type\": input.ContentType,\n        \"x-amz-copy-source\": input.CopySource,\n        \"x-amz-copy-source-if-match\": input.CopySourceIfMatch,\n        \"x-amz-copy-source-if-modified-since\": [\n            () => isSerializableHeaderValue(input.CopySourceIfModifiedSince),\n            () => (0, smithy_client_1.dateToUtcString)(input.CopySourceIfModifiedSince).toString(),\n        ],\n        \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch,\n        \"x-amz-copy-source-if-unmodified-since\": [\n            () => isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince),\n            () => (0, smithy_client_1.dateToUtcString)(input.CopySourceIfUnmodifiedSince).toString(),\n        ],\n        expires: [() => isSerializableHeaderValue(input.Expires), () => (0, smithy_client_1.dateToUtcString)(input.Expires).toString()],\n        \"x-amz-grant-full-control\": input.GrantFullControl,\n        \"x-amz-grant-read\": input.GrantRead,\n        \"x-amz-grant-read-acp\": input.GrantReadACP,\n        \"x-amz-grant-write-acp\": input.GrantWriteACP,\n        \"x-amz-metadata-directive\": input.MetadataDirective,\n        \"x-amz-tagging-directive\": input.TaggingDirective,\n        \"x-amz-server-side-encryption\": input.ServerSideEncryption,\n        \"x-amz-storage-class\": input.StorageClass,\n        \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation,\n        \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n        \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n        \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n        \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId,\n        \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext,\n        \"x-amz-server-side-encryption-bucket-key-enabled\": [\n            () => isSerializableHeaderValue(input.BucketKeyEnabled),\n            () => input.BucketKeyEnabled.toString(),\n        ],\n        \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm,\n        \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey,\n        \"x-amz-copy-source-server-side-encryption-customer-key-md5\": input.CopySourceSSECustomerKeyMD5,\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-tagging\": input.Tagging,\n        \"x-amz-object-lock-mode\": input.ObjectLockMode,\n        \"x-amz-object-lock-retain-until-date\": [\n            () => isSerializableHeaderValue(input.ObjectLockRetainUntilDate),\n            () => (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString(),\n        ],\n        \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-source-expected-bucket-owner\": input.ExpectedSourceBucketOwner,\n        ...(input.Metadata !== undefined &&\n            Object.keys(input.Metadata).reduce((acc, suffix) => {\n                acc[`x-amz-meta-${suffix.toLowerCase()}`] = input.Metadata[suffix];\n                return acc;\n            }, {})),\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = (0, smithy_client_1.map)({\n        \"x-id\": [, \"CopyObject\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_CopyObjectCommand = se_CopyObjectCommand;\nconst se_CreateBucketCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-acl\": input.ACL,\n        \"x-amz-grant-full-control\": input.GrantFullControl,\n        \"x-amz-grant-read\": input.GrantRead,\n        \"x-amz-grant-read-acp\": input.GrantReadACP,\n        \"x-amz-grant-write\": input.GrantWrite,\n        \"x-amz-grant-write-acp\": input.GrantWriteACP,\n        \"x-amz-bucket-object-lock-enabled\": [\n            () => isSerializableHeaderValue(input.ObjectLockEnabledForBucket),\n            () => input.ObjectLockEnabledForBucket.toString(),\n        ],\n        \"x-amz-object-ownership\": input.ObjectOwnership,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    let body;\n    if (input.CreateBucketConfiguration !== undefined) {\n        body = se_CreateBucketConfiguration(input.CreateBucketConfiguration, context);\n    }\n    let contents;\n    if (input.CreateBucketConfiguration !== undefined) {\n        contents = se_CreateBucketConfiguration(input.CreateBucketConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_CreateBucketCommand = se_CreateBucketCommand;\nconst se_CreateMultipartUploadCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-acl\": input.ACL,\n        \"cache-control\": input.CacheControl,\n        \"content-disposition\": input.ContentDisposition,\n        \"content-encoding\": input.ContentEncoding,\n        \"content-language\": input.ContentLanguage,\n        \"content-type\": input.ContentType,\n        expires: [() => isSerializableHeaderValue(input.Expires), () => (0, smithy_client_1.dateToUtcString)(input.Expires).toString()],\n        \"x-amz-grant-full-control\": input.GrantFullControl,\n        \"x-amz-grant-read\": input.GrantRead,\n        \"x-amz-grant-read-acp\": input.GrantReadACP,\n        \"x-amz-grant-write-acp\": input.GrantWriteACP,\n        \"x-amz-server-side-encryption\": input.ServerSideEncryption,\n        \"x-amz-storage-class\": input.StorageClass,\n        \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation,\n        \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n        \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n        \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n        \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId,\n        \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext,\n        \"x-amz-server-side-encryption-bucket-key-enabled\": [\n            () => isSerializableHeaderValue(input.BucketKeyEnabled),\n            () => input.BucketKeyEnabled.toString(),\n        ],\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-tagging\": input.Tagging,\n        \"x-amz-object-lock-mode\": input.ObjectLockMode,\n        \"x-amz-object-lock-retain-until-date\": [\n            () => isSerializableHeaderValue(input.ObjectLockRetainUntilDate),\n            () => (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString(),\n        ],\n        \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-checksum-algorithm\": input.ChecksumAlgorithm,\n        ...(input.Metadata !== undefined &&\n            Object.keys(input.Metadata).reduce((acc, suffix) => {\n                acc[`x-amz-meta-${suffix.toLowerCase()}`] = input.Metadata[suffix];\n                return acc;\n            }, {})),\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = (0, smithy_client_1.map)({\n        uploads: [, \"\"],\n        \"x-id\": [, \"CreateMultipartUpload\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_CreateMultipartUploadCommand = se_CreateMultipartUploadCommand;\nconst se_DeleteBucketCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_DeleteBucketCommand = se_DeleteBucketCommand;\nconst se_DeleteBucketAnalyticsConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        analytics: [, \"\"],\n        id: [, (0, smithy_client_1.expectNonNull)(input.Id, `Id`)],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_DeleteBucketAnalyticsConfigurationCommand = se_DeleteBucketAnalyticsConfigurationCommand;\nconst se_DeleteBucketCorsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        cors: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_DeleteBucketCorsCommand = se_DeleteBucketCorsCommand;\nconst se_DeleteBucketEncryptionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        encryption: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_DeleteBucketEncryptionCommand = se_DeleteBucketEncryptionCommand;\nconst se_DeleteBucketIntelligentTieringConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        \"intelligent-tiering\": [, \"\"],\n        id: [, (0, smithy_client_1.expectNonNull)(input.Id, `Id`)],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_DeleteBucketIntelligentTieringConfigurationCommand = se_DeleteBucketIntelligentTieringConfigurationCommand;\nconst se_DeleteBucketInventoryConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        inventory: [, \"\"],\n        id: [, (0, smithy_client_1.expectNonNull)(input.Id, `Id`)],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_DeleteBucketInventoryConfigurationCommand = se_DeleteBucketInventoryConfigurationCommand;\nconst se_DeleteBucketLifecycleCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        lifecycle: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_DeleteBucketLifecycleCommand = se_DeleteBucketLifecycleCommand;\nconst se_DeleteBucketMetricsConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        metrics: [, \"\"],\n        id: [, (0, smithy_client_1.expectNonNull)(input.Id, `Id`)],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_DeleteBucketMetricsConfigurationCommand = se_DeleteBucketMetricsConfigurationCommand;\nconst se_DeleteBucketOwnershipControlsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        ownershipControls: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_DeleteBucketOwnershipControlsCommand = se_DeleteBucketOwnershipControlsCommand;\nconst se_DeleteBucketPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        policy: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_DeleteBucketPolicyCommand = se_DeleteBucketPolicyCommand;\nconst se_DeleteBucketReplicationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        replication: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_DeleteBucketReplicationCommand = se_DeleteBucketReplicationCommand;\nconst se_DeleteBucketTaggingCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        tagging: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_DeleteBucketTaggingCommand = se_DeleteBucketTaggingCommand;\nconst se_DeleteBucketWebsiteCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        website: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_DeleteBucketWebsiteCommand = se_DeleteBucketWebsiteCommand;\nconst se_DeleteObjectCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-mfa\": input.MFA,\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-bypass-governance-retention\": [\n            () => isSerializableHeaderValue(input.BypassGovernanceRetention),\n            () => input.BypassGovernanceRetention.toString(),\n        ],\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = (0, smithy_client_1.map)({\n        \"x-id\": [, \"DeleteObject\"],\n        versionId: [, input.VersionId],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_DeleteObjectCommand = se_DeleteObjectCommand;\nconst se_DeleteObjectsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-mfa\": input.MFA,\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-bypass-governance-retention\": [\n            () => isSerializableHeaderValue(input.BypassGovernanceRetention),\n            () => input.BypassGovernanceRetention.toString(),\n        ],\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        delete: [, \"\"],\n        \"x-id\": [, \"DeleteObjects\"],\n    });\n    let body;\n    if (input.Delete !== undefined) {\n        body = se_Delete(input.Delete, context);\n    }\n    let contents;\n    if (input.Delete !== undefined) {\n        contents = se_Delete(input.Delete, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_DeleteObjectsCommand = se_DeleteObjectsCommand;\nconst se_DeleteObjectTaggingCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = (0, smithy_client_1.map)({\n        tagging: [, \"\"],\n        versionId: [, input.VersionId],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_DeleteObjectTaggingCommand = se_DeleteObjectTaggingCommand;\nconst se_DeletePublicAccessBlockCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        publicAccessBlock: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_DeletePublicAccessBlockCommand = se_DeletePublicAccessBlockCommand;\nconst se_GetBucketAccelerateConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-request-payer\": input.RequestPayer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        accelerate: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetBucketAccelerateConfigurationCommand = se_GetBucketAccelerateConfigurationCommand;\nconst se_GetBucketAclCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        acl: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetBucketAclCommand = se_GetBucketAclCommand;\nconst se_GetBucketAnalyticsConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        analytics: [, \"\"],\n        \"x-id\": [, \"GetBucketAnalyticsConfiguration\"],\n        id: [, (0, smithy_client_1.expectNonNull)(input.Id, `Id`)],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetBucketAnalyticsConfigurationCommand = se_GetBucketAnalyticsConfigurationCommand;\nconst se_GetBucketCorsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        cors: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetBucketCorsCommand = se_GetBucketCorsCommand;\nconst se_GetBucketEncryptionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        encryption: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetBucketEncryptionCommand = se_GetBucketEncryptionCommand;\nconst se_GetBucketIntelligentTieringConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        \"intelligent-tiering\": [, \"\"],\n        \"x-id\": [, \"GetBucketIntelligentTieringConfiguration\"],\n        id: [, (0, smithy_client_1.expectNonNull)(input.Id, `Id`)],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetBucketIntelligentTieringConfigurationCommand = se_GetBucketIntelligentTieringConfigurationCommand;\nconst se_GetBucketInventoryConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        inventory: [, \"\"],\n        \"x-id\": [, \"GetBucketInventoryConfiguration\"],\n        id: [, (0, smithy_client_1.expectNonNull)(input.Id, `Id`)],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetBucketInventoryConfigurationCommand = se_GetBucketInventoryConfigurationCommand;\nconst se_GetBucketLifecycleConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        lifecycle: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetBucketLifecycleConfigurationCommand = se_GetBucketLifecycleConfigurationCommand;\nconst se_GetBucketLocationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        location: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetBucketLocationCommand = se_GetBucketLocationCommand;\nconst se_GetBucketLoggingCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        logging: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetBucketLoggingCommand = se_GetBucketLoggingCommand;\nconst se_GetBucketMetricsConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        metrics: [, \"\"],\n        \"x-id\": [, \"GetBucketMetricsConfiguration\"],\n        id: [, (0, smithy_client_1.expectNonNull)(input.Id, `Id`)],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetBucketMetricsConfigurationCommand = se_GetBucketMetricsConfigurationCommand;\nconst se_GetBucketNotificationConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        notification: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetBucketNotificationConfigurationCommand = se_GetBucketNotificationConfigurationCommand;\nconst se_GetBucketOwnershipControlsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        ownershipControls: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetBucketOwnershipControlsCommand = se_GetBucketOwnershipControlsCommand;\nconst se_GetBucketPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        policy: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetBucketPolicyCommand = se_GetBucketPolicyCommand;\nconst se_GetBucketPolicyStatusCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        policyStatus: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetBucketPolicyStatusCommand = se_GetBucketPolicyStatusCommand;\nconst se_GetBucketReplicationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        replication: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetBucketReplicationCommand = se_GetBucketReplicationCommand;\nconst se_GetBucketRequestPaymentCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        requestPayment: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetBucketRequestPaymentCommand = se_GetBucketRequestPaymentCommand;\nconst se_GetBucketTaggingCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        tagging: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetBucketTaggingCommand = se_GetBucketTaggingCommand;\nconst se_GetBucketVersioningCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        versioning: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetBucketVersioningCommand = se_GetBucketVersioningCommand;\nconst se_GetBucketWebsiteCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        website: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetBucketWebsiteCommand = se_GetBucketWebsiteCommand;\nconst se_GetObjectCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n        \"if-modified-since\": [\n            () => isSerializableHeaderValue(input.IfModifiedSince),\n            () => (0, smithy_client_1.dateToUtcString)(input.IfModifiedSince).toString(),\n        ],\n        \"if-none-match\": input.IfNoneMatch,\n        \"if-unmodified-since\": [\n            () => isSerializableHeaderValue(input.IfUnmodifiedSince),\n            () => (0, smithy_client_1.dateToUtcString)(input.IfUnmodifiedSince).toString(),\n        ],\n        range: input.Range,\n        \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n        \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n        \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-checksum-mode\": input.ChecksumMode,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = (0, smithy_client_1.map)({\n        \"x-id\": [, \"GetObject\"],\n        \"response-cache-control\": [, input.ResponseCacheControl],\n        \"response-content-disposition\": [, input.ResponseContentDisposition],\n        \"response-content-encoding\": [, input.ResponseContentEncoding],\n        \"response-content-language\": [, input.ResponseContentLanguage],\n        \"response-content-type\": [, input.ResponseContentType],\n        \"response-expires\": [\n            () => input.ResponseExpires !== void 0,\n            () => (0, smithy_client_1.dateToUtcString)(input.ResponseExpires).toString(),\n        ],\n        versionId: [, input.VersionId],\n        partNumber: [() => input.PartNumber !== void 0, () => input.PartNumber.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetObjectCommand = se_GetObjectCommand;\nconst se_GetObjectAclCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = (0, smithy_client_1.map)({\n        acl: [, \"\"],\n        versionId: [, input.VersionId],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetObjectAclCommand = se_GetObjectAclCommand;\nconst se_GetObjectAttributesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-max-parts\": [() => isSerializableHeaderValue(input.MaxParts), () => input.MaxParts.toString()],\n        \"x-amz-part-number-marker\": input.PartNumberMarker,\n        \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n        \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n        \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-object-attributes\": [\n            () => isSerializableHeaderValue(input.ObjectAttributes),\n            () => (input.ObjectAttributes || []).map((_entry) => _entry).join(\", \"),\n        ],\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = (0, smithy_client_1.map)({\n        attributes: [, \"\"],\n        versionId: [, input.VersionId],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetObjectAttributesCommand = se_GetObjectAttributesCommand;\nconst se_GetObjectLegalHoldCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = (0, smithy_client_1.map)({\n        \"legal-hold\": [, \"\"],\n        versionId: [, input.VersionId],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetObjectLegalHoldCommand = se_GetObjectLegalHoldCommand;\nconst se_GetObjectLockConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        \"object-lock\": [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetObjectLockConfigurationCommand = se_GetObjectLockConfigurationCommand;\nconst se_GetObjectRetentionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = (0, smithy_client_1.map)({\n        retention: [, \"\"],\n        versionId: [, input.VersionId],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetObjectRetentionCommand = se_GetObjectRetentionCommand;\nconst se_GetObjectTaggingCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-request-payer\": input.RequestPayer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = (0, smithy_client_1.map)({\n        tagging: [, \"\"],\n        versionId: [, input.VersionId],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetObjectTaggingCommand = se_GetObjectTaggingCommand;\nconst se_GetObjectTorrentCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = (0, smithy_client_1.map)({\n        torrent: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetObjectTorrentCommand = se_GetObjectTorrentCommand;\nconst se_GetPublicAccessBlockCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        publicAccessBlock: [, \"\"],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetPublicAccessBlockCommand = se_GetPublicAccessBlockCommand;\nconst se_HeadBucketCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"HEAD\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_HeadBucketCommand = se_HeadBucketCommand;\nconst se_HeadObjectCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n        \"if-modified-since\": [\n            () => isSerializableHeaderValue(input.IfModifiedSince),\n            () => (0, smithy_client_1.dateToUtcString)(input.IfModifiedSince).toString(),\n        ],\n        \"if-none-match\": input.IfNoneMatch,\n        \"if-unmodified-since\": [\n            () => isSerializableHeaderValue(input.IfUnmodifiedSince),\n            () => (0, smithy_client_1.dateToUtcString)(input.IfUnmodifiedSince).toString(),\n        ],\n        range: input.Range,\n        \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n        \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n        \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-checksum-mode\": input.ChecksumMode,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = (0, smithy_client_1.map)({\n        versionId: [, input.VersionId],\n        partNumber: [() => input.PartNumber !== void 0, () => input.PartNumber.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"HEAD\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_HeadObjectCommand = se_HeadObjectCommand;\nconst se_ListBucketAnalyticsConfigurationsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        analytics: [, \"\"],\n        \"x-id\": [, \"ListBucketAnalyticsConfigurations\"],\n        \"continuation-token\": [, input.ContinuationToken],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListBucketAnalyticsConfigurationsCommand = se_ListBucketAnalyticsConfigurationsCommand;\nconst se_ListBucketIntelligentTieringConfigurationsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        \"intelligent-tiering\": [, \"\"],\n        \"x-id\": [, \"ListBucketIntelligentTieringConfigurations\"],\n        \"continuation-token\": [, input.ContinuationToken],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListBucketIntelligentTieringConfigurationsCommand = se_ListBucketIntelligentTieringConfigurationsCommand;\nconst se_ListBucketInventoryConfigurationsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        inventory: [, \"\"],\n        \"x-id\": [, \"ListBucketInventoryConfigurations\"],\n        \"continuation-token\": [, input.ContinuationToken],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListBucketInventoryConfigurationsCommand = se_ListBucketInventoryConfigurationsCommand;\nconst se_ListBucketMetricsConfigurationsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        metrics: [, \"\"],\n        \"x-id\": [, \"ListBucketMetricsConfigurations\"],\n        \"continuation-token\": [, input.ContinuationToken],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListBucketMetricsConfigurationsCommand = se_ListBucketMetricsConfigurationsCommand;\nconst se_ListBucketsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    let body;\n    body = \"\";\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_ListBucketsCommand = se_ListBucketsCommand;\nconst se_ListMultipartUploadsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-request-payer\": input.RequestPayer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        uploads: [, \"\"],\n        delimiter: [, input.Delimiter],\n        \"encoding-type\": [, input.EncodingType],\n        \"key-marker\": [, input.KeyMarker],\n        \"max-uploads\": [() => input.MaxUploads !== void 0, () => input.MaxUploads.toString()],\n        prefix: [, input.Prefix],\n        \"upload-id-marker\": [, input.UploadIdMarker],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListMultipartUploadsCommand = se_ListMultipartUploadsCommand;\nconst se_ListObjectsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-optional-object-attributes\": [\n            () => isSerializableHeaderValue(input.OptionalObjectAttributes),\n            () => (input.OptionalObjectAttributes || []).map((_entry) => _entry).join(\", \"),\n        ],\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        delimiter: [, input.Delimiter],\n        \"encoding-type\": [, input.EncodingType],\n        marker: [, input.Marker],\n        \"max-keys\": [() => input.MaxKeys !== void 0, () => input.MaxKeys.toString()],\n        prefix: [, input.Prefix],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListObjectsCommand = se_ListObjectsCommand;\nconst se_ListObjectsV2Command = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-optional-object-attributes\": [\n            () => isSerializableHeaderValue(input.OptionalObjectAttributes),\n            () => (input.OptionalObjectAttributes || []).map((_entry) => _entry).join(\", \"),\n        ],\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        \"list-type\": [, \"2\"],\n        delimiter: [, input.Delimiter],\n        \"encoding-type\": [, input.EncodingType],\n        \"max-keys\": [() => input.MaxKeys !== void 0, () => input.MaxKeys.toString()],\n        prefix: [, input.Prefix],\n        \"continuation-token\": [, input.ContinuationToken],\n        \"fetch-owner\": [() => input.FetchOwner !== void 0, () => input.FetchOwner.toString()],\n        \"start-after\": [, input.StartAfter],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListObjectsV2Command = se_ListObjectsV2Command;\nconst se_ListObjectVersionsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-optional-object-attributes\": [\n            () => isSerializableHeaderValue(input.OptionalObjectAttributes),\n            () => (input.OptionalObjectAttributes || []).map((_entry) => _entry).join(\", \"),\n        ],\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        versions: [, \"\"],\n        delimiter: [, input.Delimiter],\n        \"encoding-type\": [, input.EncodingType],\n        \"key-marker\": [, input.KeyMarker],\n        \"max-keys\": [() => input.MaxKeys !== void 0, () => input.MaxKeys.toString()],\n        prefix: [, input.Prefix],\n        \"version-id-marker\": [, input.VersionIdMarker],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListObjectVersionsCommand = se_ListObjectVersionsCommand;\nconst se_ListPartsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n        \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n        \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = (0, smithy_client_1.map)({\n        \"x-id\": [, \"ListParts\"],\n        \"max-parts\": [() => input.MaxParts !== void 0, () => input.MaxParts.toString()],\n        \"part-number-marker\": [, input.PartNumberMarker],\n        uploadId: [, (0, smithy_client_1.expectNonNull)(input.UploadId, `UploadId`)],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListPartsCommand = se_ListPartsCommand;\nconst se_PutBucketAccelerateConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        accelerate: [, \"\"],\n    });\n    let body;\n    if (input.AccelerateConfiguration !== undefined) {\n        body = se_AccelerateConfiguration(input.AccelerateConfiguration, context);\n    }\n    let contents;\n    if (input.AccelerateConfiguration !== undefined) {\n        contents = se_AccelerateConfiguration(input.AccelerateConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_PutBucketAccelerateConfigurationCommand = se_PutBucketAccelerateConfigurationCommand;\nconst se_PutBucketAclCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-acl\": input.ACL,\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-grant-full-control\": input.GrantFullControl,\n        \"x-amz-grant-read\": input.GrantRead,\n        \"x-amz-grant-read-acp\": input.GrantReadACP,\n        \"x-amz-grant-write\": input.GrantWrite,\n        \"x-amz-grant-write-acp\": input.GrantWriteACP,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        acl: [, \"\"],\n    });\n    let body;\n    if (input.AccessControlPolicy !== undefined) {\n        body = se_AccessControlPolicy(input.AccessControlPolicy, context);\n    }\n    let contents;\n    if (input.AccessControlPolicy !== undefined) {\n        contents = se_AccessControlPolicy(input.AccessControlPolicy, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_PutBucketAclCommand = se_PutBucketAclCommand;\nconst se_PutBucketAnalyticsConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        analytics: [, \"\"],\n        id: [, (0, smithy_client_1.expectNonNull)(input.Id, `Id`)],\n    });\n    let body;\n    if (input.AnalyticsConfiguration !== undefined) {\n        body = se_AnalyticsConfiguration(input.AnalyticsConfiguration, context);\n    }\n    let contents;\n    if (input.AnalyticsConfiguration !== undefined) {\n        contents = se_AnalyticsConfiguration(input.AnalyticsConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_PutBucketAnalyticsConfigurationCommand = se_PutBucketAnalyticsConfigurationCommand;\nconst se_PutBucketCorsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        cors: [, \"\"],\n    });\n    let body;\n    if (input.CORSConfiguration !== undefined) {\n        body = se_CORSConfiguration(input.CORSConfiguration, context);\n    }\n    let contents;\n    if (input.CORSConfiguration !== undefined) {\n        contents = se_CORSConfiguration(input.CORSConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_PutBucketCorsCommand = se_PutBucketCorsCommand;\nconst se_PutBucketEncryptionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        encryption: [, \"\"],\n    });\n    let body;\n    if (input.ServerSideEncryptionConfiguration !== undefined) {\n        body = se_ServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);\n    }\n    let contents;\n    if (input.ServerSideEncryptionConfiguration !== undefined) {\n        contents = se_ServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_PutBucketEncryptionCommand = se_PutBucketEncryptionCommand;\nconst se_PutBucketIntelligentTieringConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        \"intelligent-tiering\": [, \"\"],\n        id: [, (0, smithy_client_1.expectNonNull)(input.Id, `Id`)],\n    });\n    let body;\n    if (input.IntelligentTieringConfiguration !== undefined) {\n        body = se_IntelligentTieringConfiguration(input.IntelligentTieringConfiguration, context);\n    }\n    let contents;\n    if (input.IntelligentTieringConfiguration !== undefined) {\n        contents = se_IntelligentTieringConfiguration(input.IntelligentTieringConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_PutBucketIntelligentTieringConfigurationCommand = se_PutBucketIntelligentTieringConfigurationCommand;\nconst se_PutBucketInventoryConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        inventory: [, \"\"],\n        id: [, (0, smithy_client_1.expectNonNull)(input.Id, `Id`)],\n    });\n    let body;\n    if (input.InventoryConfiguration !== undefined) {\n        body = se_InventoryConfiguration(input.InventoryConfiguration, context);\n    }\n    let contents;\n    if (input.InventoryConfiguration !== undefined) {\n        contents = se_InventoryConfiguration(input.InventoryConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_PutBucketInventoryConfigurationCommand = se_PutBucketInventoryConfigurationCommand;\nconst se_PutBucketLifecycleConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        lifecycle: [, \"\"],\n    });\n    let body;\n    if (input.LifecycleConfiguration !== undefined) {\n        body = se_BucketLifecycleConfiguration(input.LifecycleConfiguration, context);\n    }\n    let contents;\n    if (input.LifecycleConfiguration !== undefined) {\n        contents = se_BucketLifecycleConfiguration(input.LifecycleConfiguration, context);\n        contents = contents.withName(\"LifecycleConfiguration\");\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_PutBucketLifecycleConfigurationCommand = se_PutBucketLifecycleConfigurationCommand;\nconst se_PutBucketLoggingCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        logging: [, \"\"],\n    });\n    let body;\n    if (input.BucketLoggingStatus !== undefined) {\n        body = se_BucketLoggingStatus(input.BucketLoggingStatus, context);\n    }\n    let contents;\n    if (input.BucketLoggingStatus !== undefined) {\n        contents = se_BucketLoggingStatus(input.BucketLoggingStatus, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_PutBucketLoggingCommand = se_PutBucketLoggingCommand;\nconst se_PutBucketMetricsConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        metrics: [, \"\"],\n        id: [, (0, smithy_client_1.expectNonNull)(input.Id, `Id`)],\n    });\n    let body;\n    if (input.MetricsConfiguration !== undefined) {\n        body = se_MetricsConfiguration(input.MetricsConfiguration, context);\n    }\n    let contents;\n    if (input.MetricsConfiguration !== undefined) {\n        contents = se_MetricsConfiguration(input.MetricsConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_PutBucketMetricsConfigurationCommand = se_PutBucketMetricsConfigurationCommand;\nconst se_PutBucketNotificationConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-skip-destination-validation\": [\n            () => isSerializableHeaderValue(input.SkipDestinationValidation),\n            () => input.SkipDestinationValidation.toString(),\n        ],\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        notification: [, \"\"],\n    });\n    let body;\n    if (input.NotificationConfiguration !== undefined) {\n        body = se_NotificationConfiguration(input.NotificationConfiguration, context);\n    }\n    let contents;\n    if (input.NotificationConfiguration !== undefined) {\n        contents = se_NotificationConfiguration(input.NotificationConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_PutBucketNotificationConfigurationCommand = se_PutBucketNotificationConfigurationCommand;\nconst se_PutBucketOwnershipControlsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        ownershipControls: [, \"\"],\n    });\n    let body;\n    if (input.OwnershipControls !== undefined) {\n        body = se_OwnershipControls(input.OwnershipControls, context);\n    }\n    let contents;\n    if (input.OwnershipControls !== undefined) {\n        contents = se_OwnershipControls(input.OwnershipControls, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_PutBucketOwnershipControlsCommand = se_PutBucketOwnershipControlsCommand;\nconst se_PutBucketPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"text/plain\",\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-confirm-remove-self-bucket-access\": [\n            () => isSerializableHeaderValue(input.ConfirmRemoveSelfBucketAccess),\n            () => input.ConfirmRemoveSelfBucketAccess.toString(),\n        ],\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        policy: [, \"\"],\n    });\n    let body;\n    if (input.Policy !== undefined) {\n        body = input.Policy;\n    }\n    let contents;\n    if (input.Policy !== undefined) {\n        contents = input.Policy;\n        body = contents;\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_PutBucketPolicyCommand = se_PutBucketPolicyCommand;\nconst se_PutBucketReplicationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-bucket-object-lock-token\": input.Token,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        replication: [, \"\"],\n    });\n    let body;\n    if (input.ReplicationConfiguration !== undefined) {\n        body = se_ReplicationConfiguration(input.ReplicationConfiguration, context);\n    }\n    let contents;\n    if (input.ReplicationConfiguration !== undefined) {\n        contents = se_ReplicationConfiguration(input.ReplicationConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_PutBucketReplicationCommand = se_PutBucketReplicationCommand;\nconst se_PutBucketRequestPaymentCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        requestPayment: [, \"\"],\n    });\n    let body;\n    if (input.RequestPaymentConfiguration !== undefined) {\n        body = se_RequestPaymentConfiguration(input.RequestPaymentConfiguration, context);\n    }\n    let contents;\n    if (input.RequestPaymentConfiguration !== undefined) {\n        contents = se_RequestPaymentConfiguration(input.RequestPaymentConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_PutBucketRequestPaymentCommand = se_PutBucketRequestPaymentCommand;\nconst se_PutBucketTaggingCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        tagging: [, \"\"],\n    });\n    let body;\n    if (input.Tagging !== undefined) {\n        body = se_Tagging(input.Tagging, context);\n    }\n    let contents;\n    if (input.Tagging !== undefined) {\n        contents = se_Tagging(input.Tagging, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_PutBucketTaggingCommand = se_PutBucketTaggingCommand;\nconst se_PutBucketVersioningCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-mfa\": input.MFA,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        versioning: [, \"\"],\n    });\n    let body;\n    if (input.VersioningConfiguration !== undefined) {\n        body = se_VersioningConfiguration(input.VersioningConfiguration, context);\n    }\n    let contents;\n    if (input.VersioningConfiguration !== undefined) {\n        contents = se_VersioningConfiguration(input.VersioningConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_PutBucketVersioningCommand = se_PutBucketVersioningCommand;\nconst se_PutBucketWebsiteCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        website: [, \"\"],\n    });\n    let body;\n    if (input.WebsiteConfiguration !== undefined) {\n        body = se_WebsiteConfiguration(input.WebsiteConfiguration, context);\n    }\n    let contents;\n    if (input.WebsiteConfiguration !== undefined) {\n        contents = se_WebsiteConfiguration(input.WebsiteConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_PutBucketWebsiteCommand = se_PutBucketWebsiteCommand;\nconst se_PutObjectCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": input.ContentType || \"application/octet-stream\",\n        \"x-amz-acl\": input.ACL,\n        \"cache-control\": input.CacheControl,\n        \"content-disposition\": input.ContentDisposition,\n        \"content-encoding\": input.ContentEncoding,\n        \"content-language\": input.ContentLanguage,\n        \"content-length\": [() => isSerializableHeaderValue(input.ContentLength), () => input.ContentLength.toString()],\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-checksum-crc32\": input.ChecksumCRC32,\n        \"x-amz-checksum-crc32c\": input.ChecksumCRC32C,\n        \"x-amz-checksum-sha1\": input.ChecksumSHA1,\n        \"x-amz-checksum-sha256\": input.ChecksumSHA256,\n        expires: [() => isSerializableHeaderValue(input.Expires), () => (0, smithy_client_1.dateToUtcString)(input.Expires).toString()],\n        \"x-amz-grant-full-control\": input.GrantFullControl,\n        \"x-amz-grant-read\": input.GrantRead,\n        \"x-amz-grant-read-acp\": input.GrantReadACP,\n        \"x-amz-grant-write-acp\": input.GrantWriteACP,\n        \"x-amz-server-side-encryption\": input.ServerSideEncryption,\n        \"x-amz-storage-class\": input.StorageClass,\n        \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation,\n        \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n        \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n        \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n        \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId,\n        \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext,\n        \"x-amz-server-side-encryption-bucket-key-enabled\": [\n            () => isSerializableHeaderValue(input.BucketKeyEnabled),\n            () => input.BucketKeyEnabled.toString(),\n        ],\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-tagging\": input.Tagging,\n        \"x-amz-object-lock-mode\": input.ObjectLockMode,\n        \"x-amz-object-lock-retain-until-date\": [\n            () => isSerializableHeaderValue(input.ObjectLockRetainUntilDate),\n            () => (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString(),\n        ],\n        \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        ...(input.Metadata !== undefined &&\n            Object.keys(input.Metadata).reduce((acc, suffix) => {\n                acc[`x-amz-meta-${suffix.toLowerCase()}`] = input.Metadata[suffix];\n                return acc;\n            }, {})),\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = (0, smithy_client_1.map)({\n        \"x-id\": [, \"PutObject\"],\n    });\n    let body;\n    if (input.Body !== undefined) {\n        body = input.Body;\n    }\n    let contents;\n    if (input.Body !== undefined) {\n        contents = input.Body;\n        body = contents;\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_PutObjectCommand = se_PutObjectCommand;\nconst se_PutObjectAclCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-acl\": input.ACL,\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-grant-full-control\": input.GrantFullControl,\n        \"x-amz-grant-read\": input.GrantRead,\n        \"x-amz-grant-read-acp\": input.GrantReadACP,\n        \"x-amz-grant-write\": input.GrantWrite,\n        \"x-amz-grant-write-acp\": input.GrantWriteACP,\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = (0, smithy_client_1.map)({\n        acl: [, \"\"],\n        versionId: [, input.VersionId],\n    });\n    let body;\n    if (input.AccessControlPolicy !== undefined) {\n        body = se_AccessControlPolicy(input.AccessControlPolicy, context);\n    }\n    let contents;\n    if (input.AccessControlPolicy !== undefined) {\n        contents = se_AccessControlPolicy(input.AccessControlPolicy, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_PutObjectAclCommand = se_PutObjectAclCommand;\nconst se_PutObjectLegalHoldCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = (0, smithy_client_1.map)({\n        \"legal-hold\": [, \"\"],\n        versionId: [, input.VersionId],\n    });\n    let body;\n    if (input.LegalHold !== undefined) {\n        body = se_ObjectLockLegalHold(input.LegalHold, context);\n    }\n    let contents;\n    if (input.LegalHold !== undefined) {\n        contents = se_ObjectLockLegalHold(input.LegalHold, context);\n        contents = contents.withName(\"LegalHold\");\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_PutObjectLegalHoldCommand = se_PutObjectLegalHoldCommand;\nconst se_PutObjectLockConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-bucket-object-lock-token\": input.Token,\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        \"object-lock\": [, \"\"],\n    });\n    let body;\n    if (input.ObjectLockConfiguration !== undefined) {\n        body = se_ObjectLockConfiguration(input.ObjectLockConfiguration, context);\n    }\n    let contents;\n    if (input.ObjectLockConfiguration !== undefined) {\n        contents = se_ObjectLockConfiguration(input.ObjectLockConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_PutObjectLockConfigurationCommand = se_PutObjectLockConfigurationCommand;\nconst se_PutObjectRetentionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-bypass-governance-retention\": [\n            () => isSerializableHeaderValue(input.BypassGovernanceRetention),\n            () => input.BypassGovernanceRetention.toString(),\n        ],\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = (0, smithy_client_1.map)({\n        retention: [, \"\"],\n        versionId: [, input.VersionId],\n    });\n    let body;\n    if (input.Retention !== undefined) {\n        body = se_ObjectLockRetention(input.Retention, context);\n    }\n    let contents;\n    if (input.Retention !== undefined) {\n        contents = se_ObjectLockRetention(input.Retention, context);\n        contents = contents.withName(\"Retention\");\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_PutObjectRetentionCommand = se_PutObjectRetentionCommand;\nconst se_PutObjectTaggingCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-request-payer\": input.RequestPayer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = (0, smithy_client_1.map)({\n        tagging: [, \"\"],\n        versionId: [, input.VersionId],\n    });\n    let body;\n    if (input.Tagging !== undefined) {\n        body = se_Tagging(input.Tagging, context);\n    }\n    let contents;\n    if (input.Tagging !== undefined) {\n        contents = se_Tagging(input.Tagging, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_PutObjectTaggingCommand = se_PutObjectTaggingCommand;\nconst se_PutPublicAccessBlockCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    const query = (0, smithy_client_1.map)({\n        publicAccessBlock: [, \"\"],\n    });\n    let body;\n    if (input.PublicAccessBlockConfiguration !== undefined) {\n        body = se_PublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);\n    }\n    let contents;\n    if (input.PublicAccessBlockConfiguration !== undefined) {\n        contents = se_PublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_PutPublicAccessBlockCommand = se_PutPublicAccessBlockCommand;\nconst se_RestoreObjectCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = (0, smithy_client_1.map)({\n        restore: [, \"\"],\n        \"x-id\": [, \"RestoreObject\"],\n        versionId: [, input.VersionId],\n    });\n    let body;\n    if (input.RestoreRequest !== undefined) {\n        body = se_RestoreRequest(input.RestoreRequest, context);\n    }\n    let contents;\n    if (input.RestoreRequest !== undefined) {\n        contents = se_RestoreRequest(input.RestoreRequest, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_RestoreObjectCommand = se_RestoreObjectCommand;\nconst se_SelectObjectContentCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n        \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n        \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = (0, smithy_client_1.map)({\n        select: [, \"\"],\n        \"select-type\": [, \"2\"],\n        \"x-id\": [, \"SelectObjectContent\"],\n    });\n    let body;\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    const bodyNode = new xml_builder_1.XmlNode(\"SelectObjectContentRequest\");\n    bodyNode.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n    if (input.Expression !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"Expression\", input.Expression).withName(\"Expression\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ExpressionType !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"ExpressionType\", input.ExpressionType).withName(\"ExpressionType\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.InputSerialization !== undefined) {\n        const node = se_InputSerialization(input.InputSerialization, context).withName(\"InputSerialization\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OutputSerialization !== undefined) {\n        const node = se_OutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RequestProgress !== undefined) {\n        const node = se_RequestProgress(input.RequestProgress, context).withName(\"RequestProgress\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ScanRange !== undefined) {\n        const node = se_ScanRange(input.ScanRange, context).withName(\"ScanRange\");\n        bodyNode.addChildNode(node);\n    }\n    body += bodyNode.toString();\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_SelectObjectContentCommand = se_SelectObjectContentCommand;\nconst se_UploadPartCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/octet-stream\",\n        \"content-length\": [() => isSerializableHeaderValue(input.ContentLength), () => input.ContentLength.toString()],\n        \"content-md5\": input.ContentMD5,\n        \"x-amz-sdk-checksum-algorithm\": input.ChecksumAlgorithm,\n        \"x-amz-checksum-crc32\": input.ChecksumCRC32,\n        \"x-amz-checksum-crc32c\": input.ChecksumCRC32C,\n        \"x-amz-checksum-sha1\": input.ChecksumSHA1,\n        \"x-amz-checksum-sha256\": input.ChecksumSHA256,\n        \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n        \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n        \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = (0, smithy_client_1.map)({\n        \"x-id\": [, \"UploadPart\"],\n        partNumber: [(0, smithy_client_1.expectNonNull)(input.PartNumber, `PartNumber`) != null, () => input.PartNumber.toString()],\n        uploadId: [, (0, smithy_client_1.expectNonNull)(input.UploadId, `UploadId`)],\n    });\n    let body;\n    if (input.Body !== undefined) {\n        body = input.Body;\n    }\n    let contents;\n    if (input.Body !== undefined) {\n        contents = input.Body;\n        body = contents;\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_UploadPartCommand = se_UploadPartCommand;\nconst se_UploadPartCopyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-copy-source\": input.CopySource,\n        \"x-amz-copy-source-if-match\": input.CopySourceIfMatch,\n        \"x-amz-copy-source-if-modified-since\": [\n            () => isSerializableHeaderValue(input.CopySourceIfModifiedSince),\n            () => (0, smithy_client_1.dateToUtcString)(input.CopySourceIfModifiedSince).toString(),\n        ],\n        \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch,\n        \"x-amz-copy-source-if-unmodified-since\": [\n            () => isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince),\n            () => (0, smithy_client_1.dateToUtcString)(input.CopySourceIfUnmodifiedSince).toString(),\n        ],\n        \"x-amz-copy-source-range\": input.CopySourceRange,\n        \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n        \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\n        \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n        \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm,\n        \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey,\n        \"x-amz-copy-source-server-side-encryption-customer-key-md5\": input.CopySourceSSECustomerKeyMD5,\n        \"x-amz-request-payer\": input.RequestPayer,\n        \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner,\n        \"x-amz-source-expected-bucket-owner\": input.ExpectedSourceBucketOwner,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/{Key+}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Bucket\", () => input.Bucket, \"{Bucket}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Key\", () => input.Key, \"{Key+}\", true);\n    const query = (0, smithy_client_1.map)({\n        \"x-id\": [, \"UploadPartCopy\"],\n        partNumber: [(0, smithy_client_1.expectNonNull)(input.PartNumber, `PartNumber`) != null, () => input.PartNumber.toString()],\n        uploadId: [, (0, smithy_client_1.expectNonNull)(input.UploadId, `UploadId`)],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_UploadPartCopyCommand = se_UploadPartCopyCommand;\nconst se_WriteGetObjectResponseCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-content-sha256\": \"UNSIGNED-PAYLOAD\",\n        \"content-type\": \"application/octet-stream\",\n        \"x-amz-request-route\": input.RequestRoute,\n        \"x-amz-request-token\": input.RequestToken,\n        \"x-amz-fwd-status\": [() => isSerializableHeaderValue(input.StatusCode), () => input.StatusCode.toString()],\n        \"x-amz-fwd-error-code\": input.ErrorCode,\n        \"x-amz-fwd-error-message\": input.ErrorMessage,\n        \"x-amz-fwd-header-accept-ranges\": input.AcceptRanges,\n        \"x-amz-fwd-header-cache-control\": input.CacheControl,\n        \"x-amz-fwd-header-content-disposition\": input.ContentDisposition,\n        \"x-amz-fwd-header-content-encoding\": input.ContentEncoding,\n        \"x-amz-fwd-header-content-language\": input.ContentLanguage,\n        \"content-length\": [() => isSerializableHeaderValue(input.ContentLength), () => input.ContentLength.toString()],\n        \"x-amz-fwd-header-content-range\": input.ContentRange,\n        \"x-amz-fwd-header-content-type\": input.ContentType,\n        \"x-amz-fwd-header-x-amz-checksum-crc32\": input.ChecksumCRC32,\n        \"x-amz-fwd-header-x-amz-checksum-crc32c\": input.ChecksumCRC32C,\n        \"x-amz-fwd-header-x-amz-checksum-sha1\": input.ChecksumSHA1,\n        \"x-amz-fwd-header-x-amz-checksum-sha256\": input.ChecksumSHA256,\n        \"x-amz-fwd-header-x-amz-delete-marker\": [\n            () => isSerializableHeaderValue(input.DeleteMarker),\n            () => input.DeleteMarker.toString(),\n        ],\n        \"x-amz-fwd-header-etag\": input.ETag,\n        \"x-amz-fwd-header-expires\": [\n            () => isSerializableHeaderValue(input.Expires),\n            () => (0, smithy_client_1.dateToUtcString)(input.Expires).toString(),\n        ],\n        \"x-amz-fwd-header-x-amz-expiration\": input.Expiration,\n        \"x-amz-fwd-header-last-modified\": [\n            () => isSerializableHeaderValue(input.LastModified),\n            () => (0, smithy_client_1.dateToUtcString)(input.LastModified).toString(),\n        ],\n        \"x-amz-fwd-header-x-amz-missing-meta\": [\n            () => isSerializableHeaderValue(input.MissingMeta),\n            () => input.MissingMeta.toString(),\n        ],\n        \"x-amz-fwd-header-x-amz-object-lock-mode\": input.ObjectLockMode,\n        \"x-amz-fwd-header-x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus,\n        \"x-amz-fwd-header-x-amz-object-lock-retain-until-date\": [\n            () => isSerializableHeaderValue(input.ObjectLockRetainUntilDate),\n            () => (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString(),\n        ],\n        \"x-amz-fwd-header-x-amz-mp-parts-count\": [\n            () => isSerializableHeaderValue(input.PartsCount),\n            () => input.PartsCount.toString(),\n        ],\n        \"x-amz-fwd-header-x-amz-replication-status\": input.ReplicationStatus,\n        \"x-amz-fwd-header-x-amz-request-charged\": input.RequestCharged,\n        \"x-amz-fwd-header-x-amz-restore\": input.Restore,\n        \"x-amz-fwd-header-x-amz-server-side-encryption\": input.ServerSideEncryption,\n        \"x-amz-fwd-header-x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\n        \"x-amz-fwd-header-x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId,\n        \"x-amz-fwd-header-x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5,\n        \"x-amz-fwd-header-x-amz-storage-class\": input.StorageClass,\n        \"x-amz-fwd-header-x-amz-tagging-count\": [\n            () => isSerializableHeaderValue(input.TagCount),\n            () => input.TagCount.toString(),\n        ],\n        \"x-amz-fwd-header-x-amz-version-id\": input.VersionId,\n        \"x-amz-fwd-header-x-amz-server-side-encryption-bucket-key-enabled\": [\n            () => isSerializableHeaderValue(input.BucketKeyEnabled),\n            () => input.BucketKeyEnabled.toString(),\n        ],\n        ...(input.Metadata !== undefined &&\n            Object.keys(input.Metadata).reduce((acc, suffix) => {\n                acc[`x-amz-meta-${suffix.toLowerCase()}`] = input.Metadata[suffix];\n                return acc;\n            }, {})),\n    });\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/WriteGetObjectResponse\";\n    const query = (0, smithy_client_1.map)({\n        \"x-id\": [, \"WriteGetObjectResponse\"],\n    });\n    let body;\n    if (input.Body !== undefined) {\n        body = input.Body;\n    }\n    let contents;\n    if (input.Body !== undefined) {\n        contents = input.Body;\n        body = contents;\n    }\n    let { hostname: resolvedHostname } = await context.endpoint();\n    if (context.disableHostPrefix !== true) {\n        resolvedHostname = \"{RequestRoute}.\" + resolvedHostname;\n        if (input.RequestRoute === undefined) {\n            throw new Error(\"Empty value provided for input host prefix: RequestRoute.\");\n        }\n        resolvedHostname = resolvedHostname.replace(\"{RequestRoute}\", input.RequestRoute);\n        if (!(0, protocol_http_1.isValidHostname)(resolvedHostname)) {\n            throw new Error(\"ValidationError: prefixed hostname must be hostname compatible.\");\n        }\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname: resolvedHostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_WriteGetObjectResponseCommand = se_WriteGetObjectResponseCommand;\nconst de_AbortMultipartUploadCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_AbortMultipartUploadCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_AbortMultipartUploadCommand = de_AbortMultipartUploadCommand;\nconst de_AbortMultipartUploadCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"NoSuchUpload\":\n        case \"com.amazonaws.s3#NoSuchUpload\":\n            throw await de_NoSuchUploadRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst de_CompleteMultipartUploadCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CompleteMultipartUploadCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        Expiration: [, output.headers[\"x-amz-expiration\"]],\n        ServerSideEncryption: [, output.headers[\"x-amz-server-side-encryption\"]],\n        VersionId: [, output.headers[\"x-amz-version-id\"]],\n        SSEKMSKeyId: [, output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"]],\n        BucketKeyEnabled: [\n            () => void 0 !== output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"],\n            () => (0, smithy_client_1.parseBoolean)(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]),\n        ],\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data[\"Bucket\"] !== undefined) {\n        contents.Bucket = (0, smithy_client_1.expectString)(data[\"Bucket\"]);\n    }\n    if (data[\"ChecksumCRC32\"] !== undefined) {\n        contents.ChecksumCRC32 = (0, smithy_client_1.expectString)(data[\"ChecksumCRC32\"]);\n    }\n    if (data[\"ChecksumCRC32C\"] !== undefined) {\n        contents.ChecksumCRC32C = (0, smithy_client_1.expectString)(data[\"ChecksumCRC32C\"]);\n    }\n    if (data[\"ChecksumSHA1\"] !== undefined) {\n        contents.ChecksumSHA1 = (0, smithy_client_1.expectString)(data[\"ChecksumSHA1\"]);\n    }\n    if (data[\"ChecksumSHA256\"] !== undefined) {\n        contents.ChecksumSHA256 = (0, smithy_client_1.expectString)(data[\"ChecksumSHA256\"]);\n    }\n    if (data[\"ETag\"] !== undefined) {\n        contents.ETag = (0, smithy_client_1.expectString)(data[\"ETag\"]);\n    }\n    if (data[\"Key\"] !== undefined) {\n        contents.Key = (0, smithy_client_1.expectString)(data[\"Key\"]);\n    }\n    if (data[\"Location\"] !== undefined) {\n        contents.Location = (0, smithy_client_1.expectString)(data[\"Location\"]);\n    }\n    return contents;\n};\nexports.de_CompleteMultipartUploadCommand = de_CompleteMultipartUploadCommand;\nconst de_CompleteMultipartUploadCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_CopyObjectCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CopyObjectCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        Expiration: [, output.headers[\"x-amz-expiration\"]],\n        CopySourceVersionId: [, output.headers[\"x-amz-copy-source-version-id\"]],\n        VersionId: [, output.headers[\"x-amz-version-id\"]],\n        ServerSideEncryption: [, output.headers[\"x-amz-server-side-encryption\"]],\n        SSECustomerAlgorithm: [, output.headers[\"x-amz-server-side-encryption-customer-algorithm\"]],\n        SSECustomerKeyMD5: [, output.headers[\"x-amz-server-side-encryption-customer-key-md5\"]],\n        SSEKMSKeyId: [, output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"]],\n        SSEKMSEncryptionContext: [, output.headers[\"x-amz-server-side-encryption-context\"]],\n        BucketKeyEnabled: [\n            () => void 0 !== output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"],\n            () => (0, smithy_client_1.parseBoolean)(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]),\n        ],\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.CopyObjectResult = de_CopyObjectResult(data, context);\n    return contents;\n};\nexports.de_CopyObjectCommand = de_CopyObjectCommand;\nconst de_CopyObjectCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ObjectNotInActiveTierError\":\n        case \"com.amazonaws.s3#ObjectNotInActiveTierError\":\n            throw await de_ObjectNotInActiveTierErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst de_CreateBucketCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CreateBucketCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_CreateBucketCommand = de_CreateBucketCommand;\nconst de_CreateBucketCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BucketAlreadyExists\":\n        case \"com.amazonaws.s3#BucketAlreadyExists\":\n            throw await de_BucketAlreadyExistsRes(parsedOutput, context);\n        case \"BucketAlreadyOwnedByYou\":\n        case \"com.amazonaws.s3#BucketAlreadyOwnedByYou\":\n            throw await de_BucketAlreadyOwnedByYouRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst de_CreateMultipartUploadCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CreateMultipartUploadCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        AbortDate: [\n            () => void 0 !== output.headers[\"x-amz-abort-date\"],\n            () => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc7231DateTime)(output.headers[\"x-amz-abort-date\"])),\n        ],\n        AbortRuleId: [, output.headers[\"x-amz-abort-rule-id\"]],\n        ServerSideEncryption: [, output.headers[\"x-amz-server-side-encryption\"]],\n        SSECustomerAlgorithm: [, output.headers[\"x-amz-server-side-encryption-customer-algorithm\"]],\n        SSECustomerKeyMD5: [, output.headers[\"x-amz-server-side-encryption-customer-key-md5\"]],\n        SSEKMSKeyId: [, output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"]],\n        SSEKMSEncryptionContext: [, output.headers[\"x-amz-server-side-encryption-context\"]],\n        BucketKeyEnabled: [\n            () => void 0 !== output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"],\n            () => (0, smithy_client_1.parseBoolean)(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]),\n        ],\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n        ChecksumAlgorithm: [, output.headers[\"x-amz-checksum-algorithm\"]],\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data[\"Bucket\"] !== undefined) {\n        contents.Bucket = (0, smithy_client_1.expectString)(data[\"Bucket\"]);\n    }\n    if (data[\"Key\"] !== undefined) {\n        contents.Key = (0, smithy_client_1.expectString)(data[\"Key\"]);\n    }\n    if (data[\"UploadId\"] !== undefined) {\n        contents.UploadId = (0, smithy_client_1.expectString)(data[\"UploadId\"]);\n    }\n    return contents;\n};\nexports.de_CreateMultipartUploadCommand = de_CreateMultipartUploadCommand;\nconst de_CreateMultipartUploadCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_DeleteBucketCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteBucketCommand = de_DeleteBucketCommand;\nconst de_DeleteBucketCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_DeleteBucketAnalyticsConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketAnalyticsConfigurationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteBucketAnalyticsConfigurationCommand = de_DeleteBucketAnalyticsConfigurationCommand;\nconst de_DeleteBucketAnalyticsConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_DeleteBucketCorsCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketCorsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteBucketCorsCommand = de_DeleteBucketCorsCommand;\nconst de_DeleteBucketCorsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_DeleteBucketEncryptionCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketEncryptionCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteBucketEncryptionCommand = de_DeleteBucketEncryptionCommand;\nconst de_DeleteBucketEncryptionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_DeleteBucketIntelligentTieringConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketIntelligentTieringConfigurationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteBucketIntelligentTieringConfigurationCommand = de_DeleteBucketIntelligentTieringConfigurationCommand;\nconst de_DeleteBucketIntelligentTieringConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_DeleteBucketInventoryConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketInventoryConfigurationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteBucketInventoryConfigurationCommand = de_DeleteBucketInventoryConfigurationCommand;\nconst de_DeleteBucketInventoryConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_DeleteBucketLifecycleCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketLifecycleCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteBucketLifecycleCommand = de_DeleteBucketLifecycleCommand;\nconst de_DeleteBucketLifecycleCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_DeleteBucketMetricsConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketMetricsConfigurationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteBucketMetricsConfigurationCommand = de_DeleteBucketMetricsConfigurationCommand;\nconst de_DeleteBucketMetricsConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_DeleteBucketOwnershipControlsCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketOwnershipControlsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteBucketOwnershipControlsCommand = de_DeleteBucketOwnershipControlsCommand;\nconst de_DeleteBucketOwnershipControlsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_DeleteBucketPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketPolicyCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteBucketPolicyCommand = de_DeleteBucketPolicyCommand;\nconst de_DeleteBucketPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_DeleteBucketReplicationCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketReplicationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteBucketReplicationCommand = de_DeleteBucketReplicationCommand;\nconst de_DeleteBucketReplicationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_DeleteBucketTaggingCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketTaggingCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteBucketTaggingCommand = de_DeleteBucketTaggingCommand;\nconst de_DeleteBucketTaggingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_DeleteBucketWebsiteCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteBucketWebsiteCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteBucketWebsiteCommand = de_DeleteBucketWebsiteCommand;\nconst de_DeleteBucketWebsiteCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_DeleteObjectCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteObjectCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        DeleteMarker: [\n            () => void 0 !== output.headers[\"x-amz-delete-marker\"],\n            () => (0, smithy_client_1.parseBoolean)(output.headers[\"x-amz-delete-marker\"]),\n        ],\n        VersionId: [, output.headers[\"x-amz-version-id\"]],\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteObjectCommand = de_DeleteObjectCommand;\nconst de_DeleteObjectCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_DeleteObjectsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_DeleteObjectsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.Deleted === \"\") {\n        contents.Deleted = [];\n    }\n    else if (data[\"Deleted\"] !== undefined) {\n        contents.Deleted = de_DeletedObjects((0, smithy_client_1.getArrayIfSingleItem)(data[\"Deleted\"]), context);\n    }\n    if (data.Error === \"\") {\n        contents.Errors = [];\n    }\n    else if (data[\"Error\"] !== undefined) {\n        contents.Errors = de_Errors((0, smithy_client_1.getArrayIfSingleItem)(data[\"Error\"]), context);\n    }\n    return contents;\n};\nexports.de_DeleteObjectsCommand = de_DeleteObjectsCommand;\nconst de_DeleteObjectsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_DeleteObjectTaggingCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeleteObjectTaggingCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        VersionId: [, output.headers[\"x-amz-version-id\"]],\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeleteObjectTaggingCommand = de_DeleteObjectTaggingCommand;\nconst de_DeleteObjectTaggingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_DeletePublicAccessBlockCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return de_DeletePublicAccessBlockCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_DeletePublicAccessBlockCommand = de_DeletePublicAccessBlockCommand;\nconst de_DeletePublicAccessBlockCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetBucketAccelerateConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketAccelerateConfigurationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(data[\"Status\"]);\n    }\n    return contents;\n};\nexports.de_GetBucketAccelerateConfigurationCommand = de_GetBucketAccelerateConfigurationCommand;\nconst de_GetBucketAccelerateConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetBucketAclCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketAclCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.AccessControlList === \"\") {\n        contents.Grants = [];\n    }\n    else if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n        contents.Grants = de_Grants((0, smithy_client_1.getArrayIfSingleItem)(data[\"AccessControlList\"][\"Grant\"]), context);\n    }\n    if (data[\"Owner\"] !== undefined) {\n        contents.Owner = de_Owner(data[\"Owner\"], context);\n    }\n    return contents;\n};\nexports.de_GetBucketAclCommand = de_GetBucketAclCommand;\nconst de_GetBucketAclCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetBucketAnalyticsConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketAnalyticsConfigurationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.AnalyticsConfiguration = de_AnalyticsConfiguration(data, context);\n    return contents;\n};\nexports.de_GetBucketAnalyticsConfigurationCommand = de_GetBucketAnalyticsConfigurationCommand;\nconst de_GetBucketAnalyticsConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetBucketCorsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketCorsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.CORSRule === \"\") {\n        contents.CORSRules = [];\n    }\n    else if (data[\"CORSRule\"] !== undefined) {\n        contents.CORSRules = de_CORSRules((0, smithy_client_1.getArrayIfSingleItem)(data[\"CORSRule\"]), context);\n    }\n    return contents;\n};\nexports.de_GetBucketCorsCommand = de_GetBucketCorsCommand;\nconst de_GetBucketCorsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetBucketEncryptionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketEncryptionCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.ServerSideEncryptionConfiguration = de_ServerSideEncryptionConfiguration(data, context);\n    return contents;\n};\nexports.de_GetBucketEncryptionCommand = de_GetBucketEncryptionCommand;\nconst de_GetBucketEncryptionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetBucketIntelligentTieringConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketIntelligentTieringConfigurationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.IntelligentTieringConfiguration = de_IntelligentTieringConfiguration(data, context);\n    return contents;\n};\nexports.de_GetBucketIntelligentTieringConfigurationCommand = de_GetBucketIntelligentTieringConfigurationCommand;\nconst de_GetBucketIntelligentTieringConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetBucketInventoryConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketInventoryConfigurationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.InventoryConfiguration = de_InventoryConfiguration(data, context);\n    return contents;\n};\nexports.de_GetBucketInventoryConfigurationCommand = de_GetBucketInventoryConfigurationCommand;\nconst de_GetBucketInventoryConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetBucketLifecycleConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketLifecycleConfigurationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.Rule === \"\") {\n        contents.Rules = [];\n    }\n    else if (data[\"Rule\"] !== undefined) {\n        contents.Rules = de_LifecycleRules((0, smithy_client_1.getArrayIfSingleItem)(data[\"Rule\"]), context);\n    }\n    return contents;\n};\nexports.de_GetBucketLifecycleConfigurationCommand = de_GetBucketLifecycleConfigurationCommand;\nconst de_GetBucketLifecycleConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetBucketLocationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketLocationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data[\"LocationConstraint\"] !== undefined) {\n        contents.LocationConstraint = (0, smithy_client_1.expectString)(data[\"LocationConstraint\"]);\n    }\n    return contents;\n};\nexports.de_GetBucketLocationCommand = de_GetBucketLocationCommand;\nconst de_GetBucketLocationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetBucketLoggingCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketLoggingCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data[\"LoggingEnabled\"] !== undefined) {\n        contents.LoggingEnabled = de_LoggingEnabled(data[\"LoggingEnabled\"], context);\n    }\n    return contents;\n};\nexports.de_GetBucketLoggingCommand = de_GetBucketLoggingCommand;\nconst de_GetBucketLoggingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetBucketMetricsConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketMetricsConfigurationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.MetricsConfiguration = de_MetricsConfiguration(data, context);\n    return contents;\n};\nexports.de_GetBucketMetricsConfigurationCommand = de_GetBucketMetricsConfigurationCommand;\nconst de_GetBucketMetricsConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetBucketNotificationConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketNotificationConfigurationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data[\"EventBridgeConfiguration\"] !== undefined) {\n        contents.EventBridgeConfiguration = de_EventBridgeConfiguration(data[\"EventBridgeConfiguration\"], context);\n    }\n    if (data.CloudFunctionConfiguration === \"\") {\n        contents.LambdaFunctionConfigurations = [];\n    }\n    else if (data[\"CloudFunctionConfiguration\"] !== undefined) {\n        contents.LambdaFunctionConfigurations = de_LambdaFunctionConfigurationList((0, smithy_client_1.getArrayIfSingleItem)(data[\"CloudFunctionConfiguration\"]), context);\n    }\n    if (data.QueueConfiguration === \"\") {\n        contents.QueueConfigurations = [];\n    }\n    else if (data[\"QueueConfiguration\"] !== undefined) {\n        contents.QueueConfigurations = de_QueueConfigurationList((0, smithy_client_1.getArrayIfSingleItem)(data[\"QueueConfiguration\"]), context);\n    }\n    if (data.TopicConfiguration === \"\") {\n        contents.TopicConfigurations = [];\n    }\n    else if (data[\"TopicConfiguration\"] !== undefined) {\n        contents.TopicConfigurations = de_TopicConfigurationList((0, smithy_client_1.getArrayIfSingleItem)(data[\"TopicConfiguration\"]), context);\n    }\n    return contents;\n};\nexports.de_GetBucketNotificationConfigurationCommand = de_GetBucketNotificationConfigurationCommand;\nconst de_GetBucketNotificationConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetBucketOwnershipControlsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketOwnershipControlsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.OwnershipControls = de_OwnershipControls(data, context);\n    return contents;\n};\nexports.de_GetBucketOwnershipControlsCommand = de_GetBucketOwnershipControlsCommand;\nconst de_GetBucketOwnershipControlsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetBucketPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketPolicyCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = await collectBodyString(output.body, context);\n    contents.Policy = (0, smithy_client_1.expectString)(data);\n    return contents;\n};\nexports.de_GetBucketPolicyCommand = de_GetBucketPolicyCommand;\nconst de_GetBucketPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetBucketPolicyStatusCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketPolicyStatusCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.PolicyStatus = de_PolicyStatus(data, context);\n    return contents;\n};\nexports.de_GetBucketPolicyStatusCommand = de_GetBucketPolicyStatusCommand;\nconst de_GetBucketPolicyStatusCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetBucketReplicationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketReplicationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.ReplicationConfiguration = de_ReplicationConfiguration(data, context);\n    return contents;\n};\nexports.de_GetBucketReplicationCommand = de_GetBucketReplicationCommand;\nconst de_GetBucketReplicationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetBucketRequestPaymentCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketRequestPaymentCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data[\"Payer\"] !== undefined) {\n        contents.Payer = (0, smithy_client_1.expectString)(data[\"Payer\"]);\n    }\n    return contents;\n};\nexports.de_GetBucketRequestPaymentCommand = de_GetBucketRequestPaymentCommand;\nconst de_GetBucketRequestPaymentCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetBucketTaggingCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketTaggingCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.TagSet === \"\") {\n        contents.TagSet = [];\n    }\n    else if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n        contents.TagSet = de_TagSet((0, smithy_client_1.getArrayIfSingleItem)(data[\"TagSet\"][\"Tag\"]), context);\n    }\n    return contents;\n};\nexports.de_GetBucketTaggingCommand = de_GetBucketTaggingCommand;\nconst de_GetBucketTaggingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetBucketVersioningCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketVersioningCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data[\"MfaDelete\"] !== undefined) {\n        contents.MFADelete = (0, smithy_client_1.expectString)(data[\"MfaDelete\"]);\n    }\n    if (data[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(data[\"Status\"]);\n    }\n    return contents;\n};\nexports.de_GetBucketVersioningCommand = de_GetBucketVersioningCommand;\nconst de_GetBucketVersioningCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetBucketWebsiteCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetBucketWebsiteCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data[\"ErrorDocument\"] !== undefined) {\n        contents.ErrorDocument = de_ErrorDocument(data[\"ErrorDocument\"], context);\n    }\n    if (data[\"IndexDocument\"] !== undefined) {\n        contents.IndexDocument = de_IndexDocument(data[\"IndexDocument\"], context);\n    }\n    if (data[\"RedirectAllRequestsTo\"] !== undefined) {\n        contents.RedirectAllRequestsTo = de_RedirectAllRequestsTo(data[\"RedirectAllRequestsTo\"], context);\n    }\n    if (data.RoutingRules === \"\") {\n        contents.RoutingRules = [];\n    }\n    else if (data[\"RoutingRules\"] !== undefined && data[\"RoutingRules\"][\"RoutingRule\"] !== undefined) {\n        contents.RoutingRules = de_RoutingRules((0, smithy_client_1.getArrayIfSingleItem)(data[\"RoutingRules\"][\"RoutingRule\"]), context);\n    }\n    return contents;\n};\nexports.de_GetBucketWebsiteCommand = de_GetBucketWebsiteCommand;\nconst de_GetBucketWebsiteCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetObjectCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetObjectCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        DeleteMarker: [\n            () => void 0 !== output.headers[\"x-amz-delete-marker\"],\n            () => (0, smithy_client_1.parseBoolean)(output.headers[\"x-amz-delete-marker\"]),\n        ],\n        AcceptRanges: [, output.headers[\"accept-ranges\"]],\n        Expiration: [, output.headers[\"x-amz-expiration\"]],\n        Restore: [, output.headers[\"x-amz-restore\"]],\n        LastModified: [\n            () => void 0 !== output.headers[\"last-modified\"],\n            () => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc7231DateTime)(output.headers[\"last-modified\"])),\n        ],\n        ContentLength: [\n            () => void 0 !== output.headers[\"content-length\"],\n            () => (0, smithy_client_1.strictParseLong)(output.headers[\"content-length\"]),\n        ],\n        ETag: [, output.headers[\"etag\"]],\n        ChecksumCRC32: [, output.headers[\"x-amz-checksum-crc32\"]],\n        ChecksumCRC32C: [, output.headers[\"x-amz-checksum-crc32c\"]],\n        ChecksumSHA1: [, output.headers[\"x-amz-checksum-sha1\"]],\n        ChecksumSHA256: [, output.headers[\"x-amz-checksum-sha256\"]],\n        MissingMeta: [\n            () => void 0 !== output.headers[\"x-amz-missing-meta\"],\n            () => (0, smithy_client_1.strictParseInt32)(output.headers[\"x-amz-missing-meta\"]),\n        ],\n        VersionId: [, output.headers[\"x-amz-version-id\"]],\n        CacheControl: [, output.headers[\"cache-control\"]],\n        ContentDisposition: [, output.headers[\"content-disposition\"]],\n        ContentEncoding: [, output.headers[\"content-encoding\"]],\n        ContentLanguage: [, output.headers[\"content-language\"]],\n        ContentRange: [, output.headers[\"content-range\"]],\n        ContentType: [, output.headers[\"content-type\"]],\n        Expires: [\n            () => void 0 !== output.headers[\"expires\"],\n            () => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc7231DateTime)(output.headers[\"expires\"])),\n        ],\n        WebsiteRedirectLocation: [, output.headers[\"x-amz-website-redirect-location\"]],\n        ServerSideEncryption: [, output.headers[\"x-amz-server-side-encryption\"]],\n        SSECustomerAlgorithm: [, output.headers[\"x-amz-server-side-encryption-customer-algorithm\"]],\n        SSECustomerKeyMD5: [, output.headers[\"x-amz-server-side-encryption-customer-key-md5\"]],\n        SSEKMSKeyId: [, output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"]],\n        BucketKeyEnabled: [\n            () => void 0 !== output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"],\n            () => (0, smithy_client_1.parseBoolean)(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]),\n        ],\n        StorageClass: [, output.headers[\"x-amz-storage-class\"]],\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n        ReplicationStatus: [, output.headers[\"x-amz-replication-status\"]],\n        PartsCount: [\n            () => void 0 !== output.headers[\"x-amz-mp-parts-count\"],\n            () => (0, smithy_client_1.strictParseInt32)(output.headers[\"x-amz-mp-parts-count\"]),\n        ],\n        TagCount: [\n            () => void 0 !== output.headers[\"x-amz-tagging-count\"],\n            () => (0, smithy_client_1.strictParseInt32)(output.headers[\"x-amz-tagging-count\"]),\n        ],\n        ObjectLockMode: [, output.headers[\"x-amz-object-lock-mode\"]],\n        ObjectLockRetainUntilDate: [\n            () => void 0 !== output.headers[\"x-amz-object-lock-retain-until-date\"],\n            () => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output.headers[\"x-amz-object-lock-retain-until-date\"])),\n        ],\n        ObjectLockLegalHoldStatus: [, output.headers[\"x-amz-object-lock-legal-hold\"]],\n        Metadata: [\n            ,\n            Object.keys(output.headers)\n                .filter((header) => header.startsWith(\"x-amz-meta-\"))\n                .reduce((acc, header) => {\n                acc[header.substring(11)] = output.headers[header];\n                return acc;\n            }, {}),\n        ],\n    });\n    const data = output.body;\n    context.sdkStreamMixin(data);\n    contents.Body = data;\n    return contents;\n};\nexports.de_GetObjectCommand = de_GetObjectCommand;\nconst de_GetObjectCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidObjectState\":\n        case \"com.amazonaws.s3#InvalidObjectState\":\n            throw await de_InvalidObjectStateRes(parsedOutput, context);\n        case \"NoSuchKey\":\n        case \"com.amazonaws.s3#NoSuchKey\":\n            throw await de_NoSuchKeyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst de_GetObjectAclCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetObjectAclCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.AccessControlList === \"\") {\n        contents.Grants = [];\n    }\n    else if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n        contents.Grants = de_Grants((0, smithy_client_1.getArrayIfSingleItem)(data[\"AccessControlList\"][\"Grant\"]), context);\n    }\n    if (data[\"Owner\"] !== undefined) {\n        contents.Owner = de_Owner(data[\"Owner\"], context);\n    }\n    return contents;\n};\nexports.de_GetObjectAclCommand = de_GetObjectAclCommand;\nconst de_GetObjectAclCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"NoSuchKey\":\n        case \"com.amazonaws.s3#NoSuchKey\":\n            throw await de_NoSuchKeyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst de_GetObjectAttributesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetObjectAttributesCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        DeleteMarker: [\n            () => void 0 !== output.headers[\"x-amz-delete-marker\"],\n            () => (0, smithy_client_1.parseBoolean)(output.headers[\"x-amz-delete-marker\"]),\n        ],\n        LastModified: [\n            () => void 0 !== output.headers[\"last-modified\"],\n            () => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc7231DateTime)(output.headers[\"last-modified\"])),\n        ],\n        VersionId: [, output.headers[\"x-amz-version-id\"]],\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data[\"Checksum\"] !== undefined) {\n        contents.Checksum = de_Checksum(data[\"Checksum\"], context);\n    }\n    if (data[\"ETag\"] !== undefined) {\n        contents.ETag = (0, smithy_client_1.expectString)(data[\"ETag\"]);\n    }\n    if (data[\"ObjectParts\"] !== undefined) {\n        contents.ObjectParts = de_GetObjectAttributesParts(data[\"ObjectParts\"], context);\n    }\n    if (data[\"ObjectSize\"] !== undefined) {\n        contents.ObjectSize = (0, smithy_client_1.strictParseLong)(data[\"ObjectSize\"]);\n    }\n    if (data[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = (0, smithy_client_1.expectString)(data[\"StorageClass\"]);\n    }\n    return contents;\n};\nexports.de_GetObjectAttributesCommand = de_GetObjectAttributesCommand;\nconst de_GetObjectAttributesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"NoSuchKey\":\n        case \"com.amazonaws.s3#NoSuchKey\":\n            throw await de_NoSuchKeyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst de_GetObjectLegalHoldCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetObjectLegalHoldCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.LegalHold = de_ObjectLockLegalHold(data, context);\n    return contents;\n};\nexports.de_GetObjectLegalHoldCommand = de_GetObjectLegalHoldCommand;\nconst de_GetObjectLegalHoldCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetObjectLockConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetObjectLockConfigurationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.ObjectLockConfiguration = de_ObjectLockConfiguration(data, context);\n    return contents;\n};\nexports.de_GetObjectLockConfigurationCommand = de_GetObjectLockConfigurationCommand;\nconst de_GetObjectLockConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetObjectRetentionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetObjectRetentionCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.Retention = de_ObjectLockRetention(data, context);\n    return contents;\n};\nexports.de_GetObjectRetentionCommand = de_GetObjectRetentionCommand;\nconst de_GetObjectRetentionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetObjectTaggingCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetObjectTaggingCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        VersionId: [, output.headers[\"x-amz-version-id\"]],\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.TagSet === \"\") {\n        contents.TagSet = [];\n    }\n    else if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n        contents.TagSet = de_TagSet((0, smithy_client_1.getArrayIfSingleItem)(data[\"TagSet\"][\"Tag\"]), context);\n    }\n    return contents;\n};\nexports.de_GetObjectTaggingCommand = de_GetObjectTaggingCommand;\nconst de_GetObjectTaggingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetObjectTorrentCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetObjectTorrentCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = output.body;\n    context.sdkStreamMixin(data);\n    contents.Body = data;\n    return contents;\n};\nexports.de_GetObjectTorrentCommand = de_GetObjectTorrentCommand;\nconst de_GetObjectTorrentCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_GetPublicAccessBlockCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetPublicAccessBlockCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.PublicAccessBlockConfiguration = de_PublicAccessBlockConfiguration(data, context);\n    return contents;\n};\nexports.de_GetPublicAccessBlockCommand = de_GetPublicAccessBlockCommand;\nconst de_GetPublicAccessBlockCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_HeadBucketCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_HeadBucketCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_HeadBucketCommand = de_HeadBucketCommand;\nconst de_HeadBucketCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"NotFound\":\n        case \"com.amazonaws.s3#NotFound\":\n            throw await de_NotFoundRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst de_HeadObjectCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_HeadObjectCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        DeleteMarker: [\n            () => void 0 !== output.headers[\"x-amz-delete-marker\"],\n            () => (0, smithy_client_1.parseBoolean)(output.headers[\"x-amz-delete-marker\"]),\n        ],\n        AcceptRanges: [, output.headers[\"accept-ranges\"]],\n        Expiration: [, output.headers[\"x-amz-expiration\"]],\n        Restore: [, output.headers[\"x-amz-restore\"]],\n        ArchiveStatus: [, output.headers[\"x-amz-archive-status\"]],\n        LastModified: [\n            () => void 0 !== output.headers[\"last-modified\"],\n            () => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc7231DateTime)(output.headers[\"last-modified\"])),\n        ],\n        ContentLength: [\n            () => void 0 !== output.headers[\"content-length\"],\n            () => (0, smithy_client_1.strictParseLong)(output.headers[\"content-length\"]),\n        ],\n        ChecksumCRC32: [, output.headers[\"x-amz-checksum-crc32\"]],\n        ChecksumCRC32C: [, output.headers[\"x-amz-checksum-crc32c\"]],\n        ChecksumSHA1: [, output.headers[\"x-amz-checksum-sha1\"]],\n        ChecksumSHA256: [, output.headers[\"x-amz-checksum-sha256\"]],\n        ETag: [, output.headers[\"etag\"]],\n        MissingMeta: [\n            () => void 0 !== output.headers[\"x-amz-missing-meta\"],\n            () => (0, smithy_client_1.strictParseInt32)(output.headers[\"x-amz-missing-meta\"]),\n        ],\n        VersionId: [, output.headers[\"x-amz-version-id\"]],\n        CacheControl: [, output.headers[\"cache-control\"]],\n        ContentDisposition: [, output.headers[\"content-disposition\"]],\n        ContentEncoding: [, output.headers[\"content-encoding\"]],\n        ContentLanguage: [, output.headers[\"content-language\"]],\n        ContentType: [, output.headers[\"content-type\"]],\n        Expires: [\n            () => void 0 !== output.headers[\"expires\"],\n            () => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc7231DateTime)(output.headers[\"expires\"])),\n        ],\n        WebsiteRedirectLocation: [, output.headers[\"x-amz-website-redirect-location\"]],\n        ServerSideEncryption: [, output.headers[\"x-amz-server-side-encryption\"]],\n        SSECustomerAlgorithm: [, output.headers[\"x-amz-server-side-encryption-customer-algorithm\"]],\n        SSECustomerKeyMD5: [, output.headers[\"x-amz-server-side-encryption-customer-key-md5\"]],\n        SSEKMSKeyId: [, output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"]],\n        BucketKeyEnabled: [\n            () => void 0 !== output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"],\n            () => (0, smithy_client_1.parseBoolean)(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]),\n        ],\n        StorageClass: [, output.headers[\"x-amz-storage-class\"]],\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n        ReplicationStatus: [, output.headers[\"x-amz-replication-status\"]],\n        PartsCount: [\n            () => void 0 !== output.headers[\"x-amz-mp-parts-count\"],\n            () => (0, smithy_client_1.strictParseInt32)(output.headers[\"x-amz-mp-parts-count\"]),\n        ],\n        ObjectLockMode: [, output.headers[\"x-amz-object-lock-mode\"]],\n        ObjectLockRetainUntilDate: [\n            () => void 0 !== output.headers[\"x-amz-object-lock-retain-until-date\"],\n            () => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output.headers[\"x-amz-object-lock-retain-until-date\"])),\n        ],\n        ObjectLockLegalHoldStatus: [, output.headers[\"x-amz-object-lock-legal-hold\"]],\n        Metadata: [\n            ,\n            Object.keys(output.headers)\n                .filter((header) => header.startsWith(\"x-amz-meta-\"))\n                .reduce((acc, header) => {\n                acc[header.substring(11)] = output.headers[header];\n                return acc;\n            }, {}),\n        ],\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_HeadObjectCommand = de_HeadObjectCommand;\nconst de_HeadObjectCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"NotFound\":\n        case \"com.amazonaws.s3#NotFound\":\n            throw await de_NotFoundRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst de_ListBucketAnalyticsConfigurationsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListBucketAnalyticsConfigurationsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.AnalyticsConfiguration === \"\") {\n        contents.AnalyticsConfigurationList = [];\n    }\n    else if (data[\"AnalyticsConfiguration\"] !== undefined) {\n        contents.AnalyticsConfigurationList = de_AnalyticsConfigurationList((0, smithy_client_1.getArrayIfSingleItem)(data[\"AnalyticsConfiguration\"]), context);\n    }\n    if (data[\"ContinuationToken\"] !== undefined) {\n        contents.ContinuationToken = (0, smithy_client_1.expectString)(data[\"ContinuationToken\"]);\n    }\n    if (data[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = (0, smithy_client_1.parseBoolean)(data[\"IsTruncated\"]);\n    }\n    if (data[\"NextContinuationToken\"] !== undefined) {\n        contents.NextContinuationToken = (0, smithy_client_1.expectString)(data[\"NextContinuationToken\"]);\n    }\n    return contents;\n};\nexports.de_ListBucketAnalyticsConfigurationsCommand = de_ListBucketAnalyticsConfigurationsCommand;\nconst de_ListBucketAnalyticsConfigurationsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_ListBucketIntelligentTieringConfigurationsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListBucketIntelligentTieringConfigurationsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data[\"ContinuationToken\"] !== undefined) {\n        contents.ContinuationToken = (0, smithy_client_1.expectString)(data[\"ContinuationToken\"]);\n    }\n    if (data.IntelligentTieringConfiguration === \"\") {\n        contents.IntelligentTieringConfigurationList = [];\n    }\n    else if (data[\"IntelligentTieringConfiguration\"] !== undefined) {\n        contents.IntelligentTieringConfigurationList = de_IntelligentTieringConfigurationList((0, smithy_client_1.getArrayIfSingleItem)(data[\"IntelligentTieringConfiguration\"]), context);\n    }\n    if (data[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = (0, smithy_client_1.parseBoolean)(data[\"IsTruncated\"]);\n    }\n    if (data[\"NextContinuationToken\"] !== undefined) {\n        contents.NextContinuationToken = (0, smithy_client_1.expectString)(data[\"NextContinuationToken\"]);\n    }\n    return contents;\n};\nexports.de_ListBucketIntelligentTieringConfigurationsCommand = de_ListBucketIntelligentTieringConfigurationsCommand;\nconst de_ListBucketIntelligentTieringConfigurationsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_ListBucketInventoryConfigurationsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListBucketInventoryConfigurationsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data[\"ContinuationToken\"] !== undefined) {\n        contents.ContinuationToken = (0, smithy_client_1.expectString)(data[\"ContinuationToken\"]);\n    }\n    if (data.InventoryConfiguration === \"\") {\n        contents.InventoryConfigurationList = [];\n    }\n    else if (data[\"InventoryConfiguration\"] !== undefined) {\n        contents.InventoryConfigurationList = de_InventoryConfigurationList((0, smithy_client_1.getArrayIfSingleItem)(data[\"InventoryConfiguration\"]), context);\n    }\n    if (data[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = (0, smithy_client_1.parseBoolean)(data[\"IsTruncated\"]);\n    }\n    if (data[\"NextContinuationToken\"] !== undefined) {\n        contents.NextContinuationToken = (0, smithy_client_1.expectString)(data[\"NextContinuationToken\"]);\n    }\n    return contents;\n};\nexports.de_ListBucketInventoryConfigurationsCommand = de_ListBucketInventoryConfigurationsCommand;\nconst de_ListBucketInventoryConfigurationsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_ListBucketMetricsConfigurationsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListBucketMetricsConfigurationsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data[\"ContinuationToken\"] !== undefined) {\n        contents.ContinuationToken = (0, smithy_client_1.expectString)(data[\"ContinuationToken\"]);\n    }\n    if (data[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = (0, smithy_client_1.parseBoolean)(data[\"IsTruncated\"]);\n    }\n    if (data.MetricsConfiguration === \"\") {\n        contents.MetricsConfigurationList = [];\n    }\n    else if (data[\"MetricsConfiguration\"] !== undefined) {\n        contents.MetricsConfigurationList = de_MetricsConfigurationList((0, smithy_client_1.getArrayIfSingleItem)(data[\"MetricsConfiguration\"]), context);\n    }\n    if (data[\"NextContinuationToken\"] !== undefined) {\n        contents.NextContinuationToken = (0, smithy_client_1.expectString)(data[\"NextContinuationToken\"]);\n    }\n    return contents;\n};\nexports.de_ListBucketMetricsConfigurationsCommand = de_ListBucketMetricsConfigurationsCommand;\nconst de_ListBucketMetricsConfigurationsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_ListBucketsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListBucketsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.Buckets === \"\") {\n        contents.Buckets = [];\n    }\n    else if (data[\"Buckets\"] !== undefined && data[\"Buckets\"][\"Bucket\"] !== undefined) {\n        contents.Buckets = de_Buckets((0, smithy_client_1.getArrayIfSingleItem)(data[\"Buckets\"][\"Bucket\"]), context);\n    }\n    if (data[\"Owner\"] !== undefined) {\n        contents.Owner = de_Owner(data[\"Owner\"], context);\n    }\n    return contents;\n};\nexports.de_ListBucketsCommand = de_ListBucketsCommand;\nconst de_ListBucketsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_ListMultipartUploadsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListMultipartUploadsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data[\"Bucket\"] !== undefined) {\n        contents.Bucket = (0, smithy_client_1.expectString)(data[\"Bucket\"]);\n    }\n    if (data.CommonPrefixes === \"\") {\n        contents.CommonPrefixes = [];\n    }\n    else if (data[\"CommonPrefixes\"] !== undefined) {\n        contents.CommonPrefixes = de_CommonPrefixList((0, smithy_client_1.getArrayIfSingleItem)(data[\"CommonPrefixes\"]), context);\n    }\n    if (data[\"Delimiter\"] !== undefined) {\n        contents.Delimiter = (0, smithy_client_1.expectString)(data[\"Delimiter\"]);\n    }\n    if (data[\"EncodingType\"] !== undefined) {\n        contents.EncodingType = (0, smithy_client_1.expectString)(data[\"EncodingType\"]);\n    }\n    if (data[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = (0, smithy_client_1.parseBoolean)(data[\"IsTruncated\"]);\n    }\n    if (data[\"KeyMarker\"] !== undefined) {\n        contents.KeyMarker = (0, smithy_client_1.expectString)(data[\"KeyMarker\"]);\n    }\n    if (data[\"MaxUploads\"] !== undefined) {\n        contents.MaxUploads = (0, smithy_client_1.strictParseInt32)(data[\"MaxUploads\"]);\n    }\n    if (data[\"NextKeyMarker\"] !== undefined) {\n        contents.NextKeyMarker = (0, smithy_client_1.expectString)(data[\"NextKeyMarker\"]);\n    }\n    if (data[\"NextUploadIdMarker\"] !== undefined) {\n        contents.NextUploadIdMarker = (0, smithy_client_1.expectString)(data[\"NextUploadIdMarker\"]);\n    }\n    if (data[\"Prefix\"] !== undefined) {\n        contents.Prefix = (0, smithy_client_1.expectString)(data[\"Prefix\"]);\n    }\n    if (data[\"UploadIdMarker\"] !== undefined) {\n        contents.UploadIdMarker = (0, smithy_client_1.expectString)(data[\"UploadIdMarker\"]);\n    }\n    if (data.Upload === \"\") {\n        contents.Uploads = [];\n    }\n    else if (data[\"Upload\"] !== undefined) {\n        contents.Uploads = de_MultipartUploadList((0, smithy_client_1.getArrayIfSingleItem)(data[\"Upload\"]), context);\n    }\n    return contents;\n};\nexports.de_ListMultipartUploadsCommand = de_ListMultipartUploadsCommand;\nconst de_ListMultipartUploadsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_ListObjectsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListObjectsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.CommonPrefixes === \"\") {\n        contents.CommonPrefixes = [];\n    }\n    else if (data[\"CommonPrefixes\"] !== undefined) {\n        contents.CommonPrefixes = de_CommonPrefixList((0, smithy_client_1.getArrayIfSingleItem)(data[\"CommonPrefixes\"]), context);\n    }\n    if (data.Contents === \"\") {\n        contents.Contents = [];\n    }\n    else if (data[\"Contents\"] !== undefined) {\n        contents.Contents = de_ObjectList((0, smithy_client_1.getArrayIfSingleItem)(data[\"Contents\"]), context);\n    }\n    if (data[\"Delimiter\"] !== undefined) {\n        contents.Delimiter = (0, smithy_client_1.expectString)(data[\"Delimiter\"]);\n    }\n    if (data[\"EncodingType\"] !== undefined) {\n        contents.EncodingType = (0, smithy_client_1.expectString)(data[\"EncodingType\"]);\n    }\n    if (data[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = (0, smithy_client_1.parseBoolean)(data[\"IsTruncated\"]);\n    }\n    if (data[\"Marker\"] !== undefined) {\n        contents.Marker = (0, smithy_client_1.expectString)(data[\"Marker\"]);\n    }\n    if (data[\"MaxKeys\"] !== undefined) {\n        contents.MaxKeys = (0, smithy_client_1.strictParseInt32)(data[\"MaxKeys\"]);\n    }\n    if (data[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(data[\"Name\"]);\n    }\n    if (data[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(data[\"NextMarker\"]);\n    }\n    if (data[\"Prefix\"] !== undefined) {\n        contents.Prefix = (0, smithy_client_1.expectString)(data[\"Prefix\"]);\n    }\n    return contents;\n};\nexports.de_ListObjectsCommand = de_ListObjectsCommand;\nconst de_ListObjectsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"NoSuchBucket\":\n        case \"com.amazonaws.s3#NoSuchBucket\":\n            throw await de_NoSuchBucketRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst de_ListObjectsV2Command = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListObjectsV2CommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.CommonPrefixes === \"\") {\n        contents.CommonPrefixes = [];\n    }\n    else if (data[\"CommonPrefixes\"] !== undefined) {\n        contents.CommonPrefixes = de_CommonPrefixList((0, smithy_client_1.getArrayIfSingleItem)(data[\"CommonPrefixes\"]), context);\n    }\n    if (data.Contents === \"\") {\n        contents.Contents = [];\n    }\n    else if (data[\"Contents\"] !== undefined) {\n        contents.Contents = de_ObjectList((0, smithy_client_1.getArrayIfSingleItem)(data[\"Contents\"]), context);\n    }\n    if (data[\"ContinuationToken\"] !== undefined) {\n        contents.ContinuationToken = (0, smithy_client_1.expectString)(data[\"ContinuationToken\"]);\n    }\n    if (data[\"Delimiter\"] !== undefined) {\n        contents.Delimiter = (0, smithy_client_1.expectString)(data[\"Delimiter\"]);\n    }\n    if (data[\"EncodingType\"] !== undefined) {\n        contents.EncodingType = (0, smithy_client_1.expectString)(data[\"EncodingType\"]);\n    }\n    if (data[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = (0, smithy_client_1.parseBoolean)(data[\"IsTruncated\"]);\n    }\n    if (data[\"KeyCount\"] !== undefined) {\n        contents.KeyCount = (0, smithy_client_1.strictParseInt32)(data[\"KeyCount\"]);\n    }\n    if (data[\"MaxKeys\"] !== undefined) {\n        contents.MaxKeys = (0, smithy_client_1.strictParseInt32)(data[\"MaxKeys\"]);\n    }\n    if (data[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(data[\"Name\"]);\n    }\n    if (data[\"NextContinuationToken\"] !== undefined) {\n        contents.NextContinuationToken = (0, smithy_client_1.expectString)(data[\"NextContinuationToken\"]);\n    }\n    if (data[\"Prefix\"] !== undefined) {\n        contents.Prefix = (0, smithy_client_1.expectString)(data[\"Prefix\"]);\n    }\n    if (data[\"StartAfter\"] !== undefined) {\n        contents.StartAfter = (0, smithy_client_1.expectString)(data[\"StartAfter\"]);\n    }\n    return contents;\n};\nexports.de_ListObjectsV2Command = de_ListObjectsV2Command;\nconst de_ListObjectsV2CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"NoSuchBucket\":\n        case \"com.amazonaws.s3#NoSuchBucket\":\n            throw await de_NoSuchBucketRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst de_ListObjectVersionsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListObjectVersionsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.CommonPrefixes === \"\") {\n        contents.CommonPrefixes = [];\n    }\n    else if (data[\"CommonPrefixes\"] !== undefined) {\n        contents.CommonPrefixes = de_CommonPrefixList((0, smithy_client_1.getArrayIfSingleItem)(data[\"CommonPrefixes\"]), context);\n    }\n    if (data.DeleteMarker === \"\") {\n        contents.DeleteMarkers = [];\n    }\n    else if (data[\"DeleteMarker\"] !== undefined) {\n        contents.DeleteMarkers = de_DeleteMarkers((0, smithy_client_1.getArrayIfSingleItem)(data[\"DeleteMarker\"]), context);\n    }\n    if (data[\"Delimiter\"] !== undefined) {\n        contents.Delimiter = (0, smithy_client_1.expectString)(data[\"Delimiter\"]);\n    }\n    if (data[\"EncodingType\"] !== undefined) {\n        contents.EncodingType = (0, smithy_client_1.expectString)(data[\"EncodingType\"]);\n    }\n    if (data[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = (0, smithy_client_1.parseBoolean)(data[\"IsTruncated\"]);\n    }\n    if (data[\"KeyMarker\"] !== undefined) {\n        contents.KeyMarker = (0, smithy_client_1.expectString)(data[\"KeyMarker\"]);\n    }\n    if (data[\"MaxKeys\"] !== undefined) {\n        contents.MaxKeys = (0, smithy_client_1.strictParseInt32)(data[\"MaxKeys\"]);\n    }\n    if (data[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(data[\"Name\"]);\n    }\n    if (data[\"NextKeyMarker\"] !== undefined) {\n        contents.NextKeyMarker = (0, smithy_client_1.expectString)(data[\"NextKeyMarker\"]);\n    }\n    if (data[\"NextVersionIdMarker\"] !== undefined) {\n        contents.NextVersionIdMarker = (0, smithy_client_1.expectString)(data[\"NextVersionIdMarker\"]);\n    }\n    if (data[\"Prefix\"] !== undefined) {\n        contents.Prefix = (0, smithy_client_1.expectString)(data[\"Prefix\"]);\n    }\n    if (data[\"VersionIdMarker\"] !== undefined) {\n        contents.VersionIdMarker = (0, smithy_client_1.expectString)(data[\"VersionIdMarker\"]);\n    }\n    if (data.Version === \"\") {\n        contents.Versions = [];\n    }\n    else if (data[\"Version\"] !== undefined) {\n        contents.Versions = de_ObjectVersionList((0, smithy_client_1.getArrayIfSingleItem)(data[\"Version\"]), context);\n    }\n    return contents;\n};\nexports.de_ListObjectVersionsCommand = de_ListObjectVersionsCommand;\nconst de_ListObjectVersionsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_ListPartsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListPartsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        AbortDate: [\n            () => void 0 !== output.headers[\"x-amz-abort-date\"],\n            () => (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc7231DateTime)(output.headers[\"x-amz-abort-date\"])),\n        ],\n        AbortRuleId: [, output.headers[\"x-amz-abort-rule-id\"]],\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data[\"Bucket\"] !== undefined) {\n        contents.Bucket = (0, smithy_client_1.expectString)(data[\"Bucket\"]);\n    }\n    if (data[\"ChecksumAlgorithm\"] !== undefined) {\n        contents.ChecksumAlgorithm = (0, smithy_client_1.expectString)(data[\"ChecksumAlgorithm\"]);\n    }\n    if (data[\"Initiator\"] !== undefined) {\n        contents.Initiator = de_Initiator(data[\"Initiator\"], context);\n    }\n    if (data[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = (0, smithy_client_1.parseBoolean)(data[\"IsTruncated\"]);\n    }\n    if (data[\"Key\"] !== undefined) {\n        contents.Key = (0, smithy_client_1.expectString)(data[\"Key\"]);\n    }\n    if (data[\"MaxParts\"] !== undefined) {\n        contents.MaxParts = (0, smithy_client_1.strictParseInt32)(data[\"MaxParts\"]);\n    }\n    if (data[\"NextPartNumberMarker\"] !== undefined) {\n        contents.NextPartNumberMarker = (0, smithy_client_1.expectString)(data[\"NextPartNumberMarker\"]);\n    }\n    if (data[\"Owner\"] !== undefined) {\n        contents.Owner = de_Owner(data[\"Owner\"], context);\n    }\n    if (data[\"PartNumberMarker\"] !== undefined) {\n        contents.PartNumberMarker = (0, smithy_client_1.expectString)(data[\"PartNumberMarker\"]);\n    }\n    if (data.Part === \"\") {\n        contents.Parts = [];\n    }\n    else if (data[\"Part\"] !== undefined) {\n        contents.Parts = de_Parts((0, smithy_client_1.getArrayIfSingleItem)(data[\"Part\"]), context);\n    }\n    if (data[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = (0, smithy_client_1.expectString)(data[\"StorageClass\"]);\n    }\n    if (data[\"UploadId\"] !== undefined) {\n        contents.UploadId = (0, smithy_client_1.expectString)(data[\"UploadId\"]);\n    }\n    return contents;\n};\nexports.de_ListPartsCommand = de_ListPartsCommand;\nconst de_ListPartsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_PutBucketAccelerateConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketAccelerateConfigurationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_PutBucketAccelerateConfigurationCommand = de_PutBucketAccelerateConfigurationCommand;\nconst de_PutBucketAccelerateConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_PutBucketAclCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketAclCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_PutBucketAclCommand = de_PutBucketAclCommand;\nconst de_PutBucketAclCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_PutBucketAnalyticsConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketAnalyticsConfigurationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_PutBucketAnalyticsConfigurationCommand = de_PutBucketAnalyticsConfigurationCommand;\nconst de_PutBucketAnalyticsConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_PutBucketCorsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketCorsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_PutBucketCorsCommand = de_PutBucketCorsCommand;\nconst de_PutBucketCorsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_PutBucketEncryptionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketEncryptionCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_PutBucketEncryptionCommand = de_PutBucketEncryptionCommand;\nconst de_PutBucketEncryptionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_PutBucketIntelligentTieringConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketIntelligentTieringConfigurationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_PutBucketIntelligentTieringConfigurationCommand = de_PutBucketIntelligentTieringConfigurationCommand;\nconst de_PutBucketIntelligentTieringConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_PutBucketInventoryConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketInventoryConfigurationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_PutBucketInventoryConfigurationCommand = de_PutBucketInventoryConfigurationCommand;\nconst de_PutBucketInventoryConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_PutBucketLifecycleConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketLifecycleConfigurationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_PutBucketLifecycleConfigurationCommand = de_PutBucketLifecycleConfigurationCommand;\nconst de_PutBucketLifecycleConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_PutBucketLoggingCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketLoggingCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_PutBucketLoggingCommand = de_PutBucketLoggingCommand;\nconst de_PutBucketLoggingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_PutBucketMetricsConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketMetricsConfigurationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_PutBucketMetricsConfigurationCommand = de_PutBucketMetricsConfigurationCommand;\nconst de_PutBucketMetricsConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_PutBucketNotificationConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketNotificationConfigurationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_PutBucketNotificationConfigurationCommand = de_PutBucketNotificationConfigurationCommand;\nconst de_PutBucketNotificationConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_PutBucketOwnershipControlsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketOwnershipControlsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_PutBucketOwnershipControlsCommand = de_PutBucketOwnershipControlsCommand;\nconst de_PutBucketOwnershipControlsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_PutBucketPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketPolicyCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_PutBucketPolicyCommand = de_PutBucketPolicyCommand;\nconst de_PutBucketPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_PutBucketReplicationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketReplicationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_PutBucketReplicationCommand = de_PutBucketReplicationCommand;\nconst de_PutBucketReplicationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_PutBucketRequestPaymentCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketRequestPaymentCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_PutBucketRequestPaymentCommand = de_PutBucketRequestPaymentCommand;\nconst de_PutBucketRequestPaymentCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_PutBucketTaggingCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketTaggingCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_PutBucketTaggingCommand = de_PutBucketTaggingCommand;\nconst de_PutBucketTaggingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_PutBucketVersioningCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketVersioningCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_PutBucketVersioningCommand = de_PutBucketVersioningCommand;\nconst de_PutBucketVersioningCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_PutBucketWebsiteCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutBucketWebsiteCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_PutBucketWebsiteCommand = de_PutBucketWebsiteCommand;\nconst de_PutBucketWebsiteCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_PutObjectCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutObjectCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        Expiration: [, output.headers[\"x-amz-expiration\"]],\n        ETag: [, output.headers[\"etag\"]],\n        ChecksumCRC32: [, output.headers[\"x-amz-checksum-crc32\"]],\n        ChecksumCRC32C: [, output.headers[\"x-amz-checksum-crc32c\"]],\n        ChecksumSHA1: [, output.headers[\"x-amz-checksum-sha1\"]],\n        ChecksumSHA256: [, output.headers[\"x-amz-checksum-sha256\"]],\n        ServerSideEncryption: [, output.headers[\"x-amz-server-side-encryption\"]],\n        VersionId: [, output.headers[\"x-amz-version-id\"]],\n        SSECustomerAlgorithm: [, output.headers[\"x-amz-server-side-encryption-customer-algorithm\"]],\n        SSECustomerKeyMD5: [, output.headers[\"x-amz-server-side-encryption-customer-key-md5\"]],\n        SSEKMSKeyId: [, output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"]],\n        SSEKMSEncryptionContext: [, output.headers[\"x-amz-server-side-encryption-context\"]],\n        BucketKeyEnabled: [\n            () => void 0 !== output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"],\n            () => (0, smithy_client_1.parseBoolean)(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]),\n        ],\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_PutObjectCommand = de_PutObjectCommand;\nconst de_PutObjectCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_PutObjectAclCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutObjectAclCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_PutObjectAclCommand = de_PutObjectAclCommand;\nconst de_PutObjectAclCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"NoSuchKey\":\n        case \"com.amazonaws.s3#NoSuchKey\":\n            throw await de_NoSuchKeyRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst de_PutObjectLegalHoldCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutObjectLegalHoldCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_PutObjectLegalHoldCommand = de_PutObjectLegalHoldCommand;\nconst de_PutObjectLegalHoldCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_PutObjectLockConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutObjectLockConfigurationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_PutObjectLockConfigurationCommand = de_PutObjectLockConfigurationCommand;\nconst de_PutObjectLockConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_PutObjectRetentionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutObjectRetentionCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_PutObjectRetentionCommand = de_PutObjectRetentionCommand;\nconst de_PutObjectRetentionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_PutObjectTaggingCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutObjectTaggingCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        VersionId: [, output.headers[\"x-amz-version-id\"]],\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_PutObjectTaggingCommand = de_PutObjectTaggingCommand;\nconst de_PutObjectTaggingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_PutPublicAccessBlockCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_PutPublicAccessBlockCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_PutPublicAccessBlockCommand = de_PutPublicAccessBlockCommand;\nconst de_PutPublicAccessBlockCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_RestoreObjectCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_RestoreObjectCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n        RestoreOutputPath: [, output.headers[\"x-amz-restore-output-path\"]],\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_RestoreObjectCommand = de_RestoreObjectCommand;\nconst de_RestoreObjectCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ObjectAlreadyInActiveTierError\":\n        case \"com.amazonaws.s3#ObjectAlreadyInActiveTierError\":\n            throw await de_ObjectAlreadyInActiveTierErrorRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst de_SelectObjectContentCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_SelectObjectContentCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = output.body;\n    contents.Payload = de_SelectObjectContentEventStream(data, context);\n    return contents;\n};\nexports.de_SelectObjectContentCommand = de_SelectObjectContentCommand;\nconst de_SelectObjectContentCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_UploadPartCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_UploadPartCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        ServerSideEncryption: [, output.headers[\"x-amz-server-side-encryption\"]],\n        ETag: [, output.headers[\"etag\"]],\n        ChecksumCRC32: [, output.headers[\"x-amz-checksum-crc32\"]],\n        ChecksumCRC32C: [, output.headers[\"x-amz-checksum-crc32c\"]],\n        ChecksumSHA1: [, output.headers[\"x-amz-checksum-sha1\"]],\n        ChecksumSHA256: [, output.headers[\"x-amz-checksum-sha256\"]],\n        SSECustomerAlgorithm: [, output.headers[\"x-amz-server-side-encryption-customer-algorithm\"]],\n        SSECustomerKeyMD5: [, output.headers[\"x-amz-server-side-encryption-customer-key-md5\"]],\n        SSEKMSKeyId: [, output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"]],\n        BucketKeyEnabled: [\n            () => void 0 !== output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"],\n            () => (0, smithy_client_1.parseBoolean)(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]),\n        ],\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_UploadPartCommand = de_UploadPartCommand;\nconst de_UploadPartCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_UploadPartCopyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_UploadPartCopyCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n        CopySourceVersionId: [, output.headers[\"x-amz-copy-source-version-id\"]],\n        ServerSideEncryption: [, output.headers[\"x-amz-server-side-encryption\"]],\n        SSECustomerAlgorithm: [, output.headers[\"x-amz-server-side-encryption-customer-algorithm\"]],\n        SSECustomerKeyMD5: [, output.headers[\"x-amz-server-side-encryption-customer-key-md5\"]],\n        SSEKMSKeyId: [, output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"]],\n        BucketKeyEnabled: [\n            () => void 0 !== output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"],\n            () => (0, smithy_client_1.parseBoolean)(output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"]),\n        ],\n        RequestCharged: [, output.headers[\"x-amz-request-charged\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.CopyPartResult = de_CopyPartResult(data, context);\n    return contents;\n};\nexports.de_UploadPartCopyCommand = de_UploadPartCopyCommand;\nconst de_UploadPartCopyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst de_WriteGetObjectResponseCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_WriteGetObjectResponseCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_WriteGetObjectResponseCommand = de_WriteGetObjectResponseCommand;\nconst de_WriteGetObjectResponseCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nconst throwDefaultError = (0, smithy_client_1.withBaseException)(S3ServiceException_1.S3ServiceException);\nconst de_BucketAlreadyExistsRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body;\n    const exception = new models_0_1.BucketAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst de_BucketAlreadyOwnedByYouRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body;\n    const exception = new models_0_1.BucketAlreadyOwnedByYou({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst de_InvalidObjectStateRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body;\n    if (data[\"AccessTier\"] !== undefined) {\n        contents.AccessTier = (0, smithy_client_1.expectString)(data[\"AccessTier\"]);\n    }\n    if (data[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = (0, smithy_client_1.expectString)(data[\"StorageClass\"]);\n    }\n    const exception = new models_0_1.InvalidObjectState({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst de_NoSuchBucketRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body;\n    const exception = new models_0_1.NoSuchBucket({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst de_NoSuchKeyRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body;\n    const exception = new models_0_1.NoSuchKey({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst de_NoSuchUploadRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body;\n    const exception = new models_0_1.NoSuchUpload({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst de_NotFoundRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body;\n    const exception = new models_0_1.NotFound({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst de_ObjectAlreadyInActiveTierErrorRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body;\n    const exception = new models_1_1.ObjectAlreadyInActiveTierError({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst de_ObjectNotInActiveTierErrorRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body;\n    const exception = new models_0_1.ObjectNotInActiveTierError({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst de_SelectObjectContentEventStream = (output, context) => {\n    return context.eventStreamMarshaller.deserialize(output, async (event) => {\n        if (event[\"Records\"] != null) {\n            return {\n                Records: await de_RecordsEvent_event(event[\"Records\"], context),\n            };\n        }\n        if (event[\"Stats\"] != null) {\n            return {\n                Stats: await de_StatsEvent_event(event[\"Stats\"], context),\n            };\n        }\n        if (event[\"Progress\"] != null) {\n            return {\n                Progress: await de_ProgressEvent_event(event[\"Progress\"], context),\n            };\n        }\n        if (event[\"Cont\"] != null) {\n            return {\n                Cont: await de_ContinuationEvent_event(event[\"Cont\"], context),\n            };\n        }\n        if (event[\"End\"] != null) {\n            return {\n                End: await de_EndEvent_event(event[\"End\"], context),\n            };\n        }\n        return { $unknown: output };\n    });\n};\nconst de_ContinuationEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    Object.assign(contents, de_ContinuationEvent(data, context));\n    return contents;\n};\nconst de_EndEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    Object.assign(contents, de_EndEvent(data, context));\n    return contents;\n};\nconst de_ProgressEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    contents.Details = de_Progress(data, context);\n    return contents;\n};\nconst de_RecordsEvent_event = async (output, context) => {\n    const contents = {};\n    contents.Payload = output.body;\n    return contents;\n};\nconst de_StatsEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    contents.Details = de_Stats(data, context);\n    return contents;\n};\nconst se_AbortIncompleteMultipartUpload = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"AbortIncompleteMultipartUpload\");\n    if (input.DaysAfterInitiation != null) {\n        const node = xml_builder_1.XmlNode.of(\"DaysAfterInitiation\", String(input.DaysAfterInitiation)).withName(\"DaysAfterInitiation\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_AccelerateConfiguration = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"AccelerateConfiguration\");\n    if (input.Status != null) {\n        const node = xml_builder_1.XmlNode.of(\"BucketAccelerateStatus\", input.Status).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_AccessControlPolicy = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"AccessControlPolicy\");\n    if (input.Grants != null) {\n        const nodes = se_Grants(input.Grants, context);\n        const containerNode = new xml_builder_1.XmlNode(\"AccessControlList\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    if (input.Owner != null) {\n        const node = se_Owner(input.Owner, context).withName(\"Owner\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_AccessControlTranslation = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"AccessControlTranslation\");\n    if (input.Owner != null) {\n        const node = xml_builder_1.XmlNode.of(\"OwnerOverride\", input.Owner).withName(\"Owner\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_AllowedHeaders = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"AllowedHeader\", entry);\n        return node.withName(\"member\");\n    });\n};\nconst se_AllowedMethods = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"AllowedMethod\", entry);\n        return node.withName(\"member\");\n    });\n};\nconst se_AllowedOrigins = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"AllowedOrigin\", entry);\n        return node.withName(\"member\");\n    });\n};\nconst se_AnalyticsAndOperator = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"AnalyticsAndOperator\");\n    if (input.Prefix != null) {\n        const node = xml_builder_1.XmlNode.of(\"Prefix\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags != null) {\n        const nodes = se_TagSet(input.Tags, context);\n        nodes.map((node) => {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nconst se_AnalyticsConfiguration = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"AnalyticsConfiguration\");\n    if (input.Id != null) {\n        const node = xml_builder_1.XmlNode.of(\"AnalyticsId\", input.Id).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter != null) {\n        const node = se_AnalyticsFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.StorageClassAnalysis != null) {\n        const node = se_StorageClassAnalysis(input.StorageClassAnalysis, context).withName(\"StorageClassAnalysis\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_AnalyticsExportDestination = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"AnalyticsExportDestination\");\n    if (input.S3BucketDestination != null) {\n        const node = se_AnalyticsS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_AnalyticsFilter = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"AnalyticsFilter\");\n    models_0_1.AnalyticsFilter.visit(input, {\n        Prefix: (value) => {\n            const node = xml_builder_1.XmlNode.of(\"Prefix\", value).withName(\"Prefix\");\n            bodyNode.addChildNode(node);\n        },\n        Tag: (value) => {\n            const node = se_Tag(value, context).withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        },\n        And: (value) => {\n            const node = se_AnalyticsAndOperator(value, context).withName(\"And\");\n            bodyNode.addChildNode(node);\n        },\n        _: (name, value) => {\n            if (!(value instanceof xml_builder_1.XmlNode || value instanceof xml_builder_1.XmlText)) {\n                throw new Error(\"Unable to serialize unknown union members in XML.\");\n            }\n            bodyNode.addChildNode(new xml_builder_1.XmlNode(name).addChildNode(value));\n        },\n    });\n    return bodyNode;\n};\nconst se_AnalyticsS3BucketDestination = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"AnalyticsS3BucketDestination\");\n    if (input.Format != null) {\n        const node = xml_builder_1.XmlNode.of(\"AnalyticsS3ExportFileFormat\", input.Format).withName(\"Format\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.BucketAccountId != null) {\n        const node = xml_builder_1.XmlNode.of(\"AccountId\", input.BucketAccountId).withName(\"BucketAccountId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Bucket != null) {\n        const node = xml_builder_1.XmlNode.of(\"BucketName\", input.Bucket).withName(\"Bucket\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix != null) {\n        const node = xml_builder_1.XmlNode.of(\"Prefix\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_BucketLifecycleConfiguration = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"BucketLifecycleConfiguration\");\n    if (input.Rules != null) {\n        const nodes = se_LifecycleRules(input.Rules, context);\n        nodes.map((node) => {\n            node = node.withName(\"Rule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nconst se_BucketLoggingStatus = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"BucketLoggingStatus\");\n    if (input.LoggingEnabled != null) {\n        const node = se_LoggingEnabled(input.LoggingEnabled, context).withName(\"LoggingEnabled\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_CompletedMultipartUpload = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CompletedMultipartUpload\");\n    if (input.Parts != null) {\n        const nodes = se_CompletedPartList(input.Parts, context);\n        nodes.map((node) => {\n            node = node.withName(\"Part\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nconst se_CompletedPart = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CompletedPart\");\n    if (input.ETag != null) {\n        const node = xml_builder_1.XmlNode.of(\"ETag\", input.ETag).withName(\"ETag\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ChecksumCRC32 != null) {\n        const node = xml_builder_1.XmlNode.of(\"ChecksumCRC32\", input.ChecksumCRC32).withName(\"ChecksumCRC32\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ChecksumCRC32C != null) {\n        const node = xml_builder_1.XmlNode.of(\"ChecksumCRC32C\", input.ChecksumCRC32C).withName(\"ChecksumCRC32C\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ChecksumSHA1 != null) {\n        const node = xml_builder_1.XmlNode.of(\"ChecksumSHA1\", input.ChecksumSHA1).withName(\"ChecksumSHA1\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ChecksumSHA256 != null) {\n        const node = xml_builder_1.XmlNode.of(\"ChecksumSHA256\", input.ChecksumSHA256).withName(\"ChecksumSHA256\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.PartNumber != null) {\n        const node = xml_builder_1.XmlNode.of(\"PartNumber\", String(input.PartNumber)).withName(\"PartNumber\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_CompletedPartList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_CompletedPart(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_Condition = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Condition\");\n    if (input.HttpErrorCodeReturnedEquals != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"HttpErrorCodeReturnedEquals\", input.HttpErrorCodeReturnedEquals)\n            .withName(\"HttpErrorCodeReturnedEquals\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.KeyPrefixEquals != null) {\n        const node = xml_builder_1.XmlNode.of(\"KeyPrefixEquals\", input.KeyPrefixEquals).withName(\"KeyPrefixEquals\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_CORSConfiguration = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CORSConfiguration\");\n    if (input.CORSRules != null) {\n        const nodes = se_CORSRules(input.CORSRules, context);\n        nodes.map((node) => {\n            node = node.withName(\"CORSRule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nconst se_CORSRule = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CORSRule\");\n    if (input.ID != null) {\n        const node = xml_builder_1.XmlNode.of(\"ID\", input.ID).withName(\"ID\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AllowedHeaders != null) {\n        const nodes = se_AllowedHeaders(input.AllowedHeaders, context);\n        nodes.map((node) => {\n            node = node.withName(\"AllowedHeader\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.AllowedMethods != null) {\n        const nodes = se_AllowedMethods(input.AllowedMethods, context);\n        nodes.map((node) => {\n            node = node.withName(\"AllowedMethod\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.AllowedOrigins != null) {\n        const nodes = se_AllowedOrigins(input.AllowedOrigins, context);\n        nodes.map((node) => {\n            node = node.withName(\"AllowedOrigin\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.ExposeHeaders != null) {\n        const nodes = se_ExposeHeaders(input.ExposeHeaders, context);\n        nodes.map((node) => {\n            node = node.withName(\"ExposeHeader\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.MaxAgeSeconds != null) {\n        const node = xml_builder_1.XmlNode.of(\"MaxAgeSeconds\", String(input.MaxAgeSeconds)).withName(\"MaxAgeSeconds\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_CORSRules = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_CORSRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_CreateBucketConfiguration = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CreateBucketConfiguration\");\n    if (input.LocationConstraint != null) {\n        const node = xml_builder_1.XmlNode.of(\"BucketLocationConstraint\", input.LocationConstraint).withName(\"LocationConstraint\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_CSVInput = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CSVInput\");\n    if (input.FileHeaderInfo != null) {\n        const node = xml_builder_1.XmlNode.of(\"FileHeaderInfo\", input.FileHeaderInfo).withName(\"FileHeaderInfo\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Comments != null) {\n        const node = xml_builder_1.XmlNode.of(\"Comments\", input.Comments).withName(\"Comments\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QuoteEscapeCharacter != null) {\n        const node = xml_builder_1.XmlNode.of(\"QuoteEscapeCharacter\", input.QuoteEscapeCharacter).withName(\"QuoteEscapeCharacter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RecordDelimiter != null) {\n        const node = xml_builder_1.XmlNode.of(\"RecordDelimiter\", input.RecordDelimiter).withName(\"RecordDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FieldDelimiter != null) {\n        const node = xml_builder_1.XmlNode.of(\"FieldDelimiter\", input.FieldDelimiter).withName(\"FieldDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QuoteCharacter != null) {\n        const node = xml_builder_1.XmlNode.of(\"QuoteCharacter\", input.QuoteCharacter).withName(\"QuoteCharacter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AllowQuotedRecordDelimiter != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"AllowQuotedRecordDelimiter\", String(input.AllowQuotedRecordDelimiter))\n            .withName(\"AllowQuotedRecordDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_CSVOutput = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CSVOutput\");\n    if (input.QuoteFields != null) {\n        const node = xml_builder_1.XmlNode.of(\"QuoteFields\", input.QuoteFields).withName(\"QuoteFields\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QuoteEscapeCharacter != null) {\n        const node = xml_builder_1.XmlNode.of(\"QuoteEscapeCharacter\", input.QuoteEscapeCharacter).withName(\"QuoteEscapeCharacter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RecordDelimiter != null) {\n        const node = xml_builder_1.XmlNode.of(\"RecordDelimiter\", input.RecordDelimiter).withName(\"RecordDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FieldDelimiter != null) {\n        const node = xml_builder_1.XmlNode.of(\"FieldDelimiter\", input.FieldDelimiter).withName(\"FieldDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QuoteCharacter != null) {\n        const node = xml_builder_1.XmlNode.of(\"QuoteCharacter\", input.QuoteCharacter).withName(\"QuoteCharacter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_DefaultRetention = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"DefaultRetention\");\n    if (input.Mode != null) {\n        const node = xml_builder_1.XmlNode.of(\"ObjectLockRetentionMode\", input.Mode).withName(\"Mode\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Days != null) {\n        const node = xml_builder_1.XmlNode.of(\"Days\", String(input.Days)).withName(\"Days\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Years != null) {\n        const node = xml_builder_1.XmlNode.of(\"Years\", String(input.Years)).withName(\"Years\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_Delete = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Delete\");\n    if (input.Objects != null) {\n        const nodes = se_ObjectIdentifierList(input.Objects, context);\n        nodes.map((node) => {\n            node = node.withName(\"Object\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.Quiet != null) {\n        const node = xml_builder_1.XmlNode.of(\"Quiet\", String(input.Quiet)).withName(\"Quiet\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_DeleteMarkerReplication = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"DeleteMarkerReplication\");\n    if (input.Status != null) {\n        const node = xml_builder_1.XmlNode.of(\"DeleteMarkerReplicationStatus\", input.Status).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_Destination = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Destination\");\n    if (input.Bucket != null) {\n        const node = xml_builder_1.XmlNode.of(\"BucketName\", input.Bucket).withName(\"Bucket\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Account != null) {\n        const node = xml_builder_1.XmlNode.of(\"AccountId\", input.Account).withName(\"Account\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.StorageClass != null) {\n        const node = xml_builder_1.XmlNode.of(\"StorageClass\", input.StorageClass).withName(\"StorageClass\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessControlTranslation != null) {\n        const node = se_AccessControlTranslation(input.AccessControlTranslation, context).withName(\"AccessControlTranslation\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EncryptionConfiguration != null) {\n        const node = se_EncryptionConfiguration(input.EncryptionConfiguration, context).withName(\"EncryptionConfiguration\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReplicationTime != null) {\n        const node = se_ReplicationTime(input.ReplicationTime, context).withName(\"ReplicationTime\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Metrics != null) {\n        const node = se_Metrics(input.Metrics, context).withName(\"Metrics\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_Encryption = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Encryption\");\n    if (input.EncryptionType != null) {\n        const node = xml_builder_1.XmlNode.of(\"ServerSideEncryption\", input.EncryptionType).withName(\"EncryptionType\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.KMSKeyId != null) {\n        const node = xml_builder_1.XmlNode.of(\"SSEKMSKeyId\", input.KMSKeyId).withName(\"KMSKeyId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.KMSContext != null) {\n        const node = xml_builder_1.XmlNode.of(\"KMSContext\", input.KMSContext).withName(\"KMSContext\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_EncryptionConfiguration = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"EncryptionConfiguration\");\n    if (input.ReplicaKmsKeyID != null) {\n        const node = xml_builder_1.XmlNode.of(\"ReplicaKmsKeyID\", input.ReplicaKmsKeyID).withName(\"ReplicaKmsKeyID\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ErrorDocument = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ErrorDocument\");\n    if (input.Key != null) {\n        const node = xml_builder_1.XmlNode.of(\"ObjectKey\", input.Key).withName(\"Key\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_EventBridgeConfiguration = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"EventBridgeConfiguration\");\n    return bodyNode;\n};\nconst se_EventList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"Event\", entry);\n        return node.withName(\"member\");\n    });\n};\nconst se_ExistingObjectReplication = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ExistingObjectReplication\");\n    if (input.Status != null) {\n        const node = xml_builder_1.XmlNode.of(\"ExistingObjectReplicationStatus\", input.Status).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ExposeHeaders = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"ExposeHeader\", entry);\n        return node.withName(\"member\");\n    });\n};\nconst se_FilterRule = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"FilterRule\");\n    if (input.Name != null) {\n        const node = xml_builder_1.XmlNode.of(\"FilterRuleName\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Value != null) {\n        const node = xml_builder_1.XmlNode.of(\"FilterRuleValue\", input.Value).withName(\"Value\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_FilterRuleList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_FilterRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_GlacierJobParameters = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"GlacierJobParameters\");\n    if (input.Tier != null) {\n        const node = xml_builder_1.XmlNode.of(\"Tier\", input.Tier).withName(\"Tier\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_Grant = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Grant\");\n    if (input.Grantee != null) {\n        const node = se_Grantee(input.Grantee, context).withName(\"Grantee\");\n        node.addAttribute(\"xmlns:xsi\", \"http://www.w3.org/2001/XMLSchema-instance\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Permission != null) {\n        const node = xml_builder_1.XmlNode.of(\"Permission\", input.Permission).withName(\"Permission\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_Grantee = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Grantee\");\n    if (input.DisplayName != null) {\n        const node = xml_builder_1.XmlNode.of(\"DisplayName\", input.DisplayName).withName(\"DisplayName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EmailAddress != null) {\n        const node = xml_builder_1.XmlNode.of(\"EmailAddress\", input.EmailAddress).withName(\"EmailAddress\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ID != null) {\n        const node = xml_builder_1.XmlNode.of(\"ID\", input.ID).withName(\"ID\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.URI != null) {\n        const node = xml_builder_1.XmlNode.of(\"URI\", input.URI).withName(\"URI\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Type != null) {\n        bodyNode.addAttribute(\"xsi:type\", input.Type);\n    }\n    return bodyNode;\n};\nconst se_Grants = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_Grant(entry, context);\n        return node.withName(\"Grant\");\n    });\n};\nconst se_IndexDocument = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"IndexDocument\");\n    if (input.Suffix != null) {\n        const node = xml_builder_1.XmlNode.of(\"Suffix\", input.Suffix).withName(\"Suffix\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_InputSerialization = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"InputSerialization\");\n    if (input.CSV != null) {\n        const node = se_CSVInput(input.CSV, context).withName(\"CSV\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CompressionType != null) {\n        const node = xml_builder_1.XmlNode.of(\"CompressionType\", input.CompressionType).withName(\"CompressionType\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.JSON != null) {\n        const node = se_JSONInput(input.JSON, context).withName(\"JSON\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Parquet != null) {\n        const node = se_ParquetInput(input.Parquet, context).withName(\"Parquet\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_IntelligentTieringAndOperator = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"IntelligentTieringAndOperator\");\n    if (input.Prefix != null) {\n        const node = xml_builder_1.XmlNode.of(\"Prefix\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags != null) {\n        const nodes = se_TagSet(input.Tags, context);\n        nodes.map((node) => {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nconst se_IntelligentTieringConfiguration = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"IntelligentTieringConfiguration\");\n    if (input.Id != null) {\n        const node = xml_builder_1.XmlNode.of(\"IntelligentTieringId\", input.Id).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter != null) {\n        const node = se_IntelligentTieringFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Status != null) {\n        const node = xml_builder_1.XmlNode.of(\"IntelligentTieringStatus\", input.Status).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tierings != null) {\n        const nodes = se_TieringList(input.Tierings, context);\n        nodes.map((node) => {\n            node = node.withName(\"Tiering\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nconst se_IntelligentTieringFilter = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"IntelligentTieringFilter\");\n    if (input.Prefix != null) {\n        const node = xml_builder_1.XmlNode.of(\"Prefix\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tag != null) {\n        const node = se_Tag(input.Tag, context).withName(\"Tag\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.And != null) {\n        const node = se_IntelligentTieringAndOperator(input.And, context).withName(\"And\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_InventoryConfiguration = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"InventoryConfiguration\");\n    if (input.Destination != null) {\n        const node = se_InventoryDestination(input.Destination, context).withName(\"Destination\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IsEnabled != null) {\n        const node = xml_builder_1.XmlNode.of(\"IsEnabled\", String(input.IsEnabled)).withName(\"IsEnabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter != null) {\n        const node = se_InventoryFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Id != null) {\n        const node = xml_builder_1.XmlNode.of(\"InventoryId\", input.Id).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IncludedObjectVersions != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"InventoryIncludedObjectVersions\", input.IncludedObjectVersions)\n            .withName(\"IncludedObjectVersions\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OptionalFields != null) {\n        const nodes = se_InventoryOptionalFields(input.OptionalFields, context);\n        const containerNode = new xml_builder_1.XmlNode(\"OptionalFields\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    if (input.Schedule != null) {\n        const node = se_InventorySchedule(input.Schedule, context).withName(\"Schedule\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_InventoryDestination = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"InventoryDestination\");\n    if (input.S3BucketDestination != null) {\n        const node = se_InventoryS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_InventoryEncryption = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"InventoryEncryption\");\n    if (input.SSES3 != null) {\n        const node = se_SSES3(input.SSES3, context).withName(\"SSE-S3\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SSEKMS != null) {\n        const node = se_SSEKMS(input.SSEKMS, context).withName(\"SSE-KMS\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_InventoryFilter = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"InventoryFilter\");\n    if (input.Prefix != null) {\n        const node = xml_builder_1.XmlNode.of(\"Prefix\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_InventoryOptionalFields = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"InventoryOptionalField\", entry);\n        return node.withName(\"Field\");\n    });\n};\nconst se_InventoryS3BucketDestination = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"InventoryS3BucketDestination\");\n    if (input.AccountId != null) {\n        const node = xml_builder_1.XmlNode.of(\"AccountId\", input.AccountId).withName(\"AccountId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Bucket != null) {\n        const node = xml_builder_1.XmlNode.of(\"BucketName\", input.Bucket).withName(\"Bucket\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Format != null) {\n        const node = xml_builder_1.XmlNode.of(\"InventoryFormat\", input.Format).withName(\"Format\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix != null) {\n        const node = xml_builder_1.XmlNode.of(\"Prefix\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Encryption != null) {\n        const node = se_InventoryEncryption(input.Encryption, context).withName(\"Encryption\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_InventorySchedule = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"InventorySchedule\");\n    if (input.Frequency != null) {\n        const node = xml_builder_1.XmlNode.of(\"InventoryFrequency\", input.Frequency).withName(\"Frequency\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_JSONInput = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"JSONInput\");\n    if (input.Type != null) {\n        const node = xml_builder_1.XmlNode.of(\"JSONType\", input.Type).withName(\"Type\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_JSONOutput = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"JSONOutput\");\n    if (input.RecordDelimiter != null) {\n        const node = xml_builder_1.XmlNode.of(\"RecordDelimiter\", input.RecordDelimiter).withName(\"RecordDelimiter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_LambdaFunctionConfiguration = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"LambdaFunctionConfiguration\");\n    if (input.Id != null) {\n        const node = xml_builder_1.XmlNode.of(\"NotificationId\", input.Id).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.LambdaFunctionArn != null) {\n        const node = xml_builder_1.XmlNode.of(\"LambdaFunctionArn\", input.LambdaFunctionArn).withName(\"CloudFunction\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Events != null) {\n        const nodes = se_EventList(input.Events, context);\n        nodes.map((node) => {\n            node = node.withName(\"Event\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.Filter != null) {\n        const node = se_NotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_LambdaFunctionConfigurationList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_LambdaFunctionConfiguration(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_LifecycleExpiration = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"LifecycleExpiration\");\n    if (input.Date != null) {\n        const node = xml_builder_1.XmlNode.of(\"Date\", (input.Date.toISOString().split(\".\")[0] + \"Z\").toString()).withName(\"Date\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Days != null) {\n        const node = xml_builder_1.XmlNode.of(\"Days\", String(input.Days)).withName(\"Days\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ExpiredObjectDeleteMarker != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"ExpiredObjectDeleteMarker\", String(input.ExpiredObjectDeleteMarker))\n            .withName(\"ExpiredObjectDeleteMarker\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_LifecycleRule = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"LifecycleRule\");\n    if (input.Expiration != null) {\n        const node = se_LifecycleExpiration(input.Expiration, context).withName(\"Expiration\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ID != null) {\n        const node = xml_builder_1.XmlNode.of(\"ID\", input.ID).withName(\"ID\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix != null) {\n        const node = xml_builder_1.XmlNode.of(\"Prefix\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter != null) {\n        const node = se_LifecycleRuleFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Status != null) {\n        const node = xml_builder_1.XmlNode.of(\"ExpirationStatus\", input.Status).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Transitions != null) {\n        const nodes = se_TransitionList(input.Transitions, context);\n        nodes.map((node) => {\n            node = node.withName(\"Transition\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.NoncurrentVersionTransitions != null) {\n        const nodes = se_NoncurrentVersionTransitionList(input.NoncurrentVersionTransitions, context);\n        nodes.map((node) => {\n            node = node.withName(\"NoncurrentVersionTransition\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.NoncurrentVersionExpiration != null) {\n        const node = se_NoncurrentVersionExpiration(input.NoncurrentVersionExpiration, context).withName(\"NoncurrentVersionExpiration\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AbortIncompleteMultipartUpload != null) {\n        const node = se_AbortIncompleteMultipartUpload(input.AbortIncompleteMultipartUpload, context).withName(\"AbortIncompleteMultipartUpload\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_LifecycleRuleAndOperator = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"LifecycleRuleAndOperator\");\n    if (input.Prefix != null) {\n        const node = xml_builder_1.XmlNode.of(\"Prefix\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags != null) {\n        const nodes = se_TagSet(input.Tags, context);\n        nodes.map((node) => {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.ObjectSizeGreaterThan != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"ObjectSizeGreaterThanBytes\", String(input.ObjectSizeGreaterThan))\n            .withName(\"ObjectSizeGreaterThan\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ObjectSizeLessThan != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"ObjectSizeLessThanBytes\", String(input.ObjectSizeLessThan))\n            .withName(\"ObjectSizeLessThan\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_LifecycleRuleFilter = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"LifecycleRuleFilter\");\n    models_0_1.LifecycleRuleFilter.visit(input, {\n        Prefix: (value) => {\n            const node = xml_builder_1.XmlNode.of(\"Prefix\", value).withName(\"Prefix\");\n            bodyNode.addChildNode(node);\n        },\n        Tag: (value) => {\n            const node = se_Tag(value, context).withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        },\n        ObjectSizeGreaterThan: (value) => {\n            const node = xml_builder_1.XmlNode.of(\"ObjectSizeGreaterThanBytes\", String(value)).withName(\"ObjectSizeGreaterThan\");\n            bodyNode.addChildNode(node);\n        },\n        ObjectSizeLessThan: (value) => {\n            const node = xml_builder_1.XmlNode.of(\"ObjectSizeLessThanBytes\", String(value)).withName(\"ObjectSizeLessThan\");\n            bodyNode.addChildNode(node);\n        },\n        And: (value) => {\n            const node = se_LifecycleRuleAndOperator(value, context).withName(\"And\");\n            bodyNode.addChildNode(node);\n        },\n        _: (name, value) => {\n            if (!(value instanceof xml_builder_1.XmlNode || value instanceof xml_builder_1.XmlText)) {\n                throw new Error(\"Unable to serialize unknown union members in XML.\");\n            }\n            bodyNode.addChildNode(new xml_builder_1.XmlNode(name).addChildNode(value));\n        },\n    });\n    return bodyNode;\n};\nconst se_LifecycleRules = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_LifecycleRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_LoggingEnabled = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"LoggingEnabled\");\n    if (input.TargetBucket != null) {\n        const node = xml_builder_1.XmlNode.of(\"TargetBucket\", input.TargetBucket).withName(\"TargetBucket\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.TargetGrants != null) {\n        const nodes = se_TargetGrants(input.TargetGrants, context);\n        const containerNode = new xml_builder_1.XmlNode(\"TargetGrants\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    if (input.TargetPrefix != null) {\n        const node = xml_builder_1.XmlNode.of(\"TargetPrefix\", input.TargetPrefix).withName(\"TargetPrefix\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_MetadataEntry = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"MetadataEntry\");\n    if (input.Name != null) {\n        const node = xml_builder_1.XmlNode.of(\"MetadataKey\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Value != null) {\n        const node = xml_builder_1.XmlNode.of(\"MetadataValue\", input.Value).withName(\"Value\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_Metrics = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Metrics\");\n    if (input.Status != null) {\n        const node = xml_builder_1.XmlNode.of(\"MetricsStatus\", input.Status).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EventThreshold != null) {\n        const node = se_ReplicationTimeValue(input.EventThreshold, context).withName(\"EventThreshold\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_MetricsAndOperator = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"MetricsAndOperator\");\n    if (input.Prefix != null) {\n        const node = xml_builder_1.XmlNode.of(\"Prefix\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags != null) {\n        const nodes = se_TagSet(input.Tags, context);\n        nodes.map((node) => {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.AccessPointArn != null) {\n        const node = xml_builder_1.XmlNode.of(\"AccessPointArn\", input.AccessPointArn).withName(\"AccessPointArn\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_MetricsConfiguration = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"MetricsConfiguration\");\n    if (input.Id != null) {\n        const node = xml_builder_1.XmlNode.of(\"MetricsId\", input.Id).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter != null) {\n        const node = se_MetricsFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_MetricsFilter = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"MetricsFilter\");\n    models_0_1.MetricsFilter.visit(input, {\n        Prefix: (value) => {\n            const node = xml_builder_1.XmlNode.of(\"Prefix\", value).withName(\"Prefix\");\n            bodyNode.addChildNode(node);\n        },\n        Tag: (value) => {\n            const node = se_Tag(value, context).withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        },\n        AccessPointArn: (value) => {\n            const node = xml_builder_1.XmlNode.of(\"AccessPointArn\", value).withName(\"AccessPointArn\");\n            bodyNode.addChildNode(node);\n        },\n        And: (value) => {\n            const node = se_MetricsAndOperator(value, context).withName(\"And\");\n            bodyNode.addChildNode(node);\n        },\n        _: (name, value) => {\n            if (!(value instanceof xml_builder_1.XmlNode || value instanceof xml_builder_1.XmlText)) {\n                throw new Error(\"Unable to serialize unknown union members in XML.\");\n            }\n            bodyNode.addChildNode(new xml_builder_1.XmlNode(name).addChildNode(value));\n        },\n    });\n    return bodyNode;\n};\nconst se_NoncurrentVersionExpiration = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"NoncurrentVersionExpiration\");\n    if (input.NoncurrentDays != null) {\n        const node = xml_builder_1.XmlNode.of(\"Days\", String(input.NoncurrentDays)).withName(\"NoncurrentDays\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.NewerNoncurrentVersions != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"VersionCount\", String(input.NewerNoncurrentVersions))\n            .withName(\"NewerNoncurrentVersions\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_NoncurrentVersionTransition = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"NoncurrentVersionTransition\");\n    if (input.NoncurrentDays != null) {\n        const node = xml_builder_1.XmlNode.of(\"Days\", String(input.NoncurrentDays)).withName(\"NoncurrentDays\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.StorageClass != null) {\n        const node = xml_builder_1.XmlNode.of(\"TransitionStorageClass\", input.StorageClass).withName(\"StorageClass\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.NewerNoncurrentVersions != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"VersionCount\", String(input.NewerNoncurrentVersions))\n            .withName(\"NewerNoncurrentVersions\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_NoncurrentVersionTransitionList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_NoncurrentVersionTransition(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_NotificationConfiguration = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"NotificationConfiguration\");\n    if (input.TopicConfigurations != null) {\n        const nodes = se_TopicConfigurationList(input.TopicConfigurations, context);\n        nodes.map((node) => {\n            node = node.withName(\"TopicConfiguration\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.QueueConfigurations != null) {\n        const nodes = se_QueueConfigurationList(input.QueueConfigurations, context);\n        nodes.map((node) => {\n            node = node.withName(\"QueueConfiguration\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.LambdaFunctionConfigurations != null) {\n        const nodes = se_LambdaFunctionConfigurationList(input.LambdaFunctionConfigurations, context);\n        nodes.map((node) => {\n            node = node.withName(\"CloudFunctionConfiguration\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.EventBridgeConfiguration != null) {\n        const node = se_EventBridgeConfiguration(input.EventBridgeConfiguration, context).withName(\"EventBridgeConfiguration\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_NotificationConfigurationFilter = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"NotificationConfigurationFilter\");\n    if (input.Key != null) {\n        const node = se_S3KeyFilter(input.Key, context).withName(\"S3Key\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ObjectIdentifier = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ObjectIdentifier\");\n    if (input.Key != null) {\n        const node = xml_builder_1.XmlNode.of(\"ObjectKey\", input.Key).withName(\"Key\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.VersionId != null) {\n        const node = xml_builder_1.XmlNode.of(\"ObjectVersionId\", input.VersionId).withName(\"VersionId\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ObjectIdentifierList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_ObjectIdentifier(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_ObjectLockConfiguration = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ObjectLockConfiguration\");\n    if (input.ObjectLockEnabled != null) {\n        const node = xml_builder_1.XmlNode.of(\"ObjectLockEnabled\", input.ObjectLockEnabled).withName(\"ObjectLockEnabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Rule != null) {\n        const node = se_ObjectLockRule(input.Rule, context).withName(\"Rule\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ObjectLockLegalHold = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ObjectLockLegalHold\");\n    if (input.Status != null) {\n        const node = xml_builder_1.XmlNode.of(\"ObjectLockLegalHoldStatus\", input.Status).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ObjectLockRetention = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ObjectLockRetention\");\n    if (input.Mode != null) {\n        const node = xml_builder_1.XmlNode.of(\"ObjectLockRetentionMode\", input.Mode).withName(\"Mode\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RetainUntilDate != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"Date\", (input.RetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString())\n            .withName(\"RetainUntilDate\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ObjectLockRule = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ObjectLockRule\");\n    if (input.DefaultRetention != null) {\n        const node = se_DefaultRetention(input.DefaultRetention, context).withName(\"DefaultRetention\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_OutputLocation = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OutputLocation\");\n    if (input.S3 != null) {\n        const node = se_S3Location(input.S3, context).withName(\"S3\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_OutputSerialization = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OutputSerialization\");\n    if (input.CSV != null) {\n        const node = se_CSVOutput(input.CSV, context).withName(\"CSV\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.JSON != null) {\n        const node = se_JSONOutput(input.JSON, context).withName(\"JSON\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_Owner = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Owner\");\n    if (input.DisplayName != null) {\n        const node = xml_builder_1.XmlNode.of(\"DisplayName\", input.DisplayName).withName(\"DisplayName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ID != null) {\n        const node = xml_builder_1.XmlNode.of(\"ID\", input.ID).withName(\"ID\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_OwnershipControls = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OwnershipControls\");\n    if (input.Rules != null) {\n        const nodes = se_OwnershipControlsRules(input.Rules, context);\n        nodes.map((node) => {\n            node = node.withName(\"Rule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nconst se_OwnershipControlsRule = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OwnershipControlsRule\");\n    if (input.ObjectOwnership != null) {\n        const node = xml_builder_1.XmlNode.of(\"ObjectOwnership\", input.ObjectOwnership).withName(\"ObjectOwnership\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_OwnershipControlsRules = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_OwnershipControlsRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_ParquetInput = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ParquetInput\");\n    return bodyNode;\n};\nconst se_PublicAccessBlockConfiguration = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"PublicAccessBlockConfiguration\");\n    if (input.BlockPublicAcls != null) {\n        const node = xml_builder_1.XmlNode.of(\"Setting\", String(input.BlockPublicAcls)).withName(\"BlockPublicAcls\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IgnorePublicAcls != null) {\n        const node = xml_builder_1.XmlNode.of(\"Setting\", String(input.IgnorePublicAcls)).withName(\"IgnorePublicAcls\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.BlockPublicPolicy != null) {\n        const node = xml_builder_1.XmlNode.of(\"Setting\", String(input.BlockPublicPolicy)).withName(\"BlockPublicPolicy\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RestrictPublicBuckets != null) {\n        const node = xml_builder_1.XmlNode.of(\"Setting\", String(input.RestrictPublicBuckets)).withName(\"RestrictPublicBuckets\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_QueueConfiguration = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"QueueConfiguration\");\n    if (input.Id != null) {\n        const node = xml_builder_1.XmlNode.of(\"NotificationId\", input.Id).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QueueArn != null) {\n        const node = xml_builder_1.XmlNode.of(\"QueueArn\", input.QueueArn).withName(\"Queue\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Events != null) {\n        const nodes = se_EventList(input.Events, context);\n        nodes.map((node) => {\n            node = node.withName(\"Event\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.Filter != null) {\n        const node = se_NotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_QueueConfigurationList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_QueueConfiguration(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_Redirect = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Redirect\");\n    if (input.HostName != null) {\n        const node = xml_builder_1.XmlNode.of(\"HostName\", input.HostName).withName(\"HostName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.HttpRedirectCode != null) {\n        const node = xml_builder_1.XmlNode.of(\"HttpRedirectCode\", input.HttpRedirectCode).withName(\"HttpRedirectCode\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Protocol != null) {\n        const node = xml_builder_1.XmlNode.of(\"Protocol\", input.Protocol).withName(\"Protocol\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReplaceKeyPrefixWith != null) {\n        const node = xml_builder_1.XmlNode.of(\"ReplaceKeyPrefixWith\", input.ReplaceKeyPrefixWith).withName(\"ReplaceKeyPrefixWith\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReplaceKeyWith != null) {\n        const node = xml_builder_1.XmlNode.of(\"ReplaceKeyWith\", input.ReplaceKeyWith).withName(\"ReplaceKeyWith\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_RedirectAllRequestsTo = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"RedirectAllRequestsTo\");\n    if (input.HostName != null) {\n        const node = xml_builder_1.XmlNode.of(\"HostName\", input.HostName).withName(\"HostName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Protocol != null) {\n        const node = xml_builder_1.XmlNode.of(\"Protocol\", input.Protocol).withName(\"Protocol\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ReplicaModifications = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ReplicaModifications\");\n    if (input.Status != null) {\n        const node = xml_builder_1.XmlNode.of(\"ReplicaModificationsStatus\", input.Status).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ReplicationConfiguration = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ReplicationConfiguration\");\n    if (input.Role != null) {\n        const node = xml_builder_1.XmlNode.of(\"Role\", input.Role).withName(\"Role\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Rules != null) {\n        const nodes = se_ReplicationRules(input.Rules, context);\n        nodes.map((node) => {\n            node = node.withName(\"Rule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nconst se_ReplicationRule = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ReplicationRule\");\n    if (input.ID != null) {\n        const node = xml_builder_1.XmlNode.of(\"ID\", input.ID).withName(\"ID\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Priority != null) {\n        const node = xml_builder_1.XmlNode.of(\"Priority\", String(input.Priority)).withName(\"Priority\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix != null) {\n        const node = xml_builder_1.XmlNode.of(\"Prefix\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Filter != null) {\n        const node = se_ReplicationRuleFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Status != null) {\n        const node = xml_builder_1.XmlNode.of(\"ReplicationRuleStatus\", input.Status).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SourceSelectionCriteria != null) {\n        const node = se_SourceSelectionCriteria(input.SourceSelectionCriteria, context).withName(\"SourceSelectionCriteria\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ExistingObjectReplication != null) {\n        const node = se_ExistingObjectReplication(input.ExistingObjectReplication, context).withName(\"ExistingObjectReplication\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Destination != null) {\n        const node = se_Destination(input.Destination, context).withName(\"Destination\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.DeleteMarkerReplication != null) {\n        const node = se_DeleteMarkerReplication(input.DeleteMarkerReplication, context).withName(\"DeleteMarkerReplication\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ReplicationRuleAndOperator = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ReplicationRuleAndOperator\");\n    if (input.Prefix != null) {\n        const node = xml_builder_1.XmlNode.of(\"Prefix\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags != null) {\n        const nodes = se_TagSet(input.Tags, context);\n        nodes.map((node) => {\n            node = node.withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nconst se_ReplicationRuleFilter = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ReplicationRuleFilter\");\n    models_0_1.ReplicationRuleFilter.visit(input, {\n        Prefix: (value) => {\n            const node = xml_builder_1.XmlNode.of(\"Prefix\", value).withName(\"Prefix\");\n            bodyNode.addChildNode(node);\n        },\n        Tag: (value) => {\n            const node = se_Tag(value, context).withName(\"Tag\");\n            bodyNode.addChildNode(node);\n        },\n        And: (value) => {\n            const node = se_ReplicationRuleAndOperator(value, context).withName(\"And\");\n            bodyNode.addChildNode(node);\n        },\n        _: (name, value) => {\n            if (!(value instanceof xml_builder_1.XmlNode || value instanceof xml_builder_1.XmlText)) {\n                throw new Error(\"Unable to serialize unknown union members in XML.\");\n            }\n            bodyNode.addChildNode(new xml_builder_1.XmlNode(name).addChildNode(value));\n        },\n    });\n    return bodyNode;\n};\nconst se_ReplicationRules = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_ReplicationRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_ReplicationTime = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ReplicationTime\");\n    if (input.Status != null) {\n        const node = xml_builder_1.XmlNode.of(\"ReplicationTimeStatus\", input.Status).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Time != null) {\n        const node = se_ReplicationTimeValue(input.Time, context).withName(\"Time\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ReplicationTimeValue = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ReplicationTimeValue\");\n    if (input.Minutes != null) {\n        const node = xml_builder_1.XmlNode.of(\"Minutes\", String(input.Minutes)).withName(\"Minutes\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_RequestPaymentConfiguration = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"RequestPaymentConfiguration\");\n    if (input.Payer != null) {\n        const node = xml_builder_1.XmlNode.of(\"Payer\", input.Payer).withName(\"Payer\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_RequestProgress = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"RequestProgress\");\n    if (input.Enabled != null) {\n        const node = xml_builder_1.XmlNode.of(\"EnableRequestProgress\", String(input.Enabled)).withName(\"Enabled\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_RestoreRequest = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"RestoreRequest\");\n    if (input.Days != null) {\n        const node = xml_builder_1.XmlNode.of(\"Days\", String(input.Days)).withName(\"Days\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.GlacierJobParameters != null) {\n        const node = se_GlacierJobParameters(input.GlacierJobParameters, context).withName(\"GlacierJobParameters\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Type != null) {\n        const node = xml_builder_1.XmlNode.of(\"RestoreRequestType\", input.Type).withName(\"Type\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tier != null) {\n        const node = xml_builder_1.XmlNode.of(\"Tier\", input.Tier).withName(\"Tier\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Description != null) {\n        const node = xml_builder_1.XmlNode.of(\"Description\", input.Description).withName(\"Description\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SelectParameters != null) {\n        const node = se_SelectParameters(input.SelectParameters, context).withName(\"SelectParameters\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OutputLocation != null) {\n        const node = se_OutputLocation(input.OutputLocation, context).withName(\"OutputLocation\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_RoutingRule = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"RoutingRule\");\n    if (input.Condition != null) {\n        const node = se_Condition(input.Condition, context).withName(\"Condition\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Redirect != null) {\n        const node = se_Redirect(input.Redirect, context).withName(\"Redirect\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_RoutingRules = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_RoutingRule(entry, context);\n        return node.withName(\"RoutingRule\");\n    });\n};\nconst se_S3KeyFilter = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"S3KeyFilter\");\n    if (input.FilterRules != null) {\n        const nodes = se_FilterRuleList(input.FilterRules, context);\n        nodes.map((node) => {\n            node = node.withName(\"FilterRule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nconst se_S3Location = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"S3Location\");\n    if (input.BucketName != null) {\n        const node = xml_builder_1.XmlNode.of(\"BucketName\", input.BucketName).withName(\"BucketName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix != null) {\n        const node = xml_builder_1.XmlNode.of(\"LocationPrefix\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Encryption != null) {\n        const node = se_Encryption(input.Encryption, context).withName(\"Encryption\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CannedACL != null) {\n        const node = xml_builder_1.XmlNode.of(\"ObjectCannedACL\", input.CannedACL).withName(\"CannedACL\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessControlList != null) {\n        const nodes = se_Grants(input.AccessControlList, context);\n        const containerNode = new xml_builder_1.XmlNode(\"AccessControlList\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    if (input.Tagging != null) {\n        const node = se_Tagging(input.Tagging, context).withName(\"Tagging\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.UserMetadata != null) {\n        const nodes = se_UserMetadata(input.UserMetadata, context);\n        const containerNode = new xml_builder_1.XmlNode(\"UserMetadata\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    if (input.StorageClass != null) {\n        const node = xml_builder_1.XmlNode.of(\"StorageClass\", input.StorageClass).withName(\"StorageClass\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ScanRange = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ScanRange\");\n    if (input.Start != null) {\n        const node = xml_builder_1.XmlNode.of(\"Start\", String(input.Start)).withName(\"Start\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.End != null) {\n        const node = xml_builder_1.XmlNode.of(\"End\", String(input.End)).withName(\"End\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_SelectParameters = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"SelectParameters\");\n    if (input.InputSerialization != null) {\n        const node = se_InputSerialization(input.InputSerialization, context).withName(\"InputSerialization\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ExpressionType != null) {\n        const node = xml_builder_1.XmlNode.of(\"ExpressionType\", input.ExpressionType).withName(\"ExpressionType\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Expression != null) {\n        const node = xml_builder_1.XmlNode.of(\"Expression\", input.Expression).withName(\"Expression\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OutputSerialization != null) {\n        const node = se_OutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ServerSideEncryptionByDefault = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ServerSideEncryptionByDefault\");\n    if (input.SSEAlgorithm != null) {\n        const node = xml_builder_1.XmlNode.of(\"ServerSideEncryption\", input.SSEAlgorithm).withName(\"SSEAlgorithm\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.KMSMasterKeyID != null) {\n        const node = xml_builder_1.XmlNode.of(\"SSEKMSKeyId\", input.KMSMasterKeyID).withName(\"KMSMasterKeyID\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ServerSideEncryptionConfiguration = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ServerSideEncryptionConfiguration\");\n    if (input.Rules != null) {\n        const nodes = se_ServerSideEncryptionRules(input.Rules, context);\n        nodes.map((node) => {\n            node = node.withName(\"Rule\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    return bodyNode;\n};\nconst se_ServerSideEncryptionRule = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ServerSideEncryptionRule\");\n    if (input.ApplyServerSideEncryptionByDefault != null) {\n        const node = se_ServerSideEncryptionByDefault(input.ApplyServerSideEncryptionByDefault, context).withName(\"ApplyServerSideEncryptionByDefault\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.BucketKeyEnabled != null) {\n        const node = xml_builder_1.XmlNode.of(\"BucketKeyEnabled\", String(input.BucketKeyEnabled)).withName(\"BucketKeyEnabled\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_ServerSideEncryptionRules = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_ServerSideEncryptionRule(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_SourceSelectionCriteria = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"SourceSelectionCriteria\");\n    if (input.SseKmsEncryptedObjects != null) {\n        const node = se_SseKmsEncryptedObjects(input.SseKmsEncryptedObjects, context).withName(\"SseKmsEncryptedObjects\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReplicaModifications != null) {\n        const node = se_ReplicaModifications(input.ReplicaModifications, context).withName(\"ReplicaModifications\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_SSEKMS = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"SSE-KMS\");\n    if (input.KeyId != null) {\n        const node = xml_builder_1.XmlNode.of(\"SSEKMSKeyId\", input.KeyId).withName(\"KeyId\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_SseKmsEncryptedObjects = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"SseKmsEncryptedObjects\");\n    if (input.Status != null) {\n        const node = xml_builder_1.XmlNode.of(\"SseKmsEncryptedObjectsStatus\", input.Status).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_SSES3 = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"SSE-S3\");\n    return bodyNode;\n};\nconst se_StorageClassAnalysis = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"StorageClassAnalysis\");\n    if (input.DataExport != null) {\n        const node = se_StorageClassAnalysisDataExport(input.DataExport, context).withName(\"DataExport\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_StorageClassAnalysisDataExport = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"StorageClassAnalysisDataExport\");\n    if (input.OutputSchemaVersion != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"StorageClassAnalysisSchemaVersion\", input.OutputSchemaVersion)\n            .withName(\"OutputSchemaVersion\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Destination != null) {\n        const node = se_AnalyticsExportDestination(input.Destination, context).withName(\"Destination\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_Tag = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Tag\");\n    if (input.Key != null) {\n        const node = xml_builder_1.XmlNode.of(\"ObjectKey\", input.Key).withName(\"Key\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Value != null) {\n        const node = xml_builder_1.XmlNode.of(\"Value\", input.Value).withName(\"Value\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_Tagging = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Tagging\");\n    if (input.TagSet != null) {\n        const nodes = se_TagSet(input.TagSet, context);\n        const containerNode = new xml_builder_1.XmlNode(\"TagSet\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst se_TagSet = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_Tag(entry, context);\n        return node.withName(\"Tag\");\n    });\n};\nconst se_TargetGrant = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"TargetGrant\");\n    if (input.Grantee != null) {\n        const node = se_Grantee(input.Grantee, context).withName(\"Grantee\");\n        node.addAttribute(\"xmlns:xsi\", \"http://www.w3.org/2001/XMLSchema-instance\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Permission != null) {\n        const node = xml_builder_1.XmlNode.of(\"BucketLogsPermission\", input.Permission).withName(\"Permission\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_TargetGrants = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_TargetGrant(entry, context);\n        return node.withName(\"Grant\");\n    });\n};\nconst se_Tiering = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Tiering\");\n    if (input.Days != null) {\n        const node = xml_builder_1.XmlNode.of(\"IntelligentTieringDays\", String(input.Days)).withName(\"Days\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessTier != null) {\n        const node = xml_builder_1.XmlNode.of(\"IntelligentTieringAccessTier\", input.AccessTier).withName(\"AccessTier\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_TieringList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_Tiering(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_TopicConfiguration = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"TopicConfiguration\");\n    if (input.Id != null) {\n        const node = xml_builder_1.XmlNode.of(\"NotificationId\", input.Id).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.TopicArn != null) {\n        const node = xml_builder_1.XmlNode.of(\"TopicArn\", input.TopicArn).withName(\"Topic\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Events != null) {\n        const nodes = se_EventList(input.Events, context);\n        nodes.map((node) => {\n            node = node.withName(\"Event\");\n            bodyNode.addChildNode(node);\n        });\n    }\n    if (input.Filter != null) {\n        const node = se_NotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_TopicConfigurationList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_TopicConfiguration(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_Transition = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Transition\");\n    if (input.Date != null) {\n        const node = xml_builder_1.XmlNode.of(\"Date\", (input.Date.toISOString().split(\".\")[0] + \"Z\").toString()).withName(\"Date\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Days != null) {\n        const node = xml_builder_1.XmlNode.of(\"Days\", String(input.Days)).withName(\"Days\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.StorageClass != null) {\n        const node = xml_builder_1.XmlNode.of(\"TransitionStorageClass\", input.StorageClass).withName(\"StorageClass\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_TransitionList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_Transition(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst se_UserMetadata = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = se_MetadataEntry(entry, context);\n        return node.withName(\"MetadataEntry\");\n    });\n};\nconst se_VersioningConfiguration = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"VersioningConfiguration\");\n    if (input.MFADelete != null) {\n        const node = xml_builder_1.XmlNode.of(\"MFADelete\", input.MFADelete).withName(\"MfaDelete\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Status != null) {\n        const node = xml_builder_1.XmlNode.of(\"BucketVersioningStatus\", input.Status).withName(\"Status\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst se_WebsiteConfiguration = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"WebsiteConfiguration\");\n    if (input.ErrorDocument != null) {\n        const node = se_ErrorDocument(input.ErrorDocument, context).withName(\"ErrorDocument\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IndexDocument != null) {\n        const node = se_IndexDocument(input.IndexDocument, context).withName(\"IndexDocument\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RedirectAllRequestsTo != null) {\n        const node = se_RedirectAllRequestsTo(input.RedirectAllRequestsTo, context).withName(\"RedirectAllRequestsTo\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RoutingRules != null) {\n        const nodes = se_RoutingRules(input.RoutingRules, context);\n        const containerNode = new xml_builder_1.XmlNode(\"RoutingRules\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst de_AbortIncompleteMultipartUpload = (output, context) => {\n    const contents = {};\n    if (output[\"DaysAfterInitiation\"] !== undefined) {\n        contents.DaysAfterInitiation = (0, smithy_client_1.strictParseInt32)(output[\"DaysAfterInitiation\"]);\n    }\n    return contents;\n};\nconst de_AccessControlTranslation = (output, context) => {\n    const contents = {};\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = (0, smithy_client_1.expectString)(output[\"Owner\"]);\n    }\n    return contents;\n};\nconst de_AllowedHeaders = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_AllowedMethods = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_AllowedOrigins = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_AnalyticsAndOperator = (output, context) => {\n    const contents = {};\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = (0, smithy_client_1.expectString)(output[\"Prefix\"]);\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    else if (output[\"Tag\"] !== undefined) {\n        contents.Tags = de_TagSet((0, smithy_client_1.getArrayIfSingleItem)(output[\"Tag\"]), context);\n    }\n    return contents;\n};\nconst de_AnalyticsConfiguration = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output.Filter === \"\") {\n    }\n    else if (output[\"Filter\"] !== undefined) {\n        contents.Filter = de_AnalyticsFilter((0, smithy_client_1.expectUnion)(output[\"Filter\"]), context);\n    }\n    if (output[\"StorageClassAnalysis\"] !== undefined) {\n        contents.StorageClassAnalysis = de_StorageClassAnalysis(output[\"StorageClassAnalysis\"], context);\n    }\n    return contents;\n};\nconst de_AnalyticsConfigurationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_AnalyticsConfiguration(entry, context);\n    });\n};\nconst de_AnalyticsExportDestination = (output, context) => {\n    const contents = {};\n    if (output[\"S3BucketDestination\"] !== undefined) {\n        contents.S3BucketDestination = de_AnalyticsS3BucketDestination(output[\"S3BucketDestination\"], context);\n    }\n    return contents;\n};\nconst de_AnalyticsFilter = (output, context) => {\n    if (output[\"Prefix\"] !== undefined) {\n        return {\n            Prefix: (0, smithy_client_1.expectString)(output[\"Prefix\"]),\n        };\n    }\n    if (output[\"Tag\"] !== undefined) {\n        return {\n            Tag: de_Tag(output[\"Tag\"], context),\n        };\n    }\n    if (output[\"And\"] !== undefined) {\n        return {\n            And: de_AnalyticsAndOperator(output[\"And\"], context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst de_AnalyticsS3BucketDestination = (output, context) => {\n    const contents = {};\n    if (output[\"Format\"] !== undefined) {\n        contents.Format = (0, smithy_client_1.expectString)(output[\"Format\"]);\n    }\n    if (output[\"BucketAccountId\"] !== undefined) {\n        contents.BucketAccountId = (0, smithy_client_1.expectString)(output[\"BucketAccountId\"]);\n    }\n    if (output[\"Bucket\"] !== undefined) {\n        contents.Bucket = (0, smithy_client_1.expectString)(output[\"Bucket\"]);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = (0, smithy_client_1.expectString)(output[\"Prefix\"]);\n    }\n    return contents;\n};\nconst de_Bucket = (output, context) => {\n    const contents = {};\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(output[\"Name\"]);\n    }\n    if (output[\"CreationDate\"] !== undefined) {\n        contents.CreationDate = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"CreationDate\"]));\n    }\n    return contents;\n};\nconst de_Buckets = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Bucket(entry, context);\n    });\n};\nconst de_Checksum = (output, context) => {\n    const contents = {};\n    if (output[\"ChecksumCRC32\"] !== undefined) {\n        contents.ChecksumCRC32 = (0, smithy_client_1.expectString)(output[\"ChecksumCRC32\"]);\n    }\n    if (output[\"ChecksumCRC32C\"] !== undefined) {\n        contents.ChecksumCRC32C = (0, smithy_client_1.expectString)(output[\"ChecksumCRC32C\"]);\n    }\n    if (output[\"ChecksumSHA1\"] !== undefined) {\n        contents.ChecksumSHA1 = (0, smithy_client_1.expectString)(output[\"ChecksumSHA1\"]);\n    }\n    if (output[\"ChecksumSHA256\"] !== undefined) {\n        contents.ChecksumSHA256 = (0, smithy_client_1.expectString)(output[\"ChecksumSHA256\"]);\n    }\n    return contents;\n};\nconst de_ChecksumAlgorithmList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_CommonPrefix = (output, context) => {\n    const contents = {};\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = (0, smithy_client_1.expectString)(output[\"Prefix\"]);\n    }\n    return contents;\n};\nconst de_CommonPrefixList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_CommonPrefix(entry, context);\n    });\n};\nconst de_Condition = (output, context) => {\n    const contents = {};\n    if (output[\"HttpErrorCodeReturnedEquals\"] !== undefined) {\n        contents.HttpErrorCodeReturnedEquals = (0, smithy_client_1.expectString)(output[\"HttpErrorCodeReturnedEquals\"]);\n    }\n    if (output[\"KeyPrefixEquals\"] !== undefined) {\n        contents.KeyPrefixEquals = (0, smithy_client_1.expectString)(output[\"KeyPrefixEquals\"]);\n    }\n    return contents;\n};\nconst de_ContinuationEvent = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst de_CopyObjectResult = (output, context) => {\n    const contents = {};\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = (0, smithy_client_1.expectString)(output[\"ETag\"]);\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"LastModified\"]));\n    }\n    if (output[\"ChecksumCRC32\"] !== undefined) {\n        contents.ChecksumCRC32 = (0, smithy_client_1.expectString)(output[\"ChecksumCRC32\"]);\n    }\n    if (output[\"ChecksumCRC32C\"] !== undefined) {\n        contents.ChecksumCRC32C = (0, smithy_client_1.expectString)(output[\"ChecksumCRC32C\"]);\n    }\n    if (output[\"ChecksumSHA1\"] !== undefined) {\n        contents.ChecksumSHA1 = (0, smithy_client_1.expectString)(output[\"ChecksumSHA1\"]);\n    }\n    if (output[\"ChecksumSHA256\"] !== undefined) {\n        contents.ChecksumSHA256 = (0, smithy_client_1.expectString)(output[\"ChecksumSHA256\"]);\n    }\n    return contents;\n};\nconst de_CopyPartResult = (output, context) => {\n    const contents = {};\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = (0, smithy_client_1.expectString)(output[\"ETag\"]);\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"LastModified\"]));\n    }\n    if (output[\"ChecksumCRC32\"] !== undefined) {\n        contents.ChecksumCRC32 = (0, smithy_client_1.expectString)(output[\"ChecksumCRC32\"]);\n    }\n    if (output[\"ChecksumCRC32C\"] !== undefined) {\n        contents.ChecksumCRC32C = (0, smithy_client_1.expectString)(output[\"ChecksumCRC32C\"]);\n    }\n    if (output[\"ChecksumSHA1\"] !== undefined) {\n        contents.ChecksumSHA1 = (0, smithy_client_1.expectString)(output[\"ChecksumSHA1\"]);\n    }\n    if (output[\"ChecksumSHA256\"] !== undefined) {\n        contents.ChecksumSHA256 = (0, smithy_client_1.expectString)(output[\"ChecksumSHA256\"]);\n    }\n    return contents;\n};\nconst de_CORSRule = (output, context) => {\n    const contents = {};\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = (0, smithy_client_1.expectString)(output[\"ID\"]);\n    }\n    if (output.AllowedHeader === \"\") {\n        contents.AllowedHeaders = [];\n    }\n    else if (output[\"AllowedHeader\"] !== undefined) {\n        contents.AllowedHeaders = de_AllowedHeaders((0, smithy_client_1.getArrayIfSingleItem)(output[\"AllowedHeader\"]), context);\n    }\n    if (output.AllowedMethod === \"\") {\n        contents.AllowedMethods = [];\n    }\n    else if (output[\"AllowedMethod\"] !== undefined) {\n        contents.AllowedMethods = de_AllowedMethods((0, smithy_client_1.getArrayIfSingleItem)(output[\"AllowedMethod\"]), context);\n    }\n    if (output.AllowedOrigin === \"\") {\n        contents.AllowedOrigins = [];\n    }\n    else if (output[\"AllowedOrigin\"] !== undefined) {\n        contents.AllowedOrigins = de_AllowedOrigins((0, smithy_client_1.getArrayIfSingleItem)(output[\"AllowedOrigin\"]), context);\n    }\n    if (output.ExposeHeader === \"\") {\n        contents.ExposeHeaders = [];\n    }\n    else if (output[\"ExposeHeader\"] !== undefined) {\n        contents.ExposeHeaders = de_ExposeHeaders((0, smithy_client_1.getArrayIfSingleItem)(output[\"ExposeHeader\"]), context);\n    }\n    if (output[\"MaxAgeSeconds\"] !== undefined) {\n        contents.MaxAgeSeconds = (0, smithy_client_1.strictParseInt32)(output[\"MaxAgeSeconds\"]);\n    }\n    return contents;\n};\nconst de_CORSRules = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_CORSRule(entry, context);\n    });\n};\nconst de_DefaultRetention = (output, context) => {\n    const contents = {};\n    if (output[\"Mode\"] !== undefined) {\n        contents.Mode = (0, smithy_client_1.expectString)(output[\"Mode\"]);\n    }\n    if (output[\"Days\"] !== undefined) {\n        contents.Days = (0, smithy_client_1.strictParseInt32)(output[\"Days\"]);\n    }\n    if (output[\"Years\"] !== undefined) {\n        contents.Years = (0, smithy_client_1.strictParseInt32)(output[\"Years\"]);\n    }\n    return contents;\n};\nconst de_DeletedObject = (output, context) => {\n    const contents = {};\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = (0, smithy_client_1.expectString)(output[\"Key\"]);\n    }\n    if (output[\"VersionId\"] !== undefined) {\n        contents.VersionId = (0, smithy_client_1.expectString)(output[\"VersionId\"]);\n    }\n    if (output[\"DeleteMarker\"] !== undefined) {\n        contents.DeleteMarker = (0, smithy_client_1.parseBoolean)(output[\"DeleteMarker\"]);\n    }\n    if (output[\"DeleteMarkerVersionId\"] !== undefined) {\n        contents.DeleteMarkerVersionId = (0, smithy_client_1.expectString)(output[\"DeleteMarkerVersionId\"]);\n    }\n    return contents;\n};\nconst de_DeletedObjects = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_DeletedObject(entry, context);\n    });\n};\nconst de_DeleteMarkerEntry = (output, context) => {\n    const contents = {};\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = de_Owner(output[\"Owner\"], context);\n    }\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = (0, smithy_client_1.expectString)(output[\"Key\"]);\n    }\n    if (output[\"VersionId\"] !== undefined) {\n        contents.VersionId = (0, smithy_client_1.expectString)(output[\"VersionId\"]);\n    }\n    if (output[\"IsLatest\"] !== undefined) {\n        contents.IsLatest = (0, smithy_client_1.parseBoolean)(output[\"IsLatest\"]);\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"LastModified\"]));\n    }\n    return contents;\n};\nconst de_DeleteMarkerReplication = (output, context) => {\n    const contents = {};\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(output[\"Status\"]);\n    }\n    return contents;\n};\nconst de_DeleteMarkers = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_DeleteMarkerEntry(entry, context);\n    });\n};\nconst de_Destination = (output, context) => {\n    const contents = {};\n    if (output[\"Bucket\"] !== undefined) {\n        contents.Bucket = (0, smithy_client_1.expectString)(output[\"Bucket\"]);\n    }\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = (0, smithy_client_1.expectString)(output[\"Account\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = (0, smithy_client_1.expectString)(output[\"StorageClass\"]);\n    }\n    if (output[\"AccessControlTranslation\"] !== undefined) {\n        contents.AccessControlTranslation = de_AccessControlTranslation(output[\"AccessControlTranslation\"], context);\n    }\n    if (output[\"EncryptionConfiguration\"] !== undefined) {\n        contents.EncryptionConfiguration = de_EncryptionConfiguration(output[\"EncryptionConfiguration\"], context);\n    }\n    if (output[\"ReplicationTime\"] !== undefined) {\n        contents.ReplicationTime = de_ReplicationTime(output[\"ReplicationTime\"], context);\n    }\n    if (output[\"Metrics\"] !== undefined) {\n        contents.Metrics = de_Metrics(output[\"Metrics\"], context);\n    }\n    return contents;\n};\nconst de_EncryptionConfiguration = (output, context) => {\n    const contents = {};\n    if (output[\"ReplicaKmsKeyID\"] !== undefined) {\n        contents.ReplicaKmsKeyID = (0, smithy_client_1.expectString)(output[\"ReplicaKmsKeyID\"]);\n    }\n    return contents;\n};\nconst de_EndEvent = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst de__Error = (output, context) => {\n    const contents = {};\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = (0, smithy_client_1.expectString)(output[\"Key\"]);\n    }\n    if (output[\"VersionId\"] !== undefined) {\n        contents.VersionId = (0, smithy_client_1.expectString)(output[\"VersionId\"]);\n    }\n    if (output[\"Code\"] !== undefined) {\n        contents.Code = (0, smithy_client_1.expectString)(output[\"Code\"]);\n    }\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(output[\"Message\"]);\n    }\n    return contents;\n};\nconst de_ErrorDocument = (output, context) => {\n    const contents = {};\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = (0, smithy_client_1.expectString)(output[\"Key\"]);\n    }\n    return contents;\n};\nconst de_Errors = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de__Error(entry, context);\n    });\n};\nconst de_EventBridgeConfiguration = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst de_EventList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_ExistingObjectReplication = (output, context) => {\n    const contents = {};\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(output[\"Status\"]);\n    }\n    return contents;\n};\nconst de_ExposeHeaders = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_FilterRule = (output, context) => {\n    const contents = {};\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(output[\"Name\"]);\n    }\n    if (output[\"Value\"] !== undefined) {\n        contents.Value = (0, smithy_client_1.expectString)(output[\"Value\"]);\n    }\n    return contents;\n};\nconst de_FilterRuleList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_FilterRule(entry, context);\n    });\n};\nconst de_GetObjectAttributesParts = (output, context) => {\n    const contents = {};\n    if (output[\"PartsCount\"] !== undefined) {\n        contents.TotalPartsCount = (0, smithy_client_1.strictParseInt32)(output[\"PartsCount\"]);\n    }\n    if (output[\"PartNumberMarker\"] !== undefined) {\n        contents.PartNumberMarker = (0, smithy_client_1.expectString)(output[\"PartNumberMarker\"]);\n    }\n    if (output[\"NextPartNumberMarker\"] !== undefined) {\n        contents.NextPartNumberMarker = (0, smithy_client_1.expectString)(output[\"NextPartNumberMarker\"]);\n    }\n    if (output[\"MaxParts\"] !== undefined) {\n        contents.MaxParts = (0, smithy_client_1.strictParseInt32)(output[\"MaxParts\"]);\n    }\n    if (output[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = (0, smithy_client_1.parseBoolean)(output[\"IsTruncated\"]);\n    }\n    if (output.Part === \"\") {\n        contents.Parts = [];\n    }\n    else if (output[\"Part\"] !== undefined) {\n        contents.Parts = de_PartsList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Part\"]), context);\n    }\n    return contents;\n};\nconst de_Grant = (output, context) => {\n    const contents = {};\n    if (output[\"Grantee\"] !== undefined) {\n        contents.Grantee = de_Grantee(output[\"Grantee\"], context);\n    }\n    if (output[\"Permission\"] !== undefined) {\n        contents.Permission = (0, smithy_client_1.expectString)(output[\"Permission\"]);\n    }\n    return contents;\n};\nconst de_Grantee = (output, context) => {\n    const contents = {};\n    if (output[\"DisplayName\"] !== undefined) {\n        contents.DisplayName = (0, smithy_client_1.expectString)(output[\"DisplayName\"]);\n    }\n    if (output[\"EmailAddress\"] !== undefined) {\n        contents.EmailAddress = (0, smithy_client_1.expectString)(output[\"EmailAddress\"]);\n    }\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = (0, smithy_client_1.expectString)(output[\"ID\"]);\n    }\n    if (output[\"URI\"] !== undefined) {\n        contents.URI = (0, smithy_client_1.expectString)(output[\"URI\"]);\n    }\n    if (output[\"xsi:type\"] !== undefined) {\n        contents.Type = (0, smithy_client_1.expectString)(output[\"xsi:type\"]);\n    }\n    return contents;\n};\nconst de_Grants = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Grant(entry, context);\n    });\n};\nconst de_IndexDocument = (output, context) => {\n    const contents = {};\n    if (output[\"Suffix\"] !== undefined) {\n        contents.Suffix = (0, smithy_client_1.expectString)(output[\"Suffix\"]);\n    }\n    return contents;\n};\nconst de_Initiator = (output, context) => {\n    const contents = {};\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = (0, smithy_client_1.expectString)(output[\"ID\"]);\n    }\n    if (output[\"DisplayName\"] !== undefined) {\n        contents.DisplayName = (0, smithy_client_1.expectString)(output[\"DisplayName\"]);\n    }\n    return contents;\n};\nconst de_IntelligentTieringAndOperator = (output, context) => {\n    const contents = {};\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = (0, smithy_client_1.expectString)(output[\"Prefix\"]);\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    else if (output[\"Tag\"] !== undefined) {\n        contents.Tags = de_TagSet((0, smithy_client_1.getArrayIfSingleItem)(output[\"Tag\"]), context);\n    }\n    return contents;\n};\nconst de_IntelligentTieringConfiguration = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = de_IntelligentTieringFilter(output[\"Filter\"], context);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(output[\"Status\"]);\n    }\n    if (output.Tiering === \"\") {\n        contents.Tierings = [];\n    }\n    else if (output[\"Tiering\"] !== undefined) {\n        contents.Tierings = de_TieringList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Tiering\"]), context);\n    }\n    return contents;\n};\nconst de_IntelligentTieringConfigurationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_IntelligentTieringConfiguration(entry, context);\n    });\n};\nconst de_IntelligentTieringFilter = (output, context) => {\n    const contents = {};\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = (0, smithy_client_1.expectString)(output[\"Prefix\"]);\n    }\n    if (output[\"Tag\"] !== undefined) {\n        contents.Tag = de_Tag(output[\"Tag\"], context);\n    }\n    if (output[\"And\"] !== undefined) {\n        contents.And = de_IntelligentTieringAndOperator(output[\"And\"], context);\n    }\n    return contents;\n};\nconst de_InventoryConfiguration = (output, context) => {\n    const contents = {};\n    if (output[\"Destination\"] !== undefined) {\n        contents.Destination = de_InventoryDestination(output[\"Destination\"], context);\n    }\n    if (output[\"IsEnabled\"] !== undefined) {\n        contents.IsEnabled = (0, smithy_client_1.parseBoolean)(output[\"IsEnabled\"]);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = de_InventoryFilter(output[\"Filter\"], context);\n    }\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"IncludedObjectVersions\"] !== undefined) {\n        contents.IncludedObjectVersions = (0, smithy_client_1.expectString)(output[\"IncludedObjectVersions\"]);\n    }\n    if (output.OptionalFields === \"\") {\n        contents.OptionalFields = [];\n    }\n    else if (output[\"OptionalFields\"] !== undefined && output[\"OptionalFields\"][\"Field\"] !== undefined) {\n        contents.OptionalFields = de_InventoryOptionalFields((0, smithy_client_1.getArrayIfSingleItem)(output[\"OptionalFields\"][\"Field\"]), context);\n    }\n    if (output[\"Schedule\"] !== undefined) {\n        contents.Schedule = de_InventorySchedule(output[\"Schedule\"], context);\n    }\n    return contents;\n};\nconst de_InventoryConfigurationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_InventoryConfiguration(entry, context);\n    });\n};\nconst de_InventoryDestination = (output, context) => {\n    const contents = {};\n    if (output[\"S3BucketDestination\"] !== undefined) {\n        contents.S3BucketDestination = de_InventoryS3BucketDestination(output[\"S3BucketDestination\"], context);\n    }\n    return contents;\n};\nconst de_InventoryEncryption = (output, context) => {\n    const contents = {};\n    if (output[\"SSE-S3\"] !== undefined) {\n        contents.SSES3 = de_SSES3(output[\"SSE-S3\"], context);\n    }\n    if (output[\"SSE-KMS\"] !== undefined) {\n        contents.SSEKMS = de_SSEKMS(output[\"SSE-KMS\"], context);\n    }\n    return contents;\n};\nconst de_InventoryFilter = (output, context) => {\n    const contents = {};\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = (0, smithy_client_1.expectString)(output[\"Prefix\"]);\n    }\n    return contents;\n};\nconst de_InventoryOptionalFields = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst de_InventoryS3BucketDestination = (output, context) => {\n    const contents = {};\n    if (output[\"AccountId\"] !== undefined) {\n        contents.AccountId = (0, smithy_client_1.expectString)(output[\"AccountId\"]);\n    }\n    if (output[\"Bucket\"] !== undefined) {\n        contents.Bucket = (0, smithy_client_1.expectString)(output[\"Bucket\"]);\n    }\n    if (output[\"Format\"] !== undefined) {\n        contents.Format = (0, smithy_client_1.expectString)(output[\"Format\"]);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = (0, smithy_client_1.expectString)(output[\"Prefix\"]);\n    }\n    if (output[\"Encryption\"] !== undefined) {\n        contents.Encryption = de_InventoryEncryption(output[\"Encryption\"], context);\n    }\n    return contents;\n};\nconst de_InventorySchedule = (output, context) => {\n    const contents = {};\n    if (output[\"Frequency\"] !== undefined) {\n        contents.Frequency = (0, smithy_client_1.expectString)(output[\"Frequency\"]);\n    }\n    return contents;\n};\nconst de_LambdaFunctionConfiguration = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"CloudFunction\"] !== undefined) {\n        contents.LambdaFunctionArn = (0, smithy_client_1.expectString)(output[\"CloudFunction\"]);\n    }\n    if (output.Event === \"\") {\n        contents.Events = [];\n    }\n    else if (output[\"Event\"] !== undefined) {\n        contents.Events = de_EventList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Event\"]), context);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = de_NotificationConfigurationFilter(output[\"Filter\"], context);\n    }\n    return contents;\n};\nconst de_LambdaFunctionConfigurationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_LambdaFunctionConfiguration(entry, context);\n    });\n};\nconst de_LifecycleExpiration = (output, context) => {\n    const contents = {};\n    if (output[\"Date\"] !== undefined) {\n        contents.Date = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"Date\"]));\n    }\n    if (output[\"Days\"] !== undefined) {\n        contents.Days = (0, smithy_client_1.strictParseInt32)(output[\"Days\"]);\n    }\n    if (output[\"ExpiredObjectDeleteMarker\"] !== undefined) {\n        contents.ExpiredObjectDeleteMarker = (0, smithy_client_1.parseBoolean)(output[\"ExpiredObjectDeleteMarker\"]);\n    }\n    return contents;\n};\nconst de_LifecycleRule = (output, context) => {\n    const contents = {};\n    if (output[\"Expiration\"] !== undefined) {\n        contents.Expiration = de_LifecycleExpiration(output[\"Expiration\"], context);\n    }\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = (0, smithy_client_1.expectString)(output[\"ID\"]);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = (0, smithy_client_1.expectString)(output[\"Prefix\"]);\n    }\n    if (output.Filter === \"\") {\n    }\n    else if (output[\"Filter\"] !== undefined) {\n        contents.Filter = de_LifecycleRuleFilter((0, smithy_client_1.expectUnion)(output[\"Filter\"]), context);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(output[\"Status\"]);\n    }\n    if (output.Transition === \"\") {\n        contents.Transitions = [];\n    }\n    else if (output[\"Transition\"] !== undefined) {\n        contents.Transitions = de_TransitionList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Transition\"]), context);\n    }\n    if (output.NoncurrentVersionTransition === \"\") {\n        contents.NoncurrentVersionTransitions = [];\n    }\n    else if (output[\"NoncurrentVersionTransition\"] !== undefined) {\n        contents.NoncurrentVersionTransitions = de_NoncurrentVersionTransitionList((0, smithy_client_1.getArrayIfSingleItem)(output[\"NoncurrentVersionTransition\"]), context);\n    }\n    if (output[\"NoncurrentVersionExpiration\"] !== undefined) {\n        contents.NoncurrentVersionExpiration = de_NoncurrentVersionExpiration(output[\"NoncurrentVersionExpiration\"], context);\n    }\n    if (output[\"AbortIncompleteMultipartUpload\"] !== undefined) {\n        contents.AbortIncompleteMultipartUpload = de_AbortIncompleteMultipartUpload(output[\"AbortIncompleteMultipartUpload\"], context);\n    }\n    return contents;\n};\nconst de_LifecycleRuleAndOperator = (output, context) => {\n    const contents = {};\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = (0, smithy_client_1.expectString)(output[\"Prefix\"]);\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    else if (output[\"Tag\"] !== undefined) {\n        contents.Tags = de_TagSet((0, smithy_client_1.getArrayIfSingleItem)(output[\"Tag\"]), context);\n    }\n    if (output[\"ObjectSizeGreaterThan\"] !== undefined) {\n        contents.ObjectSizeGreaterThan = (0, smithy_client_1.strictParseLong)(output[\"ObjectSizeGreaterThan\"]);\n    }\n    if (output[\"ObjectSizeLessThan\"] !== undefined) {\n        contents.ObjectSizeLessThan = (0, smithy_client_1.strictParseLong)(output[\"ObjectSizeLessThan\"]);\n    }\n    return contents;\n};\nconst de_LifecycleRuleFilter = (output, context) => {\n    if (output[\"Prefix\"] !== undefined) {\n        return {\n            Prefix: (0, smithy_client_1.expectString)(output[\"Prefix\"]),\n        };\n    }\n    if (output[\"Tag\"] !== undefined) {\n        return {\n            Tag: de_Tag(output[\"Tag\"], context),\n        };\n    }\n    if (output[\"ObjectSizeGreaterThan\"] !== undefined) {\n        return {\n            ObjectSizeGreaterThan: (0, smithy_client_1.strictParseLong)(output[\"ObjectSizeGreaterThan\"]),\n        };\n    }\n    if (output[\"ObjectSizeLessThan\"] !== undefined) {\n        return {\n            ObjectSizeLessThan: (0, smithy_client_1.strictParseLong)(output[\"ObjectSizeLessThan\"]),\n        };\n    }\n    if (output[\"And\"] !== undefined) {\n        return {\n            And: de_LifecycleRuleAndOperator(output[\"And\"], context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst de_LifecycleRules = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_LifecycleRule(entry, context);\n    });\n};\nconst de_LoggingEnabled = (output, context) => {\n    const contents = {};\n    if (output[\"TargetBucket\"] !== undefined) {\n        contents.TargetBucket = (0, smithy_client_1.expectString)(output[\"TargetBucket\"]);\n    }\n    if (output.TargetGrants === \"\") {\n        contents.TargetGrants = [];\n    }\n    else if (output[\"TargetGrants\"] !== undefined && output[\"TargetGrants\"][\"Grant\"] !== undefined) {\n        contents.TargetGrants = de_TargetGrants((0, smithy_client_1.getArrayIfSingleItem)(output[\"TargetGrants\"][\"Grant\"]), context);\n    }\n    if (output[\"TargetPrefix\"] !== undefined) {\n        contents.TargetPrefix = (0, smithy_client_1.expectString)(output[\"TargetPrefix\"]);\n    }\n    return contents;\n};\nconst de_Metrics = (output, context) => {\n    const contents = {};\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(output[\"Status\"]);\n    }\n    if (output[\"EventThreshold\"] !== undefined) {\n        contents.EventThreshold = de_ReplicationTimeValue(output[\"EventThreshold\"], context);\n    }\n    return contents;\n};\nconst de_MetricsAndOperator = (output, context) => {\n    const contents = {};\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = (0, smithy_client_1.expectString)(output[\"Prefix\"]);\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    else if (output[\"Tag\"] !== undefined) {\n        contents.Tags = de_TagSet((0, smithy_client_1.getArrayIfSingleItem)(output[\"Tag\"]), context);\n    }\n    if (output[\"AccessPointArn\"] !== undefined) {\n        contents.AccessPointArn = (0, smithy_client_1.expectString)(output[\"AccessPointArn\"]);\n    }\n    return contents;\n};\nconst de_MetricsConfiguration = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output.Filter === \"\") {\n    }\n    else if (output[\"Filter\"] !== undefined) {\n        contents.Filter = de_MetricsFilter((0, smithy_client_1.expectUnion)(output[\"Filter\"]), context);\n    }\n    return contents;\n};\nconst de_MetricsConfigurationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_MetricsConfiguration(entry, context);\n    });\n};\nconst de_MetricsFilter = (output, context) => {\n    if (output[\"Prefix\"] !== undefined) {\n        return {\n            Prefix: (0, smithy_client_1.expectString)(output[\"Prefix\"]),\n        };\n    }\n    if (output[\"Tag\"] !== undefined) {\n        return {\n            Tag: de_Tag(output[\"Tag\"], context),\n        };\n    }\n    if (output[\"AccessPointArn\"] !== undefined) {\n        return {\n            AccessPointArn: (0, smithy_client_1.expectString)(output[\"AccessPointArn\"]),\n        };\n    }\n    if (output[\"And\"] !== undefined) {\n        return {\n            And: de_MetricsAndOperator(output[\"And\"], context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst de_MultipartUpload = (output, context) => {\n    const contents = {};\n    if (output[\"UploadId\"] !== undefined) {\n        contents.UploadId = (0, smithy_client_1.expectString)(output[\"UploadId\"]);\n    }\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = (0, smithy_client_1.expectString)(output[\"Key\"]);\n    }\n    if (output[\"Initiated\"] !== undefined) {\n        contents.Initiated = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"Initiated\"]));\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = (0, smithy_client_1.expectString)(output[\"StorageClass\"]);\n    }\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = de_Owner(output[\"Owner\"], context);\n    }\n    if (output[\"Initiator\"] !== undefined) {\n        contents.Initiator = de_Initiator(output[\"Initiator\"], context);\n    }\n    if (output[\"ChecksumAlgorithm\"] !== undefined) {\n        contents.ChecksumAlgorithm = (0, smithy_client_1.expectString)(output[\"ChecksumAlgorithm\"]);\n    }\n    return contents;\n};\nconst de_MultipartUploadList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_MultipartUpload(entry, context);\n    });\n};\nconst de_NoncurrentVersionExpiration = (output, context) => {\n    const contents = {};\n    if (output[\"NoncurrentDays\"] !== undefined) {\n        contents.NoncurrentDays = (0, smithy_client_1.strictParseInt32)(output[\"NoncurrentDays\"]);\n    }\n    if (output[\"NewerNoncurrentVersions\"] !== undefined) {\n        contents.NewerNoncurrentVersions = (0, smithy_client_1.strictParseInt32)(output[\"NewerNoncurrentVersions\"]);\n    }\n    return contents;\n};\nconst de_NoncurrentVersionTransition = (output, context) => {\n    const contents = {};\n    if (output[\"NoncurrentDays\"] !== undefined) {\n        contents.NoncurrentDays = (0, smithy_client_1.strictParseInt32)(output[\"NoncurrentDays\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = (0, smithy_client_1.expectString)(output[\"StorageClass\"]);\n    }\n    if (output[\"NewerNoncurrentVersions\"] !== undefined) {\n        contents.NewerNoncurrentVersions = (0, smithy_client_1.strictParseInt32)(output[\"NewerNoncurrentVersions\"]);\n    }\n    return contents;\n};\nconst de_NoncurrentVersionTransitionList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_NoncurrentVersionTransition(entry, context);\n    });\n};\nconst de_NotificationConfigurationFilter = (output, context) => {\n    const contents = {};\n    if (output[\"S3Key\"] !== undefined) {\n        contents.Key = de_S3KeyFilter(output[\"S3Key\"], context);\n    }\n    return contents;\n};\nconst de__Object = (output, context) => {\n    const contents = {};\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = (0, smithy_client_1.expectString)(output[\"Key\"]);\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"LastModified\"]));\n    }\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = (0, smithy_client_1.expectString)(output[\"ETag\"]);\n    }\n    if (output.ChecksumAlgorithm === \"\") {\n        contents.ChecksumAlgorithm = [];\n    }\n    else if (output[\"ChecksumAlgorithm\"] !== undefined) {\n        contents.ChecksumAlgorithm = de_ChecksumAlgorithmList((0, smithy_client_1.getArrayIfSingleItem)(output[\"ChecksumAlgorithm\"]), context);\n    }\n    if (output[\"Size\"] !== undefined) {\n        contents.Size = (0, smithy_client_1.strictParseLong)(output[\"Size\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = (0, smithy_client_1.expectString)(output[\"StorageClass\"]);\n    }\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = de_Owner(output[\"Owner\"], context);\n    }\n    if (output[\"RestoreStatus\"] !== undefined) {\n        contents.RestoreStatus = de_RestoreStatus(output[\"RestoreStatus\"], context);\n    }\n    return contents;\n};\nconst de_ObjectList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de__Object(entry, context);\n    });\n};\nconst de_ObjectLockConfiguration = (output, context) => {\n    const contents = {};\n    if (output[\"ObjectLockEnabled\"] !== undefined) {\n        contents.ObjectLockEnabled = (0, smithy_client_1.expectString)(output[\"ObjectLockEnabled\"]);\n    }\n    if (output[\"Rule\"] !== undefined) {\n        contents.Rule = de_ObjectLockRule(output[\"Rule\"], context);\n    }\n    return contents;\n};\nconst de_ObjectLockLegalHold = (output, context) => {\n    const contents = {};\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(output[\"Status\"]);\n    }\n    return contents;\n};\nconst de_ObjectLockRetention = (output, context) => {\n    const contents = {};\n    if (output[\"Mode\"] !== undefined) {\n        contents.Mode = (0, smithy_client_1.expectString)(output[\"Mode\"]);\n    }\n    if (output[\"RetainUntilDate\"] !== undefined) {\n        contents.RetainUntilDate = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"RetainUntilDate\"]));\n    }\n    return contents;\n};\nconst de_ObjectLockRule = (output, context) => {\n    const contents = {};\n    if (output[\"DefaultRetention\"] !== undefined) {\n        contents.DefaultRetention = de_DefaultRetention(output[\"DefaultRetention\"], context);\n    }\n    return contents;\n};\nconst de_ObjectPart = (output, context) => {\n    const contents = {};\n    if (output[\"PartNumber\"] !== undefined) {\n        contents.PartNumber = (0, smithy_client_1.strictParseInt32)(output[\"PartNumber\"]);\n    }\n    if (output[\"Size\"] !== undefined) {\n        contents.Size = (0, smithy_client_1.strictParseLong)(output[\"Size\"]);\n    }\n    if (output[\"ChecksumCRC32\"] !== undefined) {\n        contents.ChecksumCRC32 = (0, smithy_client_1.expectString)(output[\"ChecksumCRC32\"]);\n    }\n    if (output[\"ChecksumCRC32C\"] !== undefined) {\n        contents.ChecksumCRC32C = (0, smithy_client_1.expectString)(output[\"ChecksumCRC32C\"]);\n    }\n    if (output[\"ChecksumSHA1\"] !== undefined) {\n        contents.ChecksumSHA1 = (0, smithy_client_1.expectString)(output[\"ChecksumSHA1\"]);\n    }\n    if (output[\"ChecksumSHA256\"] !== undefined) {\n        contents.ChecksumSHA256 = (0, smithy_client_1.expectString)(output[\"ChecksumSHA256\"]);\n    }\n    return contents;\n};\nconst de_ObjectVersion = (output, context) => {\n    const contents = {};\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = (0, smithy_client_1.expectString)(output[\"ETag\"]);\n    }\n    if (output.ChecksumAlgorithm === \"\") {\n        contents.ChecksumAlgorithm = [];\n    }\n    else if (output[\"ChecksumAlgorithm\"] !== undefined) {\n        contents.ChecksumAlgorithm = de_ChecksumAlgorithmList((0, smithy_client_1.getArrayIfSingleItem)(output[\"ChecksumAlgorithm\"]), context);\n    }\n    if (output[\"Size\"] !== undefined) {\n        contents.Size = (0, smithy_client_1.strictParseLong)(output[\"Size\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = (0, smithy_client_1.expectString)(output[\"StorageClass\"]);\n    }\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = (0, smithy_client_1.expectString)(output[\"Key\"]);\n    }\n    if (output[\"VersionId\"] !== undefined) {\n        contents.VersionId = (0, smithy_client_1.expectString)(output[\"VersionId\"]);\n    }\n    if (output[\"IsLatest\"] !== undefined) {\n        contents.IsLatest = (0, smithy_client_1.parseBoolean)(output[\"IsLatest\"]);\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"LastModified\"]));\n    }\n    if (output[\"Owner\"] !== undefined) {\n        contents.Owner = de_Owner(output[\"Owner\"], context);\n    }\n    if (output[\"RestoreStatus\"] !== undefined) {\n        contents.RestoreStatus = de_RestoreStatus(output[\"RestoreStatus\"], context);\n    }\n    return contents;\n};\nconst de_ObjectVersionList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ObjectVersion(entry, context);\n    });\n};\nconst de_Owner = (output, context) => {\n    const contents = {};\n    if (output[\"DisplayName\"] !== undefined) {\n        contents.DisplayName = (0, smithy_client_1.expectString)(output[\"DisplayName\"]);\n    }\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = (0, smithy_client_1.expectString)(output[\"ID\"]);\n    }\n    return contents;\n};\nconst de_OwnershipControls = (output, context) => {\n    const contents = {};\n    if (output.Rule === \"\") {\n        contents.Rules = [];\n    }\n    else if (output[\"Rule\"] !== undefined) {\n        contents.Rules = de_OwnershipControlsRules((0, smithy_client_1.getArrayIfSingleItem)(output[\"Rule\"]), context);\n    }\n    return contents;\n};\nconst de_OwnershipControlsRule = (output, context) => {\n    const contents = {};\n    if (output[\"ObjectOwnership\"] !== undefined) {\n        contents.ObjectOwnership = (0, smithy_client_1.expectString)(output[\"ObjectOwnership\"]);\n    }\n    return contents;\n};\nconst de_OwnershipControlsRules = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_OwnershipControlsRule(entry, context);\n    });\n};\nconst de_Part = (output, context) => {\n    const contents = {};\n    if (output[\"PartNumber\"] !== undefined) {\n        contents.PartNumber = (0, smithy_client_1.strictParseInt32)(output[\"PartNumber\"]);\n    }\n    if (output[\"LastModified\"] !== undefined) {\n        contents.LastModified = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"LastModified\"]));\n    }\n    if (output[\"ETag\"] !== undefined) {\n        contents.ETag = (0, smithy_client_1.expectString)(output[\"ETag\"]);\n    }\n    if (output[\"Size\"] !== undefined) {\n        contents.Size = (0, smithy_client_1.strictParseLong)(output[\"Size\"]);\n    }\n    if (output[\"ChecksumCRC32\"] !== undefined) {\n        contents.ChecksumCRC32 = (0, smithy_client_1.expectString)(output[\"ChecksumCRC32\"]);\n    }\n    if (output[\"ChecksumCRC32C\"] !== undefined) {\n        contents.ChecksumCRC32C = (0, smithy_client_1.expectString)(output[\"ChecksumCRC32C\"]);\n    }\n    if (output[\"ChecksumSHA1\"] !== undefined) {\n        contents.ChecksumSHA1 = (0, smithy_client_1.expectString)(output[\"ChecksumSHA1\"]);\n    }\n    if (output[\"ChecksumSHA256\"] !== undefined) {\n        contents.ChecksumSHA256 = (0, smithy_client_1.expectString)(output[\"ChecksumSHA256\"]);\n    }\n    return contents;\n};\nconst de_Parts = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Part(entry, context);\n    });\n};\nconst de_PartsList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ObjectPart(entry, context);\n    });\n};\nconst de_PolicyStatus = (output, context) => {\n    const contents = {};\n    if (output[\"IsPublic\"] !== undefined) {\n        contents.IsPublic = (0, smithy_client_1.parseBoolean)(output[\"IsPublic\"]);\n    }\n    return contents;\n};\nconst de_Progress = (output, context) => {\n    const contents = {};\n    if (output[\"BytesScanned\"] !== undefined) {\n        contents.BytesScanned = (0, smithy_client_1.strictParseLong)(output[\"BytesScanned\"]);\n    }\n    if (output[\"BytesProcessed\"] !== undefined) {\n        contents.BytesProcessed = (0, smithy_client_1.strictParseLong)(output[\"BytesProcessed\"]);\n    }\n    if (output[\"BytesReturned\"] !== undefined) {\n        contents.BytesReturned = (0, smithy_client_1.strictParseLong)(output[\"BytesReturned\"]);\n    }\n    return contents;\n};\nconst de_PublicAccessBlockConfiguration = (output, context) => {\n    const contents = {};\n    if (output[\"BlockPublicAcls\"] !== undefined) {\n        contents.BlockPublicAcls = (0, smithy_client_1.parseBoolean)(output[\"BlockPublicAcls\"]);\n    }\n    if (output[\"IgnorePublicAcls\"] !== undefined) {\n        contents.IgnorePublicAcls = (0, smithy_client_1.parseBoolean)(output[\"IgnorePublicAcls\"]);\n    }\n    if (output[\"BlockPublicPolicy\"] !== undefined) {\n        contents.BlockPublicPolicy = (0, smithy_client_1.parseBoolean)(output[\"BlockPublicPolicy\"]);\n    }\n    if (output[\"RestrictPublicBuckets\"] !== undefined) {\n        contents.RestrictPublicBuckets = (0, smithy_client_1.parseBoolean)(output[\"RestrictPublicBuckets\"]);\n    }\n    return contents;\n};\nconst de_QueueConfiguration = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"Queue\"] !== undefined) {\n        contents.QueueArn = (0, smithy_client_1.expectString)(output[\"Queue\"]);\n    }\n    if (output.Event === \"\") {\n        contents.Events = [];\n    }\n    else if (output[\"Event\"] !== undefined) {\n        contents.Events = de_EventList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Event\"]), context);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = de_NotificationConfigurationFilter(output[\"Filter\"], context);\n    }\n    return contents;\n};\nconst de_QueueConfigurationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_QueueConfiguration(entry, context);\n    });\n};\nconst de_Redirect = (output, context) => {\n    const contents = {};\n    if (output[\"HostName\"] !== undefined) {\n        contents.HostName = (0, smithy_client_1.expectString)(output[\"HostName\"]);\n    }\n    if (output[\"HttpRedirectCode\"] !== undefined) {\n        contents.HttpRedirectCode = (0, smithy_client_1.expectString)(output[\"HttpRedirectCode\"]);\n    }\n    if (output[\"Protocol\"] !== undefined) {\n        contents.Protocol = (0, smithy_client_1.expectString)(output[\"Protocol\"]);\n    }\n    if (output[\"ReplaceKeyPrefixWith\"] !== undefined) {\n        contents.ReplaceKeyPrefixWith = (0, smithy_client_1.expectString)(output[\"ReplaceKeyPrefixWith\"]);\n    }\n    if (output[\"ReplaceKeyWith\"] !== undefined) {\n        contents.ReplaceKeyWith = (0, smithy_client_1.expectString)(output[\"ReplaceKeyWith\"]);\n    }\n    return contents;\n};\nconst de_RedirectAllRequestsTo = (output, context) => {\n    const contents = {};\n    if (output[\"HostName\"] !== undefined) {\n        contents.HostName = (0, smithy_client_1.expectString)(output[\"HostName\"]);\n    }\n    if (output[\"Protocol\"] !== undefined) {\n        contents.Protocol = (0, smithy_client_1.expectString)(output[\"Protocol\"]);\n    }\n    return contents;\n};\nconst de_ReplicaModifications = (output, context) => {\n    const contents = {};\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(output[\"Status\"]);\n    }\n    return contents;\n};\nconst de_ReplicationConfiguration = (output, context) => {\n    const contents = {};\n    if (output[\"Role\"] !== undefined) {\n        contents.Role = (0, smithy_client_1.expectString)(output[\"Role\"]);\n    }\n    if (output.Rule === \"\") {\n        contents.Rules = [];\n    }\n    else if (output[\"Rule\"] !== undefined) {\n        contents.Rules = de_ReplicationRules((0, smithy_client_1.getArrayIfSingleItem)(output[\"Rule\"]), context);\n    }\n    return contents;\n};\nconst de_ReplicationRule = (output, context) => {\n    const contents = {};\n    if (output[\"ID\"] !== undefined) {\n        contents.ID = (0, smithy_client_1.expectString)(output[\"ID\"]);\n    }\n    if (output[\"Priority\"] !== undefined) {\n        contents.Priority = (0, smithy_client_1.strictParseInt32)(output[\"Priority\"]);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = (0, smithy_client_1.expectString)(output[\"Prefix\"]);\n    }\n    if (output.Filter === \"\") {\n    }\n    else if (output[\"Filter\"] !== undefined) {\n        contents.Filter = de_ReplicationRuleFilter((0, smithy_client_1.expectUnion)(output[\"Filter\"]), context);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(output[\"Status\"]);\n    }\n    if (output[\"SourceSelectionCriteria\"] !== undefined) {\n        contents.SourceSelectionCriteria = de_SourceSelectionCriteria(output[\"SourceSelectionCriteria\"], context);\n    }\n    if (output[\"ExistingObjectReplication\"] !== undefined) {\n        contents.ExistingObjectReplication = de_ExistingObjectReplication(output[\"ExistingObjectReplication\"], context);\n    }\n    if (output[\"Destination\"] !== undefined) {\n        contents.Destination = de_Destination(output[\"Destination\"], context);\n    }\n    if (output[\"DeleteMarkerReplication\"] !== undefined) {\n        contents.DeleteMarkerReplication = de_DeleteMarkerReplication(output[\"DeleteMarkerReplication\"], context);\n    }\n    return contents;\n};\nconst de_ReplicationRuleAndOperator = (output, context) => {\n    const contents = {};\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = (0, smithy_client_1.expectString)(output[\"Prefix\"]);\n    }\n    if (output.Tag === \"\") {\n        contents.Tags = [];\n    }\n    else if (output[\"Tag\"] !== undefined) {\n        contents.Tags = de_TagSet((0, smithy_client_1.getArrayIfSingleItem)(output[\"Tag\"]), context);\n    }\n    return contents;\n};\nconst de_ReplicationRuleFilter = (output, context) => {\n    if (output[\"Prefix\"] !== undefined) {\n        return {\n            Prefix: (0, smithy_client_1.expectString)(output[\"Prefix\"]),\n        };\n    }\n    if (output[\"Tag\"] !== undefined) {\n        return {\n            Tag: de_Tag(output[\"Tag\"], context),\n        };\n    }\n    if (output[\"And\"] !== undefined) {\n        return {\n            And: de_ReplicationRuleAndOperator(output[\"And\"], context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst de_ReplicationRules = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ReplicationRule(entry, context);\n    });\n};\nconst de_ReplicationTime = (output, context) => {\n    const contents = {};\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(output[\"Status\"]);\n    }\n    if (output[\"Time\"] !== undefined) {\n        contents.Time = de_ReplicationTimeValue(output[\"Time\"], context);\n    }\n    return contents;\n};\nconst de_ReplicationTimeValue = (output, context) => {\n    const contents = {};\n    if (output[\"Minutes\"] !== undefined) {\n        contents.Minutes = (0, smithy_client_1.strictParseInt32)(output[\"Minutes\"]);\n    }\n    return contents;\n};\nconst de_RestoreStatus = (output, context) => {\n    const contents = {};\n    if (output[\"IsRestoreInProgress\"] !== undefined) {\n        contents.IsRestoreInProgress = (0, smithy_client_1.parseBoolean)(output[\"IsRestoreInProgress\"]);\n    }\n    if (output[\"RestoreExpiryDate\"] !== undefined) {\n        contents.RestoreExpiryDate = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"RestoreExpiryDate\"]));\n    }\n    return contents;\n};\nconst de_RoutingRule = (output, context) => {\n    const contents = {};\n    if (output[\"Condition\"] !== undefined) {\n        contents.Condition = de_Condition(output[\"Condition\"], context);\n    }\n    if (output[\"Redirect\"] !== undefined) {\n        contents.Redirect = de_Redirect(output[\"Redirect\"], context);\n    }\n    return contents;\n};\nconst de_RoutingRules = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_RoutingRule(entry, context);\n    });\n};\nconst de_S3KeyFilter = (output, context) => {\n    const contents = {};\n    if (output.FilterRule === \"\") {\n        contents.FilterRules = [];\n    }\n    else if (output[\"FilterRule\"] !== undefined) {\n        contents.FilterRules = de_FilterRuleList((0, smithy_client_1.getArrayIfSingleItem)(output[\"FilterRule\"]), context);\n    }\n    return contents;\n};\nconst de_ServerSideEncryptionByDefault = (output, context) => {\n    const contents = {};\n    if (output[\"SSEAlgorithm\"] !== undefined) {\n        contents.SSEAlgorithm = (0, smithy_client_1.expectString)(output[\"SSEAlgorithm\"]);\n    }\n    if (output[\"KMSMasterKeyID\"] !== undefined) {\n        contents.KMSMasterKeyID = (0, smithy_client_1.expectString)(output[\"KMSMasterKeyID\"]);\n    }\n    return contents;\n};\nconst de_ServerSideEncryptionConfiguration = (output, context) => {\n    const contents = {};\n    if (output.Rule === \"\") {\n        contents.Rules = [];\n    }\n    else if (output[\"Rule\"] !== undefined) {\n        contents.Rules = de_ServerSideEncryptionRules((0, smithy_client_1.getArrayIfSingleItem)(output[\"Rule\"]), context);\n    }\n    return contents;\n};\nconst de_ServerSideEncryptionRule = (output, context) => {\n    const contents = {};\n    if (output[\"ApplyServerSideEncryptionByDefault\"] !== undefined) {\n        contents.ApplyServerSideEncryptionByDefault = de_ServerSideEncryptionByDefault(output[\"ApplyServerSideEncryptionByDefault\"], context);\n    }\n    if (output[\"BucketKeyEnabled\"] !== undefined) {\n        contents.BucketKeyEnabled = (0, smithy_client_1.parseBoolean)(output[\"BucketKeyEnabled\"]);\n    }\n    return contents;\n};\nconst de_ServerSideEncryptionRules = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ServerSideEncryptionRule(entry, context);\n    });\n};\nconst de_SourceSelectionCriteria = (output, context) => {\n    const contents = {};\n    if (output[\"SseKmsEncryptedObjects\"] !== undefined) {\n        contents.SseKmsEncryptedObjects = de_SseKmsEncryptedObjects(output[\"SseKmsEncryptedObjects\"], context);\n    }\n    if (output[\"ReplicaModifications\"] !== undefined) {\n        contents.ReplicaModifications = de_ReplicaModifications(output[\"ReplicaModifications\"], context);\n    }\n    return contents;\n};\nconst de_SSEKMS = (output, context) => {\n    const contents = {};\n    if (output[\"KeyId\"] !== undefined) {\n        contents.KeyId = (0, smithy_client_1.expectString)(output[\"KeyId\"]);\n    }\n    return contents;\n};\nconst de_SseKmsEncryptedObjects = (output, context) => {\n    const contents = {};\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(output[\"Status\"]);\n    }\n    return contents;\n};\nconst de_SSES3 = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst de_Stats = (output, context) => {\n    const contents = {};\n    if (output[\"BytesScanned\"] !== undefined) {\n        contents.BytesScanned = (0, smithy_client_1.strictParseLong)(output[\"BytesScanned\"]);\n    }\n    if (output[\"BytesProcessed\"] !== undefined) {\n        contents.BytesProcessed = (0, smithy_client_1.strictParseLong)(output[\"BytesProcessed\"]);\n    }\n    if (output[\"BytesReturned\"] !== undefined) {\n        contents.BytesReturned = (0, smithy_client_1.strictParseLong)(output[\"BytesReturned\"]);\n    }\n    return contents;\n};\nconst de_StorageClassAnalysis = (output, context) => {\n    const contents = {};\n    if (output[\"DataExport\"] !== undefined) {\n        contents.DataExport = de_StorageClassAnalysisDataExport(output[\"DataExport\"], context);\n    }\n    return contents;\n};\nconst de_StorageClassAnalysisDataExport = (output, context) => {\n    const contents = {};\n    if (output[\"OutputSchemaVersion\"] !== undefined) {\n        contents.OutputSchemaVersion = (0, smithy_client_1.expectString)(output[\"OutputSchemaVersion\"]);\n    }\n    if (output[\"Destination\"] !== undefined) {\n        contents.Destination = de_AnalyticsExportDestination(output[\"Destination\"], context);\n    }\n    return contents;\n};\nconst de_Tag = (output, context) => {\n    const contents = {};\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = (0, smithy_client_1.expectString)(output[\"Key\"]);\n    }\n    if (output[\"Value\"] !== undefined) {\n        contents.Value = (0, smithy_client_1.expectString)(output[\"Value\"]);\n    }\n    return contents;\n};\nconst de_TagSet = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Tag(entry, context);\n    });\n};\nconst de_TargetGrant = (output, context) => {\n    const contents = {};\n    if (output[\"Grantee\"] !== undefined) {\n        contents.Grantee = de_Grantee(output[\"Grantee\"], context);\n    }\n    if (output[\"Permission\"] !== undefined) {\n        contents.Permission = (0, smithy_client_1.expectString)(output[\"Permission\"]);\n    }\n    return contents;\n};\nconst de_TargetGrants = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_TargetGrant(entry, context);\n    });\n};\nconst de_Tiering = (output, context) => {\n    const contents = {};\n    if (output[\"Days\"] !== undefined) {\n        contents.Days = (0, smithy_client_1.strictParseInt32)(output[\"Days\"]);\n    }\n    if (output[\"AccessTier\"] !== undefined) {\n        contents.AccessTier = (0, smithy_client_1.expectString)(output[\"AccessTier\"]);\n    }\n    return contents;\n};\nconst de_TieringList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Tiering(entry, context);\n    });\n};\nconst de_TopicConfiguration = (output, context) => {\n    const contents = {};\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"Topic\"] !== undefined) {\n        contents.TopicArn = (0, smithy_client_1.expectString)(output[\"Topic\"]);\n    }\n    if (output.Event === \"\") {\n        contents.Events = [];\n    }\n    else if (output[\"Event\"] !== undefined) {\n        contents.Events = de_EventList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Event\"]), context);\n    }\n    if (output[\"Filter\"] !== undefined) {\n        contents.Filter = de_NotificationConfigurationFilter(output[\"Filter\"], context);\n    }\n    return contents;\n};\nconst de_TopicConfigurationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_TopicConfiguration(entry, context);\n    });\n};\nconst de_Transition = (output, context) => {\n    const contents = {};\n    if (output[\"Date\"] !== undefined) {\n        contents.Date = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"Date\"]));\n    }\n    if (output[\"Days\"] !== undefined) {\n        contents.Days = (0, smithy_client_1.strictParseInt32)(output[\"Days\"]);\n    }\n    if (output[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = (0, smithy_client_1.expectString)(output[\"StorageClass\"]);\n    }\n    return contents;\n};\nconst de_TransitionList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Transition(entry, context);\n    });\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => (0, smithy_client_1.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body));\nconst isSerializableHeaderValue = (value) => value !== undefined &&\n    value !== null &&\n    value !== \"\" &&\n    (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n    (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        const parser = new fast_xml_parser_1.XMLParser({\n            attributeNamePrefix: \"\",\n            htmlEntities: true,\n            ignoreAttributes: false,\n            ignoreDeclaration: true,\n            parseTagValue: false,\n            trimValues: false,\n            tagValueProcessor: (_, val) => (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : undefined),\n        });\n        parser.addEntity(\"#xD\", \"\\r\");\n        parser.addEntity(\"#10\", \"\\n\");\n        const parsedObj = parser.parse(encoded);\n        const textNodeName = \"#text\";\n        const key = Object.keys(parsedObj)[0];\n        const parsedObjToReturn = parsedObj[key];\n        if (parsedObjToReturn[textNodeName]) {\n            parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n            delete parsedObjToReturn[textNodeName];\n        }\n        return (0, smithy_client_1.getValueFromTextNode)(parsedObjToReturn);\n    }\n    return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n    const value = await parseBody(errorBody, context);\n    if (value.Error) {\n        value.Error.message = value.Error.message ?? value.Error.Message;\n    }\n    return value;\n};\nconst loadRestXmlErrorCode = (output, data) => {\n    if (data?.Code !== undefined) {\n        return data.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"../package.json\"));\nconst client_sts_1 = require(\"@aws-sdk/client-sts\");\nconst credential_provider_node_1 = require(\"@aws-sdk/credential-provider-node\");\nconst middleware_bucket_endpoint_1 = require(\"@aws-sdk/middleware-bucket-endpoint\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst config_resolver_1 = require(\"@smithy/config-resolver\");\nconst eventstream_serde_node_1 = require(\"@smithy/eventstream-serde-node\");\nconst hash_node_1 = require(\"@smithy/hash-node\");\nconst hash_stream_node_1 = require(\"@smithy/hash-stream-node\");\nconst middleware_retry_1 = require(\"@smithy/middleware-retry\");\nconst node_config_provider_1 = require(\"@smithy/node-config-provider\");\nconst node_http_handler_1 = require(\"@smithy/node-http-handler\");\nconst util_body_length_node_1 = require(\"@smithy/util-body-length-node\");\nconst util_retry_1 = require(\"@smithy/util-retry\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst util_defaults_mode_node_1 = require(\"@smithy/util-defaults-mode-node\");\nconst smithy_client_2 = require(\"@smithy/smithy-client\");\nconst getRuntimeConfig = (config) => {\n    (0, smithy_client_2.emitWarningIfUnsupportedVersion)(process.version);\n    const defaultsMode = (0, util_defaults_mode_node_1.resolveDefaultsModeConfig)(config);\n    const defaultConfigProvider = () => defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = (0, runtimeConfig_shared_1.getRuntimeConfig)(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? util_body_length_node_1.calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? (0, client_sts_1.decorateDefaultCredentialProvider)(credential_provider_node_1.defaultProvider),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            (0, util_user_agent_node_1.defaultUserAgent)({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        eventStreamSerdeProvider: config?.eventStreamSerdeProvider ?? eventstream_serde_node_1.eventStreamSerdeProvider,\n        maxAttempts: config?.maxAttempts ?? (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        md5: config?.md5 ?? hash_node_1.Hash.bind(null, \"md5\"),\n        region: config?.region ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: config?.requestHandler ?? new node_http_handler_1.NodeHttpHandler(defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            (0, node_config_provider_1.loadConfig)({\n                ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || util_retry_1.DEFAULT_RETRY_MODE,\n            }),\n        sha1: config?.sha1 ?? hash_node_1.Hash.bind(null, \"sha1\"),\n        sha256: config?.sha256 ?? hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? node_http_handler_1.streamCollector,\n        streamHasher: config?.streamHasher ?? hash_stream_node_1.readableStreamHasher,\n        useArnRegion: config?.useArnRegion ?? (0, node_config_provider_1.loadConfig)(middleware_bucket_endpoint_1.NODE_USE_ARN_REGION_CONFIG_OPTIONS),\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst signature_v4_multi_region_1 = require(\"@aws-sdk/signature-v4-multi-region\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst url_parser_1 = require(\"@smithy/url-parser\");\nconst util_base64_1 = require(\"@smithy/util-base64\");\nconst util_stream_1 = require(\"@smithy/util-stream\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst endpointResolver_1 = require(\"./endpoint/endpointResolver\");\nconst getRuntimeConfig = (config) => ({\n    apiVersion: \"2006-03-01\",\n    base64Decoder: config?.base64Decoder ?? util_base64_1.fromBase64,\n    base64Encoder: config?.base64Encoder ?? util_base64_1.toBase64,\n    disableHostPrefix: config?.disableHostPrefix ?? false,\n    endpointProvider: config?.endpointProvider ?? endpointResolver_1.defaultEndpointResolver,\n    extensions: config?.extensions ?? [],\n    getAwsChunkedEncodingStream: config?.getAwsChunkedEncodingStream ?? util_stream_1.getAwsChunkedEncodingStream,\n    logger: config?.logger ?? new smithy_client_1.NoOpLogger(),\n    sdkStreamMixin: config?.sdkStreamMixin ?? util_stream_1.sdkStreamMixin,\n    serviceId: config?.serviceId ?? \"S3\",\n    signerConstructor: config?.signerConstructor ?? signature_v4_multi_region_1.SignatureV4MultiRegion,\n    signingEscapePath: config?.signingEscapePath ?? false,\n    urlParser: config?.urlParser ?? url_parser_1.parseUrl,\n    useArnRegion: config?.useArnRegion ?? false,\n    utf8Decoder: config?.utf8Decoder ?? util_utf8_1.fromUtf8,\n    utf8Encoder: config?.utf8Encoder ?? util_utf8_1.toUtf8,\n});\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveRuntimeExtensions = void 0;\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst asPartial = (t) => t;\nconst resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = {\n        ...asPartial((0, smithy_client_1.getDefaultExtensionConfiguration)(runtimeConfig)),\n    };\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return {\n        ...runtimeConfig,\n        ...(0, smithy_client_1.resolveDefaultRuntimeConfig)(extensionConfiguration),\n    };\n};\nexports.resolveRuntimeExtensions = resolveRuntimeExtensions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./waitForBucketExists\"), exports);\ntslib_1.__exportStar(require(\"./waitForBucketNotExists\"), exports);\ntslib_1.__exportStar(require(\"./waitForObjectExists\"), exports);\ntslib_1.__exportStar(require(\"./waitForObjectNotExists\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitUntilBucketExists = exports.waitForBucketExists = void 0;\nconst util_waiter_1 = require(\"@smithy/util-waiter\");\nconst HeadBucketCommand_1 = require(\"../commands/HeadBucketCommand\");\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        const result = await client.send(new HeadBucketCommand_1.HeadBucketCommand(input));\n        reason = result;\n        return { state: util_waiter_1.WaiterState.SUCCESS, reason };\n    }\n    catch (exception) {\n        reason = exception;\n        if (exception.name && exception.name == \"NotFound\") {\n            return { state: util_waiter_1.WaiterState.RETRY, reason };\n        }\n    }\n    return { state: util_waiter_1.WaiterState.RETRY, reason };\n};\nconst waitForBucketExists = async (params, input) => {\n    const serviceDefaults = { minDelay: 5, maxDelay: 120 };\n    return (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n};\nexports.waitForBucketExists = waitForBucketExists;\nconst waitUntilBucketExists = async (params, input) => {\n    const serviceDefaults = { minDelay: 5, maxDelay: 120 };\n    const result = await (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n    return (0, util_waiter_1.checkExceptions)(result);\n};\nexports.waitUntilBucketExists = waitUntilBucketExists;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitUntilBucketNotExists = exports.waitForBucketNotExists = void 0;\nconst util_waiter_1 = require(\"@smithy/util-waiter\");\nconst HeadBucketCommand_1 = require(\"../commands/HeadBucketCommand\");\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        const result = await client.send(new HeadBucketCommand_1.HeadBucketCommand(input));\n        reason = result;\n    }\n    catch (exception) {\n        reason = exception;\n        if (exception.name && exception.name == \"NotFound\") {\n            return { state: util_waiter_1.WaiterState.SUCCESS, reason };\n        }\n    }\n    return { state: util_waiter_1.WaiterState.RETRY, reason };\n};\nconst waitForBucketNotExists = async (params, input) => {\n    const serviceDefaults = { minDelay: 5, maxDelay: 120 };\n    return (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n};\nexports.waitForBucketNotExists = waitForBucketNotExists;\nconst waitUntilBucketNotExists = async (params, input) => {\n    const serviceDefaults = { minDelay: 5, maxDelay: 120 };\n    const result = await (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n    return (0, util_waiter_1.checkExceptions)(result);\n};\nexports.waitUntilBucketNotExists = waitUntilBucketNotExists;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitUntilObjectExists = exports.waitForObjectExists = void 0;\nconst util_waiter_1 = require(\"@smithy/util-waiter\");\nconst HeadObjectCommand_1 = require(\"../commands/HeadObjectCommand\");\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        const result = await client.send(new HeadObjectCommand_1.HeadObjectCommand(input));\n        reason = result;\n        return { state: util_waiter_1.WaiterState.SUCCESS, reason };\n    }\n    catch (exception) {\n        reason = exception;\n        if (exception.name && exception.name == \"NotFound\") {\n            return { state: util_waiter_1.WaiterState.RETRY, reason };\n        }\n    }\n    return { state: util_waiter_1.WaiterState.RETRY, reason };\n};\nconst waitForObjectExists = async (params, input) => {\n    const serviceDefaults = { minDelay: 5, maxDelay: 120 };\n    return (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n};\nexports.waitForObjectExists = waitForObjectExists;\nconst waitUntilObjectExists = async (params, input) => {\n    const serviceDefaults = { minDelay: 5, maxDelay: 120 };\n    const result = await (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n    return (0, util_waiter_1.checkExceptions)(result);\n};\nexports.waitUntilObjectExists = waitUntilObjectExists;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitUntilObjectNotExists = exports.waitForObjectNotExists = void 0;\nconst util_waiter_1 = require(\"@smithy/util-waiter\");\nconst HeadObjectCommand_1 = require(\"../commands/HeadObjectCommand\");\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        const result = await client.send(new HeadObjectCommand_1.HeadObjectCommand(input));\n        reason = result;\n    }\n    catch (exception) {\n        reason = exception;\n        if (exception.name && exception.name == \"NotFound\") {\n            return { state: util_waiter_1.WaiterState.SUCCESS, reason };\n        }\n    }\n    return { state: util_waiter_1.WaiterState.RETRY, reason };\n};\nconst waitForObjectNotExists = async (params, input) => {\n    const serviceDefaults = { minDelay: 5, maxDelay: 120 };\n    return (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n};\nexports.waitForObjectNotExists = waitForObjectNotExists;\nconst waitUntilObjectNotExists = async (params, input) => {\n    const serviceDefaults = { minDelay: 5, maxDelay: 120 };\n    const result = await (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n    return (0, util_waiter_1.checkExceptions)(result);\n};\nexports.waitUntilObjectNotExists = waitUntilObjectNotExists;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SSO = void 0;\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst GetRoleCredentialsCommand_1 = require(\"./commands/GetRoleCredentialsCommand\");\nconst ListAccountRolesCommand_1 = require(\"./commands/ListAccountRolesCommand\");\nconst ListAccountsCommand_1 = require(\"./commands/ListAccountsCommand\");\nconst LogoutCommand_1 = require(\"./commands/LogoutCommand\");\nconst SSOClient_1 = require(\"./SSOClient\");\nconst commands = {\n    GetRoleCredentialsCommand: GetRoleCredentialsCommand_1.GetRoleCredentialsCommand,\n    ListAccountRolesCommand: ListAccountRolesCommand_1.ListAccountRolesCommand,\n    ListAccountsCommand: ListAccountsCommand_1.ListAccountsCommand,\n    LogoutCommand: LogoutCommand_1.LogoutCommand,\n};\nclass SSO extends SSOClient_1.SSOClient {\n}\nexports.SSO = SSO;\n(0, smithy_client_1.createAggregatedClient)(commands, SSO);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SSOClient = exports.__Client = void 0;\nconst middleware_host_header_1 = require(\"@aws-sdk/middleware-host-header\");\nconst middleware_logger_1 = require(\"@aws-sdk/middleware-logger\");\nconst middleware_recursion_detection_1 = require(\"@aws-sdk/middleware-recursion-detection\");\nconst middleware_user_agent_1 = require(\"@aws-sdk/middleware-user-agent\");\nconst config_resolver_1 = require(\"@smithy/config-resolver\");\nconst middleware_content_length_1 = require(\"@smithy/middleware-content-length\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_retry_1 = require(\"@smithy/middleware-retry\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"__Client\", { enumerable: true, get: function () { return smithy_client_1.Client; } });\nconst EndpointParameters_1 = require(\"./endpoint/EndpointParameters\");\nconst runtimeConfig_1 = require(\"./runtimeConfig\");\nconst runtimeExtensions_1 = require(\"./runtimeExtensions\");\nclass SSOClient extends smithy_client_1.Client {\n    constructor(...[configuration]) {\n        const _config_0 = (0, runtimeConfig_1.getRuntimeConfig)(configuration || {});\n        const _config_1 = (0, EndpointParameters_1.resolveClientEndpointParameters)(_config_0);\n        const _config_2 = (0, config_resolver_1.resolveRegionConfig)(_config_1);\n        const _config_3 = (0, middleware_endpoint_1.resolveEndpointConfig)(_config_2);\n        const _config_4 = (0, middleware_retry_1.resolveRetryConfig)(_config_3);\n        const _config_5 = (0, middleware_host_header_1.resolveHostHeaderConfig)(_config_4);\n        const _config_6 = (0, middleware_user_agent_1.resolveUserAgentConfig)(_config_5);\n        const _config_7 = (0, runtimeExtensions_1.resolveRuntimeExtensions)(_config_6, configuration?.extensions || []);\n        super(_config_7);\n        this.config = _config_7;\n        this.middlewareStack.use((0, middleware_retry_1.getRetryPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_content_length_1.getContentLengthPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_host_header_1.getHostHeaderPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_logger_1.getLoggerPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_recursion_detection_1.getRecursionDetectionPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_user_agent_1.getUserAgentPlugin)(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\nexports.SSOClient = SSOClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetRoleCredentialsCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nclass GetRoleCredentialsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetRoleCredentialsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"GetRoleCredentialsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetRoleCredentialsRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetRoleCredentialsResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.se_GetRoleCredentialsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.de_GetRoleCredentialsCommand)(output, context);\n    }\n}\nexports.GetRoleCredentialsCommand = GetRoleCredentialsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListAccountRolesCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nclass ListAccountRolesCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListAccountRolesCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"ListAccountRolesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListAccountRolesRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.se_ListAccountRolesCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.de_ListAccountRolesCommand)(output, context);\n    }\n}\nexports.ListAccountRolesCommand = ListAccountRolesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListAccountsCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nclass ListAccountsCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, ListAccountsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"ListAccountsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListAccountsRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.se_ListAccountsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.de_ListAccountsCommand)(output, context);\n    }\n}\nexports.ListAccountsCommand = ListAccountsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogoutCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nclass LogoutCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, LogoutCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"LogoutCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.LogoutRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.se_LogoutCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.de_LogoutCommand)(output, context);\n    }\n}\nexports.LogoutCommand = LogoutCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./GetRoleCredentialsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListAccountRolesCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListAccountsCommand\"), exports);\ntslib_1.__exportStar(require(\"./LogoutCommand\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveClientEndpointParameters = void 0;\nconst resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"awsssoportal\",\n    };\n};\nexports.resolveClientEndpointParameters = resolveClientEndpointParameters;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultEndpointResolver = void 0;\nconst util_endpoints_1 = require(\"@aws-sdk/util-endpoints\");\nconst ruleset_1 = require(\"./ruleset\");\nconst defaultEndpointResolver = (endpointParams, context = {}) => {\n    return (0, util_endpoints_1.resolveEndpoint)(ruleset_1.ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\nexports.defaultEndpointResolver = defaultEndpointResolver;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ruleSet = void 0;\nconst p = \"required\", q = \"fn\", r = \"argv\", s = \"ref\";\nconst a = \"PartitionResult\", b = \"tree\", c = \"error\", d = \"endpoint\", e = { [p]: false, \"type\": \"String\" }, f = { [p]: true, \"default\": false, \"type\": \"Boolean\" }, g = { [s]: \"Endpoint\" }, h = { [q]: \"booleanEquals\", [r]: [{ [s]: \"UseFIPS\" }, true] }, i = { [q]: \"booleanEquals\", [r]: [{ [s]: \"UseDualStack\" }, true] }, j = {}, k = { [q]: \"booleanEquals\", [r]: [true, { [q]: \"getAttr\", [r]: [{ [s]: a }, \"supportsFIPS\"] }] }, l = { [q]: \"booleanEquals\", [r]: [true, { [q]: \"getAttr\", [r]: [{ [s]: a }, \"supportsDualStack\"] }] }, m = [g], n = [h], o = [i];\nconst _data = { version: \"1.0\", parameters: { Region: e, UseDualStack: f, UseFIPS: f, Endpoint: e }, rules: [{ conditions: [{ [q]: \"aws.partition\", [r]: [{ [s]: \"Region\" }], assign: a }], type: b, rules: [{ conditions: [{ [q]: \"isSet\", [r]: m }, { [q]: \"parseURL\", [r]: m, assign: \"url\" }], type: b, rules: [{ conditions: n, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: c }, { type: b, rules: [{ conditions: o, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: c }, { endpoint: { url: g, properties: j, headers: j }, type: d }] }] }, { conditions: [h, i], type: b, rules: [{ conditions: [k, l], type: b, rules: [{ endpoint: { url: \"https://portal.sso-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: j, headers: j }, type: d }] }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: c }] }, { conditions: n, type: b, rules: [{ conditions: [k], type: b, rules: [{ type: b, rules: [{ endpoint: { url: \"https://portal.sso-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: j, headers: j }, type: d }] }] }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: c }] }, { conditions: o, type: b, rules: [{ conditions: [l], type: b, rules: [{ endpoint: { url: \"https://portal.sso.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: j, headers: j }, type: d }] }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: c }] }, { endpoint: { url: \"https://portal.sso.{Region}.{PartitionResult#dnsSuffix}\", properties: j, headers: j }, type: d }] }] };\nexports.ruleSet = _data;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SSOServiceException = void 0;\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./SSOClient\"), exports);\ntslib_1.__exportStar(require(\"./SSO\"), exports);\ntslib_1.__exportStar(require(\"./commands\"), exports);\ntslib_1.__exportStar(require(\"./pagination\"), exports);\ntslib_1.__exportStar(require(\"./models\"), exports);\nvar SSOServiceException_1 = require(\"./models/SSOServiceException\");\nObject.defineProperty(exports, \"SSOServiceException\", { enumerable: true, get: function () { return SSOServiceException_1.SSOServiceException; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SSOServiceException = exports.__ServiceException = void 0;\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"__ServiceException\", { enumerable: true, get: function () { return smithy_client_1.ServiceException; } });\nclass SSOServiceException extends smithy_client_1.ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, SSOServiceException.prototype);\n    }\n}\nexports.SSOServiceException = SSOServiceException;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./models_0\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogoutRequestFilterSensitiveLog = exports.ListAccountsRequestFilterSensitiveLog = exports.ListAccountRolesRequestFilterSensitiveLog = exports.GetRoleCredentialsResponseFilterSensitiveLog = exports.RoleCredentialsFilterSensitiveLog = exports.GetRoleCredentialsRequestFilterSensitiveLog = exports.UnauthorizedException = exports.TooManyRequestsException = exports.ResourceNotFoundException = exports.InvalidRequestException = void 0;\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst SSOServiceException_1 = require(\"./SSOServiceException\");\nclass InvalidRequestException extends SSOServiceException_1.SSOServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidRequestException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidRequestException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidRequestException.prototype);\n    }\n}\nexports.InvalidRequestException = InvalidRequestException;\nclass ResourceNotFoundException extends SSOServiceException_1.SSOServiceException {\n    constructor(opts) {\n        super({\n            name: \"ResourceNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);\n    }\n}\nexports.ResourceNotFoundException = ResourceNotFoundException;\nclass TooManyRequestsException extends SSOServiceException_1.SSOServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyRequestsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyRequestsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyRequestsException.prototype);\n    }\n}\nexports.TooManyRequestsException = TooManyRequestsException;\nclass UnauthorizedException extends SSOServiceException_1.SSOServiceException {\n    constructor(opts) {\n        super({\n            name: \"UnauthorizedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"UnauthorizedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnauthorizedException.prototype);\n    }\n}\nexports.UnauthorizedException = UnauthorizedException;\nconst GetRoleCredentialsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.GetRoleCredentialsRequestFilterSensitiveLog = GetRoleCredentialsRequestFilterSensitiveLog;\nconst RoleCredentialsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.secretAccessKey && { secretAccessKey: smithy_client_1.SENSITIVE_STRING }),\n    ...(obj.sessionToken && { sessionToken: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.RoleCredentialsFilterSensitiveLog = RoleCredentialsFilterSensitiveLog;\nconst GetRoleCredentialsResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.roleCredentials && { roleCredentials: (0, exports.RoleCredentialsFilterSensitiveLog)(obj.roleCredentials) }),\n});\nexports.GetRoleCredentialsResponseFilterSensitiveLog = GetRoleCredentialsResponseFilterSensitiveLog;\nconst ListAccountRolesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.ListAccountRolesRequestFilterSensitiveLog = ListAccountRolesRequestFilterSensitiveLog;\nconst ListAccountsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.ListAccountsRequestFilterSensitiveLog = ListAccountsRequestFilterSensitiveLog;\nconst LogoutRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.LogoutRequestFilterSensitiveLog = LogoutRequestFilterSensitiveLog;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListAccountRoles = void 0;\nconst ListAccountRolesCommand_1 = require(\"../commands/ListAccountRolesCommand\");\nconst SSOClient_1 = require(\"../SSOClient\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListAccountRolesCommand_1.ListAccountRolesCommand(input), ...args);\n};\nasync function* paginateListAccountRoles(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.nextToken = token;\n        input[\"maxResults\"] = config.pageSize;\n        if (config.client instanceof SSOClient_1.SSOClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected SSO | SSOClient\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.nextToken;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\nexports.paginateListAccountRoles = paginateListAccountRoles;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListAccounts = void 0;\nconst ListAccountsCommand_1 = require(\"../commands/ListAccountsCommand\");\nconst SSOClient_1 = require(\"../SSOClient\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListAccountsCommand_1.ListAccountsCommand(input), ...args);\n};\nasync function* paginateListAccounts(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.nextToken = token;\n        input[\"maxResults\"] = config.pageSize;\n        if (config.client instanceof SSOClient_1.SSOClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected SSO | SSOClient\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.nextToken;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\nexports.paginateListAccounts = paginateListAccounts;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./Interfaces\"), exports);\ntslib_1.__exportStar(require(\"./ListAccountRolesPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListAccountsPaginator\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.de_LogoutCommand = exports.de_ListAccountsCommand = exports.de_ListAccountRolesCommand = exports.de_GetRoleCredentialsCommand = exports.se_LogoutCommand = exports.se_ListAccountsCommand = exports.se_ListAccountRolesCommand = exports.se_GetRoleCredentialsCommand = void 0;\nconst protocol_http_1 = require(\"@smithy/protocol-http\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst SSOServiceException_1 = require(\"../models/SSOServiceException\");\nconst se_GetRoleCredentialsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-sso_bearer_token\": input.accessToken,\n    });\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/federation/credentials\";\n    const query = (0, smithy_client_1.map)({\n        role_name: [, (0, smithy_client_1.expectNonNull)(input.roleName, `roleName`)],\n        account_id: [, (0, smithy_client_1.expectNonNull)(input.accountId, `accountId`)],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_GetRoleCredentialsCommand = se_GetRoleCredentialsCommand;\nconst se_ListAccountRolesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-sso_bearer_token\": input.accessToken,\n    });\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/assignment/roles\";\n    const query = (0, smithy_client_1.map)({\n        next_token: [, input.nextToken],\n        max_result: [() => input.maxResults !== void 0, () => input.maxResults.toString()],\n        account_id: [, (0, smithy_client_1.expectNonNull)(input.accountId, `accountId`)],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListAccountRolesCommand = se_ListAccountRolesCommand;\nconst se_ListAccountsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-sso_bearer_token\": input.accessToken,\n    });\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/assignment/accounts\";\n    const query = (0, smithy_client_1.map)({\n        next_token: [, input.nextToken],\n        max_result: [() => input.maxResults !== void 0, () => input.maxResults.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.se_ListAccountsCommand = se_ListAccountsCommand;\nconst se_LogoutCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = (0, smithy_client_1.map)({}, isSerializableHeaderValue, {\n        \"x-amz-sso_bearer_token\": input.accessToken,\n    });\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/logout\";\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.se_LogoutCommand = se_LogoutCommand;\nconst de_GetRoleCredentialsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetRoleCredentialsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    const doc = (0, smithy_client_1.take)(data, {\n        roleCredentials: smithy_client_1._json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexports.de_GetRoleCredentialsCommand = de_GetRoleCredentialsCommand;\nconst de_GetRoleCredentialsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await de_TooManyRequestsExceptionRes(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await de_UnauthorizedExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst de_ListAccountRolesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListAccountRolesCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    const doc = (0, smithy_client_1.take)(data, {\n        nextToken: smithy_client_1.expectString,\n        roleList: smithy_client_1._json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexports.de_ListAccountRolesCommand = de_ListAccountRolesCommand;\nconst de_ListAccountRolesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await de_TooManyRequestsExceptionRes(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await de_UnauthorizedExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst de_ListAccountsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListAccountsCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    const doc = (0, smithy_client_1.take)(data, {\n        accountList: smithy_client_1._json,\n        nextToken: smithy_client_1.expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexports.de_ListAccountsCommand = de_ListAccountsCommand;\nconst de_ListAccountsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await de_TooManyRequestsExceptionRes(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await de_UnauthorizedExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst de_LogoutCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_LogoutCommandError(output, context);\n    }\n    const contents = (0, smithy_client_1.map)({\n        $metadata: deserializeMetadata(output),\n    });\n    await (0, smithy_client_1.collectBody)(output.body, context);\n    return contents;\n};\nexports.de_LogoutCommand = de_LogoutCommand;\nconst de_LogoutCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await de_TooManyRequestsExceptionRes(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await de_UnauthorizedExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst throwDefaultError = (0, smithy_client_1.withBaseException)(SSOServiceException_1.SSOServiceException);\nconst de_InvalidRequestExceptionRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body;\n    const doc = (0, smithy_client_1.take)(data, {\n        message: smithy_client_1.expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new models_0_1.InvalidRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst de_ResourceNotFoundExceptionRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body;\n    const doc = (0, smithy_client_1.take)(data, {\n        message: smithy_client_1.expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new models_0_1.ResourceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst de_TooManyRequestsExceptionRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body;\n    const doc = (0, smithy_client_1.take)(data, {\n        message: smithy_client_1.expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new models_0_1.TooManyRequestsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst de_UnauthorizedExceptionRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_1.map)({});\n    const data = parsedOutput.body;\n    const doc = (0, smithy_client_1.take)(data, {\n        message: smithy_client_1.expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new models_0_1.UnauthorizedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => (0, smithy_client_1.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body));\nconst isSerializableHeaderValue = (value) => value !== undefined &&\n    value !== null &&\n    value !== \"\" &&\n    (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n    (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        return JSON.parse(encoded);\n    }\n    return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n    const value = await parseBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nconst loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"../package.json\"));\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst config_resolver_1 = require(\"@smithy/config-resolver\");\nconst hash_node_1 = require(\"@smithy/hash-node\");\nconst middleware_retry_1 = require(\"@smithy/middleware-retry\");\nconst node_config_provider_1 = require(\"@smithy/node-config-provider\");\nconst node_http_handler_1 = require(\"@smithy/node-http-handler\");\nconst util_body_length_node_1 = require(\"@smithy/util-body-length-node\");\nconst util_retry_1 = require(\"@smithy/util-retry\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst util_defaults_mode_node_1 = require(\"@smithy/util-defaults-mode-node\");\nconst smithy_client_2 = require(\"@smithy/smithy-client\");\nconst getRuntimeConfig = (config) => {\n    (0, smithy_client_2.emitWarningIfUnsupportedVersion)(process.version);\n    const defaultsMode = (0, util_defaults_mode_node_1.resolveDefaultsModeConfig)(config);\n    const defaultConfigProvider = () => defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = (0, runtimeConfig_shared_1.getRuntimeConfig)(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? util_body_length_node_1.calculateBodyLength,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            (0, util_user_agent_node_1.defaultUserAgent)({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        maxAttempts: config?.maxAttempts ?? (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: config?.requestHandler ?? new node_http_handler_1.NodeHttpHandler(defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            (0, node_config_provider_1.loadConfig)({\n                ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || util_retry_1.DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? node_http_handler_1.streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst url_parser_1 = require(\"@smithy/url-parser\");\nconst util_base64_1 = require(\"@smithy/util-base64\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst endpointResolver_1 = require(\"./endpoint/endpointResolver\");\nconst getRuntimeConfig = (config) => ({\n    apiVersion: \"2019-06-10\",\n    base64Decoder: config?.base64Decoder ?? util_base64_1.fromBase64,\n    base64Encoder: config?.base64Encoder ?? util_base64_1.toBase64,\n    disableHostPrefix: config?.disableHostPrefix ?? false,\n    endpointProvider: config?.endpointProvider ?? endpointResolver_1.defaultEndpointResolver,\n    extensions: config?.extensions ?? [],\n    logger: config?.logger ?? new smithy_client_1.NoOpLogger(),\n    serviceId: config?.serviceId ?? \"SSO\",\n    urlParser: config?.urlParser ?? url_parser_1.parseUrl,\n    utf8Decoder: config?.utf8Decoder ?? util_utf8_1.fromUtf8,\n    utf8Encoder: config?.utf8Encoder ?? util_utf8_1.toUtf8,\n});\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveRuntimeExtensions = void 0;\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst asPartial = (t) => t;\nconst resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = {\n        ...asPartial((0, smithy_client_1.getDefaultExtensionConfiguration)(runtimeConfig)),\n    };\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return {\n        ...runtimeConfig,\n        ...(0, smithy_client_1.resolveDefaultRuntimeConfig)(extensionConfiguration),\n    };\n};\nexports.resolveRuntimeExtensions = resolveRuntimeExtensions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.STS = void 0;\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst AssumeRoleCommand_1 = require(\"./commands/AssumeRoleCommand\");\nconst AssumeRoleWithSAMLCommand_1 = require(\"./commands/AssumeRoleWithSAMLCommand\");\nconst AssumeRoleWithWebIdentityCommand_1 = require(\"./commands/AssumeRoleWithWebIdentityCommand\");\nconst DecodeAuthorizationMessageCommand_1 = require(\"./commands/DecodeAuthorizationMessageCommand\");\nconst GetAccessKeyInfoCommand_1 = require(\"./commands/GetAccessKeyInfoCommand\");\nconst GetCallerIdentityCommand_1 = require(\"./commands/GetCallerIdentityCommand\");\nconst GetFederationTokenCommand_1 = require(\"./commands/GetFederationTokenCommand\");\nconst GetSessionTokenCommand_1 = require(\"./commands/GetSessionTokenCommand\");\nconst STSClient_1 = require(\"./STSClient\");\nconst commands = {\n    AssumeRoleCommand: AssumeRoleCommand_1.AssumeRoleCommand,\n    AssumeRoleWithSAMLCommand: AssumeRoleWithSAMLCommand_1.AssumeRoleWithSAMLCommand,\n    AssumeRoleWithWebIdentityCommand: AssumeRoleWithWebIdentityCommand_1.AssumeRoleWithWebIdentityCommand,\n    DecodeAuthorizationMessageCommand: DecodeAuthorizationMessageCommand_1.DecodeAuthorizationMessageCommand,\n    GetAccessKeyInfoCommand: GetAccessKeyInfoCommand_1.GetAccessKeyInfoCommand,\n    GetCallerIdentityCommand: GetCallerIdentityCommand_1.GetCallerIdentityCommand,\n    GetFederationTokenCommand: GetFederationTokenCommand_1.GetFederationTokenCommand,\n    GetSessionTokenCommand: GetSessionTokenCommand_1.GetSessionTokenCommand,\n};\nclass STS extends STSClient_1.STSClient {\n}\nexports.STS = STS;\n(0, smithy_client_1.createAggregatedClient)(commands, STS);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.STSClient = exports.__Client = void 0;\nconst middleware_host_header_1 = require(\"@aws-sdk/middleware-host-header\");\nconst middleware_logger_1 = require(\"@aws-sdk/middleware-logger\");\nconst middleware_recursion_detection_1 = require(\"@aws-sdk/middleware-recursion-detection\");\nconst middleware_sdk_sts_1 = require(\"@aws-sdk/middleware-sdk-sts\");\nconst middleware_user_agent_1 = require(\"@aws-sdk/middleware-user-agent\");\nconst config_resolver_1 = require(\"@smithy/config-resolver\");\nconst middleware_content_length_1 = require(\"@smithy/middleware-content-length\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_retry_1 = require(\"@smithy/middleware-retry\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"__Client\", { enumerable: true, get: function () { return smithy_client_1.Client; } });\nconst EndpointParameters_1 = require(\"./endpoint/EndpointParameters\");\nconst runtimeConfig_1 = require(\"./runtimeConfig\");\nconst runtimeExtensions_1 = require(\"./runtimeExtensions\");\nclass STSClient extends smithy_client_1.Client {\n    constructor(...[configuration]) {\n        const _config_0 = (0, runtimeConfig_1.getRuntimeConfig)(configuration || {});\n        const _config_1 = (0, EndpointParameters_1.resolveClientEndpointParameters)(_config_0);\n        const _config_2 = (0, config_resolver_1.resolveRegionConfig)(_config_1);\n        const _config_3 = (0, middleware_endpoint_1.resolveEndpointConfig)(_config_2);\n        const _config_4 = (0, middleware_retry_1.resolveRetryConfig)(_config_3);\n        const _config_5 = (0, middleware_host_header_1.resolveHostHeaderConfig)(_config_4);\n        const _config_6 = (0, middleware_sdk_sts_1.resolveStsAuthConfig)(_config_5, { stsClientCtor: STSClient });\n        const _config_7 = (0, middleware_user_agent_1.resolveUserAgentConfig)(_config_6);\n        const _config_8 = (0, runtimeExtensions_1.resolveRuntimeExtensions)(_config_7, configuration?.extensions || []);\n        super(_config_8);\n        this.config = _config_8;\n        this.middlewareStack.use((0, middleware_retry_1.getRetryPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_content_length_1.getContentLengthPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_host_header_1.getHostHeaderPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_logger_1.getLoggerPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_recursion_detection_1.getRecursionDetectionPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_user_agent_1.getUserAgentPlugin)(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\nexports.STSClient = STSClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssumeRoleCommand = exports.$Command = void 0;\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass AssumeRoleCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, AssumeRoleCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_signing_1.getAwsAuthPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"AssumeRoleCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: models_0_1.AssumeRoleResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_query_1.se_AssumeRoleCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_query_1.de_AssumeRoleCommand)(output, context);\n    }\n}\nexports.AssumeRoleCommand = AssumeRoleCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssumeRoleWithSAMLCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass AssumeRoleWithSAMLCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, AssumeRoleWithSAMLCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"AssumeRoleWithSAMLCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.AssumeRoleWithSAMLRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.AssumeRoleWithSAMLResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_query_1.se_AssumeRoleWithSAMLCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_query_1.de_AssumeRoleWithSAMLCommand)(output, context);\n    }\n}\nexports.AssumeRoleWithSAMLCommand = AssumeRoleWithSAMLCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssumeRoleWithWebIdentityCommand = exports.$Command = void 0;\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass AssumeRoleWithWebIdentityCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, AssumeRoleWithWebIdentityCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"AssumeRoleWithWebIdentityCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.AssumeRoleWithWebIdentityRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.AssumeRoleWithWebIdentityResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_query_1.se_AssumeRoleWithWebIdentityCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_query_1.de_AssumeRoleWithWebIdentityCommand)(output, context);\n    }\n}\nexports.AssumeRoleWithWebIdentityCommand = AssumeRoleWithWebIdentityCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DecodeAuthorizationMessageCommand = exports.$Command = void 0;\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DecodeAuthorizationMessageCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, DecodeAuthorizationMessageCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_signing_1.getAwsAuthPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"DecodeAuthorizationMessageCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_query_1.se_DecodeAuthorizationMessageCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_query_1.de_DecodeAuthorizationMessageCommand)(output, context);\n    }\n}\nexports.DecodeAuthorizationMessageCommand = DecodeAuthorizationMessageCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetAccessKeyInfoCommand = exports.$Command = void 0;\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass GetAccessKeyInfoCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetAccessKeyInfoCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_signing_1.getAwsAuthPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"GetAccessKeyInfoCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_query_1.se_GetAccessKeyInfoCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_query_1.de_GetAccessKeyInfoCommand)(output, context);\n    }\n}\nexports.GetAccessKeyInfoCommand = GetAccessKeyInfoCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetCallerIdentityCommand = exports.$Command = void 0;\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass GetCallerIdentityCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetCallerIdentityCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_signing_1.getAwsAuthPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"GetCallerIdentityCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_query_1.se_GetCallerIdentityCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_query_1.de_GetCallerIdentityCommand)(output, context);\n    }\n}\nexports.GetCallerIdentityCommand = GetCallerIdentityCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetFederationTokenCommand = exports.$Command = void 0;\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass GetFederationTokenCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetFederationTokenCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_signing_1.getAwsAuthPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"GetFederationTokenCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: models_0_1.GetFederationTokenResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_query_1.se_GetFederationTokenCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_query_1.de_GetFederationTokenCommand)(output, context);\n    }\n}\nexports.GetFederationTokenCommand = GetFederationTokenCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetSessionTokenCommand = exports.$Command = void 0;\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"$Command\", { enumerable: true, get: function () { return smithy_client_1.Command; } });\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass GetSessionTokenCommand extends smithy_client_1.Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_1.getEndpointPlugin)(configuration, GetSessionTokenCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use((0, middleware_signing_1.getAwsAuthPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"GetSessionTokenCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: models_0_1.GetSessionTokenResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_query_1.se_GetSessionTokenCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_query_1.de_GetSessionTokenCommand)(output, context);\n    }\n}\nexports.GetSessionTokenCommand = GetSessionTokenCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./AssumeRoleCommand\"), exports);\ntslib_1.__exportStar(require(\"./AssumeRoleWithSAMLCommand\"), exports);\ntslib_1.__exportStar(require(\"./AssumeRoleWithWebIdentityCommand\"), exports);\ntslib_1.__exportStar(require(\"./DecodeAuthorizationMessageCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetAccessKeyInfoCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetCallerIdentityCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetFederationTokenCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetSessionTokenCommand\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decorateDefaultCredentialProvider = exports.getDefaultRoleAssumerWithWebIdentity = exports.getDefaultRoleAssumer = void 0;\nconst defaultStsRoleAssumers_1 = require(\"./defaultStsRoleAssumers\");\nconst STSClient_1 = require(\"./STSClient\");\nconst getCustomizableStsClientCtor = (baseCtor, customizations) => {\n    if (!customizations)\n        return baseCtor;\n    else\n        return class CustomizableSTSClient extends baseCtor {\n            constructor(config) {\n                super(config);\n                for (const customization of customizations) {\n                    this.middlewareStack.use(customization);\n                }\n            }\n        };\n};\nconst getDefaultRoleAssumer = (stsOptions = {}, stsPlugins) => (0, defaultStsRoleAssumers_1.getDefaultRoleAssumer)(stsOptions, getCustomizableStsClientCtor(STSClient_1.STSClient, stsPlugins));\nexports.getDefaultRoleAssumer = getDefaultRoleAssumer;\nconst getDefaultRoleAssumerWithWebIdentity = (stsOptions = {}, stsPlugins) => (0, defaultStsRoleAssumers_1.getDefaultRoleAssumerWithWebIdentity)(stsOptions, getCustomizableStsClientCtor(STSClient_1.STSClient, stsPlugins));\nexports.getDefaultRoleAssumerWithWebIdentity = getDefaultRoleAssumerWithWebIdentity;\nconst decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: (0, exports.getDefaultRoleAssumer)(input),\n    roleAssumerWithWebIdentity: (0, exports.getDefaultRoleAssumerWithWebIdentity)(input),\n    ...input,\n});\nexports.decorateDefaultCredentialProvider = decorateDefaultCredentialProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decorateDefaultCredentialProvider = exports.getDefaultRoleAssumerWithWebIdentity = exports.getDefaultRoleAssumer = void 0;\nconst AssumeRoleCommand_1 = require(\"./commands/AssumeRoleCommand\");\nconst AssumeRoleWithWebIdentityCommand_1 = require(\"./commands/AssumeRoleWithWebIdentityCommand\");\nconst ASSUME_ROLE_DEFAULT_REGION = \"us-east-1\";\nconst decorateDefaultRegion = (region) => {\n    if (typeof region !== \"function\") {\n        return region === undefined ? ASSUME_ROLE_DEFAULT_REGION : region;\n    }\n    return async () => {\n        try {\n            return await region();\n        }\n        catch (e) {\n            return ASSUME_ROLE_DEFAULT_REGION;\n        }\n    };\n};\nconst getDefaultRoleAssumer = (stsOptions, stsClientCtor) => {\n    let stsClient;\n    let closureSourceCreds;\n    return async (sourceCreds, params) => {\n        closureSourceCreds = sourceCreds;\n        if (!stsClient) {\n            const { logger, region, requestHandler } = stsOptions;\n            stsClient = new stsClientCtor({\n                logger,\n                credentialDefaultProvider: () => async () => closureSourceCreds,\n                region: decorateDefaultRegion(region || stsOptions.region),\n                ...(requestHandler ? { requestHandler } : {}),\n            });\n        }\n        const { Credentials } = await stsClient.send(new AssumeRoleCommand_1.AssumeRoleCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRole call with role ${params.RoleArn}`);\n        }\n        return {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n        };\n    };\n};\nexports.getDefaultRoleAssumer = getDefaultRoleAssumer;\nconst getDefaultRoleAssumerWithWebIdentity = (stsOptions, stsClientCtor) => {\n    let stsClient;\n    return async (params) => {\n        if (!stsClient) {\n            const { logger, region, requestHandler } = stsOptions;\n            stsClient = new stsClientCtor({\n                logger,\n                region: decorateDefaultRegion(region || stsOptions.region),\n                ...(requestHandler ? { requestHandler } : {}),\n            });\n        }\n        const { Credentials } = await stsClient.send(new AssumeRoleWithWebIdentityCommand_1.AssumeRoleWithWebIdentityCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRoleWithWebIdentity call with role ${params.RoleArn}`);\n        }\n        return {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n        };\n    };\n};\nexports.getDefaultRoleAssumerWithWebIdentity = getDefaultRoleAssumerWithWebIdentity;\nconst decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: (0, exports.getDefaultRoleAssumer)(input, input.stsClientCtor),\n    roleAssumerWithWebIdentity: (0, exports.getDefaultRoleAssumerWithWebIdentity)(input, input.stsClientCtor),\n    ...input,\n});\nexports.decorateDefaultCredentialProvider = decorateDefaultCredentialProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveClientEndpointParameters = void 0;\nconst resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        useGlobalEndpoint: options.useGlobalEndpoint ?? false,\n        defaultSigningName: \"sts\",\n    };\n};\nexports.resolveClientEndpointParameters = resolveClientEndpointParameters;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultEndpointResolver = void 0;\nconst util_endpoints_1 = require(\"@aws-sdk/util-endpoints\");\nconst ruleset_1 = require(\"./ruleset\");\nconst defaultEndpointResolver = (endpointParams, context = {}) => {\n    return (0, util_endpoints_1.resolveEndpoint)(ruleset_1.ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\nexports.defaultEndpointResolver = defaultEndpointResolver;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ruleSet = void 0;\nconst F = \"required\", G = \"type\", H = \"fn\", I = \"argv\", J = \"ref\";\nconst a = false, b = true, c = \"booleanEquals\", d = \"tree\", e = \"stringEquals\", f = \"sigv4\", g = \"sts\", h = \"us-east-1\", i = \"endpoint\", j = \"https://sts.{Region}.{PartitionResult#dnsSuffix}\", k = \"error\", l = \"getAttr\", m = { [F]: false, [G]: \"String\" }, n = { [F]: true, \"default\": false, [G]: \"Boolean\" }, o = { [J]: \"Endpoint\" }, p = { [H]: \"isSet\", [I]: [{ [J]: \"Region\" }] }, q = { [J]: \"Region\" }, r = { [H]: \"aws.partition\", [I]: [q], \"assign\": \"PartitionResult\" }, s = { [J]: \"UseFIPS\" }, t = { [J]: \"UseDualStack\" }, u = { \"url\": \"https://sts.amazonaws.com\", \"properties\": { \"authSchemes\": [{ \"name\": f, \"signingName\": g, \"signingRegion\": h }] }, \"headers\": {} }, v = {}, w = { \"conditions\": [{ [H]: e, [I]: [q, \"aws-global\"] }], [i]: u, [G]: i }, x = { [H]: c, [I]: [s, true] }, y = { [H]: c, [I]: [t, true] }, z = { [H]: c, [I]: [true, { [H]: l, [I]: [{ [J]: \"PartitionResult\" }, \"supportsFIPS\"] }] }, A = { [J]: \"PartitionResult\" }, B = { [H]: c, [I]: [true, { [H]: l, [I]: [A, \"supportsDualStack\"] }] }, C = [{ [H]: \"isSet\", [I]: [o] }], D = [x], E = [y];\nconst _data = { version: \"1.0\", parameters: { Region: m, UseDualStack: n, UseFIPS: n, Endpoint: m, UseGlobalEndpoint: n }, rules: [{ conditions: [{ [H]: c, [I]: [{ [J]: \"UseGlobalEndpoint\" }, b] }, { [H]: \"not\", [I]: C }, p, r, { [H]: c, [I]: [s, a] }, { [H]: c, [I]: [t, a] }], [G]: d, rules: [{ conditions: [{ [H]: e, [I]: [q, \"ap-northeast-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"ap-south-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"ap-southeast-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"ap-southeast-2\"] }], endpoint: u, [G]: i }, w, { conditions: [{ [H]: e, [I]: [q, \"ca-central-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"eu-central-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"eu-north-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"eu-west-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"eu-west-2\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"eu-west-3\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"sa-east-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, h] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"us-east-2\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"us-west-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"us-west-2\"] }], endpoint: u, [G]: i }, { endpoint: { url: j, properties: { authSchemes: [{ name: f, signingName: g, signingRegion: \"{Region}\" }] }, headers: v }, [G]: i }] }, { conditions: C, [G]: d, rules: [{ conditions: D, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", [G]: k }, { [G]: d, rules: [{ conditions: E, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", [G]: k }, { endpoint: { url: o, properties: v, headers: v }, [G]: i }] }] }, { [G]: d, rules: [{ conditions: [p], [G]: d, rules: [{ conditions: [r], [G]: d, rules: [{ conditions: [x, y], [G]: d, rules: [{ conditions: [z, B], [G]: d, rules: [{ [G]: d, rules: [{ endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: i }] }] }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", [G]: k }] }, { conditions: D, [G]: d, rules: [{ conditions: [z], [G]: d, rules: [{ [G]: d, rules: [{ conditions: [{ [H]: e, [I]: [\"aws-us-gov\", { [H]: l, [I]: [A, \"name\"] }] }], endpoint: { url: \"https://sts.{Region}.amazonaws.com\", properties: v, headers: v }, [G]: i }, { endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: v, headers: v }, [G]: i }] }] }, { error: \"FIPS is enabled but this partition does not support FIPS\", [G]: k }] }, { conditions: E, [G]: d, rules: [{ conditions: [B], [G]: d, rules: [{ [G]: d, rules: [{ endpoint: { url: \"https://sts.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: i }] }] }, { error: \"DualStack is enabled but this partition does not support DualStack\", [G]: k }] }, { [G]: d, rules: [w, { endpoint: { url: j, properties: v, headers: v }, [G]: i }] }] }] }, { error: \"Invalid Configuration: Missing Region\", [G]: k }] }] };\nexports.ruleSet = _data;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.STSServiceException = void 0;\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./STSClient\"), exports);\ntslib_1.__exportStar(require(\"./STS\"), exports);\ntslib_1.__exportStar(require(\"./commands\"), exports);\ntslib_1.__exportStar(require(\"./models\"), exports);\ntslib_1.__exportStar(require(\"./defaultRoleAssumers\"), exports);\nvar STSServiceException_1 = require(\"./models/STSServiceException\");\nObject.defineProperty(exports, \"STSServiceException\", { enumerable: true, get: function () { return STSServiceException_1.STSServiceException; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.STSServiceException = exports.__ServiceException = void 0;\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"__ServiceException\", { enumerable: true, get: function () { return smithy_client_1.ServiceException; } });\nclass STSServiceException extends smithy_client_1.ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, STSServiceException.prototype);\n    }\n}\nexports.STSServiceException = STSServiceException;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./models_0\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetSessionTokenResponseFilterSensitiveLog = exports.GetFederationTokenResponseFilterSensitiveLog = exports.AssumeRoleWithWebIdentityResponseFilterSensitiveLog = exports.AssumeRoleWithWebIdentityRequestFilterSensitiveLog = exports.AssumeRoleWithSAMLResponseFilterSensitiveLog = exports.AssumeRoleWithSAMLRequestFilterSensitiveLog = exports.AssumeRoleResponseFilterSensitiveLog = exports.CredentialsFilterSensitiveLog = exports.InvalidAuthorizationMessageException = exports.IDPCommunicationErrorException = exports.InvalidIdentityTokenException = exports.IDPRejectedClaimException = exports.RegionDisabledException = exports.PackedPolicyTooLargeException = exports.MalformedPolicyDocumentException = exports.ExpiredTokenException = void 0;\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst STSServiceException_1 = require(\"./STSServiceException\");\nclass ExpiredTokenException extends STSServiceException_1.STSServiceException {\n    constructor(opts) {\n        super({\n            name: \"ExpiredTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ExpiredTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ExpiredTokenException.prototype);\n    }\n}\nexports.ExpiredTokenException = ExpiredTokenException;\nclass MalformedPolicyDocumentException extends STSServiceException_1.STSServiceException {\n    constructor(opts) {\n        super({\n            name: \"MalformedPolicyDocumentException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"MalformedPolicyDocumentException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, MalformedPolicyDocumentException.prototype);\n    }\n}\nexports.MalformedPolicyDocumentException = MalformedPolicyDocumentException;\nclass PackedPolicyTooLargeException extends STSServiceException_1.STSServiceException {\n    constructor(opts) {\n        super({\n            name: \"PackedPolicyTooLargeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"PackedPolicyTooLargeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, PackedPolicyTooLargeException.prototype);\n    }\n}\nexports.PackedPolicyTooLargeException = PackedPolicyTooLargeException;\nclass RegionDisabledException extends STSServiceException_1.STSServiceException {\n    constructor(opts) {\n        super({\n            name: \"RegionDisabledException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"RegionDisabledException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, RegionDisabledException.prototype);\n    }\n}\nexports.RegionDisabledException = RegionDisabledException;\nclass IDPRejectedClaimException extends STSServiceException_1.STSServiceException {\n    constructor(opts) {\n        super({\n            name: \"IDPRejectedClaimException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IDPRejectedClaimException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IDPRejectedClaimException.prototype);\n    }\n}\nexports.IDPRejectedClaimException = IDPRejectedClaimException;\nclass InvalidIdentityTokenException extends STSServiceException_1.STSServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidIdentityTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidIdentityTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidIdentityTokenException.prototype);\n    }\n}\nexports.InvalidIdentityTokenException = InvalidIdentityTokenException;\nclass IDPCommunicationErrorException extends STSServiceException_1.STSServiceException {\n    constructor(opts) {\n        super({\n            name: \"IDPCommunicationErrorException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IDPCommunicationErrorException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IDPCommunicationErrorException.prototype);\n    }\n}\nexports.IDPCommunicationErrorException = IDPCommunicationErrorException;\nclass InvalidAuthorizationMessageException extends STSServiceException_1.STSServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidAuthorizationMessageException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidAuthorizationMessageException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidAuthorizationMessageException.prototype);\n    }\n}\nexports.InvalidAuthorizationMessageException = InvalidAuthorizationMessageException;\nconst CredentialsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SecretAccessKey && { SecretAccessKey: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.CredentialsFilterSensitiveLog = CredentialsFilterSensitiveLog;\nconst AssumeRoleResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: (0, exports.CredentialsFilterSensitiveLog)(obj.Credentials) }),\n});\nexports.AssumeRoleResponseFilterSensitiveLog = AssumeRoleResponseFilterSensitiveLog;\nconst AssumeRoleWithSAMLRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SAMLAssertion && { SAMLAssertion: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.AssumeRoleWithSAMLRequestFilterSensitiveLog = AssumeRoleWithSAMLRequestFilterSensitiveLog;\nconst AssumeRoleWithSAMLResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: (0, exports.CredentialsFilterSensitiveLog)(obj.Credentials) }),\n});\nexports.AssumeRoleWithSAMLResponseFilterSensitiveLog = AssumeRoleWithSAMLResponseFilterSensitiveLog;\nconst AssumeRoleWithWebIdentityRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.WebIdentityToken && { WebIdentityToken: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.AssumeRoleWithWebIdentityRequestFilterSensitiveLog = AssumeRoleWithWebIdentityRequestFilterSensitiveLog;\nconst AssumeRoleWithWebIdentityResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: (0, exports.CredentialsFilterSensitiveLog)(obj.Credentials) }),\n});\nexports.AssumeRoleWithWebIdentityResponseFilterSensitiveLog = AssumeRoleWithWebIdentityResponseFilterSensitiveLog;\nconst GetFederationTokenResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: (0, exports.CredentialsFilterSensitiveLog)(obj.Credentials) }),\n});\nexports.GetFederationTokenResponseFilterSensitiveLog = GetFederationTokenResponseFilterSensitiveLog;\nconst GetSessionTokenResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: (0, exports.CredentialsFilterSensitiveLog)(obj.Credentials) }),\n});\nexports.GetSessionTokenResponseFilterSensitiveLog = GetSessionTokenResponseFilterSensitiveLog;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.de_GetSessionTokenCommand = exports.de_GetFederationTokenCommand = exports.de_GetCallerIdentityCommand = exports.de_GetAccessKeyInfoCommand = exports.de_DecodeAuthorizationMessageCommand = exports.de_AssumeRoleWithWebIdentityCommand = exports.de_AssumeRoleWithSAMLCommand = exports.de_AssumeRoleCommand = exports.se_GetSessionTokenCommand = exports.se_GetFederationTokenCommand = exports.se_GetCallerIdentityCommand = exports.se_GetAccessKeyInfoCommand = exports.se_DecodeAuthorizationMessageCommand = exports.se_AssumeRoleWithWebIdentityCommand = exports.se_AssumeRoleWithSAMLCommand = exports.se_AssumeRoleCommand = void 0;\nconst protocol_http_1 = require(\"@smithy/protocol-http\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst fast_xml_parser_1 = require(\"fast-xml-parser\");\nconst models_0_1 = require(\"../models/models_0\");\nconst STSServiceException_1 = require(\"../models/STSServiceException\");\nconst se_AssumeRoleCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleRequest(input, context),\n        Action: \"AssumeRole\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.se_AssumeRoleCommand = se_AssumeRoleCommand;\nconst se_AssumeRoleWithSAMLCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleWithSAMLRequest(input, context),\n        Action: \"AssumeRoleWithSAML\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.se_AssumeRoleWithSAMLCommand = se_AssumeRoleWithSAMLCommand;\nconst se_AssumeRoleWithWebIdentityCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleWithWebIdentityRequest(input, context),\n        Action: \"AssumeRoleWithWebIdentity\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.se_AssumeRoleWithWebIdentityCommand = se_AssumeRoleWithWebIdentityCommand;\nconst se_DecodeAuthorizationMessageCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DecodeAuthorizationMessageRequest(input, context),\n        Action: \"DecodeAuthorizationMessage\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.se_DecodeAuthorizationMessageCommand = se_DecodeAuthorizationMessageCommand;\nconst se_GetAccessKeyInfoCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetAccessKeyInfoRequest(input, context),\n        Action: \"GetAccessKeyInfo\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.se_GetAccessKeyInfoCommand = se_GetAccessKeyInfoCommand;\nconst se_GetCallerIdentityCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetCallerIdentityRequest(input, context),\n        Action: \"GetCallerIdentity\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.se_GetCallerIdentityCommand = se_GetCallerIdentityCommand;\nconst se_GetFederationTokenCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetFederationTokenRequest(input, context),\n        Action: \"GetFederationToken\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.se_GetFederationTokenCommand = se_GetFederationTokenCommand;\nconst se_GetSessionTokenCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetSessionTokenRequest(input, context),\n        Action: \"GetSessionToken\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.se_GetSessionTokenCommand = se_GetSessionTokenCommand;\nconst de_AssumeRoleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_AssumeRoleCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleResponse(data.AssumeRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexports.de_AssumeRoleCommand = de_AssumeRoleCommand;\nconst de_AssumeRoleCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_AssumeRoleWithSAMLCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_AssumeRoleWithSAMLCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleWithSAMLResponse(data.AssumeRoleWithSAMLResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexports.de_AssumeRoleWithSAMLCommand = de_AssumeRoleWithSAMLCommand;\nconst de_AssumeRoleWithSAMLCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"IDPRejectedClaim\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            throw await de_IDPRejectedClaimExceptionRes(parsedOutput, context);\n        case \"InvalidIdentityToken\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            throw await de_InvalidIdentityTokenExceptionRes(parsedOutput, context);\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_AssumeRoleWithWebIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_AssumeRoleWithWebIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleWithWebIdentityResponse(data.AssumeRoleWithWebIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexports.de_AssumeRoleWithWebIdentityCommand = de_AssumeRoleWithWebIdentityCommand;\nconst de_AssumeRoleWithWebIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"IDPCommunicationError\":\n        case \"com.amazonaws.sts#IDPCommunicationErrorException\":\n            throw await de_IDPCommunicationErrorExceptionRes(parsedOutput, context);\n        case \"IDPRejectedClaim\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            throw await de_IDPRejectedClaimExceptionRes(parsedOutput, context);\n        case \"InvalidIdentityToken\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            throw await de_InvalidIdentityTokenExceptionRes(parsedOutput, context);\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_DecodeAuthorizationMessageCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DecodeAuthorizationMessageCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DecodeAuthorizationMessageResponse(data.DecodeAuthorizationMessageResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexports.de_DecodeAuthorizationMessageCommand = de_DecodeAuthorizationMessageCommand;\nconst de_DecodeAuthorizationMessageCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidAuthorizationMessageException\":\n        case \"com.amazonaws.sts#InvalidAuthorizationMessageException\":\n            throw await de_InvalidAuthorizationMessageExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetAccessKeyInfoCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetAccessKeyInfoCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetAccessKeyInfoResponse(data.GetAccessKeyInfoResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexports.de_GetAccessKeyInfoCommand = de_GetAccessKeyInfoCommand;\nconst de_GetAccessKeyInfoCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        errorCode,\n    });\n};\nconst de_GetCallerIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetCallerIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetCallerIdentityResponse(data.GetCallerIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexports.de_GetCallerIdentityCommand = de_GetCallerIdentityCommand;\nconst de_GetCallerIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        errorCode,\n    });\n};\nconst de_GetFederationTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetFederationTokenCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetFederationTokenResponse(data.GetFederationTokenResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexports.de_GetFederationTokenCommand = de_GetFederationTokenCommand;\nconst de_GetFederationTokenCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_GetSessionTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetSessionTokenCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetSessionTokenResponse(data.GetSessionTokenResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexports.de_GetSessionTokenCommand = de_GetSessionTokenCommand;\nconst de_GetSessionTokenCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ExpiredTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_ExpiredTokenException(body.Error, context);\n    const exception = new models_0_1.ExpiredTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, body);\n};\nconst de_IDPCommunicationErrorExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPCommunicationErrorException(body.Error, context);\n    const exception = new models_0_1.IDPCommunicationErrorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, body);\n};\nconst de_IDPRejectedClaimExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPRejectedClaimException(body.Error, context);\n    const exception = new models_0_1.IDPRejectedClaimException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, body);\n};\nconst de_InvalidAuthorizationMessageExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidAuthorizationMessageException(body.Error, context);\n    const exception = new models_0_1.InvalidAuthorizationMessageException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, body);\n};\nconst de_InvalidIdentityTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidIdentityTokenException(body.Error, context);\n    const exception = new models_0_1.InvalidIdentityTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, body);\n};\nconst de_MalformedPolicyDocumentExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_MalformedPolicyDocumentException(body.Error, context);\n    const exception = new models_0_1.MalformedPolicyDocumentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, body);\n};\nconst de_PackedPolicyTooLargeExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_PackedPolicyTooLargeException(body.Error, context);\n    const exception = new models_0_1.PackedPolicyTooLargeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, body);\n};\nconst de_RegionDisabledExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_RegionDisabledException(body.Error, context);\n    const exception = new models_0_1.RegionDisabledException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, body);\n};\nconst se_AssumeRoleRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn != null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.RoleSessionName != null) {\n        entries[\"RoleSessionName\"] = input.RoleSessionName;\n    }\n    if (input.PolicyArns != null) {\n        const memberEntries = se_policyDescriptorListType(input.PolicyArns, context);\n        if (input.PolicyArns?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy != null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds != null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.Tags != null) {\n        const memberEntries = se_tagListType(input.Tags, context);\n        if (input.Tags?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.TransitiveTagKeys != null) {\n        const memberEntries = se_tagKeyListType(input.TransitiveTagKeys, context);\n        if (input.TransitiveTagKeys?.length === 0) {\n            entries.TransitiveTagKeys = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `TransitiveTagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ExternalId != null) {\n        entries[\"ExternalId\"] = input.ExternalId;\n    }\n    if (input.SerialNumber != null) {\n        entries[\"SerialNumber\"] = input.SerialNumber;\n    }\n    if (input.TokenCode != null) {\n        entries[\"TokenCode\"] = input.TokenCode;\n    }\n    if (input.SourceIdentity != null) {\n        entries[\"SourceIdentity\"] = input.SourceIdentity;\n    }\n    if (input.ProvidedContexts != null) {\n        const memberEntries = se_ProvidedContextsListType(input.ProvidedContexts, context);\n        if (input.ProvidedContexts?.length === 0) {\n            entries.ProvidedContexts = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ProvidedContexts.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_AssumeRoleWithSAMLRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn != null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.PrincipalArn != null) {\n        entries[\"PrincipalArn\"] = input.PrincipalArn;\n    }\n    if (input.SAMLAssertion != null) {\n        entries[\"SAMLAssertion\"] = input.SAMLAssertion;\n    }\n    if (input.PolicyArns != null) {\n        const memberEntries = se_policyDescriptorListType(input.PolicyArns, context);\n        if (input.PolicyArns?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy != null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds != null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    return entries;\n};\nconst se_AssumeRoleWithWebIdentityRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn != null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.RoleSessionName != null) {\n        entries[\"RoleSessionName\"] = input.RoleSessionName;\n    }\n    if (input.WebIdentityToken != null) {\n        entries[\"WebIdentityToken\"] = input.WebIdentityToken;\n    }\n    if (input.ProviderId != null) {\n        entries[\"ProviderId\"] = input.ProviderId;\n    }\n    if (input.PolicyArns != null) {\n        const memberEntries = se_policyDescriptorListType(input.PolicyArns, context);\n        if (input.PolicyArns?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy != null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds != null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    return entries;\n};\nconst se_DecodeAuthorizationMessageRequest = (input, context) => {\n    const entries = {};\n    if (input.EncodedMessage != null) {\n        entries[\"EncodedMessage\"] = input.EncodedMessage;\n    }\n    return entries;\n};\nconst se_GetAccessKeyInfoRequest = (input, context) => {\n    const entries = {};\n    if (input.AccessKeyId != null) {\n        entries[\"AccessKeyId\"] = input.AccessKeyId;\n    }\n    return entries;\n};\nconst se_GetCallerIdentityRequest = (input, context) => {\n    const entries = {};\n    return entries;\n};\nconst se_GetFederationTokenRequest = (input, context) => {\n    const entries = {};\n    if (input.Name != null) {\n        entries[\"Name\"] = input.Name;\n    }\n    if (input.Policy != null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.PolicyArns != null) {\n        const memberEntries = se_policyDescriptorListType(input.PolicyArns, context);\n        if (input.PolicyArns?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.DurationSeconds != null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.Tags != null) {\n        const memberEntries = se_tagListType(input.Tags, context);\n        if (input.Tags?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_GetSessionTokenRequest = (input, context) => {\n    const entries = {};\n    if (input.DurationSeconds != null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.SerialNumber != null) {\n        entries[\"SerialNumber\"] = input.SerialNumber;\n    }\n    if (input.TokenCode != null) {\n        entries[\"TokenCode\"] = input.TokenCode;\n    }\n    return entries;\n};\nconst se_policyDescriptorListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_PolicyDescriptorType(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_PolicyDescriptorType = (input, context) => {\n    const entries = {};\n    if (input.arn != null) {\n        entries[\"arn\"] = input.arn;\n    }\n    return entries;\n};\nconst se_ProvidedContext = (input, context) => {\n    const entries = {};\n    if (input.ProviderArn != null) {\n        entries[\"ProviderArn\"] = input.ProviderArn;\n    }\n    if (input.ContextAssertion != null) {\n        entries[\"ContextAssertion\"] = input.ContextAssertion;\n    }\n    return entries;\n};\nconst se_ProvidedContextsListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_ProvidedContext(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_Tag = (input, context) => {\n    const entries = {};\n    if (input.Key != null) {\n        entries[\"Key\"] = input.Key;\n    }\n    if (input.Value != null) {\n        entries[\"Value\"] = input.Value;\n    }\n    return entries;\n};\nconst se_tagKeyListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_tagListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_Tag(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst de_AssumedRoleUser = (output, context) => {\n    const contents = {};\n    if (output[\"AssumedRoleId\"] !== undefined) {\n        contents.AssumedRoleId = (0, smithy_client_1.expectString)(output[\"AssumedRoleId\"]);\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = (0, smithy_client_1.expectString)(output[\"Arn\"]);\n    }\n    return contents;\n};\nconst de_AssumeRoleResponse = (output, context) => {\n    const contents = {};\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = de_Credentials(output[\"Credentials\"], context);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = de_AssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = (0, smithy_client_1.strictParseInt32)(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = (0, smithy_client_1.expectString)(output[\"SourceIdentity\"]);\n    }\n    return contents;\n};\nconst de_AssumeRoleWithSAMLResponse = (output, context) => {\n    const contents = {};\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = de_Credentials(output[\"Credentials\"], context);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = de_AssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = (0, smithy_client_1.strictParseInt32)(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"Subject\"] !== undefined) {\n        contents.Subject = (0, smithy_client_1.expectString)(output[\"Subject\"]);\n    }\n    if (output[\"SubjectType\"] !== undefined) {\n        contents.SubjectType = (0, smithy_client_1.expectString)(output[\"SubjectType\"]);\n    }\n    if (output[\"Issuer\"] !== undefined) {\n        contents.Issuer = (0, smithy_client_1.expectString)(output[\"Issuer\"]);\n    }\n    if (output[\"Audience\"] !== undefined) {\n        contents.Audience = (0, smithy_client_1.expectString)(output[\"Audience\"]);\n    }\n    if (output[\"NameQualifier\"] !== undefined) {\n        contents.NameQualifier = (0, smithy_client_1.expectString)(output[\"NameQualifier\"]);\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = (0, smithy_client_1.expectString)(output[\"SourceIdentity\"]);\n    }\n    return contents;\n};\nconst de_AssumeRoleWithWebIdentityResponse = (output, context) => {\n    const contents = {};\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = de_Credentials(output[\"Credentials\"], context);\n    }\n    if (output[\"SubjectFromWebIdentityToken\"] !== undefined) {\n        contents.SubjectFromWebIdentityToken = (0, smithy_client_1.expectString)(output[\"SubjectFromWebIdentityToken\"]);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = de_AssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = (0, smithy_client_1.strictParseInt32)(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"Provider\"] !== undefined) {\n        contents.Provider = (0, smithy_client_1.expectString)(output[\"Provider\"]);\n    }\n    if (output[\"Audience\"] !== undefined) {\n        contents.Audience = (0, smithy_client_1.expectString)(output[\"Audience\"]);\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = (0, smithy_client_1.expectString)(output[\"SourceIdentity\"]);\n    }\n    return contents;\n};\nconst de_Credentials = (output, context) => {\n    const contents = {};\n    if (output[\"AccessKeyId\"] !== undefined) {\n        contents.AccessKeyId = (0, smithy_client_1.expectString)(output[\"AccessKeyId\"]);\n    }\n    if (output[\"SecretAccessKey\"] !== undefined) {\n        contents.SecretAccessKey = (0, smithy_client_1.expectString)(output[\"SecretAccessKey\"]);\n    }\n    if (output[\"SessionToken\"] !== undefined) {\n        contents.SessionToken = (0, smithy_client_1.expectString)(output[\"SessionToken\"]);\n    }\n    if (output[\"Expiration\"] !== undefined) {\n        contents.Expiration = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTimeWithOffset)(output[\"Expiration\"]));\n    }\n    return contents;\n};\nconst de_DecodeAuthorizationMessageResponse = (output, context) => {\n    const contents = {};\n    if (output[\"DecodedMessage\"] !== undefined) {\n        contents.DecodedMessage = (0, smithy_client_1.expectString)(output[\"DecodedMessage\"]);\n    }\n    return contents;\n};\nconst de_ExpiredTokenException = (output, context) => {\n    const contents = {};\n    if (output[\"message\"] !== undefined) {\n        contents.message = (0, smithy_client_1.expectString)(output[\"message\"]);\n    }\n    return contents;\n};\nconst de_FederatedUser = (output, context) => {\n    const contents = {};\n    if (output[\"FederatedUserId\"] !== undefined) {\n        contents.FederatedUserId = (0, smithy_client_1.expectString)(output[\"FederatedUserId\"]);\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = (0, smithy_client_1.expectString)(output[\"Arn\"]);\n    }\n    return contents;\n};\nconst de_GetAccessKeyInfoResponse = (output, context) => {\n    const contents = {};\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = (0, smithy_client_1.expectString)(output[\"Account\"]);\n    }\n    return contents;\n};\nconst de_GetCallerIdentityResponse = (output, context) => {\n    const contents = {};\n    if (output[\"UserId\"] !== undefined) {\n        contents.UserId = (0, smithy_client_1.expectString)(output[\"UserId\"]);\n    }\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = (0, smithy_client_1.expectString)(output[\"Account\"]);\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = (0, smithy_client_1.expectString)(output[\"Arn\"]);\n    }\n    return contents;\n};\nconst de_GetFederationTokenResponse = (output, context) => {\n    const contents = {};\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = de_Credentials(output[\"Credentials\"], context);\n    }\n    if (output[\"FederatedUser\"] !== undefined) {\n        contents.FederatedUser = de_FederatedUser(output[\"FederatedUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = (0, smithy_client_1.strictParseInt32)(output[\"PackedPolicySize\"]);\n    }\n    return contents;\n};\nconst de_GetSessionTokenResponse = (output, context) => {\n    const contents = {};\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = de_Credentials(output[\"Credentials\"], context);\n    }\n    return contents;\n};\nconst de_IDPCommunicationErrorException = (output, context) => {\n    const contents = {};\n    if (output[\"message\"] !== undefined) {\n        contents.message = (0, smithy_client_1.expectString)(output[\"message\"]);\n    }\n    return contents;\n};\nconst de_IDPRejectedClaimException = (output, context) => {\n    const contents = {};\n    if (output[\"message\"] !== undefined) {\n        contents.message = (0, smithy_client_1.expectString)(output[\"message\"]);\n    }\n    return contents;\n};\nconst de_InvalidAuthorizationMessageException = (output, context) => {\n    const contents = {};\n    if (output[\"message\"] !== undefined) {\n        contents.message = (0, smithy_client_1.expectString)(output[\"message\"]);\n    }\n    return contents;\n};\nconst de_InvalidIdentityTokenException = (output, context) => {\n    const contents = {};\n    if (output[\"message\"] !== undefined) {\n        contents.message = (0, smithy_client_1.expectString)(output[\"message\"]);\n    }\n    return contents;\n};\nconst de_MalformedPolicyDocumentException = (output, context) => {\n    const contents = {};\n    if (output[\"message\"] !== undefined) {\n        contents.message = (0, smithy_client_1.expectString)(output[\"message\"]);\n    }\n    return contents;\n};\nconst de_PackedPolicyTooLargeException = (output, context) => {\n    const contents = {};\n    if (output[\"message\"] !== undefined) {\n        contents.message = (0, smithy_client_1.expectString)(output[\"message\"]);\n    }\n    return contents;\n};\nconst de_RegionDisabledException = (output, context) => {\n    const contents = {};\n    if (output[\"message\"] !== undefined) {\n        contents.message = (0, smithy_client_1.expectString)(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => (0, smithy_client_1.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body));\nconst throwDefaultError = (0, smithy_client_1.withBaseException)(STSServiceException_1.STSServiceException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new protocol_http_1.HttpRequest(contents);\n};\nconst SHARED_HEADERS = {\n    \"content-type\": \"application/x-www-form-urlencoded\",\n};\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        const parser = new fast_xml_parser_1.XMLParser({\n            attributeNamePrefix: \"\",\n            htmlEntities: true,\n            ignoreAttributes: false,\n            ignoreDeclaration: true,\n            parseTagValue: false,\n            trimValues: false,\n            tagValueProcessor: (_, val) => (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : undefined),\n        });\n        parser.addEntity(\"#xD\", \"\\r\");\n        parser.addEntity(\"#10\", \"\\n\");\n        const parsedObj = parser.parse(encoded);\n        const textNodeName = \"#text\";\n        const key = Object.keys(parsedObj)[0];\n        const parsedObjToReturn = parsedObj[key];\n        if (parsedObjToReturn[textNodeName]) {\n            parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n            delete parsedObjToReturn[textNodeName];\n        }\n        return (0, smithy_client_1.getValueFromTextNode)(parsedObjToReturn);\n    }\n    return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n    const value = await parseBody(errorBody, context);\n    if (value.Error) {\n        value.Error.message = value.Error.message ?? value.Error.Message;\n    }\n    return value;\n};\nconst buildFormUrlencodedString = (formEntries) => Object.entries(formEntries)\n    .map(([key, value]) => (0, smithy_client_1.extendedEncodeURIComponent)(key) + \"=\" + (0, smithy_client_1.extendedEncodeURIComponent)(value))\n    .join(\"&\");\nconst loadQueryErrorCode = (output, data) => {\n    if (data.Error?.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"../package.json\"));\nconst defaultStsRoleAssumers_1 = require(\"./defaultStsRoleAssumers\");\nconst credential_provider_node_1 = require(\"@aws-sdk/credential-provider-node\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst config_resolver_1 = require(\"@smithy/config-resolver\");\nconst hash_node_1 = require(\"@smithy/hash-node\");\nconst middleware_retry_1 = require(\"@smithy/middleware-retry\");\nconst node_config_provider_1 = require(\"@smithy/node-config-provider\");\nconst node_http_handler_1 = require(\"@smithy/node-http-handler\");\nconst util_body_length_node_1 = require(\"@smithy/util-body-length-node\");\nconst util_retry_1 = require(\"@smithy/util-retry\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst util_defaults_mode_node_1 = require(\"@smithy/util-defaults-mode-node\");\nconst smithy_client_2 = require(\"@smithy/smithy-client\");\nconst getRuntimeConfig = (config) => {\n    (0, smithy_client_2.emitWarningIfUnsupportedVersion)(process.version);\n    const defaultsMode = (0, util_defaults_mode_node_1.resolveDefaultsModeConfig)(config);\n    const defaultConfigProvider = () => defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = (0, runtimeConfig_shared_1.getRuntimeConfig)(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? util_body_length_node_1.calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? (0, defaultStsRoleAssumers_1.decorateDefaultCredentialProvider)(credential_provider_node_1.defaultProvider),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            (0, util_user_agent_node_1.defaultUserAgent)({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        maxAttempts: config?.maxAttempts ?? (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: config?.requestHandler ?? new node_http_handler_1.NodeHttpHandler(defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            (0, node_config_provider_1.loadConfig)({\n                ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || util_retry_1.DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? node_http_handler_1.streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst url_parser_1 = require(\"@smithy/url-parser\");\nconst util_base64_1 = require(\"@smithy/util-base64\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst endpointResolver_1 = require(\"./endpoint/endpointResolver\");\nconst getRuntimeConfig = (config) => ({\n    apiVersion: \"2011-06-15\",\n    base64Decoder: config?.base64Decoder ?? util_base64_1.fromBase64,\n    base64Encoder: config?.base64Encoder ?? util_base64_1.toBase64,\n    disableHostPrefix: config?.disableHostPrefix ?? false,\n    endpointProvider: config?.endpointProvider ?? endpointResolver_1.defaultEndpointResolver,\n    extensions: config?.extensions ?? [],\n    logger: config?.logger ?? new smithy_client_1.NoOpLogger(),\n    serviceId: config?.serviceId ?? \"STS\",\n    urlParser: config?.urlParser ?? url_parser_1.parseUrl,\n    utf8Decoder: config?.utf8Decoder ?? util_utf8_1.fromUtf8,\n    utf8Encoder: config?.utf8Encoder ?? util_utf8_1.toUtf8,\n});\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveRuntimeExtensions = void 0;\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst asPartial = (t) => t;\nconst resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = {\n        ...asPartial((0, smithy_client_1.getDefaultExtensionConfiguration)(runtimeConfig)),\n    };\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return {\n        ...runtimeConfig,\n        ...(0, smithy_client_1.resolveDefaultRuntimeConfig)(extensionConfiguration),\n    };\n};\nexports.resolveRuntimeExtensions = resolveRuntimeExtensions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromEnv = exports.ENV_EXPIRATION = exports.ENV_SESSION = exports.ENV_SECRET = exports.ENV_KEY = void 0;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nexports.ENV_KEY = \"AWS_ACCESS_KEY_ID\";\nexports.ENV_SECRET = \"AWS_SECRET_ACCESS_KEY\";\nexports.ENV_SESSION = \"AWS_SESSION_TOKEN\";\nexports.ENV_EXPIRATION = \"AWS_CREDENTIAL_EXPIRATION\";\nconst fromEnv = () => async () => {\n    const accessKeyId = process.env[exports.ENV_KEY];\n    const secretAccessKey = process.env[exports.ENV_SECRET];\n    const sessionToken = process.env[exports.ENV_SESSION];\n    const expiry = process.env[exports.ENV_EXPIRATION];\n    if (accessKeyId && secretAccessKey) {\n        return {\n            accessKeyId,\n            secretAccessKey,\n            ...(sessionToken && { sessionToken }),\n            ...(expiry && { expiration: new Date(expiry) }),\n        };\n    }\n    throw new property_provider_1.CredentialsProviderError(\"Unable to find environment variable credentials.\");\n};\nexports.fromEnv = fromEnv;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./fromEnv\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromIni = void 0;\nconst shared_ini_file_loader_1 = require(\"@smithy/shared-ini-file-loader\");\nconst resolveProfileData_1 = require(\"./resolveProfileData\");\nconst fromIni = (init = {}) => async () => {\n    const profiles = await (0, shared_ini_file_loader_1.parseKnownFiles)(init);\n    return (0, resolveProfileData_1.resolveProfileData)((0, shared_ini_file_loader_1.getProfileName)(init), profiles, init);\n};\nexports.fromIni = fromIni;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./fromIni\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveAssumeRoleCredentials = exports.isAssumeRoleProfile = void 0;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst shared_ini_file_loader_1 = require(\"@smithy/shared-ini-file-loader\");\nconst resolveCredentialSource_1 = require(\"./resolveCredentialSource\");\nconst resolveProfileData_1 = require(\"./resolveProfileData\");\nconst isAssumeRoleProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.role_arn === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.role_session_name) > -1 &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.external_id) > -1 &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.mfa_serial) > -1 &&\n    (isAssumeRoleWithSourceProfile(arg) || isAssumeRoleWithProviderProfile(arg));\nexports.isAssumeRoleProfile = isAssumeRoleProfile;\nconst isAssumeRoleWithSourceProfile = (arg) => typeof arg.source_profile === \"string\" && typeof arg.credential_source === \"undefined\";\nconst isAssumeRoleWithProviderProfile = (arg) => typeof arg.credential_source === \"string\" && typeof arg.source_profile === \"undefined\";\nconst resolveAssumeRoleCredentials = async (profileName, profiles, options, visitedProfiles = {}) => {\n    const data = profiles[profileName];\n    if (!options.roleAssumer) {\n        throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} requires a role to be assumed, but no role assumption callback was provided.`, false);\n    }\n    const { source_profile } = data;\n    if (source_profile && source_profile in visitedProfiles) {\n        throw new property_provider_1.CredentialsProviderError(`Detected a cycle attempting to resolve credentials for profile` +\n            ` ${(0, shared_ini_file_loader_1.getProfileName)(options)}. Profiles visited: ` +\n            Object.keys(visitedProfiles).join(\", \"), false);\n    }\n    const sourceCredsProvider = source_profile\n        ? (0, resolveProfileData_1.resolveProfileData)(source_profile, profiles, options, {\n            ...visitedProfiles,\n            [source_profile]: true,\n        })\n        : (0, resolveCredentialSource_1.resolveCredentialSource)(data.credential_source, profileName)();\n    const params = {\n        RoleArn: data.role_arn,\n        RoleSessionName: data.role_session_name || `aws-sdk-js-${Date.now()}`,\n        ExternalId: data.external_id,\n    };\n    const { mfa_serial } = data;\n    if (mfa_serial) {\n        if (!options.mfaCodeProvider) {\n            throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} requires multi-factor authentication, but no MFA code callback was provided.`, false);\n        }\n        params.SerialNumber = mfa_serial;\n        params.TokenCode = await options.mfaCodeProvider(mfa_serial);\n    }\n    const sourceCreds = await sourceCredsProvider;\n    return options.roleAssumer(sourceCreds, params);\n};\nexports.resolveAssumeRoleCredentials = resolveAssumeRoleCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveCredentialSource = void 0;\nconst credential_provider_env_1 = require(\"@aws-sdk/credential-provider-env\");\nconst credential_provider_imds_1 = require(\"@smithy/credential-provider-imds\");\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst resolveCredentialSource = (credentialSource, profileName) => {\n    const sourceProvidersMap = {\n        EcsContainer: credential_provider_imds_1.fromContainerMetadata,\n        Ec2InstanceMetadata: credential_provider_imds_1.fromInstanceMetadata,\n        Environment: credential_provider_env_1.fromEnv,\n    };\n    if (credentialSource in sourceProvidersMap) {\n        return sourceProvidersMap[credentialSource]();\n    }\n    else {\n        throw new property_provider_1.CredentialsProviderError(`Unsupported credential source in profile ${profileName}. Got ${credentialSource}, ` +\n            `expected EcsContainer or Ec2InstanceMetadata or Environment.`);\n    }\n};\nexports.resolveCredentialSource = resolveCredentialSource;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveProcessCredentials = exports.isProcessProfile = void 0;\nconst credential_provider_process_1 = require(\"@aws-sdk/credential-provider-process\");\nconst isProcessProfile = (arg) => Boolean(arg) && typeof arg === \"object\" && typeof arg.credential_process === \"string\";\nexports.isProcessProfile = isProcessProfile;\nconst resolveProcessCredentials = async (options, profile) => (0, credential_provider_process_1.fromProcess)({\n    ...options,\n    profile,\n})();\nexports.resolveProcessCredentials = resolveProcessCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveProfileData = void 0;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst resolveAssumeRoleCredentials_1 = require(\"./resolveAssumeRoleCredentials\");\nconst resolveProcessCredentials_1 = require(\"./resolveProcessCredentials\");\nconst resolveSsoCredentials_1 = require(\"./resolveSsoCredentials\");\nconst resolveStaticCredentials_1 = require(\"./resolveStaticCredentials\");\nconst resolveWebIdentityCredentials_1 = require(\"./resolveWebIdentityCredentials\");\nconst resolveProfileData = async (profileName, profiles, options, visitedProfiles = {}) => {\n    const data = profiles[profileName];\n    if (Object.keys(visitedProfiles).length > 0 && (0, resolveStaticCredentials_1.isStaticCredsProfile)(data)) {\n        return (0, resolveStaticCredentials_1.resolveStaticCredentials)(data);\n    }\n    if ((0, resolveAssumeRoleCredentials_1.isAssumeRoleProfile)(data)) {\n        return (0, resolveAssumeRoleCredentials_1.resolveAssumeRoleCredentials)(profileName, profiles, options, visitedProfiles);\n    }\n    if ((0, resolveStaticCredentials_1.isStaticCredsProfile)(data)) {\n        return (0, resolveStaticCredentials_1.resolveStaticCredentials)(data);\n    }\n    if ((0, resolveWebIdentityCredentials_1.isWebIdentityProfile)(data)) {\n        return (0, resolveWebIdentityCredentials_1.resolveWebIdentityCredentials)(data, options);\n    }\n    if ((0, resolveProcessCredentials_1.isProcessProfile)(data)) {\n        return (0, resolveProcessCredentials_1.resolveProcessCredentials)(options, profileName);\n    }\n    if ((0, resolveSsoCredentials_1.isSsoProfile)(data)) {\n        return (0, resolveSsoCredentials_1.resolveSsoCredentials)(data);\n    }\n    throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} could not be found or parsed in shared credentials file.`);\n};\nexports.resolveProfileData = resolveProfileData;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveSsoCredentials = exports.isSsoProfile = void 0;\nconst credential_provider_sso_1 = require(\"@aws-sdk/credential-provider-sso\");\nvar credential_provider_sso_2 = require(\"@aws-sdk/credential-provider-sso\");\nObject.defineProperty(exports, \"isSsoProfile\", { enumerable: true, get: function () { return credential_provider_sso_2.isSsoProfile; } });\nconst resolveSsoCredentials = (data) => {\n    const { sso_start_url, sso_account_id, sso_session, sso_region, sso_role_name } = (0, credential_provider_sso_1.validateSsoProfile)(data);\n    return (0, credential_provider_sso_1.fromSSO)({\n        ssoStartUrl: sso_start_url,\n        ssoAccountId: sso_account_id,\n        ssoSession: sso_session,\n        ssoRegion: sso_region,\n        ssoRoleName: sso_role_name,\n    })();\n};\nexports.resolveSsoCredentials = resolveSsoCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveStaticCredentials = exports.isStaticCredsProfile = void 0;\nconst isStaticCredsProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.aws_access_key_id === \"string\" &&\n    typeof arg.aws_secret_access_key === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.aws_session_token) > -1;\nexports.isStaticCredsProfile = isStaticCredsProfile;\nconst resolveStaticCredentials = (profile) => Promise.resolve({\n    accessKeyId: profile.aws_access_key_id,\n    secretAccessKey: profile.aws_secret_access_key,\n    sessionToken: profile.aws_session_token,\n});\nexports.resolveStaticCredentials = resolveStaticCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveWebIdentityCredentials = exports.isWebIdentityProfile = void 0;\nconst credential_provider_web_identity_1 = require(\"@aws-sdk/credential-provider-web-identity\");\nconst isWebIdentityProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.web_identity_token_file === \"string\" &&\n    typeof arg.role_arn === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.role_session_name) > -1;\nexports.isWebIdentityProfile = isWebIdentityProfile;\nconst resolveWebIdentityCredentials = async (profile, options) => (0, credential_provider_web_identity_1.fromTokenFile)({\n    webIdentityTokenFile: profile.web_identity_token_file,\n    roleArn: profile.role_arn,\n    roleSessionName: profile.role_session_name,\n    roleAssumerWithWebIdentity: options.roleAssumerWithWebIdentity,\n})();\nexports.resolveWebIdentityCredentials = resolveWebIdentityCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultProvider = void 0;\nconst credential_provider_env_1 = require(\"@aws-sdk/credential-provider-env\");\nconst credential_provider_ini_1 = require(\"@aws-sdk/credential-provider-ini\");\nconst credential_provider_process_1 = require(\"@aws-sdk/credential-provider-process\");\nconst credential_provider_sso_1 = require(\"@aws-sdk/credential-provider-sso\");\nconst credential_provider_web_identity_1 = require(\"@aws-sdk/credential-provider-web-identity\");\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst shared_ini_file_loader_1 = require(\"@smithy/shared-ini-file-loader\");\nconst remoteProvider_1 = require(\"./remoteProvider\");\nconst defaultProvider = (init = {}) => (0, property_provider_1.memoize)((0, property_provider_1.chain)(...(init.profile || process.env[shared_ini_file_loader_1.ENV_PROFILE] ? [] : [(0, credential_provider_env_1.fromEnv)()]), (0, credential_provider_sso_1.fromSSO)(init), (0, credential_provider_ini_1.fromIni)(init), (0, credential_provider_process_1.fromProcess)(init), (0, credential_provider_web_identity_1.fromTokenFile)(init), (0, remoteProvider_1.remoteProvider)(init), async () => {\n    throw new property_provider_1.CredentialsProviderError(\"Could not load credentials from any providers\", false);\n}), (credentials) => credentials.expiration !== undefined && credentials.expiration.getTime() - Date.now() < 300000, (credentials) => credentials.expiration !== undefined);\nexports.defaultProvider = defaultProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./defaultProvider\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.remoteProvider = exports.ENV_IMDS_DISABLED = void 0;\nconst credential_provider_imds_1 = require(\"@smithy/credential-provider-imds\");\nconst property_provider_1 = require(\"@smithy/property-provider\");\nexports.ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nconst remoteProvider = (init) => {\n    if (process.env[credential_provider_imds_1.ENV_CMDS_RELATIVE_URI] || process.env[credential_provider_imds_1.ENV_CMDS_FULL_URI]) {\n        return (0, credential_provider_imds_1.fromContainerMetadata)(init);\n    }\n    if (process.env[exports.ENV_IMDS_DISABLED]) {\n        return async () => {\n            throw new property_provider_1.CredentialsProviderError(\"EC2 Instance Metadata Service access disabled\");\n        };\n    }\n    return (0, credential_provider_imds_1.fromInstanceMetadata)(init);\n};\nexports.remoteProvider = remoteProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromProcess = void 0;\nconst shared_ini_file_loader_1 = require(\"@smithy/shared-ini-file-loader\");\nconst resolveProcessCredentials_1 = require(\"./resolveProcessCredentials\");\nconst fromProcess = (init = {}) => async () => {\n    const profiles = await (0, shared_ini_file_loader_1.parseKnownFiles)(init);\n    return (0, resolveProcessCredentials_1.resolveProcessCredentials)((0, shared_ini_file_loader_1.getProfileName)(init), profiles);\n};\nexports.fromProcess = fromProcess;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getValidatedProcessCredentials = void 0;\nconst getValidatedProcessCredentials = (profileName, data) => {\n    if (data.Version !== 1) {\n        throw Error(`Profile ${profileName} credential_process did not return Version 1.`);\n    }\n    if (data.AccessKeyId === undefined || data.SecretAccessKey === undefined) {\n        throw Error(`Profile ${profileName} credential_process returned invalid credentials.`);\n    }\n    if (data.Expiration) {\n        const currentTime = new Date();\n        const expireTime = new Date(data.Expiration);\n        if (expireTime < currentTime) {\n            throw Error(`Profile ${profileName} credential_process returned expired credentials.`);\n        }\n    }\n    return {\n        accessKeyId: data.AccessKeyId,\n        secretAccessKey: data.SecretAccessKey,\n        ...(data.SessionToken && { sessionToken: data.SessionToken }),\n        ...(data.Expiration && { expiration: new Date(data.Expiration) }),\n    };\n};\nexports.getValidatedProcessCredentials = getValidatedProcessCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./fromProcess\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveProcessCredentials = void 0;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst child_process_1 = require(\"child_process\");\nconst util_1 = require(\"util\");\nconst getValidatedProcessCredentials_1 = require(\"./getValidatedProcessCredentials\");\nconst resolveProcessCredentials = async (profileName, profiles) => {\n    const profile = profiles[profileName];\n    if (profiles[profileName]) {\n        const credentialProcess = profile[\"credential_process\"];\n        if (credentialProcess !== undefined) {\n            const execPromise = (0, util_1.promisify)(child_process_1.exec);\n            try {\n                const { stdout } = await execPromise(credentialProcess);\n                let data;\n                try {\n                    data = JSON.parse(stdout.trim());\n                }\n                catch (_a) {\n                    throw Error(`Profile ${profileName} credential_process returned invalid JSON.`);\n                }\n                return (0, getValidatedProcessCredentials_1.getValidatedProcessCredentials)(profileName, data);\n            }\n            catch (error) {\n                throw new property_provider_1.CredentialsProviderError(error.message);\n            }\n        }\n        else {\n            throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} did not contain credential_process.`);\n        }\n    }\n    else {\n        throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} could not be found in shared credentials file.`);\n    }\n};\nexports.resolveProcessCredentials = resolveProcessCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromSSO = void 0;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst shared_ini_file_loader_1 = require(\"@smithy/shared-ini-file-loader\");\nconst isSsoProfile_1 = require(\"./isSsoProfile\");\nconst resolveSSOCredentials_1 = require(\"./resolveSSOCredentials\");\nconst validateSsoProfile_1 = require(\"./validateSsoProfile\");\nconst fromSSO = (init = {}) => async () => {\n    const { ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoClient, ssoSession } = init;\n    const profileName = (0, shared_ini_file_loader_1.getProfileName)(init);\n    if (!ssoStartUrl && !ssoAccountId && !ssoRegion && !ssoRoleName && !ssoSession) {\n        const profiles = await (0, shared_ini_file_loader_1.parseKnownFiles)(init);\n        const profile = profiles[profileName];\n        if (!profile) {\n            throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} was not found.`);\n        }\n        if (!(0, isSsoProfile_1.isSsoProfile)(profile)) {\n            throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} is not configured with SSO credentials.`);\n        }\n        if (profile === null || profile === void 0 ? void 0 : profile.sso_session) {\n            const ssoSessions = await (0, shared_ini_file_loader_1.loadSsoSessionData)(init);\n            const session = ssoSessions[profile.sso_session];\n            const conflictMsg = ` configurations in profile ${profileName} and sso-session ${profile.sso_session}`;\n            if (ssoRegion && ssoRegion !== session.sso_region) {\n                throw new property_provider_1.CredentialsProviderError(`Conflicting SSO region` + conflictMsg, false);\n            }\n            if (ssoStartUrl && ssoStartUrl !== session.sso_start_url) {\n                throw new property_provider_1.CredentialsProviderError(`Conflicting SSO start_url` + conflictMsg, false);\n            }\n            profile.sso_region = session.sso_region;\n            profile.sso_start_url = session.sso_start_url;\n        }\n        const { sso_start_url, sso_account_id, sso_region, sso_role_name, sso_session } = (0, validateSsoProfile_1.validateSsoProfile)(profile);\n        return (0, resolveSSOCredentials_1.resolveSSOCredentials)({\n            ssoStartUrl: sso_start_url,\n            ssoSession: sso_session,\n            ssoAccountId: sso_account_id,\n            ssoRegion: sso_region,\n            ssoRoleName: sso_role_name,\n            ssoClient: ssoClient,\n            profile: profileName,\n        });\n    }\n    else if (!ssoStartUrl || !ssoAccountId || !ssoRegion || !ssoRoleName) {\n        throw new property_provider_1.CredentialsProviderError(\"Incomplete configuration. The fromSSO() argument hash must include \" +\n            '\"ssoStartUrl\", \"ssoAccountId\", \"ssoRegion\", \"ssoRoleName\"');\n    }\n    else {\n        return (0, resolveSSOCredentials_1.resolveSSOCredentials)({\n            ssoStartUrl,\n            ssoSession,\n            ssoAccountId,\n            ssoRegion,\n            ssoRoleName,\n            ssoClient,\n            profile: profileName,\n        });\n    }\n};\nexports.fromSSO = fromSSO;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./fromSSO\"), exports);\ntslib_1.__exportStar(require(\"./isSsoProfile\"), exports);\ntslib_1.__exportStar(require(\"./types\"), exports);\ntslib_1.__exportStar(require(\"./validateSsoProfile\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isSsoProfile = void 0;\nconst isSsoProfile = (arg) => arg &&\n    (typeof arg.sso_start_url === \"string\" ||\n        typeof arg.sso_account_id === \"string\" ||\n        typeof arg.sso_session === \"string\" ||\n        typeof arg.sso_region === \"string\" ||\n        typeof arg.sso_role_name === \"string\");\nexports.isSsoProfile = isSsoProfile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveSSOCredentials = void 0;\nconst client_sso_1 = require(\"@aws-sdk/client-sso\");\nconst token_providers_1 = require(\"@aws-sdk/token-providers\");\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst shared_ini_file_loader_1 = require(\"@smithy/shared-ini-file-loader\");\nconst SHOULD_FAIL_CREDENTIAL_CHAIN = false;\nconst resolveSSOCredentials = async ({ ssoStartUrl, ssoSession, ssoAccountId, ssoRegion, ssoRoleName, ssoClient, profile, }) => {\n    let token;\n    const refreshMessage = `To refresh this SSO session run aws sso login with the corresponding profile.`;\n    if (ssoSession) {\n        try {\n            const _token = await (0, token_providers_1.fromSso)({ profile })();\n            token = {\n                accessToken: _token.token,\n                expiresAt: new Date(_token.expiration).toISOString(),\n            };\n        }\n        catch (e) {\n            throw new property_provider_1.CredentialsProviderError(e.message, SHOULD_FAIL_CREDENTIAL_CHAIN);\n        }\n    }\n    else {\n        try {\n            token = await (0, shared_ini_file_loader_1.getSSOTokenFromFile)(ssoStartUrl);\n        }\n        catch (e) {\n            throw new property_provider_1.CredentialsProviderError(`The SSO session associated with this profile is invalid. ${refreshMessage}`, SHOULD_FAIL_CREDENTIAL_CHAIN);\n        }\n    }\n    if (new Date(token.expiresAt).getTime() - Date.now() <= 0) {\n        throw new property_provider_1.CredentialsProviderError(`The SSO session associated with this profile has expired. ${refreshMessage}`, SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    const { accessToken } = token;\n    const sso = ssoClient || new client_sso_1.SSOClient({ region: ssoRegion });\n    let ssoResp;\n    try {\n        ssoResp = await sso.send(new client_sso_1.GetRoleCredentialsCommand({\n            accountId: ssoAccountId,\n            roleName: ssoRoleName,\n            accessToken,\n        }));\n    }\n    catch (e) {\n        throw property_provider_1.CredentialsProviderError.from(e, SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    const { roleCredentials: { accessKeyId, secretAccessKey, sessionToken, expiration } = {} } = ssoResp;\n    if (!accessKeyId || !secretAccessKey || !sessionToken || !expiration) {\n        throw new property_provider_1.CredentialsProviderError(\"SSO returns an invalid temporary credential.\", SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    return { accessKeyId, secretAccessKey, sessionToken, expiration: new Date(expiration) };\n};\nexports.resolveSSOCredentials = resolveSSOCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateSsoProfile = void 0;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst validateSsoProfile = (profile) => {\n    const { sso_start_url, sso_account_id, sso_region, sso_role_name } = profile;\n    if (!sso_start_url || !sso_account_id || !sso_region || !sso_role_name) {\n        throw new property_provider_1.CredentialsProviderError(`Profile is configured with invalid SSO credentials. Required parameters \"sso_account_id\", ` +\n            `\"sso_region\", \"sso_role_name\", \"sso_start_url\". Got ${Object.keys(profile).join(\", \")}\\nReference: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sso.html`, false);\n    }\n    return profile;\n};\nexports.validateSsoProfile = validateSsoProfile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromTokenFile = void 0;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst fs_1 = require(\"fs\");\nconst fromWebToken_1 = require(\"./fromWebToken\");\nconst ENV_TOKEN_FILE = \"AWS_WEB_IDENTITY_TOKEN_FILE\";\nconst ENV_ROLE_ARN = \"AWS_ROLE_ARN\";\nconst ENV_ROLE_SESSION_NAME = \"AWS_ROLE_SESSION_NAME\";\nconst fromTokenFile = (init = {}) => async () => {\n    var _a, _b, _c;\n    const webIdentityTokenFile = (_a = init === null || init === void 0 ? void 0 : init.webIdentityTokenFile) !== null && _a !== void 0 ? _a : process.env[ENV_TOKEN_FILE];\n    const roleArn = (_b = init === null || init === void 0 ? void 0 : init.roleArn) !== null && _b !== void 0 ? _b : process.env[ENV_ROLE_ARN];\n    const roleSessionName = (_c = init === null || init === void 0 ? void 0 : init.roleSessionName) !== null && _c !== void 0 ? _c : process.env[ENV_ROLE_SESSION_NAME];\n    if (!webIdentityTokenFile || !roleArn) {\n        throw new property_provider_1.CredentialsProviderError(\"Web identity configuration not specified\");\n    }\n    return (0, fromWebToken_1.fromWebToken)({\n        ...init,\n        webIdentityToken: (0, fs_1.readFileSync)(webIdentityTokenFile, { encoding: \"ascii\" }),\n        roleArn,\n        roleSessionName,\n    })();\n};\nexports.fromTokenFile = fromTokenFile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromWebToken = void 0;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst fromWebToken = (init) => () => {\n    const { roleArn, roleSessionName, webIdentityToken, providerId, policyArns, policy, durationSeconds, roleAssumerWithWebIdentity, } = init;\n    if (!roleAssumerWithWebIdentity) {\n        throw new property_provider_1.CredentialsProviderError(`Role Arn '${roleArn}' needs to be assumed with web identity,` +\n            ` but no role assumption callback was provided.`, false);\n    }\n    return roleAssumerWithWebIdentity({\n        RoleArn: roleArn,\n        RoleSessionName: roleSessionName !== null && roleSessionName !== void 0 ? roleSessionName : `aws-sdk-js-session-${Date.now()}`,\n        WebIdentityToken: webIdentityToken,\n        ProviderId: providerId,\n        PolicyArns: policyArns,\n        Policy: policy,\n        DurationSeconds: durationSeconds,\n    });\n};\nexports.fromWebToken = fromWebToken;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./fromTokenFile\"), exports);\ntslib_1.__exportStar(require(\"./fromWebToken\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_DISABLE_MULTIREGION_ACCESS_POINT_CONFIG_OPTIONS = exports.NODE_DISABLE_MULTIREGION_ACCESS_POINT_INI_NAME = exports.NODE_DISABLE_MULTIREGION_ACCESS_POINT_ENV_NAME = void 0;\nconst util_config_provider_1 = require(\"@smithy/util-config-provider\");\nexports.NODE_DISABLE_MULTIREGION_ACCESS_POINT_ENV_NAME = \"AWS_S3_DISABLE_MULTIREGION_ACCESS_POINTS\";\nexports.NODE_DISABLE_MULTIREGION_ACCESS_POINT_INI_NAME = \"s3_disable_multiregion_access_points\";\nexports.NODE_DISABLE_MULTIREGION_ACCESS_POINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => (0, util_config_provider_1.booleanSelector)(env, exports.NODE_DISABLE_MULTIREGION_ACCESS_POINT_ENV_NAME, util_config_provider_1.SelectorType.ENV),\n    configFileSelector: (profile) => (0, util_config_provider_1.booleanSelector)(profile, exports.NODE_DISABLE_MULTIREGION_ACCESS_POINT_INI_NAME, util_config_provider_1.SelectorType.CONFIG),\n    default: false,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_USE_ARN_REGION_CONFIG_OPTIONS = exports.NODE_USE_ARN_REGION_INI_NAME = exports.NODE_USE_ARN_REGION_ENV_NAME = void 0;\nconst util_config_provider_1 = require(\"@smithy/util-config-provider\");\nexports.NODE_USE_ARN_REGION_ENV_NAME = \"AWS_S3_USE_ARN_REGION\";\nexports.NODE_USE_ARN_REGION_INI_NAME = \"s3_use_arn_region\";\nexports.NODE_USE_ARN_REGION_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => (0, util_config_provider_1.booleanSelector)(env, exports.NODE_USE_ARN_REGION_ENV_NAME, util_config_provider_1.SelectorType.ENV),\n    configFileSelector: (profile) => (0, util_config_provider_1.booleanSelector)(profile, exports.NODE_USE_ARN_REGION_INI_NAME, util_config_provider_1.SelectorType.CONFIG),\n    default: false,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBucketEndpointPlugin = exports.bucketEndpointMiddlewareOptions = exports.bucketEndpointMiddleware = void 0;\nconst util_arn_parser_1 = require(\"@aws-sdk/util-arn-parser\");\nconst protocol_http_1 = require(\"@smithy/protocol-http\");\nconst bucketHostname_1 = require(\"./bucketHostname\");\nconst bucketEndpointMiddleware = (options) => (next, context) => async (args) => {\n    const { Bucket: bucketName } = args.input;\n    let replaceBucketInPath = options.bucketEndpoint;\n    const request = args.request;\n    if (protocol_http_1.HttpRequest.isInstance(request)) {\n        if (options.bucketEndpoint) {\n            request.hostname = bucketName;\n        }\n        else if ((0, util_arn_parser_1.validate)(bucketName)) {\n            const bucketArn = (0, util_arn_parser_1.parse)(bucketName);\n            const clientRegion = await options.region();\n            const useDualstackEndpoint = await options.useDualstackEndpoint();\n            const useFipsEndpoint = await options.useFipsEndpoint();\n            const { partition, signingRegion = clientRegion } = (await options.regionInfoProvider(clientRegion, { useDualstackEndpoint, useFipsEndpoint })) || {};\n            const useArnRegion = await options.useArnRegion();\n            const { hostname, bucketEndpoint, signingRegion: modifiedSigningRegion, signingService, } = (0, bucketHostname_1.bucketHostname)({\n                bucketName: bucketArn,\n                baseHostname: request.hostname,\n                accelerateEndpoint: options.useAccelerateEndpoint,\n                dualstackEndpoint: useDualstackEndpoint,\n                fipsEndpoint: useFipsEndpoint,\n                pathStyleEndpoint: options.forcePathStyle,\n                tlsCompatible: request.protocol === \"https:\",\n                useArnRegion,\n                clientPartition: partition,\n                clientSigningRegion: signingRegion,\n                clientRegion: clientRegion,\n                isCustomEndpoint: options.isCustomEndpoint,\n                disableMultiregionAccessPoints: await options.disableMultiregionAccessPoints(),\n            });\n            if (modifiedSigningRegion && modifiedSigningRegion !== signingRegion) {\n                context[\"signing_region\"] = modifiedSigningRegion;\n            }\n            if (signingService && signingService !== \"s3\") {\n                context[\"signing_service\"] = signingService;\n            }\n            request.hostname = hostname;\n            replaceBucketInPath = bucketEndpoint;\n        }\n        else {\n            const clientRegion = await options.region();\n            const dualstackEndpoint = await options.useDualstackEndpoint();\n            const fipsEndpoint = await options.useFipsEndpoint();\n            const { hostname, bucketEndpoint } = (0, bucketHostname_1.bucketHostname)({\n                bucketName,\n                clientRegion,\n                baseHostname: request.hostname,\n                accelerateEndpoint: options.useAccelerateEndpoint,\n                dualstackEndpoint,\n                fipsEndpoint,\n                pathStyleEndpoint: options.forcePathStyle,\n                tlsCompatible: request.protocol === \"https:\",\n                isCustomEndpoint: options.isCustomEndpoint,\n            });\n            request.hostname = hostname;\n            replaceBucketInPath = bucketEndpoint;\n        }\n        if (replaceBucketInPath) {\n            request.path = request.path.replace(/^(\\/)?[^\\/]+/, \"\");\n            if (request.path === \"\") {\n                request.path = \"/\";\n            }\n        }\n    }\n    return next({ ...args, request });\n};\nexports.bucketEndpointMiddleware = bucketEndpointMiddleware;\nexports.bucketEndpointMiddlewareOptions = {\n    tags: [\"BUCKET_ENDPOINT\"],\n    name: \"bucketEndpointMiddleware\",\n    relation: \"before\",\n    toMiddleware: \"hostHeaderMiddleware\",\n    override: true,\n};\nconst getBucketEndpointPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo((0, exports.bucketEndpointMiddleware)(options), exports.bucketEndpointMiddlewareOptions);\n    },\n});\nexports.getBucketEndpointPlugin = getBucketEndpointPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bucketHostname = void 0;\nconst bucketHostnameUtils_1 = require(\"./bucketHostnameUtils\");\nconst bucketHostname = (options) => {\n    (0, bucketHostnameUtils_1.validateCustomEndpoint)(options);\n    return (0, bucketHostnameUtils_1.isBucketNameOptions)(options)\n        ?\n            getEndpointFromBucketName(options)\n        :\n            getEndpointFromArn(options);\n};\nexports.bucketHostname = bucketHostname;\nconst getEndpointFromBucketName = ({ accelerateEndpoint = false, clientRegion: region, baseHostname, bucketName, dualstackEndpoint = false, fipsEndpoint = false, pathStyleEndpoint = false, tlsCompatible = true, isCustomEndpoint = false, }) => {\n    const [clientRegion, hostnameSuffix] = isCustomEndpoint ? [region, baseHostname] : (0, bucketHostnameUtils_1.getSuffix)(baseHostname);\n    if (pathStyleEndpoint || !(0, bucketHostnameUtils_1.isDnsCompatibleBucketName)(bucketName) || (tlsCompatible && bucketHostnameUtils_1.DOT_PATTERN.test(bucketName))) {\n        return {\n            bucketEndpoint: false,\n            hostname: dualstackEndpoint ? `s3.dualstack.${clientRegion}.${hostnameSuffix}` : baseHostname,\n        };\n    }\n    if (accelerateEndpoint) {\n        baseHostname = `s3-accelerate${dualstackEndpoint ? \".dualstack\" : \"\"}.${hostnameSuffix}`;\n    }\n    else if (dualstackEndpoint) {\n        baseHostname = `s3.dualstack.${clientRegion}.${hostnameSuffix}`;\n    }\n    return {\n        bucketEndpoint: true,\n        hostname: `${bucketName}.${baseHostname}`,\n    };\n};\nconst getEndpointFromArn = (options) => {\n    const { isCustomEndpoint, baseHostname, clientRegion } = options;\n    const hostnameSuffix = isCustomEndpoint ? baseHostname : (0, bucketHostnameUtils_1.getSuffixForArnEndpoint)(baseHostname)[1];\n    const { pathStyleEndpoint, accelerateEndpoint = false, fipsEndpoint = false, tlsCompatible = true, bucketName, clientPartition = \"aws\", } = options;\n    (0, bucketHostnameUtils_1.validateArnEndpointOptions)({ pathStyleEndpoint, accelerateEndpoint, tlsCompatible });\n    const { service, partition, accountId, region, resource } = bucketName;\n    (0, bucketHostnameUtils_1.validateService)(service);\n    (0, bucketHostnameUtils_1.validatePartition)(partition, { clientPartition });\n    (0, bucketHostnameUtils_1.validateAccountId)(accountId);\n    const { accesspointName, outpostId } = (0, bucketHostnameUtils_1.getArnResources)(resource);\n    if (service === \"s3-object-lambda\") {\n        return getEndpointFromObjectLambdaArn({ ...options, tlsCompatible, bucketName, accesspointName, hostnameSuffix });\n    }\n    if (region === \"\") {\n        return getEndpointFromMRAPArn({ ...options, clientRegion, mrapAlias: accesspointName, hostnameSuffix });\n    }\n    if (outpostId) {\n        return getEndpointFromOutpostArn({ ...options, clientRegion, outpostId, accesspointName, hostnameSuffix });\n    }\n    return getEndpointFromAccessPointArn({ ...options, clientRegion, accesspointName, hostnameSuffix });\n};\nconst getEndpointFromObjectLambdaArn = ({ dualstackEndpoint = false, fipsEndpoint = false, tlsCompatible = true, useArnRegion, clientRegion, clientSigningRegion = clientRegion, accesspointName, bucketName, hostnameSuffix, }) => {\n    const { accountId, region, service } = bucketName;\n    (0, bucketHostnameUtils_1.validateRegionalClient)(clientRegion);\n    (0, bucketHostnameUtils_1.validateRegion)(region, {\n        useArnRegion,\n        clientRegion,\n        clientSigningRegion,\n        allowFipsRegion: true,\n        useFipsEndpoint: fipsEndpoint,\n    });\n    (0, bucketHostnameUtils_1.validateNoDualstack)(dualstackEndpoint);\n    const DNSHostLabel = `${accesspointName}-${accountId}`;\n    (0, bucketHostnameUtils_1.validateDNSHostLabel)(DNSHostLabel, { tlsCompatible });\n    const endpointRegion = useArnRegion ? region : clientRegion;\n    const signingRegion = useArnRegion ? region : clientSigningRegion;\n    return {\n        bucketEndpoint: true,\n        hostname: `${DNSHostLabel}.${service}${fipsEndpoint ? \"-fips\" : \"\"}.${endpointRegion}.${hostnameSuffix}`,\n        signingRegion,\n        signingService: service,\n    };\n};\nconst getEndpointFromMRAPArn = ({ disableMultiregionAccessPoints, dualstackEndpoint = false, isCustomEndpoint, mrapAlias, hostnameSuffix, }) => {\n    if (disableMultiregionAccessPoints === true) {\n        throw new Error(\"SDK is attempting to use a MRAP ARN. Please enable to feature.\");\n    }\n    (0, bucketHostnameUtils_1.validateMrapAlias)(mrapAlias);\n    (0, bucketHostnameUtils_1.validateNoDualstack)(dualstackEndpoint);\n    return {\n        bucketEndpoint: true,\n        hostname: `${mrapAlias}${isCustomEndpoint ? \"\" : `.accesspoint.s3-global`}.${hostnameSuffix}`,\n        signingRegion: \"*\",\n    };\n};\nconst getEndpointFromOutpostArn = ({ useArnRegion, clientRegion, clientSigningRegion = clientRegion, bucketName, outpostId, dualstackEndpoint = false, fipsEndpoint = false, tlsCompatible = true, accesspointName, isCustomEndpoint, hostnameSuffix, }) => {\n    (0, bucketHostnameUtils_1.validateRegionalClient)(clientRegion);\n    (0, bucketHostnameUtils_1.validateRegion)(bucketName.region, { useArnRegion, clientRegion, clientSigningRegion, useFipsEndpoint: fipsEndpoint });\n    const DNSHostLabel = `${accesspointName}-${bucketName.accountId}`;\n    (0, bucketHostnameUtils_1.validateDNSHostLabel)(DNSHostLabel, { tlsCompatible });\n    const endpointRegion = useArnRegion ? bucketName.region : clientRegion;\n    const signingRegion = useArnRegion ? bucketName.region : clientSigningRegion;\n    (0, bucketHostnameUtils_1.validateOutpostService)(bucketName.service);\n    (0, bucketHostnameUtils_1.validateDNSHostLabel)(outpostId, { tlsCompatible });\n    (0, bucketHostnameUtils_1.validateNoDualstack)(dualstackEndpoint);\n    (0, bucketHostnameUtils_1.validateNoFIPS)(fipsEndpoint);\n    const hostnamePrefix = `${DNSHostLabel}.${outpostId}`;\n    return {\n        bucketEndpoint: true,\n        hostname: `${hostnamePrefix}${isCustomEndpoint ? \"\" : `.s3-outposts.${endpointRegion}`}.${hostnameSuffix}`,\n        signingRegion,\n        signingService: \"s3-outposts\",\n    };\n};\nconst getEndpointFromAccessPointArn = ({ useArnRegion, clientRegion, clientSigningRegion = clientRegion, bucketName, dualstackEndpoint = false, fipsEndpoint = false, tlsCompatible = true, accesspointName, isCustomEndpoint, hostnameSuffix, }) => {\n    (0, bucketHostnameUtils_1.validateRegionalClient)(clientRegion);\n    (0, bucketHostnameUtils_1.validateRegion)(bucketName.region, {\n        useArnRegion,\n        clientRegion,\n        clientSigningRegion,\n        allowFipsRegion: true,\n        useFipsEndpoint: fipsEndpoint,\n    });\n    const hostnamePrefix = `${accesspointName}-${bucketName.accountId}`;\n    (0, bucketHostnameUtils_1.validateDNSHostLabel)(hostnamePrefix, { tlsCompatible });\n    const endpointRegion = useArnRegion ? bucketName.region : clientRegion;\n    const signingRegion = useArnRegion ? bucketName.region : clientSigningRegion;\n    (0, bucketHostnameUtils_1.validateS3Service)(bucketName.service);\n    return {\n        bucketEndpoint: true,\n        hostname: `${hostnamePrefix}${isCustomEndpoint\n            ? \"\"\n            : `.s3-accesspoint${fipsEndpoint ? \"-fips\" : \"\"}${dualstackEndpoint ? \".dualstack\" : \"\"}.${endpointRegion}`}.${hostnameSuffix}`,\n        signingRegion,\n    };\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateMrapAlias = exports.validateNoFIPS = exports.validateNoDualstack = exports.getArnResources = exports.validateCustomEndpoint = exports.validateDNSHostLabel = exports.validateAccountId = exports.validateRegionalClient = exports.validateRegion = exports.validatePartition = exports.validateOutpostService = exports.validateS3Service = exports.validateService = exports.validateArnEndpointOptions = exports.getSuffixForArnEndpoint = exports.getSuffix = exports.isDnsCompatibleBucketName = exports.isBucketNameOptions = exports.S3_HOSTNAME_PATTERN = exports.DOT_PATTERN = void 0;\nconst DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/;\nconst IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nconst DOTS_PATTERN = /\\.\\./;\nexports.DOT_PATTERN = /\\./;\nexports.S3_HOSTNAME_PATTERN = /^(.+\\.)?s3(-fips)?(\\.dualstack)?[.-]([a-z0-9-]+)\\./;\nconst S3_US_EAST_1_ALTNAME_PATTERN = /^s3(-external-1)?\\.amazonaws\\.com$/;\nconst AWS_PARTITION_SUFFIX = \"amazonaws.com\";\nconst isBucketNameOptions = (options) => typeof options.bucketName === \"string\";\nexports.isBucketNameOptions = isBucketNameOptions;\nconst isDnsCompatibleBucketName = (bucketName) => DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);\nexports.isDnsCompatibleBucketName = isDnsCompatibleBucketName;\nconst getRegionalSuffix = (hostname) => {\n    const parts = hostname.match(exports.S3_HOSTNAME_PATTERN);\n    return [parts[4], hostname.replace(new RegExp(`^${parts[0]}`), \"\")];\n};\nconst getSuffix = (hostname) => S3_US_EAST_1_ALTNAME_PATTERN.test(hostname) ? [\"us-east-1\", AWS_PARTITION_SUFFIX] : getRegionalSuffix(hostname);\nexports.getSuffix = getSuffix;\nconst getSuffixForArnEndpoint = (hostname) => S3_US_EAST_1_ALTNAME_PATTERN.test(hostname)\n    ? [hostname.replace(`.${AWS_PARTITION_SUFFIX}`, \"\"), AWS_PARTITION_SUFFIX]\n    : getRegionalSuffix(hostname);\nexports.getSuffixForArnEndpoint = getSuffixForArnEndpoint;\nconst validateArnEndpointOptions = (options) => {\n    if (options.pathStyleEndpoint) {\n        throw new Error(\"Path-style S3 endpoint is not supported when bucket is an ARN\");\n    }\n    if (options.accelerateEndpoint) {\n        throw new Error(\"Accelerate endpoint is not supported when bucket is an ARN\");\n    }\n    if (!options.tlsCompatible) {\n        throw new Error(\"HTTPS is required when bucket is an ARN\");\n    }\n};\nexports.validateArnEndpointOptions = validateArnEndpointOptions;\nconst validateService = (service) => {\n    if (service !== \"s3\" && service !== \"s3-outposts\" && service !== \"s3-object-lambda\") {\n        throw new Error(\"Expect 's3' or 's3-outposts' or 's3-object-lambda' in ARN service component\");\n    }\n};\nexports.validateService = validateService;\nconst validateS3Service = (service) => {\n    if (service !== \"s3\") {\n        throw new Error(\"Expect 's3' in Accesspoint ARN service component\");\n    }\n};\nexports.validateS3Service = validateS3Service;\nconst validateOutpostService = (service) => {\n    if (service !== \"s3-outposts\") {\n        throw new Error(\"Expect 's3-posts' in Outpost ARN service component\");\n    }\n};\nexports.validateOutpostService = validateOutpostService;\nconst validatePartition = (partition, options) => {\n    if (partition !== options.clientPartition) {\n        throw new Error(`Partition in ARN is incompatible, got \"${partition}\" but expected \"${options.clientPartition}\"`);\n    }\n};\nexports.validatePartition = validatePartition;\nconst validateRegion = (region, options) => {\n    if (region === \"\") {\n        throw new Error(\"ARN region is empty\");\n    }\n    if (options.useFipsEndpoint) {\n        if (!options.allowFipsRegion) {\n            throw new Error(\"FIPS region is not supported\");\n        }\n        else if (!isEqualRegions(region, options.clientRegion)) {\n            throw new Error(`Client FIPS region ${options.clientRegion} doesn't match region ${region} in ARN`);\n        }\n    }\n    if (!options.useArnRegion &&\n        !isEqualRegions(region, options.clientRegion || \"\") &&\n        !isEqualRegions(region, options.clientSigningRegion || \"\")) {\n        throw new Error(`Region in ARN is incompatible, got ${region} but expected ${options.clientRegion}`);\n    }\n};\nexports.validateRegion = validateRegion;\nconst validateRegionalClient = (region) => {\n    if ([\"s3-external-1\", \"aws-global\"].includes(region)) {\n        throw new Error(`Client region ${region} is not regional`);\n    }\n};\nexports.validateRegionalClient = validateRegionalClient;\nconst isEqualRegions = (regionA, regionB) => regionA === regionB;\nconst validateAccountId = (accountId) => {\n    if (!/[0-9]{12}/.exec(accountId)) {\n        throw new Error(\"Access point ARN accountID does not match regex '[0-9]{12}'\");\n    }\n};\nexports.validateAccountId = validateAccountId;\nconst validateDNSHostLabel = (label, options = { tlsCompatible: true }) => {\n    if (label.length >= 64 ||\n        !/^[a-z0-9][a-z0-9.-]*[a-z0-9]$/.test(label) ||\n        /(\\d+\\.){3}\\d+/.test(label) ||\n        /[.-]{2}/.test(label) ||\n        ((options === null || options === void 0 ? void 0 : options.tlsCompatible) && exports.DOT_PATTERN.test(label))) {\n        throw new Error(`Invalid DNS label ${label}`);\n    }\n};\nexports.validateDNSHostLabel = validateDNSHostLabel;\nconst validateCustomEndpoint = (options) => {\n    if (options.isCustomEndpoint) {\n        if (options.dualstackEndpoint)\n            throw new Error(\"Dualstack endpoint is not supported with custom endpoint\");\n        if (options.accelerateEndpoint)\n            throw new Error(\"Accelerate endpoint is not supported with custom endpoint\");\n    }\n};\nexports.validateCustomEndpoint = validateCustomEndpoint;\nconst getArnResources = (resource) => {\n    const delimiter = resource.includes(\":\") ? \":\" : \"/\";\n    const [resourceType, ...rest] = resource.split(delimiter);\n    if (resourceType === \"accesspoint\") {\n        if (rest.length !== 1 || rest[0] === \"\") {\n            throw new Error(`Access Point ARN should have one resource accesspoint${delimiter}{accesspointname}`);\n        }\n        return { accesspointName: rest[0] };\n    }\n    else if (resourceType === \"outpost\") {\n        if (!rest[0] || rest[1] !== \"accesspoint\" || !rest[2] || rest.length !== 3) {\n            throw new Error(`Outpost ARN should have resource outpost${delimiter}{outpostId}${delimiter}accesspoint${delimiter}{accesspointName}`);\n        }\n        const [outpostId, _, accesspointName] = rest;\n        return { outpostId, accesspointName };\n    }\n    else {\n        throw new Error(`ARN resource should begin with 'accesspoint${delimiter}' or 'outpost${delimiter}'`);\n    }\n};\nexports.getArnResources = getArnResources;\nconst validateNoDualstack = (dualstackEndpoint) => {\n    if (dualstackEndpoint)\n        throw new Error(\"Dualstack endpoint is not supported with Outpost or Multi-region Access Point ARN.\");\n};\nexports.validateNoDualstack = validateNoDualstack;\nconst validateNoFIPS = (useFipsEndpoint) => {\n    if (useFipsEndpoint)\n        throw new Error(`FIPS region is not supported with Outpost.`);\n};\nexports.validateNoFIPS = validateNoFIPS;\nconst validateMrapAlias = (name) => {\n    try {\n        name.split(\".\").forEach((label) => {\n            (0, exports.validateDNSHostLabel)(label);\n        });\n    }\n    catch (e) {\n        throw new Error(`\"${name}\" is not a DNS compatible name.`);\n    }\n};\nexports.validateMrapAlias = validateMrapAlias;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveBucketEndpointConfig = void 0;\nfunction resolveBucketEndpointConfig(input) {\n    const { bucketEndpoint = false, forcePathStyle = false, useAccelerateEndpoint = false, useArnRegion = false, disableMultiregionAccessPoints = false, } = input;\n    return {\n        ...input,\n        bucketEndpoint,\n        forcePathStyle,\n        useAccelerateEndpoint,\n        useArnRegion: typeof useArnRegion === \"function\" ? useArnRegion : () => Promise.resolve(useArnRegion),\n        disableMultiregionAccessPoints: typeof disableMultiregionAccessPoints === \"function\"\n            ? disableMultiregionAccessPoints\n            : () => Promise.resolve(disableMultiregionAccessPoints),\n    };\n}\nexports.resolveBucketEndpointConfig = resolveBucketEndpointConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateNoFIPS = exports.validateNoDualstack = exports.validateDNSHostLabel = exports.validateRegion = exports.validateAccountId = exports.validatePartition = exports.validateOutpostService = exports.getSuffixForArnEndpoint = exports.getArnResources = void 0;\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./NodeDisableMultiregionAccessPointConfigOptions\"), exports);\ntslib_1.__exportStar(require(\"./NodeUseArnRegionConfigOptions\"), exports);\ntslib_1.__exportStar(require(\"./bucketEndpointMiddleware\"), exports);\ntslib_1.__exportStar(require(\"./bucketHostname\"), exports);\ntslib_1.__exportStar(require(\"./configurations\"), exports);\nvar bucketHostnameUtils_1 = require(\"./bucketHostnameUtils\");\nObject.defineProperty(exports, \"getArnResources\", { enumerable: true, get: function () { return bucketHostnameUtils_1.getArnResources; } });\nObject.defineProperty(exports, \"getSuffixForArnEndpoint\", { enumerable: true, get: function () { return bucketHostnameUtils_1.getSuffixForArnEndpoint; } });\nObject.defineProperty(exports, \"validateOutpostService\", { enumerable: true, get: function () { return bucketHostnameUtils_1.validateOutpostService; } });\nObject.defineProperty(exports, \"validatePartition\", { enumerable: true, get: function () { return bucketHostnameUtils_1.validatePartition; } });\nObject.defineProperty(exports, \"validateAccountId\", { enumerable: true, get: function () { return bucketHostnameUtils_1.validateAccountId; } });\nObject.defineProperty(exports, \"validateRegion\", { enumerable: true, get: function () { return bucketHostnameUtils_1.validateRegion; } });\nObject.defineProperty(exports, \"validateDNSHostLabel\", { enumerable: true, get: function () { return bucketHostnameUtils_1.validateDNSHostLabel; } });\nObject.defineProperty(exports, \"validateNoDualstack\", { enumerable: true, get: function () { return bucketHostnameUtils_1.validateNoDualstack; } });\nObject.defineProperty(exports, \"validateNoFIPS\", { enumerable: true, get: function () { return bucketHostnameUtils_1.validateNoFIPS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAddExpectContinuePlugin = exports.addExpectContinueMiddlewareOptions = exports.addExpectContinueMiddleware = void 0;\nconst protocol_http_1 = require(\"@smithy/protocol-http\");\nfunction addExpectContinueMiddleware(options) {\n    return (next) => async (args) => {\n        const { request } = args;\n        if (protocol_http_1.HttpRequest.isInstance(request) && request.body && options.runtime === \"node\") {\n            request.headers = {\n                ...request.headers,\n                Expect: \"100-continue\",\n            };\n        }\n        return next({\n            ...args,\n            request,\n        });\n    };\n}\nexports.addExpectContinueMiddleware = addExpectContinueMiddleware;\nexports.addExpectContinueMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_EXPECT_HEADER\", \"EXPECT_HEADER\"],\n    name: \"addExpectContinueMiddleware\",\n    override: true,\n};\nconst getAddExpectContinuePlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(addExpectContinueMiddleware(options), exports.addExpectContinueMiddlewareOptions);\n    },\n});\nexports.getAddExpectContinuePlugin = getAddExpectContinuePlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChecksumLocation = exports.ChecksumAlgorithm = void 0;\nvar ChecksumAlgorithm;\n(function (ChecksumAlgorithm) {\n    ChecksumAlgorithm[\"MD5\"] = \"MD5\";\n    ChecksumAlgorithm[\"CRC32\"] = \"CRC32\";\n    ChecksumAlgorithm[\"CRC32C\"] = \"CRC32C\";\n    ChecksumAlgorithm[\"SHA1\"] = \"SHA1\";\n    ChecksumAlgorithm[\"SHA256\"] = \"SHA256\";\n})(ChecksumAlgorithm = exports.ChecksumAlgorithm || (exports.ChecksumAlgorithm = {}));\nvar ChecksumLocation;\n(function (ChecksumLocation) {\n    ChecksumLocation[\"HEADER\"] = \"header\";\n    ChecksumLocation[\"TRAILER\"] = \"trailer\";\n})(ChecksumLocation = exports.ChecksumLocation || (exports.ChecksumLocation = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.flexibleChecksumsMiddleware = void 0;\nconst protocol_http_1 = require(\"@smithy/protocol-http\");\nconst getChecksumAlgorithmForRequest_1 = require(\"./getChecksumAlgorithmForRequest\");\nconst getChecksumLocationName_1 = require(\"./getChecksumLocationName\");\nconst hasHeader_1 = require(\"./hasHeader\");\nconst isStreaming_1 = require(\"./isStreaming\");\nconst selectChecksumAlgorithmFunction_1 = require(\"./selectChecksumAlgorithmFunction\");\nconst stringHasher_1 = require(\"./stringHasher\");\nconst validateChecksumFromResponse_1 = require(\"./validateChecksumFromResponse\");\nconst flexibleChecksumsMiddleware = (config, middlewareConfig) => (next) => async (args) => {\n    if (!protocol_http_1.HttpRequest.isInstance(args.request)) {\n        return next(args);\n    }\n    const { request } = args;\n    const { body: requestBody, headers } = request;\n    const { base64Encoder, streamHasher } = config;\n    const { input, requestChecksumRequired, requestAlgorithmMember } = middlewareConfig;\n    const checksumAlgorithm = (0, getChecksumAlgorithmForRequest_1.getChecksumAlgorithmForRequest)(input, {\n        requestChecksumRequired,\n        requestAlgorithmMember,\n    });\n    let updatedBody = requestBody;\n    let updatedHeaders = headers;\n    if (checksumAlgorithm) {\n        const checksumLocationName = (0, getChecksumLocationName_1.getChecksumLocationName)(checksumAlgorithm);\n        const checksumAlgorithmFn = (0, selectChecksumAlgorithmFunction_1.selectChecksumAlgorithmFunction)(checksumAlgorithm, config);\n        if ((0, isStreaming_1.isStreaming)(requestBody)) {\n            const { getAwsChunkedEncodingStream, bodyLengthChecker } = config;\n            updatedBody = getAwsChunkedEncodingStream(requestBody, {\n                base64Encoder,\n                bodyLengthChecker,\n                checksumLocationName,\n                checksumAlgorithmFn,\n                streamHasher,\n            });\n            updatedHeaders = {\n                ...headers,\n                \"content-encoding\": headers[\"content-encoding\"]\n                    ? `${headers[\"content-encoding\"]},aws-chunked`\n                    : \"aws-chunked\",\n                \"transfer-encoding\": \"chunked\",\n                \"x-amz-decoded-content-length\": headers[\"content-length\"],\n                \"x-amz-content-sha256\": \"STREAMING-UNSIGNED-PAYLOAD-TRAILER\",\n                \"x-amz-trailer\": checksumLocationName,\n            };\n            delete updatedHeaders[\"content-length\"];\n        }\n        else if (!(0, hasHeader_1.hasHeader)(checksumLocationName, headers)) {\n            const rawChecksum = await (0, stringHasher_1.stringHasher)(checksumAlgorithmFn, requestBody);\n            updatedHeaders = {\n                ...headers,\n                [checksumLocationName]: base64Encoder(rawChecksum),\n            };\n        }\n    }\n    const result = await next({\n        ...args,\n        request: {\n            ...request,\n            headers: updatedHeaders,\n            body: updatedBody,\n        },\n    });\n    const { requestValidationModeMember, responseAlgorithms } = middlewareConfig;\n    if (requestValidationModeMember && input[requestValidationModeMember] === \"ENABLED\") {\n        await (0, validateChecksumFromResponse_1.validateChecksumFromResponse)(result.response, {\n            config,\n            responseAlgorithms,\n        });\n    }\n    return result;\n};\nexports.flexibleChecksumsMiddleware = flexibleChecksumsMiddleware;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getChecksum = void 0;\nconst isStreaming_1 = require(\"./isStreaming\");\nconst stringHasher_1 = require(\"./stringHasher\");\nconst getChecksum = async (body, { streamHasher, checksumAlgorithmFn, base64Encoder }) => {\n    const digest = (0, isStreaming_1.isStreaming)(body) ? streamHasher(checksumAlgorithmFn, body) : (0, stringHasher_1.stringHasher)(checksumAlgorithmFn, body);\n    return base64Encoder(await digest);\n};\nexports.getChecksum = getChecksum;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getChecksumAlgorithmForRequest = void 0;\nconst constants_1 = require(\"./constants\");\nconst types_1 = require(\"./types\");\nconst getChecksumAlgorithmForRequest = (input, { requestChecksumRequired, requestAlgorithmMember }) => {\n    if (!requestAlgorithmMember || !input[requestAlgorithmMember]) {\n        return requestChecksumRequired ? constants_1.ChecksumAlgorithm.MD5 : undefined;\n    }\n    const checksumAlgorithm = input[requestAlgorithmMember];\n    if (!types_1.CLIENT_SUPPORTED_ALGORITHMS.includes(checksumAlgorithm)) {\n        throw new Error(`The checksum algorithm \"${checksumAlgorithm}\" is not supported by the client.` +\n            ` Select one of ${types_1.CLIENT_SUPPORTED_ALGORITHMS}.`);\n    }\n    return checksumAlgorithm;\n};\nexports.getChecksumAlgorithmForRequest = getChecksumAlgorithmForRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getChecksumAlgorithmListForResponse = void 0;\nconst types_1 = require(\"./types\");\nconst getChecksumAlgorithmListForResponse = (responseAlgorithms = []) => {\n    const validChecksumAlgorithms = [];\n    for (const algorithm of types_1.PRIORITY_ORDER_ALGORITHMS) {\n        if (!responseAlgorithms.includes(algorithm) || !types_1.CLIENT_SUPPORTED_ALGORITHMS.includes(algorithm)) {\n            continue;\n        }\n        validChecksumAlgorithms.push(algorithm);\n    }\n    return validChecksumAlgorithms;\n};\nexports.getChecksumAlgorithmListForResponse = getChecksumAlgorithmListForResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getChecksumLocationName = void 0;\nconst constants_1 = require(\"./constants\");\nconst getChecksumLocationName = (algorithm) => algorithm === constants_1.ChecksumAlgorithm.MD5 ? \"content-md5\" : `x-amz-checksum-${algorithm.toLowerCase()}`;\nexports.getChecksumLocationName = getChecksumLocationName;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFlexibleChecksumsPlugin = exports.flexibleChecksumsMiddlewareOptions = void 0;\nconst flexibleChecksumsMiddleware_1 = require(\"./flexibleChecksumsMiddleware\");\nexports.flexibleChecksumsMiddlewareOptions = {\n    name: \"flexibleChecksumsMiddleware\",\n    step: \"build\",\n    tags: [\"BODY_CHECKSUM\"],\n    override: true,\n};\nconst getFlexibleChecksumsPlugin = (config, middlewareConfig) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add((0, flexibleChecksumsMiddleware_1.flexibleChecksumsMiddleware)(config, middlewareConfig), exports.flexibleChecksumsMiddlewareOptions);\n    },\n});\nexports.getFlexibleChecksumsPlugin = getFlexibleChecksumsPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasHeader = void 0;\nconst hasHeader = (header, headers) => {\n    const soughtHeader = header.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return true;\n        }\n    }\n    return false;\n};\nexports.hasHeader = hasHeader;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./constants\"), exports);\ntslib_1.__exportStar(require(\"./flexibleChecksumsMiddleware\"), exports);\ntslib_1.__exportStar(require(\"./getFlexibleChecksumsPlugin\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isStreaming = void 0;\nconst is_array_buffer_1 = require(\"@smithy/is-array-buffer\");\nconst isStreaming = (body) => body !== undefined && typeof body !== \"string\" && !ArrayBuffer.isView(body) && !(0, is_array_buffer_1.isArrayBuffer)(body);\nexports.isStreaming = isStreaming;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.selectChecksumAlgorithmFunction = void 0;\nconst crc32_1 = require(\"@aws-crypto/crc32\");\nconst crc32c_1 = require(\"@aws-crypto/crc32c\");\nconst constants_1 = require(\"./constants\");\nconst selectChecksumAlgorithmFunction = (checksumAlgorithm, config) => ({\n    [constants_1.ChecksumAlgorithm.MD5]: config.md5,\n    [constants_1.ChecksumAlgorithm.CRC32]: crc32_1.AwsCrc32,\n    [constants_1.ChecksumAlgorithm.CRC32C]: crc32c_1.AwsCrc32c,\n    [constants_1.ChecksumAlgorithm.SHA1]: config.sha1,\n    [constants_1.ChecksumAlgorithm.SHA256]: config.sha256,\n}[checksumAlgorithm]);\nexports.selectChecksumAlgorithmFunction = selectChecksumAlgorithmFunction;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringHasher = void 0;\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst stringHasher = (checksumAlgorithmFn, body) => {\n    const hash = new checksumAlgorithmFn();\n    hash.update((0, util_utf8_1.toUint8Array)(body || \"\"));\n    return hash.digest();\n};\nexports.stringHasher = stringHasher;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PRIORITY_ORDER_ALGORITHMS = exports.CLIENT_SUPPORTED_ALGORITHMS = void 0;\nconst constants_1 = require(\"./constants\");\nexports.CLIENT_SUPPORTED_ALGORITHMS = [\n    constants_1.ChecksumAlgorithm.CRC32,\n    constants_1.ChecksumAlgorithm.CRC32C,\n    constants_1.ChecksumAlgorithm.SHA1,\n    constants_1.ChecksumAlgorithm.SHA256,\n];\nexports.PRIORITY_ORDER_ALGORITHMS = [\n    constants_1.ChecksumAlgorithm.CRC32,\n    constants_1.ChecksumAlgorithm.CRC32C,\n    constants_1.ChecksumAlgorithm.SHA1,\n    constants_1.ChecksumAlgorithm.SHA256,\n];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateChecksumFromResponse = void 0;\nconst getChecksum_1 = require(\"./getChecksum\");\nconst getChecksumAlgorithmListForResponse_1 = require(\"./getChecksumAlgorithmListForResponse\");\nconst getChecksumLocationName_1 = require(\"./getChecksumLocationName\");\nconst selectChecksumAlgorithmFunction_1 = require(\"./selectChecksumAlgorithmFunction\");\nconst validateChecksumFromResponse = async (response, { config, responseAlgorithms }) => {\n    const checksumAlgorithms = (0, getChecksumAlgorithmListForResponse_1.getChecksumAlgorithmListForResponse)(responseAlgorithms);\n    const { body: responseBody, headers: responseHeaders } = response;\n    for (const algorithm of checksumAlgorithms) {\n        const responseHeader = (0, getChecksumLocationName_1.getChecksumLocationName)(algorithm);\n        const checksumFromResponse = responseHeaders[responseHeader];\n        if (checksumFromResponse) {\n            const checksumAlgorithmFn = (0, selectChecksumAlgorithmFunction_1.selectChecksumAlgorithmFunction)(algorithm, config);\n            const { streamHasher, base64Encoder } = config;\n            const checksum = await (0, getChecksum_1.getChecksum)(responseBody, { streamHasher, checksumAlgorithmFn, base64Encoder });\n            if (checksum === checksumFromResponse) {\n                break;\n            }\n            throw new Error(`Checksum mismatch: expected \"${checksum}\" but received \"${checksumFromResponse}\"` +\n                ` in response header \"${responseHeader}\".`);\n        }\n    }\n};\nexports.validateChecksumFromResponse = validateChecksumFromResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getHostHeaderPlugin = exports.hostHeaderMiddlewareOptions = exports.hostHeaderMiddleware = exports.resolveHostHeaderConfig = void 0;\nconst protocol_http_1 = require(\"@smithy/protocol-http\");\nfunction resolveHostHeaderConfig(input) {\n    return input;\n}\nexports.resolveHostHeaderConfig = resolveHostHeaderConfig;\nconst hostHeaderMiddleware = (options) => (next) => async (args) => {\n    if (!protocol_http_1.HttpRequest.isInstance(args.request))\n        return next(args);\n    const { request } = args;\n    const { handlerProtocol = \"\" } = options.requestHandler.metadata || {};\n    if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n        delete request.headers[\"host\"];\n        request.headers[\":authority\"] = \"\";\n    }\n    else if (!request.headers[\"host\"]) {\n        let host = request.hostname;\n        if (request.port != null)\n            host += `:${request.port}`;\n        request.headers[\"host\"] = host;\n    }\n    return next(args);\n};\nexports.hostHeaderMiddleware = hostHeaderMiddleware;\nexports.hostHeaderMiddlewareOptions = {\n    name: \"hostHeaderMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"HOST\"],\n    override: true,\n};\nconst getHostHeaderPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add((0, exports.hostHeaderMiddleware)(options), exports.hostHeaderMiddlewareOptions);\n    },\n});\nexports.getHostHeaderPlugin = getHostHeaderPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getLocationConstraintPlugin = exports.locationConstraintMiddlewareOptions = exports.locationConstraintMiddleware = void 0;\nfunction locationConstraintMiddleware(options) {\n    return (next) => async (args) => {\n        const { CreateBucketConfiguration } = args.input;\n        const region = await options.region();\n        if (!CreateBucketConfiguration || !CreateBucketConfiguration.LocationConstraint) {\n            args = {\n                ...args,\n                input: {\n                    ...args.input,\n                    CreateBucketConfiguration: region === \"us-east-1\" ? undefined : { LocationConstraint: region },\n                },\n            };\n        }\n        return next(args);\n    };\n}\nexports.locationConstraintMiddleware = locationConstraintMiddleware;\nexports.locationConstraintMiddlewareOptions = {\n    step: \"initialize\",\n    tags: [\"LOCATION_CONSTRAINT\", \"CREATE_BUCKET_CONFIGURATION\"],\n    name: \"locationConstraintMiddleware\",\n    override: true,\n};\nconst getLocationConstraintPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(locationConstraintMiddleware(config), exports.locationConstraintMiddlewareOptions);\n    },\n});\nexports.getLocationConstraintPlugin = getLocationConstraintPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./loggerMiddleware\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getLoggerPlugin = exports.loggerMiddlewareOptions = exports.loggerMiddleware = void 0;\nconst loggerMiddleware = () => (next, context) => async (args) => {\n    var _a, _b;\n    try {\n        const response = await next(args);\n        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n        const { overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog !== null && overrideInputFilterSensitiveLog !== void 0 ? overrideInputFilterSensitiveLog : context.inputFilterSensitiveLog;\n        const outputFilterSensitiveLog = overrideOutputFilterSensitiveLog !== null && overrideOutputFilterSensitiveLog !== void 0 ? overrideOutputFilterSensitiveLog : context.outputFilterSensitiveLog;\n        const { $metadata, ...outputWithoutMetadata } = response.output;\n        (_a = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a === void 0 ? void 0 : _a.call(logger, {\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            output: outputFilterSensitiveLog(outputWithoutMetadata),\n            metadata: $metadata,\n        });\n        return response;\n    }\n    catch (error) {\n        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n        const { overrideInputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog !== null && overrideInputFilterSensitiveLog !== void 0 ? overrideInputFilterSensitiveLog : context.inputFilterSensitiveLog;\n        (_b = logger === null || logger === void 0 ? void 0 : logger.error) === null || _b === void 0 ? void 0 : _b.call(logger, {\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            error,\n            metadata: error.$metadata,\n        });\n        throw error;\n    }\n};\nexports.loggerMiddleware = loggerMiddleware;\nexports.loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\"LOGGER\"],\n    step: \"initialize\",\n    override: true,\n};\nconst getLoggerPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add((0, exports.loggerMiddleware)(), exports.loggerMiddlewareOptions);\n    },\n});\nexports.getLoggerPlugin = getLoggerPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRecursionDetectionPlugin = exports.addRecursionDetectionMiddlewareOptions = exports.recursionDetectionMiddleware = void 0;\nconst protocol_http_1 = require(\"@smithy/protocol-http\");\nconst TRACE_ID_HEADER_NAME = \"X-Amzn-Trace-Id\";\nconst ENV_LAMBDA_FUNCTION_NAME = \"AWS_LAMBDA_FUNCTION_NAME\";\nconst ENV_TRACE_ID = \"_X_AMZN_TRACE_ID\";\nconst recursionDetectionMiddleware = (options) => (next) => async (args) => {\n    const { request } = args;\n    if (!protocol_http_1.HttpRequest.isInstance(request) ||\n        options.runtime !== \"node\" ||\n        request.headers.hasOwnProperty(TRACE_ID_HEADER_NAME)) {\n        return next(args);\n    }\n    const functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n    const traceId = process.env[ENV_TRACE_ID];\n    const nonEmptyString = (str) => typeof str === \"string\" && str.length > 0;\n    if (nonEmptyString(functionName) && nonEmptyString(traceId)) {\n        request.headers[TRACE_ID_HEADER_NAME] = traceId;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nexports.recursionDetectionMiddleware = recursionDetectionMiddleware;\nexports.addRecursionDetectionMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"RECURSION_DETECTION\"],\n    name: \"recursionDetectionMiddleware\",\n    override: true,\n    priority: \"low\",\n};\nconst getRecursionDetectionPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add((0, exports.recursionDetectionMiddleware)(options), exports.addRecursionDetectionMiddlewareOptions);\n    },\n});\nexports.getRecursionDetectionPlugin = getRecursionDetectionPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCheckContentLengthHeaderPlugin = exports.checkContentLengthHeaderMiddlewareOptions = exports.checkContentLengthHeader = void 0;\nconst protocol_http_1 = require(\"@smithy/protocol-http\");\nconst CONTENT_LENGTH_HEADER = \"content-length\";\nfunction checkContentLengthHeader() {\n    return (next, context) => async (args) => {\n        var _a;\n        const { request } = args;\n        if (protocol_http_1.HttpRequest.isInstance(request)) {\n            if (!request.headers[CONTENT_LENGTH_HEADER]) {\n                const message = `Are you using a Stream of unknown length as the Body of a PutObject request? Consider using Upload instead from @aws-sdk/lib-storage.`;\n                if (typeof ((_a = context === null || context === void 0 ? void 0 : context.logger) === null || _a === void 0 ? void 0 : _a.warn) === \"function\") {\n                    context.logger.warn(message);\n                }\n                else {\n                    console.warn(message);\n                }\n            }\n        }\n        return next({ ...args });\n    };\n}\nexports.checkContentLengthHeader = checkContentLengthHeader;\nexports.checkContentLengthHeaderMiddlewareOptions = {\n    step: \"finalizeRequest\",\n    tags: [\"CHECK_CONTENT_LENGTH_HEADER\"],\n    name: \"getCheckContentLengthHeaderPlugin\",\n    override: true,\n};\nconst getCheckContentLengthHeaderPlugin = (unused) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(checkContentLengthHeader(), exports.checkContentLengthHeaderMiddlewareOptions);\n    },\n});\nexports.getCheckContentLengthHeaderPlugin = getCheckContentLengthHeaderPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./check-content-length-header\"), exports);\ntslib_1.__exportStar(require(\"./s3Configuration\"), exports);\ntslib_1.__exportStar(require(\"./throw-200-exceptions\"), exports);\ntslib_1.__exportStar(require(\"./validate-bucket-name\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveS3Config = void 0;\nconst resolveS3Config = (input) => {\n    var _a, _b, _c;\n    return ({\n        ...input,\n        forcePathStyle: (_a = input.forcePathStyle) !== null && _a !== void 0 ? _a : false,\n        useAccelerateEndpoint: (_b = input.useAccelerateEndpoint) !== null && _b !== void 0 ? _b : false,\n        disableMultiregionAccessPoints: (_c = input.disableMultiregionAccessPoints) !== null && _c !== void 0 ? _c : false,\n    });\n};\nexports.resolveS3Config = resolveS3Config;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getThrow200ExceptionsPlugin = exports.throw200ExceptionsMiddlewareOptions = exports.throw200ExceptionsMiddleware = void 0;\nconst protocol_http_1 = require(\"@smithy/protocol-http\");\nconst throw200ExceptionsMiddleware = (config) => (next) => async (args) => {\n    const result = await next(args);\n    const { response } = result;\n    if (!protocol_http_1.HttpResponse.isInstance(response))\n        return result;\n    const { statusCode, body } = response;\n    if (statusCode < 200 || statusCode >= 300)\n        return result;\n    const bodyBytes = await collectBody(body, config);\n    const bodyString = await collectBodyString(bodyBytes, config);\n    if (bodyBytes.length === 0) {\n        const err = new Error(\"S3 aborted request\");\n        err.name = \"InternalError\";\n        throw err;\n    }\n    if (bodyString && bodyString.match(\"<Error>\")) {\n        response.statusCode = 400;\n    }\n    response.body = bodyBytes;\n    return result;\n};\nexports.throw200ExceptionsMiddleware = throw200ExceptionsMiddleware;\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nexports.throw200ExceptionsMiddlewareOptions = {\n    relation: \"after\",\n    toMiddleware: \"deserializerMiddleware\",\n    tags: [\"THROW_200_EXCEPTIONS\", \"S3\"],\n    name: \"throw200ExceptionsMiddleware\",\n    override: true,\n};\nconst getThrow200ExceptionsPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo((0, exports.throw200ExceptionsMiddleware)(config), exports.throw200ExceptionsMiddlewareOptions);\n    },\n});\nexports.getThrow200ExceptionsPlugin = getThrow200ExceptionsPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getValidateBucketNamePlugin = exports.validateBucketNameMiddlewareOptions = exports.validateBucketNameMiddleware = void 0;\nconst util_arn_parser_1 = require(\"@aws-sdk/util-arn-parser\");\nfunction validateBucketNameMiddleware() {\n    return (next) => async (args) => {\n        const { input: { Bucket }, } = args;\n        if (typeof Bucket === \"string\" && !(0, util_arn_parser_1.validate)(Bucket) && Bucket.indexOf(\"/\") >= 0) {\n            const err = new Error(`Bucket name shouldn't contain '/', received '${Bucket}'`);\n            err.name = \"InvalidBucketName\";\n            throw err;\n        }\n        return next({ ...args });\n    };\n}\nexports.validateBucketNameMiddleware = validateBucketNameMiddleware;\nexports.validateBucketNameMiddlewareOptions = {\n    step: \"initialize\",\n    tags: [\"VALIDATE_BUCKET_NAME\"],\n    name: \"validateBucketNameMiddleware\",\n    override: true,\n};\nconst getValidateBucketNamePlugin = (unused) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(validateBucketNameMiddleware(), exports.validateBucketNameMiddlewareOptions);\n    },\n});\nexports.getValidateBucketNamePlugin = getValidateBucketNamePlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveStsAuthConfig = void 0;\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst resolveStsAuthConfig = (input, { stsClientCtor }) => (0, middleware_signing_1.resolveAwsAuthConfig)({\n    ...input,\n    stsClientCtor,\n});\nexports.resolveStsAuthConfig = resolveStsAuthConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveSigV4AuthConfig = exports.resolveAwsAuthConfig = void 0;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst signature_v4_1 = require(\"@smithy/signature-v4\");\nconst util_middleware_1 = require(\"@smithy/util-middleware\");\nconst CREDENTIAL_EXPIRE_WINDOW = 300000;\nconst resolveAwsAuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(input);\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        signer = (0, util_middleware_1.normalizeProvider)(input.signer);\n    }\n    else if (input.regionInfoProvider) {\n        signer = () => (0, util_middleware_1.normalizeProvider)(input.region)()\n            .then(async (region) => [\n            (await input.regionInfoProvider(region, {\n                useFipsEndpoint: await input.useFipsEndpoint(),\n                useDualstackEndpoint: await input.useDualstackEndpoint(),\n            })) || {},\n            region,\n        ])\n            .then(([regionInfo, region]) => {\n            const { signingRegion, signingService } = regionInfo;\n            input.signingRegion = input.signingRegion || signingRegion || region;\n            input.signingName = input.signingName || signingService || input.serviceId;\n            const params = {\n                ...input,\n                credentials: normalizedCreds,\n                region: input.signingRegion,\n                service: input.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = input.signerConstructor || signature_v4_1.SignatureV4;\n            return new SignerCtor(params);\n        });\n    }\n    else {\n        signer = async (authScheme) => {\n            authScheme = Object.assign({}, {\n                name: \"sigv4\",\n                signingName: input.signingName || input.defaultSigningName,\n                signingRegion: await (0, util_middleware_1.normalizeProvider)(input.region)(),\n                properties: {},\n            }, authScheme);\n            const signingRegion = authScheme.signingRegion;\n            const signingService = authScheme.signingName;\n            input.signingRegion = input.signingRegion || signingRegion;\n            input.signingName = input.signingName || signingService || input.serviceId;\n            const params = {\n                ...input,\n                credentials: normalizedCreds,\n                region: input.signingRegion,\n                service: input.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = input.signerConstructor || signature_v4_1.SignatureV4;\n            return new SignerCtor(params);\n        };\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nexports.resolveAwsAuthConfig = resolveAwsAuthConfig;\nconst resolveSigV4AuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(input);\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        signer = (0, util_middleware_1.normalizeProvider)(input.signer);\n    }\n    else {\n        signer = (0, util_middleware_1.normalizeProvider)(new signature_v4_1.SignatureV4({\n            credentials: normalizedCreds,\n            region: input.region,\n            service: input.signingName,\n            sha256,\n            uriEscapePath: signingEscapePath,\n        }));\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nexports.resolveSigV4AuthConfig = resolveSigV4AuthConfig;\nconst normalizeCredentialProvider = (credentials) => {\n    if (typeof credentials === \"function\") {\n        return (0, property_provider_1.memoize)(credentials, (credentials) => credentials.expiration !== undefined &&\n            credentials.expiration.getTime() - Date.now() < CREDENTIAL_EXPIRE_WINDOW, (credentials) => credentials.expiration !== undefined);\n    }\n    return (0, util_middleware_1.normalizeProvider)(credentials);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSigV4AuthPlugin = exports.getAwsAuthPlugin = exports.awsAuthMiddlewareOptions = exports.awsAuthMiddleware = void 0;\nconst protocol_http_1 = require(\"@smithy/protocol-http\");\nconst getSkewCorrectedDate_1 = require(\"./utils/getSkewCorrectedDate\");\nconst getUpdatedSystemClockOffset_1 = require(\"./utils/getUpdatedSystemClockOffset\");\nconst awsAuthMiddleware = (options) => (next, context) => async function (args) {\n    var _a, _b, _c, _d;\n    if (!protocol_http_1.HttpRequest.isInstance(args.request))\n        return next(args);\n    const authScheme = (_c = (_b = (_a = context.endpointV2) === null || _a === void 0 ? void 0 : _a.properties) === null || _b === void 0 ? void 0 : _b.authSchemes) === null || _c === void 0 ? void 0 : _c[0];\n    const multiRegionOverride = (authScheme === null || authScheme === void 0 ? void 0 : authScheme.name) === \"sigv4a\" ? (_d = authScheme === null || authScheme === void 0 ? void 0 : authScheme.signingRegionSet) === null || _d === void 0 ? void 0 : _d.join(\",\") : undefined;\n    const signer = await options.signer(authScheme);\n    const output = await next({\n        ...args,\n        request: await signer.sign(args.request, {\n            signingDate: (0, getSkewCorrectedDate_1.getSkewCorrectedDate)(options.systemClockOffset),\n            signingRegion: multiRegionOverride || context[\"signing_region\"],\n            signingService: context[\"signing_service\"],\n        }),\n    }).catch((error) => {\n        var _a;\n        const serverTime = (_a = error.ServerTime) !== null && _a !== void 0 ? _a : getDateHeader(error.$response);\n        if (serverTime) {\n            options.systemClockOffset = (0, getUpdatedSystemClockOffset_1.getUpdatedSystemClockOffset)(serverTime, options.systemClockOffset);\n        }\n        throw error;\n    });\n    const dateHeader = getDateHeader(output.response);\n    if (dateHeader) {\n        options.systemClockOffset = (0, getUpdatedSystemClockOffset_1.getUpdatedSystemClockOffset)(dateHeader, options.systemClockOffset);\n    }\n    return output;\n};\nexports.awsAuthMiddleware = awsAuthMiddleware;\nconst getDateHeader = (response) => { var _a, _b, _c; return protocol_http_1.HttpResponse.isInstance(response) ? (_b = (_a = response.headers) === null || _a === void 0 ? void 0 : _a.date) !== null && _b !== void 0 ? _b : (_c = response.headers) === null || _c === void 0 ? void 0 : _c.Date : undefined; };\nexports.awsAuthMiddlewareOptions = {\n    name: \"awsAuthMiddleware\",\n    tags: [\"SIGNATURE\", \"AWSAUTH\"],\n    relation: \"after\",\n    toMiddleware: \"retryMiddleware\",\n    override: true,\n};\nconst getAwsAuthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo((0, exports.awsAuthMiddleware)(options), exports.awsAuthMiddlewareOptions);\n    },\n});\nexports.getAwsAuthPlugin = getAwsAuthPlugin;\nexports.getSigV4AuthPlugin = exports.getAwsAuthPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./awsAuthConfiguration\"), exports);\ntslib_1.__exportStar(require(\"./awsAuthMiddleware\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSkewCorrectedDate = void 0;\nconst getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\nexports.getSkewCorrectedDate = getSkewCorrectedDate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getUpdatedSystemClockOffset = void 0;\nconst isClockSkewed_1 = require(\"./isClockSkewed\");\nconst getUpdatedSystemClockOffset = (clockTime, currentSystemClockOffset) => {\n    const clockTimeInMs = Date.parse(clockTime);\n    if ((0, isClockSkewed_1.isClockSkewed)(clockTimeInMs, currentSystemClockOffset)) {\n        return clockTimeInMs - Date.now();\n    }\n    return currentSystemClockOffset;\n};\nexports.getUpdatedSystemClockOffset = getUpdatedSystemClockOffset;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isClockSkewed = void 0;\nconst getSkewCorrectedDate_1 = require(\"./getSkewCorrectedDate\");\nconst isClockSkewed = (clockTime, systemClockOffset) => Math.abs((0, getSkewCorrectedDate_1.getSkewCorrectedDate)(systemClockOffset).getTime() - clockTime) >= 300000;\nexports.isClockSkewed = isClockSkewed;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSsecPlugin = exports.ssecMiddlewareOptions = exports.ssecMiddleware = void 0;\nfunction ssecMiddleware(options) {\n    return (next) => async (args) => {\n        let input = { ...args.input };\n        const properties = [\n            {\n                target: \"SSECustomerKey\",\n                hash: \"SSECustomerKeyMD5\",\n            },\n            {\n                target: \"CopySourceSSECustomerKey\",\n                hash: \"CopySourceSSECustomerKeyMD5\",\n            },\n        ];\n        for (const prop of properties) {\n            const value = input[prop.target];\n            if (value) {\n                const valueView = ArrayBuffer.isView(value)\n                    ? new Uint8Array(value.buffer, value.byteOffset, value.byteLength)\n                    : typeof value === \"string\"\n                        ? options.utf8Decoder(value)\n                        : new Uint8Array(value);\n                const encoded = options.base64Encoder(valueView);\n                const hash = new options.md5();\n                hash.update(valueView);\n                input = {\n                    ...input,\n                    [prop.target]: encoded,\n                    [prop.hash]: options.base64Encoder(await hash.digest()),\n                };\n            }\n        }\n        return next({\n            ...args,\n            input,\n        });\n    };\n}\nexports.ssecMiddleware = ssecMiddleware;\nexports.ssecMiddlewareOptions = {\n    name: \"ssecMiddleware\",\n    step: \"initialize\",\n    tags: [\"SSE\"],\n    override: true,\n};\nconst getSsecPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(ssecMiddleware(config), exports.ssecMiddlewareOptions);\n    },\n});\nexports.getSsecPlugin = getSsecPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveUserAgentConfig = void 0;\nfunction resolveUserAgentConfig(input) {\n    return {\n        ...input,\n        customUserAgent: typeof input.customUserAgent === \"string\" ? [[input.customUserAgent]] : input.customUserAgent,\n    };\n}\nexports.resolveUserAgentConfig = resolveUserAgentConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UA_ESCAPE_CHAR = exports.UA_VALUE_ESCAPE_REGEX = exports.UA_NAME_ESCAPE_REGEX = exports.UA_NAME_SEPARATOR = exports.SPACE = exports.X_AMZ_USER_AGENT = exports.USER_AGENT = void 0;\nexports.USER_AGENT = \"user-agent\";\nexports.X_AMZ_USER_AGENT = \"x-amz-user-agent\";\nexports.SPACE = \" \";\nexports.UA_NAME_SEPARATOR = \"/\";\nexports.UA_NAME_ESCAPE_REGEX = /[^\\!\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w]/g;\nexports.UA_VALUE_ESCAPE_REGEX = /[^\\!\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w\\#]/g;\nexports.UA_ESCAPE_CHAR = \"-\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./configurations\"), exports);\ntslib_1.__exportStar(require(\"./user-agent-middleware\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getUserAgentPlugin = exports.getUserAgentMiddlewareOptions = exports.userAgentMiddleware = void 0;\nconst util_endpoints_1 = require(\"@aws-sdk/util-endpoints\");\nconst protocol_http_1 = require(\"@smithy/protocol-http\");\nconst constants_1 = require(\"./constants\");\nconst userAgentMiddleware = (options) => (next, context) => async (args) => {\n    var _a, _b;\n    const { request } = args;\n    if (!protocol_http_1.HttpRequest.isInstance(request))\n        return next(args);\n    const { headers } = request;\n    const userAgent = ((_a = context === null || context === void 0 ? void 0 : context.userAgent) === null || _a === void 0 ? void 0 : _a.map(escapeUserAgent)) || [];\n    const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n    const customUserAgent = ((_b = options === null || options === void 0 ? void 0 : options.customUserAgent) === null || _b === void 0 ? void 0 : _b.map(escapeUserAgent)) || [];\n    const prefix = (0, util_endpoints_1.getUserAgentPrefix)();\n    const sdkUserAgentValue = (prefix ? [prefix] : [])\n        .concat([...defaultUserAgent, ...userAgent, ...customUserAgent])\n        .join(constants_1.SPACE);\n    const normalUAValue = [\n        ...defaultUserAgent.filter((section) => section.startsWith(\"aws-sdk-\")),\n        ...customUserAgent,\n    ].join(constants_1.SPACE);\n    if (options.runtime !== \"browser\") {\n        if (normalUAValue) {\n            headers[constants_1.X_AMZ_USER_AGENT] = headers[constants_1.X_AMZ_USER_AGENT]\n                ? `${headers[constants_1.USER_AGENT]} ${normalUAValue}`\n                : normalUAValue;\n        }\n        headers[constants_1.USER_AGENT] = sdkUserAgentValue;\n    }\n    else {\n        headers[constants_1.X_AMZ_USER_AGENT] = sdkUserAgentValue;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nexports.userAgentMiddleware = userAgentMiddleware;\nconst escapeUserAgent = (userAgentPair) => {\n    var _a;\n    const name = userAgentPair[0]\n        .split(constants_1.UA_NAME_SEPARATOR)\n        .map((part) => part.replace(constants_1.UA_NAME_ESCAPE_REGEX, constants_1.UA_ESCAPE_CHAR))\n        .join(constants_1.UA_NAME_SEPARATOR);\n    const version = (_a = userAgentPair[1]) === null || _a === void 0 ? void 0 : _a.replace(constants_1.UA_VALUE_ESCAPE_REGEX, constants_1.UA_ESCAPE_CHAR);\n    const prefixSeparatorIndex = name.indexOf(constants_1.UA_NAME_SEPARATOR);\n    const prefix = name.substring(0, prefixSeparatorIndex);\n    let uaName = name.substring(prefixSeparatorIndex + 1);\n    if (prefix === \"api\") {\n        uaName = uaName.toLowerCase();\n    }\n    return [prefix, uaName, version]\n        .filter((item) => item && item.length > 0)\n        .reduce((acc, item, index) => {\n        switch (index) {\n            case 0:\n                return item;\n            case 1:\n                return `${acc}/${item}`;\n            default:\n                return `${acc}#${item}`;\n        }\n    }, \"\");\n};\nexports.getUserAgentMiddlewareOptions = {\n    name: \"getUserAgentMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n    override: true,\n};\nconst getUserAgentPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add((0, exports.userAgentMiddleware)(config), exports.getUserAgentMiddlewareOptions);\n    },\n});\nexports.getUserAgentPlugin = getUserAgentPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignatureV4MultiRegion = void 0;\nconst signature_v4_1 = require(\"@smithy/signature-v4\");\nclass SignatureV4MultiRegion {\n    constructor(options) {\n        this.sigv4Signer = new signature_v4_1.SignatureV4(options);\n        this.signerOptions = options;\n    }\n    async sign(requestToSign, options = {}) {\n        if (options.signingRegion === \"*\") {\n            if (this.signerOptions.runtime !== \"node\")\n                throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n            return this.getSigv4aSigner().sign(requestToSign, options);\n        }\n        return this.sigv4Signer.sign(requestToSign, options);\n    }\n    async presign(originalRequest, options = {}) {\n        if (options.signingRegion === \"*\") {\n            if (this.signerOptions.runtime !== \"node\")\n                throw new Error(\"This request requires signing with SigV4Asymmetric algorithm. It's only available in Node.js\");\n            return this.getSigv4aSigner().presign(originalRequest, options);\n        }\n        return this.sigv4Signer.presign(originalRequest, options);\n    }\n    getSigv4aSigner() {\n        if (!this.sigv4aSigner) {\n            let CrtSignerV4;\n            try {\n                CrtSignerV4 = typeof require === \"function\" && require(\"@aws-sdk/signature-v4-crt\").CrtSignerV4;\n                if (typeof CrtSignerV4 !== \"function\")\n                    throw new Error();\n            }\n            catch (e) {\n                e.message =\n                    `${e.message}\\nPlease check if you have installed \"@aws-sdk/signature-v4-crt\" package explicitly. \\n` +\n                        \"For more information please go to \" +\n                        \"https://github.com/aws/aws-sdk-js-v3#functionality-requiring-aws-common-runtime-crt\";\n                throw e;\n            }\n            this.sigv4aSigner = new CrtSignerV4({\n                ...this.signerOptions,\n                signingAlgorithm: 1,\n            });\n        }\n        return this.sigv4aSigner;\n    }\n}\nexports.SignatureV4MultiRegion = SignatureV4MultiRegion;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./SignatureV4MultiRegion\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnsupportedGrantTypeException = exports.UnauthorizedClientException = exports.SlowDownException = exports.SSOOIDCClient = exports.InvalidScopeException = exports.InvalidRequestException = exports.InvalidClientException = exports.InternalServerException = exports.ExpiredTokenException = exports.CreateTokenCommand = exports.AuthorizationPendingException = exports.AccessDeniedException = void 0;\nconst middleware_host_header_1 = require(\"@aws-sdk/middleware-host-header\");\nconst middleware_logger_1 = require(\"@aws-sdk/middleware-logger\");\nconst middleware_recursion_detection_1 = require(\"@aws-sdk/middleware-recursion-detection\");\nconst middleware_user_agent_1 = require(\"@aws-sdk/middleware-user-agent\");\nconst config_resolver_1 = require(\"@smithy/config-resolver\");\nconst middleware_content_length_1 = require(\"@smithy/middleware-content-length\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_retry_1 = require(\"@smithy/middleware-retry\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nvar resolveClientEndpointParameters = (options) => {\n    var _a, _b;\n    return {\n        ...options,\n        useDualstackEndpoint: (_a = options.useDualstackEndpoint) !== null && _a !== void 0 ? _a : false,\n        useFipsEndpoint: (_b = options.useFipsEndpoint) !== null && _b !== void 0 ? _b : false,\n        defaultSigningName: \"awsssooidc\"\n    };\n};\nvar package_default = { version: \"3.387.0\" };\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst config_resolver_2 = require(\"@smithy/config-resolver\");\nconst hash_node_1 = require(\"@smithy/hash-node\");\nconst middleware_retry_2 = require(\"@smithy/middleware-retry\");\nconst node_config_provider_1 = require(\"@smithy/node-config-provider\");\nconst node_http_handler_1 = require(\"@smithy/node-http-handler\");\nconst util_body_length_node_1 = require(\"@smithy/util-body-length-node\");\nconst util_retry_1 = require(\"@smithy/util-retry\");\nconst smithy_client_2 = require(\"@smithy/smithy-client\");\nconst url_parser_1 = require(\"@smithy/url-parser\");\nconst util_base64_1 = require(\"@smithy/util-base64\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst util_endpoints_1 = require(\"@aws-sdk/util-endpoints\");\nvar p = \"required\";\nvar q = \"fn\";\nvar r = \"argv\";\nvar s = \"ref\";\nvar a = \"PartitionResult\";\nvar b = \"tree\";\nvar c = \"error\";\nvar d = \"endpoint\";\nvar e = { [p]: false, \"type\": \"String\" };\nvar f = { [p]: true, \"default\": false, \"type\": \"Boolean\" };\nvar g = { [s]: \"Endpoint\" };\nvar h = { [q]: \"booleanEquals\", [r]: [{ [s]: \"UseFIPS\" }, true] };\nvar i = { [q]: \"booleanEquals\", [r]: [{ [s]: \"UseDualStack\" }, true] };\nvar j = {};\nvar k = { [q]: \"booleanEquals\", [r]: [true, { [q]: \"getAttr\", [r]: [{ [s]: a }, \"supportsFIPS\"] }] };\nvar l = { [q]: \"booleanEquals\", [r]: [true, { [q]: \"getAttr\", [r]: [{ [s]: a }, \"supportsDualStack\"] }] };\nvar m = [g];\nvar n = [h];\nvar o = [i];\nvar _data = { version: \"1.0\", parameters: { Region: e, UseDualStack: f, UseFIPS: f, Endpoint: e }, rules: [{ conditions: [{ [q]: \"aws.partition\", [r]: [{ [s]: \"Region\" }], assign: a }], type: b, rules: [{ conditions: [{ [q]: \"isSet\", [r]: m }, { [q]: \"parseURL\", [r]: m, assign: \"url\" }], type: b, rules: [{ conditions: n, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: c }, { type: b, rules: [{ conditions: o, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: c }, { endpoint: { url: g, properties: j, headers: j }, type: d }] }] }, { conditions: [h, i], type: b, rules: [{ conditions: [k, l], type: b, rules: [{ endpoint: { url: \"https://oidc-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: j, headers: j }, type: d }] }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: c }] }, { conditions: n, type: b, rules: [{ conditions: [k], type: b, rules: [{ type: b, rules: [{ endpoint: { url: \"https://oidc-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: j, headers: j }, type: d }] }] }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: c }] }, { conditions: o, type: b, rules: [{ conditions: [l], type: b, rules: [{ endpoint: { url: \"https://oidc.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: j, headers: j }, type: d }] }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: c }] }, { endpoint: { url: \"https://oidc.{Region}.{PartitionResult#dnsSuffix}\", properties: j, headers: j }, type: d }] }] };\nvar ruleSet = _data;\nvar defaultEndpointResolver = (endpointParams, context = {}) => {\n    return (0, util_endpoints_1.resolveEndpoint)(ruleSet, {\n        endpointParams,\n        logger: context.logger\n    });\n};\nvar getRuntimeConfig = (config) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    return ({\n        apiVersion: \"2019-06-10\",\n        base64Decoder: (_a = config === null || config === void 0 ? void 0 : config.base64Decoder) !== null && _a !== void 0 ? _a : util_base64_1.fromBase64,\n        base64Encoder: (_b = config === null || config === void 0 ? void 0 : config.base64Encoder) !== null && _b !== void 0 ? _b : util_base64_1.toBase64,\n        disableHostPrefix: (_c = config === null || config === void 0 ? void 0 : config.disableHostPrefix) !== null && _c !== void 0 ? _c : false,\n        endpointProvider: (_d = config === null || config === void 0 ? void 0 : config.endpointProvider) !== null && _d !== void 0 ? _d : defaultEndpointResolver,\n        logger: (_e = config === null || config === void 0 ? void 0 : config.logger) !== null && _e !== void 0 ? _e : new smithy_client_2.NoOpLogger(),\n        serviceId: (_f = config === null || config === void 0 ? void 0 : config.serviceId) !== null && _f !== void 0 ? _f : \"SSO OIDC\",\n        urlParser: (_g = config === null || config === void 0 ? void 0 : config.urlParser) !== null && _g !== void 0 ? _g : url_parser_1.parseUrl,\n        utf8Decoder: (_h = config === null || config === void 0 ? void 0 : config.utf8Decoder) !== null && _h !== void 0 ? _h : util_utf8_1.fromUtf8,\n        utf8Encoder: (_j = config === null || config === void 0 ? void 0 : config.utf8Encoder) !== null && _j !== void 0 ? _j : util_utf8_1.toUtf8\n    });\n};\nconst smithy_client_3 = require(\"@smithy/smithy-client\");\nconst util_defaults_mode_node_1 = require(\"@smithy/util-defaults-mode-node\");\nconst smithy_client_4 = require(\"@smithy/smithy-client\");\nvar getRuntimeConfig2 = (config) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    (0, smithy_client_4.emitWarningIfUnsupportedVersion)(process.version);\n    const defaultsMode = (0, util_defaults_mode_node_1.resolveDefaultsModeConfig)(config);\n    const defaultConfigProvider = () => defaultsMode().then(smithy_client_3.loadConfigsForDefaultMode);\n    const clientSharedValues = getRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: (_a = config === null || config === void 0 ? void 0 : config.bodyLengthChecker) !== null && _a !== void 0 ? _a : util_body_length_node_1.calculateBodyLength,\n        defaultUserAgentProvider: (_b = config === null || config === void 0 ? void 0 : config.defaultUserAgentProvider) !== null && _b !== void 0 ? _b : (0, util_user_agent_node_1.defaultUserAgent)({ serviceId: clientSharedValues.serviceId, clientVersion: package_default.version }),\n        maxAttempts: (_c = config === null || config === void 0 ? void 0 : config.maxAttempts) !== null && _c !== void 0 ? _c : (0, node_config_provider_1.loadConfig)(middleware_retry_2.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: (_d = config === null || config === void 0 ? void 0 : config.region) !== null && _d !== void 0 ? _d : (0, node_config_provider_1.loadConfig)(config_resolver_2.NODE_REGION_CONFIG_OPTIONS, config_resolver_2.NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: (_e = config === null || config === void 0 ? void 0 : config.requestHandler) !== null && _e !== void 0 ? _e : new node_http_handler_1.NodeHttpHandler(defaultConfigProvider),\n        retryMode: (_f = config === null || config === void 0 ? void 0 : config.retryMode) !== null && _f !== void 0 ? _f : (0, node_config_provider_1.loadConfig)({\n            ...middleware_retry_2.NODE_RETRY_MODE_CONFIG_OPTIONS,\n            default: async () => (await defaultConfigProvider()).retryMode || util_retry_1.DEFAULT_RETRY_MODE\n        }),\n        sha256: (_g = config === null || config === void 0 ? void 0 : config.sha256) !== null && _g !== void 0 ? _g : hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: (_h = config === null || config === void 0 ? void 0 : config.streamCollector) !== null && _h !== void 0 ? _h : node_http_handler_1.streamCollector,\n        useDualstackEndpoint: (_j = config === null || config === void 0 ? void 0 : config.useDualstackEndpoint) !== null && _j !== void 0 ? _j : (0, node_config_provider_1.loadConfig)(config_resolver_2.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: (_k = config === null || config === void 0 ? void 0 : config.useFipsEndpoint) !== null && _k !== void 0 ? _k : (0, node_config_provider_1.loadConfig)(config_resolver_2.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS)\n    };\n};\nvar SSOOIDCClient = class extends smithy_client_1.Client {\n    constructor(...[configuration]) {\n        const _config_0 = getRuntimeConfig2(configuration || {});\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = (0, config_resolver_1.resolveRegionConfig)(_config_1);\n        const _config_3 = (0, middleware_endpoint_1.resolveEndpointConfig)(_config_2);\n        const _config_4 = (0, middleware_retry_1.resolveRetryConfig)(_config_3);\n        const _config_5 = (0, middleware_host_header_1.resolveHostHeaderConfig)(_config_4);\n        const _config_6 = (0, middleware_user_agent_1.resolveUserAgentConfig)(_config_5);\n        super(_config_6);\n        this.config = _config_6;\n        this.middlewareStack.use((0, middleware_retry_1.getRetryPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_content_length_1.getContentLengthPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_host_header_1.getHostHeaderPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_logger_1.getLoggerPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_recursion_detection_1.getRecursionDetectionPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_user_agent_1.getUserAgentPlugin)(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n};\nexports.SSOOIDCClient = SSOOIDCClient;\nconst smithy_client_5 = require(\"@smithy/smithy-client\");\nconst middleware_endpoint_2 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst smithy_client_6 = require(\"@smithy/smithy-client\");\nconst protocol_http_1 = require(\"@smithy/protocol-http\");\nconst smithy_client_7 = require(\"@smithy/smithy-client\");\nconst smithy_client_8 = require(\"@smithy/smithy-client\");\nvar SSOOIDCServiceException = class _SSOOIDCServiceException extends smithy_client_8.ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, _SSOOIDCServiceException.prototype);\n    }\n};\nvar AccessDeniedException = class _AccessDeniedException extends SSOOIDCServiceException {\n    constructor(opts) {\n        super({\n            name: \"AccessDeniedException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"AccessDeniedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _AccessDeniedException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n};\nexports.AccessDeniedException = AccessDeniedException;\nvar AuthorizationPendingException = class _AuthorizationPendingException extends SSOOIDCServiceException {\n    constructor(opts) {\n        super({\n            name: \"AuthorizationPendingException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"AuthorizationPendingException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _AuthorizationPendingException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n};\nexports.AuthorizationPendingException = AuthorizationPendingException;\nvar ExpiredTokenException = class _ExpiredTokenException extends SSOOIDCServiceException {\n    constructor(opts) {\n        super({\n            name: \"ExpiredTokenException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"ExpiredTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _ExpiredTokenException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n};\nexports.ExpiredTokenException = ExpiredTokenException;\nvar InternalServerException = class _InternalServerException extends SSOOIDCServiceException {\n    constructor(opts) {\n        super({\n            name: \"InternalServerException\",\n            $fault: \"server\",\n            ...opts\n        });\n        this.name = \"InternalServerException\";\n        this.$fault = \"server\";\n        Object.setPrototypeOf(this, _InternalServerException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n};\nexports.InternalServerException = InternalServerException;\nvar InvalidClientException = class _InvalidClientException extends SSOOIDCServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidClientException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidClientException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _InvalidClientException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n};\nexports.InvalidClientException = InvalidClientException;\nvar InvalidGrantException = class _InvalidGrantException extends SSOOIDCServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidGrantException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidGrantException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _InvalidGrantException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n};\nvar InvalidRequestException = class _InvalidRequestException extends SSOOIDCServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidRequestException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidRequestException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _InvalidRequestException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n};\nexports.InvalidRequestException = InvalidRequestException;\nvar InvalidScopeException = class _InvalidScopeException extends SSOOIDCServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidScopeException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidScopeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _InvalidScopeException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n};\nexports.InvalidScopeException = InvalidScopeException;\nvar SlowDownException = class _SlowDownException extends SSOOIDCServiceException {\n    constructor(opts) {\n        super({\n            name: \"SlowDownException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"SlowDownException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _SlowDownException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n};\nexports.SlowDownException = SlowDownException;\nvar UnauthorizedClientException = class _UnauthorizedClientException extends SSOOIDCServiceException {\n    constructor(opts) {\n        super({\n            name: \"UnauthorizedClientException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"UnauthorizedClientException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _UnauthorizedClientException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n};\nexports.UnauthorizedClientException = UnauthorizedClientException;\nvar UnsupportedGrantTypeException = class _UnsupportedGrantTypeException extends SSOOIDCServiceException {\n    constructor(opts) {\n        super({\n            name: \"UnsupportedGrantTypeException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"UnsupportedGrantTypeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _UnsupportedGrantTypeException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n};\nexports.UnsupportedGrantTypeException = UnsupportedGrantTypeException;\nvar InvalidClientMetadataException = class _InvalidClientMetadataException extends SSOOIDCServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidClientMetadataException\",\n            $fault: \"client\",\n            ...opts\n        });\n        this.name = \"InvalidClientMetadataException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, _InvalidClientMetadataException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n};\nvar se_CreateTokenCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\"\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}/token`;\n    let body;\n    body = JSON.stringify((0, smithy_client_7.take)(input, {\n        clientId: [],\n        clientSecret: [],\n        code: [],\n        deviceCode: [],\n        grantType: [],\n        redirectUri: [],\n        refreshToken: [],\n        scope: (_) => (0, smithy_client_7._json)(_)\n    }));\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body\n    });\n};\nvar se_RegisterClientCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\"\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}/client/register`;\n    let body;\n    body = JSON.stringify((0, smithy_client_7.take)(input, {\n        clientName: [],\n        clientType: [],\n        scopes: (_) => (0, smithy_client_7._json)(_)\n    }));\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body\n    });\n};\nvar se_StartDeviceAuthorizationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\"\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}/device_authorization`;\n    let body;\n    body = JSON.stringify((0, smithy_client_7.take)(input, {\n        clientId: [],\n        clientSecret: [],\n        startUrl: []\n    }));\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body\n    });\n};\nvar de_CreateTokenCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CreateTokenCommandError(output, context);\n    }\n    const contents = (0, smithy_client_7.map)({\n        $metadata: deserializeMetadata(output)\n    });\n    const data = (0, smithy_client_7.expectNonNull)((0, smithy_client_7.expectObject)(await parseBody(output.body, context)), \"body\");\n    const doc = (0, smithy_client_7.take)(data, {\n        accessToken: smithy_client_7.expectString,\n        expiresIn: smithy_client_7.expectInt32,\n        idToken: smithy_client_7.expectString,\n        refreshToken: smithy_client_7.expectString,\n        tokenType: smithy_client_7.expectString\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nvar de_CreateTokenCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDeniedException\":\n        case \"com.amazonaws.ssooidc#AccessDeniedException\":\n            throw await de_AccessDeniedExceptionRes(parsedOutput, context);\n        case \"AuthorizationPendingException\":\n        case \"com.amazonaws.ssooidc#AuthorizationPendingException\":\n            throw await de_AuthorizationPendingExceptionRes(parsedOutput, context);\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.ssooidc#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"InternalServerException\":\n        case \"com.amazonaws.ssooidc#InternalServerException\":\n            throw await de_InternalServerExceptionRes(parsedOutput, context);\n        case \"InvalidClientException\":\n        case \"com.amazonaws.ssooidc#InvalidClientException\":\n            throw await de_InvalidClientExceptionRes(parsedOutput, context);\n        case \"InvalidGrantException\":\n        case \"com.amazonaws.ssooidc#InvalidGrantException\":\n            throw await de_InvalidGrantExceptionRes(parsedOutput, context);\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.ssooidc#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"InvalidScopeException\":\n        case \"com.amazonaws.ssooidc#InvalidScopeException\":\n            throw await de_InvalidScopeExceptionRes(parsedOutput, context);\n        case \"SlowDownException\":\n        case \"com.amazonaws.ssooidc#SlowDownException\":\n            throw await de_SlowDownExceptionRes(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.ssooidc#UnauthorizedClientException\":\n            throw await de_UnauthorizedClientExceptionRes(parsedOutput, context);\n        case \"UnsupportedGrantTypeException\":\n        case \"com.amazonaws.ssooidc#UnsupportedGrantTypeException\":\n            throw await de_UnsupportedGrantTypeExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nvar de_RegisterClientCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_RegisterClientCommandError(output, context);\n    }\n    const contents = (0, smithy_client_7.map)({\n        $metadata: deserializeMetadata(output)\n    });\n    const data = (0, smithy_client_7.expectNonNull)((0, smithy_client_7.expectObject)(await parseBody(output.body, context)), \"body\");\n    const doc = (0, smithy_client_7.take)(data, {\n        authorizationEndpoint: smithy_client_7.expectString,\n        clientId: smithy_client_7.expectString,\n        clientIdIssuedAt: smithy_client_7.expectLong,\n        clientSecret: smithy_client_7.expectString,\n        clientSecretExpiresAt: smithy_client_7.expectLong,\n        tokenEndpoint: smithy_client_7.expectString\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nvar de_RegisterClientCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerException\":\n        case \"com.amazonaws.ssooidc#InternalServerException\":\n            throw await de_InternalServerExceptionRes(parsedOutput, context);\n        case \"InvalidClientMetadataException\":\n        case \"com.amazonaws.ssooidc#InvalidClientMetadataException\":\n            throw await de_InvalidClientMetadataExceptionRes(parsedOutput, context);\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.ssooidc#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"InvalidScopeException\":\n        case \"com.amazonaws.ssooidc#InvalidScopeException\":\n            throw await de_InvalidScopeExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nvar de_StartDeviceAuthorizationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_StartDeviceAuthorizationCommandError(output, context);\n    }\n    const contents = (0, smithy_client_7.map)({\n        $metadata: deserializeMetadata(output)\n    });\n    const data = (0, smithy_client_7.expectNonNull)((0, smithy_client_7.expectObject)(await parseBody(output.body, context)), \"body\");\n    const doc = (0, smithy_client_7.take)(data, {\n        deviceCode: smithy_client_7.expectString,\n        expiresIn: smithy_client_7.expectInt32,\n        interval: smithy_client_7.expectInt32,\n        userCode: smithy_client_7.expectString,\n        verificationUri: smithy_client_7.expectString,\n        verificationUriComplete: smithy_client_7.expectString\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nvar de_StartDeviceAuthorizationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context)\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerException\":\n        case \"com.amazonaws.ssooidc#InternalServerException\":\n            throw await de_InternalServerExceptionRes(parsedOutput, context);\n        case \"InvalidClientException\":\n        case \"com.amazonaws.ssooidc#InvalidClientException\":\n            throw await de_InvalidClientExceptionRes(parsedOutput, context);\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.ssooidc#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"SlowDownException\":\n        case \"com.amazonaws.ssooidc#SlowDownException\":\n            throw await de_SlowDownExceptionRes(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.ssooidc#UnauthorizedClientException\":\n            throw await de_UnauthorizedClientExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode\n            });\n    }\n};\nvar throwDefaultError = (0, smithy_client_7.withBaseException)(SSOOIDCServiceException);\nvar de_AccessDeniedExceptionRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_7.map)({});\n    const data = parsedOutput.body;\n    const doc = (0, smithy_client_7.take)(data, {\n        error: smithy_client_7.expectString,\n        error_description: smithy_client_7.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new AccessDeniedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0, smithy_client_7.decorateServiceException)(exception, parsedOutput.body);\n};\nvar de_AuthorizationPendingExceptionRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_7.map)({});\n    const data = parsedOutput.body;\n    const doc = (0, smithy_client_7.take)(data, {\n        error: smithy_client_7.expectString,\n        error_description: smithy_client_7.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new AuthorizationPendingException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0, smithy_client_7.decorateServiceException)(exception, parsedOutput.body);\n};\nvar de_ExpiredTokenExceptionRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_7.map)({});\n    const data = parsedOutput.body;\n    const doc = (0, smithy_client_7.take)(data, {\n        error: smithy_client_7.expectString,\n        error_description: smithy_client_7.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new ExpiredTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0, smithy_client_7.decorateServiceException)(exception, parsedOutput.body);\n};\nvar de_InternalServerExceptionRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_7.map)({});\n    const data = parsedOutput.body;\n    const doc = (0, smithy_client_7.take)(data, {\n        error: smithy_client_7.expectString,\n        error_description: smithy_client_7.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new InternalServerException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0, smithy_client_7.decorateServiceException)(exception, parsedOutput.body);\n};\nvar de_InvalidClientExceptionRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_7.map)({});\n    const data = parsedOutput.body;\n    const doc = (0, smithy_client_7.take)(data, {\n        error: smithy_client_7.expectString,\n        error_description: smithy_client_7.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidClientException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0, smithy_client_7.decorateServiceException)(exception, parsedOutput.body);\n};\nvar de_InvalidClientMetadataExceptionRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_7.map)({});\n    const data = parsedOutput.body;\n    const doc = (0, smithy_client_7.take)(data, {\n        error: smithy_client_7.expectString,\n        error_description: smithy_client_7.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidClientMetadataException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0, smithy_client_7.decorateServiceException)(exception, parsedOutput.body);\n};\nvar de_InvalidGrantExceptionRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_7.map)({});\n    const data = parsedOutput.body;\n    const doc = (0, smithy_client_7.take)(data, {\n        error: smithy_client_7.expectString,\n        error_description: smithy_client_7.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidGrantException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0, smithy_client_7.decorateServiceException)(exception, parsedOutput.body);\n};\nvar de_InvalidRequestExceptionRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_7.map)({});\n    const data = parsedOutput.body;\n    const doc = (0, smithy_client_7.take)(data, {\n        error: smithy_client_7.expectString,\n        error_description: smithy_client_7.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0, smithy_client_7.decorateServiceException)(exception, parsedOutput.body);\n};\nvar de_InvalidScopeExceptionRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_7.map)({});\n    const data = parsedOutput.body;\n    const doc = (0, smithy_client_7.take)(data, {\n        error: smithy_client_7.expectString,\n        error_description: smithy_client_7.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidScopeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0, smithy_client_7.decorateServiceException)(exception, parsedOutput.body);\n};\nvar de_SlowDownExceptionRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_7.map)({});\n    const data = parsedOutput.body;\n    const doc = (0, smithy_client_7.take)(data, {\n        error: smithy_client_7.expectString,\n        error_description: smithy_client_7.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new SlowDownException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0, smithy_client_7.decorateServiceException)(exception, parsedOutput.body);\n};\nvar de_UnauthorizedClientExceptionRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_7.map)({});\n    const data = parsedOutput.body;\n    const doc = (0, smithy_client_7.take)(data, {\n        error: smithy_client_7.expectString,\n        error_description: smithy_client_7.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new UnauthorizedClientException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0, smithy_client_7.decorateServiceException)(exception, parsedOutput.body);\n};\nvar de_UnsupportedGrantTypeExceptionRes = async (parsedOutput, context) => {\n    const contents = (0, smithy_client_7.map)({});\n    const data = parsedOutput.body;\n    const doc = (0, smithy_client_7.take)(data, {\n        error: smithy_client_7.expectString,\n        error_description: smithy_client_7.expectString\n    });\n    Object.assign(contents, doc);\n    const exception = new UnsupportedGrantTypeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents\n    });\n    return (0, smithy_client_7.decorateServiceException)(exception, parsedOutput.body);\n};\nvar deserializeMetadata = (output) => {\n    var _a, _b;\n    return ({\n        httpStatusCode: output.statusCode,\n        requestId: (_b = (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"]) !== null && _b !== void 0 ? _b : output.headers[\"x-amz-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"]\n    });\n};\nvar collectBodyString = (streamBody, context) => (0, smithy_client_7.collectBody)(streamBody, context).then((body) => context.utf8Encoder(body));\nvar parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        return JSON.parse(encoded);\n    }\n    return {};\n});\nvar parseErrorBody = async (errorBody, context) => {\n    var _a;\n    const value = await parseBody(errorBody, context);\n    value.message = (_a = value.message) !== null && _a !== void 0 ? _a : value.Message;\n    return value;\n};\nvar loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k2) => k2.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== void 0) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== void 0) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== void 0) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\nvar CreateTokenCommand = class _CreateTokenCommand extends smithy_client_6.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" }\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_2.getEndpointPlugin)(configuration, _CreateTokenCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOOIDCClient\";\n        const commandName = \"CreateTokenCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return se_CreateTokenCommand(input, context);\n    }\n    deserialize(output, context) {\n        return de_CreateTokenCommand(output, context);\n    }\n};\nexports.CreateTokenCommand = CreateTokenCommand;\nconst middleware_endpoint_3 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_2 = require(\"@smithy/middleware-serde\");\nconst smithy_client_9 = require(\"@smithy/smithy-client\");\nvar RegisterClientCommand = class _RegisterClientCommand extends smithy_client_9.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" }\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_2.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_3.getEndpointPlugin)(configuration, _RegisterClientCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOOIDCClient\";\n        const commandName = \"RegisterClientCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return se_RegisterClientCommand(input, context);\n    }\n    deserialize(output, context) {\n        return de_RegisterClientCommand(output, context);\n    }\n};\nconst middleware_endpoint_4 = require(\"@smithy/middleware-endpoint\");\nconst middleware_serde_3 = require(\"@smithy/middleware-serde\");\nconst smithy_client_10 = require(\"@smithy/smithy-client\");\nvar StartDeviceAuthorizationCommand = class _StartDeviceAuthorizationCommand extends smithy_client_10.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" }\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_3.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_endpoint_4.getEndpointPlugin)(configuration, _StartDeviceAuthorizationCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOOIDCClient\";\n        const commandName = \"StartDeviceAuthorizationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return se_StartDeviceAuthorizationCommand(input, context);\n    }\n    deserialize(output, context) {\n        return de_StartDeviceAuthorizationCommand(output, context);\n    }\n};\nvar commands = {\n    CreateTokenCommand,\n    RegisterClientCommand,\n    StartDeviceAuthorizationCommand\n};\nvar SSOOIDC = class extends SSOOIDCClient {\n};\n(0, smithy_client_5.createAggregatedClient)(commands, SSOOIDC);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.REFRESH_MESSAGE = exports.EXPIRE_WINDOW_MS = void 0;\nexports.EXPIRE_WINDOW_MS = 5 * 60 * 1000;\nexports.REFRESH_MESSAGE = `To refresh this SSO session run 'aws sso login' with the corresponding profile.`;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromSso = void 0;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst shared_ini_file_loader_1 = require(\"@smithy/shared-ini-file-loader\");\nconst constants_1 = require(\"./constants\");\nconst getNewSsoOidcToken_1 = require(\"./getNewSsoOidcToken\");\nconst validateTokenExpiry_1 = require(\"./validateTokenExpiry\");\nconst validateTokenKey_1 = require(\"./validateTokenKey\");\nconst writeSSOTokenToFile_1 = require(\"./writeSSOTokenToFile\");\nconst lastRefreshAttemptTime = new Date(0);\nconst fromSso = (init = {}) => async () => {\n    const profiles = await (0, shared_ini_file_loader_1.parseKnownFiles)(init);\n    const profileName = (0, shared_ini_file_loader_1.getProfileName)(init);\n    const profile = profiles[profileName];\n    if (!profile) {\n        throw new property_provider_1.TokenProviderError(`Profile '${profileName}' could not be found in shared credentials file.`, false);\n    }\n    else if (!profile[\"sso_session\"]) {\n        throw new property_provider_1.TokenProviderError(`Profile '${profileName}' is missing required property 'sso_session'.`);\n    }\n    const ssoSessionName = profile[\"sso_session\"];\n    const ssoSessions = await (0, shared_ini_file_loader_1.loadSsoSessionData)(init);\n    const ssoSession = ssoSessions[ssoSessionName];\n    if (!ssoSession) {\n        throw new property_provider_1.TokenProviderError(`Sso session '${ssoSessionName}' could not be found in shared credentials file.`, false);\n    }\n    for (const ssoSessionRequiredKey of [\"sso_start_url\", \"sso_region\"]) {\n        if (!ssoSession[ssoSessionRequiredKey]) {\n            throw new property_provider_1.TokenProviderError(`Sso session '${ssoSessionName}' is missing required property '${ssoSessionRequiredKey}'.`, false);\n        }\n    }\n    const ssoStartUrl = ssoSession[\"sso_start_url\"];\n    const ssoRegion = ssoSession[\"sso_region\"];\n    let ssoToken;\n    try {\n        ssoToken = await (0, shared_ini_file_loader_1.getSSOTokenFromFile)(ssoSessionName);\n    }\n    catch (e) {\n        throw new property_provider_1.TokenProviderError(`The SSO session token associated with profile=${profileName} was not found or is invalid. ${constants_1.REFRESH_MESSAGE}`, false);\n    }\n    (0, validateTokenKey_1.validateTokenKey)(\"accessToken\", ssoToken.accessToken);\n    (0, validateTokenKey_1.validateTokenKey)(\"expiresAt\", ssoToken.expiresAt);\n    const { accessToken, expiresAt } = ssoToken;\n    const existingToken = { token: accessToken, expiration: new Date(expiresAt) };\n    if (existingToken.expiration.getTime() - Date.now() > constants_1.EXPIRE_WINDOW_MS) {\n        return existingToken;\n    }\n    if (Date.now() - lastRefreshAttemptTime.getTime() < 30 * 1000) {\n        (0, validateTokenExpiry_1.validateTokenExpiry)(existingToken);\n        return existingToken;\n    }\n    (0, validateTokenKey_1.validateTokenKey)(\"clientId\", ssoToken.clientId, true);\n    (0, validateTokenKey_1.validateTokenKey)(\"clientSecret\", ssoToken.clientSecret, true);\n    (0, validateTokenKey_1.validateTokenKey)(\"refreshToken\", ssoToken.refreshToken, true);\n    try {\n        lastRefreshAttemptTime.setTime(Date.now());\n        const newSsoOidcToken = await (0, getNewSsoOidcToken_1.getNewSsoOidcToken)(ssoToken, ssoRegion);\n        (0, validateTokenKey_1.validateTokenKey)(\"accessToken\", newSsoOidcToken.accessToken);\n        (0, validateTokenKey_1.validateTokenKey)(\"expiresIn\", newSsoOidcToken.expiresIn);\n        const newTokenExpiration = new Date(Date.now() + newSsoOidcToken.expiresIn * 1000);\n        try {\n            await (0, writeSSOTokenToFile_1.writeSSOTokenToFile)(ssoSessionName, {\n                ...ssoToken,\n                accessToken: newSsoOidcToken.accessToken,\n                expiresAt: newTokenExpiration.toISOString(),\n                refreshToken: newSsoOidcToken.refreshToken,\n            });\n        }\n        catch (error) {\n        }\n        return {\n            token: newSsoOidcToken.accessToken,\n            expiration: newTokenExpiration,\n        };\n    }\n    catch (error) {\n        (0, validateTokenExpiry_1.validateTokenExpiry)(existingToken);\n        return existingToken;\n    }\n};\nexports.fromSso = fromSso;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromStatic = void 0;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst fromStatic = ({ token }) => async () => {\n    if (!token || !token.token) {\n        throw new property_provider_1.TokenProviderError(`Please pass a valid token to fromStatic`, false);\n    }\n    return token;\n};\nexports.fromStatic = fromStatic;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNewSsoOidcToken = void 0;\nconst client_sso_oidc_node_1 = require(\"./bundle/client-sso-oidc-node\");\nconst getSsoOidcClient_1 = require(\"./getSsoOidcClient\");\nconst getNewSsoOidcToken = (ssoToken, ssoRegion) => {\n    const ssoOidcClient = (0, getSsoOidcClient_1.getSsoOidcClient)(ssoRegion);\n    return ssoOidcClient.send(new client_sso_oidc_node_1.CreateTokenCommand({\n        clientId: ssoToken.clientId,\n        clientSecret: ssoToken.clientSecret,\n        refreshToken: ssoToken.refreshToken,\n        grantType: \"refresh_token\",\n    }));\n};\nexports.getNewSsoOidcToken = getNewSsoOidcToken;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSsoOidcClient = void 0;\nconst client_sso_oidc_node_1 = require(\"./bundle/client-sso-oidc-node\");\nconst ssoOidcClientsHash = {};\nconst getSsoOidcClient = (ssoRegion) => {\n    if (ssoOidcClientsHash[ssoRegion]) {\n        return ssoOidcClientsHash[ssoRegion];\n    }\n    const ssoOidcClient = new client_sso_oidc_node_1.SSOOIDCClient({ region: ssoRegion });\n    ssoOidcClientsHash[ssoRegion] = ssoOidcClient;\n    return ssoOidcClient;\n};\nexports.getSsoOidcClient = getSsoOidcClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./bundle/client-sso-oidc-node\"), exports);\ntslib_1.__exportStar(require(\"./fromSso\"), exports);\ntslib_1.__exportStar(require(\"./fromStatic\"), exports);\ntslib_1.__exportStar(require(\"./nodeProvider\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.nodeProvider = void 0;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst fromSso_1 = require(\"./fromSso\");\nconst nodeProvider = (init = {}) => (0, property_provider_1.memoize)((0, property_provider_1.chain)((0, fromSso_1.fromSso)(init), async () => {\n    throw new property_provider_1.TokenProviderError(\"Could not load token from any providers\", false);\n}), (token) => token.expiration !== undefined && token.expiration.getTime() - Date.now() < 300000, (token) => token.expiration !== undefined);\nexports.nodeProvider = nodeProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateTokenExpiry = void 0;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst constants_1 = require(\"./constants\");\nconst validateTokenExpiry = (token) => {\n    if (token.expiration && token.expiration.getTime() < Date.now()) {\n        throw new property_provider_1.TokenProviderError(`Token is expired. ${constants_1.REFRESH_MESSAGE}`, false);\n    }\n};\nexports.validateTokenExpiry = validateTokenExpiry;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateTokenKey = void 0;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst constants_1 = require(\"./constants\");\nconst validateTokenKey = (key, value, forRefresh = false) => {\n    if (typeof value === \"undefined\") {\n        throw new property_provider_1.TokenProviderError(`Value not present for '${key}' in SSO Token${forRefresh ? \". Cannot refresh\" : \"\"}. ${constants_1.REFRESH_MESSAGE}`, false);\n    }\n};\nexports.validateTokenKey = validateTokenKey;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.writeSSOTokenToFile = void 0;\nconst shared_ini_file_loader_1 = require(\"@smithy/shared-ini-file-loader\");\nconst fs_1 = require(\"fs\");\nconst { writeFile } = fs_1.promises;\nconst writeSSOTokenToFile = (id, ssoToken) => {\n    const tokenFilepath = (0, shared_ini_file_loader_1.getSSOTokenFilepath)(id);\n    const tokenString = JSON.stringify(ssoToken, null, 2);\n    return writeFile(tokenFilepath, tokenString);\n};\nexports.writeSSOTokenToFile = writeSSOTokenToFile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpAuthLocation = void 0;\nvar types_1 = require(\"@smithy/types\");\nObject.defineProperty(exports, \"HttpAuthLocation\", { enumerable: true, get: function () { return types_1.HttpAuthLocation; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HostAddressType = void 0;\nvar HostAddressType;\n(function (HostAddressType) {\n    HostAddressType[\"AAAA\"] = \"AAAA\";\n    HostAddressType[\"A\"] = \"A\";\n})(HostAddressType = exports.HostAddressType || (exports.HostAddressType = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EndpointURLScheme = void 0;\nvar types_1 = require(\"@smithy/types\");\nObject.defineProperty(exports, \"EndpointURLScheme\", { enumerable: true, get: function () { return types_1.EndpointURLScheme; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./AnonymousIdentity\"), exports);\ntslib_1.__exportStar(require(\"./AwsCredentialIdentity\"), exports);\ntslib_1.__exportStar(require(\"./Identity\"), exports);\ntslib_1.__exportStar(require(\"./LoginIdentity\"), exports);\ntslib_1.__exportStar(require(\"./TokenIdentity\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./abort\"), exports);\ntslib_1.__exportStar(require(\"./auth\"), exports);\ntslib_1.__exportStar(require(\"./blob/blob-types\"), exports);\ntslib_1.__exportStar(require(\"./checksum\"), exports);\ntslib_1.__exportStar(require(\"./client\"), exports);\ntslib_1.__exportStar(require(\"./command\"), exports);\ntslib_1.__exportStar(require(\"./connection\"), exports);\ntslib_1.__exportStar(require(\"./credentials\"), exports);\ntslib_1.__exportStar(require(\"./crypto\"), exports);\ntslib_1.__exportStar(require(\"./dns\"), exports);\ntslib_1.__exportStar(require(\"./encode\"), exports);\ntslib_1.__exportStar(require(\"./endpoint\"), exports);\ntslib_1.__exportStar(require(\"./eventStream\"), exports);\ntslib_1.__exportStar(require(\"./http\"), exports);\ntslib_1.__exportStar(require(\"./identity\"), exports);\ntslib_1.__exportStar(require(\"./logger\"), exports);\ntslib_1.__exportStar(require(\"./middleware\"), exports);\ntslib_1.__exportStar(require(\"./pagination\"), exports);\ntslib_1.__exportStar(require(\"./profile\"), exports);\ntslib_1.__exportStar(require(\"./request\"), exports);\ntslib_1.__exportStar(require(\"./response\"), exports);\ntslib_1.__exportStar(require(\"./retry\"), exports);\ntslib_1.__exportStar(require(\"./serde\"), exports);\ntslib_1.__exportStar(require(\"./shapes\"), exports);\ntslib_1.__exportStar(require(\"./signature\"), exports);\ntslib_1.__exportStar(require(\"./stream\"), exports);\ntslib_1.__exportStar(require(\"./token\"), exports);\ntslib_1.__exportStar(require(\"./transfer\"), exports);\ntslib_1.__exportStar(require(\"./uri\"), exports);\ntslib_1.__exportStar(require(\"./util\"), exports);\ntslib_1.__exportStar(require(\"./waiter\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequestHandlerProtocol = void 0;\nvar types_1 = require(\"@smithy/types\");\nObject.defineProperty(exports, \"RequestHandlerProtocol\", { enumerable: true, get: function () { return types_1.RequestHandlerProtocol; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.build = exports.parse = exports.validate = void 0;\nconst validate = (str) => typeof str === \"string\" && str.indexOf(\"arn:\") === 0 && str.split(\":\").length >= 6;\nexports.validate = validate;\nconst parse = (arn) => {\n    const segments = arn.split(\":\");\n    if (segments.length < 6 || segments[0] !== \"arn\")\n        throw new Error(\"Malformed ARN\");\n    const [, partition, service, region, accountId, ...resource] = segments;\n    return {\n        partition,\n        service,\n        region,\n        accountId,\n        resource: resource.join(\":\"),\n    };\n};\nexports.parse = parse;\nconst build = (arnObject) => {\n    const { partition = \"aws\", service, region, accountId, resource } = arnObject;\n    if ([service, region, accountId, resource].some((segment) => typeof segment !== \"string\")) {\n        throw new Error(\"Input ARN object is invalid\");\n    }\n    return `arn:${partition}:${service}:${region}:${accountId}:${resource}`;\n};\nexports.build = build;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.debugId = void 0;\nexports.debugId = \"endpoints\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./debugId\"), exports);\ntslib_1.__exportStar(require(\"./toDebugString\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toDebugString = void 0;\nfunction toDebugString(input) {\n    if (typeof input !== \"object\" || input == null) {\n        return input;\n    }\n    if (\"ref\" in input) {\n        return `$${toDebugString(input.ref)}`;\n    }\n    if (\"fn\" in input) {\n        return `${input.fn}(${(input.argv || []).map(toDebugString).join(\", \")})`;\n    }\n    return JSON.stringify(input, null, 2);\n}\nexports.toDebugString = toDebugString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./lib/aws/partition\"), exports);\ntslib_1.__exportStar(require(\"./lib/isIpAddress\"), exports);\ntslib_1.__exportStar(require(\"./resolveEndpoint\"), exports);\ntslib_1.__exportStar(require(\"./types\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./isVirtualHostableS3Bucket\"), exports);\ntslib_1.__exportStar(require(\"./parseArn\"), exports);\ntslib_1.__exportStar(require(\"./partition\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isVirtualHostableS3Bucket = void 0;\nconst isIpAddress_1 = require(\"../isIpAddress\");\nconst isValidHostLabel_1 = require(\"../isValidHostLabel\");\nconst isVirtualHostableS3Bucket = (value, allowSubDomains = false) => {\n    if (allowSubDomains) {\n        for (const label of value.split(\".\")) {\n            if (!(0, exports.isVirtualHostableS3Bucket)(label)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (!(0, isValidHostLabel_1.isValidHostLabel)(value)) {\n        return false;\n    }\n    if (value.length < 3 || value.length > 63) {\n        return false;\n    }\n    if (value !== value.toLowerCase()) {\n        return false;\n    }\n    if ((0, isIpAddress_1.isIpAddress)(value)) {\n        return false;\n    }\n    return true;\n};\nexports.isVirtualHostableS3Bucket = isVirtualHostableS3Bucket;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseArn = void 0;\nconst parseArn = (value) => {\n    const segments = value.split(\":\");\n    if (segments.length < 6)\n        return null;\n    const [arn, partition, service, region, accountId, ...resourceId] = segments;\n    if (arn !== \"arn\" || partition === \"\" || service === \"\" || resourceId[0] === \"\")\n        return null;\n    return {\n        partition,\n        service,\n        region,\n        accountId,\n        resourceId: resourceId[0].includes(\"/\") ? resourceId[0].split(\"/\") : resourceId,\n    };\n};\nexports.parseArn = parseArn;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getUserAgentPrefix = exports.useDefaultPartitionInfo = exports.setPartitionInfo = exports.partition = void 0;\nconst tslib_1 = require(\"tslib\");\nconst partitions_json_1 = tslib_1.__importDefault(require(\"./partitions.json\"));\nlet selectedPartitionsInfo = partitions_json_1.default;\nlet selectedUserAgentPrefix = \"\";\nconst partition = (value) => {\n    const { partitions } = selectedPartitionsInfo;\n    for (const partition of partitions) {\n        const { regions, outputs } = partition;\n        for (const [region, regionData] of Object.entries(regions)) {\n            if (region === value) {\n                return {\n                    ...outputs,\n                    ...regionData,\n                };\n            }\n        }\n    }\n    for (const partition of partitions) {\n        const { regionRegex, outputs } = partition;\n        if (new RegExp(regionRegex).test(value)) {\n            return {\n                ...outputs,\n            };\n        }\n    }\n    const DEFAULT_PARTITION = partitions.find((partition) => partition.id === \"aws\");\n    if (!DEFAULT_PARTITION) {\n        throw new Error(\"Provided region was not found in the partition array or regex,\" +\n            \" and default partition with id 'aws' doesn't exist.\");\n    }\n    return {\n        ...DEFAULT_PARTITION.outputs,\n    };\n};\nexports.partition = partition;\nconst setPartitionInfo = (partitionsInfo, userAgentPrefix = \"\") => {\n    selectedPartitionsInfo = partitionsInfo;\n    selectedUserAgentPrefix = userAgentPrefix;\n};\nexports.setPartitionInfo = setPartitionInfo;\nconst useDefaultPartitionInfo = () => {\n    (0, exports.setPartitionInfo)(partitions_json_1.default, \"\");\n};\nexports.useDefaultPartitionInfo = useDefaultPartitionInfo;\nconst getUserAgentPrefix = () => selectedUserAgentPrefix;\nexports.getUserAgentPrefix = getUserAgentPrefix;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.booleanEquals = void 0;\nconst booleanEquals = (value1, value2) => value1 === value2;\nexports.booleanEquals = booleanEquals;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAttr = void 0;\nconst types_1 = require(\"../types\");\nconst getAttrPathList_1 = require(\"./getAttrPathList\");\nconst getAttr = (value, path) => (0, getAttrPathList_1.getAttrPathList)(path).reduce((acc, index) => {\n    if (typeof acc !== \"object\") {\n        throw new types_1.EndpointError(`Index '${index}' in '${path}' not found in '${JSON.stringify(value)}'`);\n    }\n    else if (Array.isArray(acc)) {\n        return acc[parseInt(index)];\n    }\n    return acc[index];\n}, value);\nexports.getAttr = getAttr;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAttrPathList = void 0;\nconst types_1 = require(\"../types\");\nconst getAttrPathList = (path) => {\n    const parts = path.split(\".\");\n    const pathList = [];\n    for (const part of parts) {\n        const squareBracketIndex = part.indexOf(\"[\");\n        if (squareBracketIndex !== -1) {\n            if (part.indexOf(\"]\") !== part.length - 1) {\n                throw new types_1.EndpointError(`Path: '${path}' does not end with ']'`);\n            }\n            const arrayIndex = part.slice(squareBracketIndex + 1, -1);\n            if (Number.isNaN(parseInt(arrayIndex))) {\n                throw new types_1.EndpointError(`Invalid array index: '${arrayIndex}' in path: '${path}'`);\n            }\n            if (squareBracketIndex !== 0) {\n                pathList.push(part.slice(0, squareBracketIndex));\n            }\n            pathList.push(arrayIndex);\n        }\n        else {\n            pathList.push(part);\n        }\n    }\n    return pathList;\n};\nexports.getAttrPathList = getAttrPathList;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.aws = void 0;\nconst tslib_1 = require(\"tslib\");\nexports.aws = tslib_1.__importStar(require(\"./aws\"));\ntslib_1.__exportStar(require(\"./booleanEquals\"), exports);\ntslib_1.__exportStar(require(\"./getAttr\"), exports);\ntslib_1.__exportStar(require(\"./isSet\"), exports);\ntslib_1.__exportStar(require(\"./isValidHostLabel\"), exports);\ntslib_1.__exportStar(require(\"./not\"), exports);\ntslib_1.__exportStar(require(\"./parseURL\"), exports);\ntslib_1.__exportStar(require(\"./stringEquals\"), exports);\ntslib_1.__exportStar(require(\"./substring\"), exports);\ntslib_1.__exportStar(require(\"./uriEncode\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isIpAddress = void 0;\nconst IP_V4_REGEX = new RegExp(`^(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}$`);\nconst isIpAddress = (value) => IP_V4_REGEX.test(value) || (value.startsWith(\"[\") && value.endsWith(\"]\"));\nexports.isIpAddress = isIpAddress;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isSet = void 0;\nconst isSet = (value) => value != null;\nexports.isSet = isSet;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidHostLabel = void 0;\nconst VALID_HOST_LABEL_REGEX = new RegExp(`^(?!.*-$)(?!-)[a-zA-Z0-9-]{1,63}$`);\nconst isValidHostLabel = (value, allowSubDomains = false) => {\n    if (!allowSubDomains) {\n        return VALID_HOST_LABEL_REGEX.test(value);\n    }\n    const labels = value.split(\".\");\n    for (const label of labels) {\n        if (!(0, exports.isValidHostLabel)(label)) {\n            return false;\n        }\n    }\n    return true;\n};\nexports.isValidHostLabel = isValidHostLabel;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.not = void 0;\nconst not = (value) => !value;\nexports.not = not;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseURL = void 0;\nconst types_1 = require(\"@aws-sdk/types\");\nconst isIpAddress_1 = require(\"./isIpAddress\");\nconst DEFAULT_PORTS = {\n    [types_1.EndpointURLScheme.HTTP]: 80,\n    [types_1.EndpointURLScheme.HTTPS]: 443,\n};\nconst parseURL = (value) => {\n    const whatwgURL = (() => {\n        try {\n            if (value instanceof URL) {\n                return value;\n            }\n            if (typeof value === \"object\" && \"hostname\" in value) {\n                const { hostname, port, protocol = \"\", path = \"\", query = {} } = value;\n                const url = new URL(`${protocol}//${hostname}${port ? `:${port}` : \"\"}${path}`);\n                url.search = Object.entries(query)\n                    .map(([k, v]) => `${k}=${v}`)\n                    .join(\"&\");\n                return url;\n            }\n            return new URL(value);\n        }\n        catch (error) {\n            return null;\n        }\n    })();\n    if (!whatwgURL) {\n        console.error(`Unable to parse ${JSON.stringify(value)} as a whatwg URL.`);\n        return null;\n    }\n    const urlString = whatwgURL.href;\n    const { host, hostname, pathname, protocol, search } = whatwgURL;\n    if (search) {\n        return null;\n    }\n    const scheme = protocol.slice(0, -1);\n    if (!Object.values(types_1.EndpointURLScheme).includes(scheme)) {\n        return null;\n    }\n    const isIp = (0, isIpAddress_1.isIpAddress)(hostname);\n    const inputContainsDefaultPort = urlString.includes(`${host}:${DEFAULT_PORTS[scheme]}`) ||\n        (typeof value === \"string\" && value.includes(`${host}:${DEFAULT_PORTS[scheme]}`));\n    const authority = `${host}${inputContainsDefaultPort ? `:${DEFAULT_PORTS[scheme]}` : ``}`;\n    return {\n        scheme,\n        authority,\n        path: pathname,\n        normalizedPath: pathname.endsWith(\"/\") ? pathname : `${pathname}/`,\n        isIp,\n    };\n};\nexports.parseURL = parseURL;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringEquals = void 0;\nconst stringEquals = (value1, value2) => value1 === value2;\nexports.stringEquals = stringEquals;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.substring = void 0;\nconst substring = (input, start, stop, reverse) => {\n    if (start >= stop || input.length < stop) {\n        return null;\n    }\n    if (!reverse) {\n        return input.substring(start, stop);\n    }\n    return input.substring(input.length - stop, input.length - start);\n};\nexports.substring = substring;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uriEncode = void 0;\nconst uriEncode = (value) => encodeURIComponent(value).replace(/[!*'()]/g, (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`);\nexports.uriEncode = uriEncode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveEndpoint = void 0;\nconst debug_1 = require(\"./debug\");\nconst types_1 = require(\"./types\");\nconst utils_1 = require(\"./utils\");\nconst resolveEndpoint = (ruleSetObject, options) => {\n    var _a, _b, _c, _d, _e, _f;\n    const { endpointParams, logger } = options;\n    const { parameters, rules } = ruleSetObject;\n    (_b = (_a = options.logger) === null || _a === void 0 ? void 0 : _a.debug) === null || _b === void 0 ? void 0 : _b.call(_a, `${debug_1.debugId} Initial EndpointParams: ${(0, debug_1.toDebugString)(endpointParams)}`);\n    const paramsWithDefault = Object.entries(parameters)\n        .filter(([, v]) => v.default != null)\n        .map(([k, v]) => [k, v.default]);\n    if (paramsWithDefault.length > 0) {\n        for (const [paramKey, paramDefaultValue] of paramsWithDefault) {\n            endpointParams[paramKey] = (_c = endpointParams[paramKey]) !== null && _c !== void 0 ? _c : paramDefaultValue;\n        }\n    }\n    const requiredParams = Object.entries(parameters)\n        .filter(([, v]) => v.required)\n        .map(([k]) => k);\n    for (const requiredParam of requiredParams) {\n        if (endpointParams[requiredParam] == null) {\n            throw new types_1.EndpointError(`Missing required parameter: '${requiredParam}'`);\n        }\n    }\n    const endpoint = (0, utils_1.evaluateRules)(rules, { endpointParams, logger, referenceRecord: {} });\n    if ((_d = options.endpointParams) === null || _d === void 0 ? void 0 : _d.Endpoint) {\n        try {\n            const givenEndpoint = new URL(options.endpointParams.Endpoint);\n            const { protocol, port } = givenEndpoint;\n            endpoint.url.protocol = protocol;\n            endpoint.url.port = port;\n        }\n        catch (e) {\n        }\n    }\n    (_f = (_e = options.logger) === null || _e === void 0 ? void 0 : _e.debug) === null || _f === void 0 ? void 0 : _f.call(_e, `${debug_1.debugId} Resolved endpoint: ${(0, debug_1.toDebugString)(endpoint)}`);\n    return endpoint;\n};\nexports.resolveEndpoint = resolveEndpoint;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EndpointError = void 0;\nclass EndpointError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"EndpointError\";\n    }\n}\nexports.EndpointError = EndpointError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./EndpointError\"), exports);\ntslib_1.__exportStar(require(\"./EndpointRuleObject\"), exports);\ntslib_1.__exportStar(require(\"./ErrorRuleObject\"), exports);\ntslib_1.__exportStar(require(\"./RuleSetObject\"), exports);\ntslib_1.__exportStar(require(\"./TreeRuleObject\"), exports);\ntslib_1.__exportStar(require(\"./shared\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callFunction = void 0;\nconst tslib_1 = require(\"tslib\");\nconst lib = tslib_1.__importStar(require(\"../lib\"));\nconst evaluateExpression_1 = require(\"./evaluateExpression\");\nconst callFunction = ({ fn, argv }, options) => {\n    const evaluatedArgs = argv.map((arg) => [\"boolean\", \"number\"].includes(typeof arg) ? arg : (0, evaluateExpression_1.evaluateExpression)(arg, \"arg\", options));\n    return fn.split(\".\").reduce((acc, key) => acc[key], lib)(...evaluatedArgs);\n};\nexports.callFunction = callFunction;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.evaluateCondition = void 0;\nconst debug_1 = require(\"../debug\");\nconst types_1 = require(\"../types\");\nconst callFunction_1 = require(\"./callFunction\");\nconst evaluateCondition = ({ assign, ...fnArgs }, options) => {\n    var _a, _b;\n    if (assign && assign in options.referenceRecord) {\n        throw new types_1.EndpointError(`'${assign}' is already defined in Reference Record.`);\n    }\n    const value = (0, callFunction_1.callFunction)(fnArgs, options);\n    (_b = (_a = options.logger) === null || _a === void 0 ? void 0 : _a.debug) === null || _b === void 0 ? void 0 : _b.call(_a, debug_1.debugId, `evaluateCondition: ${(0, debug_1.toDebugString)(fnArgs)} = ${(0, debug_1.toDebugString)(value)}`);\n    return {\n        result: value === \"\" ? true : !!value,\n        ...(assign != null && { toAssign: { name: assign, value } }),\n    };\n};\nexports.evaluateCondition = evaluateCondition;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.evaluateConditions = void 0;\nconst debug_1 = require(\"../debug\");\nconst evaluateCondition_1 = require(\"./evaluateCondition\");\nconst evaluateConditions = (conditions = [], options) => {\n    var _a, _b;\n    const conditionsReferenceRecord = {};\n    for (const condition of conditions) {\n        const { result, toAssign } = (0, evaluateCondition_1.evaluateCondition)(condition, {\n            ...options,\n            referenceRecord: {\n                ...options.referenceRecord,\n                ...conditionsReferenceRecord,\n            },\n        });\n        if (!result) {\n            return { result };\n        }\n        if (toAssign) {\n            conditionsReferenceRecord[toAssign.name] = toAssign.value;\n            (_b = (_a = options.logger) === null || _a === void 0 ? void 0 : _a.debug) === null || _b === void 0 ? void 0 : _b.call(_a, debug_1.debugId, `assign: ${toAssign.name} := ${(0, debug_1.toDebugString)(toAssign.value)}`);\n        }\n    }\n    return { result: true, referenceRecord: conditionsReferenceRecord };\n};\nexports.evaluateConditions = evaluateConditions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.evaluateEndpointRule = void 0;\nconst debug_1 = require(\"../debug\");\nconst evaluateConditions_1 = require(\"./evaluateConditions\");\nconst getEndpointHeaders_1 = require(\"./getEndpointHeaders\");\nconst getEndpointProperties_1 = require(\"./getEndpointProperties\");\nconst getEndpointUrl_1 = require(\"./getEndpointUrl\");\nconst evaluateEndpointRule = (endpointRule, options) => {\n    var _a, _b;\n    const { conditions, endpoint } = endpointRule;\n    const { result, referenceRecord } = (0, evaluateConditions_1.evaluateConditions)(conditions, options);\n    if (!result) {\n        return;\n    }\n    const endpointRuleOptions = {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    };\n    const { url, properties, headers } = endpoint;\n    (_b = (_a = options.logger) === null || _a === void 0 ? void 0 : _a.debug) === null || _b === void 0 ? void 0 : _b.call(_a, debug_1.debugId, `Resolving endpoint from template: ${(0, debug_1.toDebugString)(endpoint)}`);\n    return {\n        ...(headers != undefined && {\n            headers: (0, getEndpointHeaders_1.getEndpointHeaders)(headers, endpointRuleOptions),\n        }),\n        ...(properties != undefined && {\n            properties: (0, getEndpointProperties_1.getEndpointProperties)(properties, endpointRuleOptions),\n        }),\n        url: (0, getEndpointUrl_1.getEndpointUrl)(url, endpointRuleOptions),\n    };\n};\nexports.evaluateEndpointRule = evaluateEndpointRule;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.evaluateErrorRule = void 0;\nconst types_1 = require(\"../types\");\nconst evaluateConditions_1 = require(\"./evaluateConditions\");\nconst evaluateExpression_1 = require(\"./evaluateExpression\");\nconst evaluateErrorRule = (errorRule, options) => {\n    const { conditions, error } = errorRule;\n    const { result, referenceRecord } = (0, evaluateConditions_1.evaluateConditions)(conditions, options);\n    if (!result) {\n        return;\n    }\n    throw new types_1.EndpointError((0, evaluateExpression_1.evaluateExpression)(error, \"Error\", {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    }));\n};\nexports.evaluateErrorRule = evaluateErrorRule;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.evaluateExpression = void 0;\nconst types_1 = require(\"../types\");\nconst callFunction_1 = require(\"./callFunction\");\nconst evaluateTemplate_1 = require(\"./evaluateTemplate\");\nconst getReferenceValue_1 = require(\"./getReferenceValue\");\nconst evaluateExpression = (obj, keyName, options) => {\n    if (typeof obj === \"string\") {\n        return (0, evaluateTemplate_1.evaluateTemplate)(obj, options);\n    }\n    else if (obj[\"fn\"]) {\n        return (0, callFunction_1.callFunction)(obj, options);\n    }\n    else if (obj[\"ref\"]) {\n        return (0, getReferenceValue_1.getReferenceValue)(obj, options);\n    }\n    throw new types_1.EndpointError(`'${keyName}': ${String(obj)} is not a string, function or reference.`);\n};\nexports.evaluateExpression = evaluateExpression;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.evaluateRules = void 0;\nconst types_1 = require(\"../types\");\nconst evaluateEndpointRule_1 = require(\"./evaluateEndpointRule\");\nconst evaluateErrorRule_1 = require(\"./evaluateErrorRule\");\nconst evaluateTreeRule_1 = require(\"./evaluateTreeRule\");\nconst evaluateRules = (rules, options) => {\n    for (const rule of rules) {\n        if (rule.type === \"endpoint\") {\n            const endpointOrUndefined = (0, evaluateEndpointRule_1.evaluateEndpointRule)(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else if (rule.type === \"error\") {\n            (0, evaluateErrorRule_1.evaluateErrorRule)(rule, options);\n        }\n        else if (rule.type === \"tree\") {\n            const endpointOrUndefined = (0, evaluateTreeRule_1.evaluateTreeRule)(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else {\n            throw new types_1.EndpointError(`Unknown endpoint rule: ${rule}`);\n        }\n    }\n    throw new types_1.EndpointError(`Rules evaluation failed`);\n};\nexports.evaluateRules = evaluateRules;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.evaluateTemplate = void 0;\nconst lib_1 = require(\"../lib\");\nconst evaluateTemplate = (template, options) => {\n    const evaluatedTemplateArr = [];\n    const templateContext = {\n        ...options.endpointParams,\n        ...options.referenceRecord,\n    };\n    let currentIndex = 0;\n    while (currentIndex < template.length) {\n        const openingBraceIndex = template.indexOf(\"{\", currentIndex);\n        if (openingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(currentIndex));\n            break;\n        }\n        evaluatedTemplateArr.push(template.slice(currentIndex, openingBraceIndex));\n        const closingBraceIndex = template.indexOf(\"}\", openingBraceIndex);\n        if (closingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex));\n            break;\n        }\n        if (template[openingBraceIndex + 1] === \"{\" && template[closingBraceIndex + 1] === \"}\") {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex + 1, closingBraceIndex));\n            currentIndex = closingBraceIndex + 2;\n        }\n        const parameterName = template.substring(openingBraceIndex + 1, closingBraceIndex);\n        if (parameterName.includes(\"#\")) {\n            const [refName, attrName] = parameterName.split(\"#\");\n            evaluatedTemplateArr.push((0, lib_1.getAttr)(templateContext[refName], attrName));\n        }\n        else {\n            evaluatedTemplateArr.push(templateContext[parameterName]);\n        }\n        currentIndex = closingBraceIndex + 1;\n    }\n    return evaluatedTemplateArr.join(\"\");\n};\nexports.evaluateTemplate = evaluateTemplate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.evaluateTreeRule = void 0;\nconst evaluateConditions_1 = require(\"./evaluateConditions\");\nconst evaluateRules_1 = require(\"./evaluateRules\");\nconst evaluateTreeRule = (treeRule, options) => {\n    const { conditions, rules } = treeRule;\n    const { result, referenceRecord } = (0, evaluateConditions_1.evaluateConditions)(conditions, options);\n    if (!result) {\n        return;\n    }\n    return (0, evaluateRules_1.evaluateRules)(rules, {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    });\n};\nexports.evaluateTreeRule = evaluateTreeRule;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEndpointHeaders = void 0;\nconst types_1 = require(\"../types\");\nconst evaluateExpression_1 = require(\"./evaluateExpression\");\nconst getEndpointHeaders = (headers, options) => Object.entries(headers).reduce((acc, [headerKey, headerVal]) => ({\n    ...acc,\n    [headerKey]: headerVal.map((headerValEntry) => {\n        const processedExpr = (0, evaluateExpression_1.evaluateExpression)(headerValEntry, \"Header value entry\", options);\n        if (typeof processedExpr !== \"string\") {\n            throw new types_1.EndpointError(`Header '${headerKey}' value '${processedExpr}' is not a string`);\n        }\n        return processedExpr;\n    }),\n}), {});\nexports.getEndpointHeaders = getEndpointHeaders;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEndpointProperties = void 0;\nconst getEndpointProperty_1 = require(\"./getEndpointProperty\");\nconst getEndpointProperties = (properties, options) => Object.entries(properties).reduce((acc, [propertyKey, propertyVal]) => ({\n    ...acc,\n    [propertyKey]: (0, getEndpointProperty_1.getEndpointProperty)(propertyVal, options),\n}), {});\nexports.getEndpointProperties = getEndpointProperties;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEndpointProperty = void 0;\nconst types_1 = require(\"../types\");\nconst evaluateTemplate_1 = require(\"./evaluateTemplate\");\nconst getEndpointProperties_1 = require(\"./getEndpointProperties\");\nconst getEndpointProperty = (property, options) => {\n    if (Array.isArray(property)) {\n        return property.map((propertyEntry) => (0, exports.getEndpointProperty)(propertyEntry, options));\n    }\n    switch (typeof property) {\n        case \"string\":\n            return (0, evaluateTemplate_1.evaluateTemplate)(property, options);\n        case \"object\":\n            if (property === null) {\n                throw new types_1.EndpointError(`Unexpected endpoint property: ${property}`);\n            }\n            return (0, getEndpointProperties_1.getEndpointProperties)(property, options);\n        case \"boolean\":\n            return property;\n        default:\n            throw new types_1.EndpointError(`Unexpected endpoint property type: ${typeof property}`);\n    }\n};\nexports.getEndpointProperty = getEndpointProperty;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEndpointUrl = void 0;\nconst types_1 = require(\"../types\");\nconst evaluateExpression_1 = require(\"./evaluateExpression\");\nconst getEndpointUrl = (endpointUrl, options) => {\n    const expression = (0, evaluateExpression_1.evaluateExpression)(endpointUrl, \"Endpoint URL\", options);\n    if (typeof expression === \"string\") {\n        try {\n            return new URL(expression);\n        }\n        catch (error) {\n            console.error(`Failed to construct URL with ${expression}`, error);\n            throw error;\n        }\n    }\n    throw new types_1.EndpointError(`Endpoint URL must be a string, got ${typeof expression}`);\n};\nexports.getEndpointUrl = getEndpointUrl;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getReferenceValue = void 0;\nconst getReferenceValue = ({ ref }, options) => {\n    const referenceRecord = {\n        ...options.endpointParams,\n        ...options.referenceRecord,\n    };\n    return referenceRecord[ref];\n};\nexports.getReferenceValue = getReferenceValue;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./evaluateRules\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultUserAgent = exports.UA_APP_ID_INI_NAME = exports.UA_APP_ID_ENV_NAME = void 0;\nconst node_config_provider_1 = require(\"@smithy/node-config-provider\");\nconst os_1 = require(\"os\");\nconst process_1 = require(\"process\");\nconst is_crt_available_1 = require(\"./is-crt-available\");\nexports.UA_APP_ID_ENV_NAME = \"AWS_SDK_UA_APP_ID\";\nexports.UA_APP_ID_INI_NAME = \"sdk-ua-app-id\";\nconst defaultUserAgent = ({ serviceId, clientVersion }) => {\n    const sections = [\n        [\"aws-sdk-js\", clientVersion],\n        [\"ua\", \"2.0\"],\n        [`os/${(0, os_1.platform)()}`, (0, os_1.release)()],\n        [\"lang/js\"],\n        [\"md/nodejs\", `${process_1.versions.node}`],\n    ];\n    const crtAvailable = (0, is_crt_available_1.isCrtAvailable)();\n    if (crtAvailable) {\n        sections.push(crtAvailable);\n    }\n    if (serviceId) {\n        sections.push([`api/${serviceId}`, clientVersion]);\n    }\n    if (process_1.env.AWS_EXECUTION_ENV) {\n        sections.push([`exec-env/${process_1.env.AWS_EXECUTION_ENV}`]);\n    }\n    const appIdPromise = (0, node_config_provider_1.loadConfig)({\n        environmentVariableSelector: (env) => env[exports.UA_APP_ID_ENV_NAME],\n        configFileSelector: (profile) => profile[exports.UA_APP_ID_INI_NAME],\n        default: undefined,\n    })();\n    let resolvedUserAgent = undefined;\n    return async () => {\n        if (!resolvedUserAgent) {\n            const appId = await appIdPromise;\n            resolvedUserAgent = appId ? [...sections, [`app/${appId}`]] : [...sections];\n        }\n        return resolvedUserAgent;\n    };\n};\nexports.defaultUserAgent = defaultUserAgent;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isCrtAvailable = void 0;\nconst isCrtAvailable = () => {\n    try {\n        if (typeof require === \"function\" && typeof module !== \"undefined\" && require(\"aws-crt\")) {\n            return [\"md/crt-avail\"];\n        }\n        return null;\n    }\n    catch (e) {\n        return null;\n    }\n};\nexports.isCrtAvailable = isCrtAvailable;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUtf8 = exports.fromUtf8 = void 0;\nconst pureJs_1 = require(\"./pureJs\");\nconst whatwgEncodingApi_1 = require(\"./whatwgEncodingApi\");\nconst fromUtf8 = (input) => typeof TextEncoder === \"function\" ? (0, whatwgEncodingApi_1.fromUtf8)(input) : (0, pureJs_1.fromUtf8)(input);\nexports.fromUtf8 = fromUtf8;\nconst toUtf8 = (input) => typeof TextDecoder === \"function\" ? (0, whatwgEncodingApi_1.toUtf8)(input) : (0, pureJs_1.toUtf8)(input);\nexports.toUtf8 = toUtf8;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUtf8 = exports.fromUtf8 = void 0;\nconst fromUtf8 = (input) => {\n    const bytes = [];\n    for (let i = 0, len = input.length; i < len; i++) {\n        const value = input.charCodeAt(i);\n        if (value < 0x80) {\n            bytes.push(value);\n        }\n        else if (value < 0x800) {\n            bytes.push((value >> 6) | 0b11000000, (value & 0b111111) | 0b10000000);\n        }\n        else if (i + 1 < input.length && (value & 0xfc00) === 0xd800 && (input.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n            const surrogatePair = 0x10000 + ((value & 0b1111111111) << 10) + (input.charCodeAt(++i) & 0b1111111111);\n            bytes.push((surrogatePair >> 18) | 0b11110000, ((surrogatePair >> 12) & 0b111111) | 0b10000000, ((surrogatePair >> 6) & 0b111111) | 0b10000000, (surrogatePair & 0b111111) | 0b10000000);\n        }\n        else {\n            bytes.push((value >> 12) | 0b11100000, ((value >> 6) & 0b111111) | 0b10000000, (value & 0b111111) | 0b10000000);\n        }\n    }\n    return Uint8Array.from(bytes);\n};\nexports.fromUtf8 = fromUtf8;\nconst toUtf8 = (input) => {\n    let decoded = \"\";\n    for (let i = 0, len = input.length; i < len; i++) {\n        const byte = input[i];\n        if (byte < 0x80) {\n            decoded += String.fromCharCode(byte);\n        }\n        else if (0b11000000 <= byte && byte < 0b11100000) {\n            const nextByte = input[++i];\n            decoded += String.fromCharCode(((byte & 0b11111) << 6) | (nextByte & 0b111111));\n        }\n        else if (0b11110000 <= byte && byte < 0b101101101) {\n            const surrogatePair = [byte, input[++i], input[++i], input[++i]];\n            const encoded = \"%\" + surrogatePair.map((byteValue) => byteValue.toString(16)).join(\"%\");\n            decoded += decodeURIComponent(encoded);\n        }\n        else {\n            decoded += String.fromCharCode(((byte & 0b1111) << 12) | ((input[++i] & 0b111111) << 6) | (input[++i] & 0b111111));\n        }\n    }\n    return decoded;\n};\nexports.toUtf8 = toUtf8;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUtf8 = exports.fromUtf8 = void 0;\nfunction fromUtf8(input) {\n    return new TextEncoder().encode(input);\n}\nexports.fromUtf8 = fromUtf8;\nfunction toUtf8(input) {\n    return new TextDecoder(\"utf-8\").decode(input);\n}\nexports.toUtf8 = toUtf8;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.XmlNode = void 0;\nconst escape_attribute_1 = require(\"./escape-attribute\");\nconst XmlText_1 = require(\"./XmlText\");\nclass XmlNode {\n    static of(name, childText, withName) {\n        const node = new XmlNode(name);\n        if (childText !== undefined) {\n            node.addChildNode(new XmlText_1.XmlText(childText));\n        }\n        if (withName !== undefined) {\n            node.withName(withName);\n        }\n        return node;\n    }\n    constructor(name, children = []) {\n        this.name = name;\n        this.children = children;\n        this.attributes = {};\n    }\n    withName(name) {\n        this.name = name;\n        return this;\n    }\n    addAttribute(name, value) {\n        this.attributes[name] = value;\n        return this;\n    }\n    addChildNode(child) {\n        this.children.push(child);\n        return this;\n    }\n    removeAttribute(name) {\n        delete this.attributes[name];\n        return this;\n    }\n    toString() {\n        const hasChildren = Boolean(this.children.length);\n        let xmlText = `<${this.name}`;\n        const attributes = this.attributes;\n        for (const attributeName of Object.keys(attributes)) {\n            const attribute = attributes[attributeName];\n            if (typeof attribute !== \"undefined\" && attribute !== null) {\n                xmlText += ` ${attributeName}=\"${(0, escape_attribute_1.escapeAttribute)(\"\" + attribute)}\"`;\n            }\n        }\n        return (xmlText += !hasChildren ? \"/>\" : `>${this.children.map((c) => c.toString()).join(\"\")}</${this.name}>`);\n    }\n}\nexports.XmlNode = XmlNode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.XmlText = void 0;\nconst escape_element_1 = require(\"./escape-element\");\nclass XmlText {\n    constructor(value) {\n        this.value = value;\n    }\n    toString() {\n        return (0, escape_element_1.escapeElement)(\"\" + this.value);\n    }\n}\nexports.XmlText = XmlText;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeAttribute = void 0;\nfunction escapeAttribute(value) {\n    return value.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\");\n}\nexports.escapeAttribute = escapeAttribute;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeElement = void 0;\nfunction escapeElement(value) {\n    return value\n        .replace(/&/g, \"&amp;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&apos;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\\r/g, \"&#x0D;\")\n        .replace(/\\n/g, \"&#x0A;\")\n        .replace(/\\u0085/g, \"&#x85;\")\n        .replace(/\\u2028/, \"&#x2028;\");\n}\nexports.escapeElement = escapeElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./XmlNode\"), exports);\ntslib_1.__exportStar(require(\"./XmlText\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createFileSystemAdapter = exports.FILE_SYSTEM_ADAPTER = void 0;\nconst fs = require(\"fs\");\nexports.FILE_SYSTEM_ADAPTER = {\n    lstat: fs.lstat,\n    stat: fs.stat,\n    lstatSync: fs.lstatSync,\n    statSync: fs.statSync,\n    readdir: fs.readdir,\n    readdirSync: fs.readdirSync\n};\nfunction createFileSystemAdapter(fsMethods) {\n    if (fsMethods === undefined) {\n        return exports.FILE_SYSTEM_ADAPTER;\n    }\n    return Object.assign(Object.assign({}, exports.FILE_SYSTEM_ADAPTER), fsMethods);\n}\nexports.createFileSystemAdapter = createFileSystemAdapter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IS_SUPPORT_READDIR_WITH_FILE_TYPES = void 0;\nconst NODE_PROCESS_VERSION_PARTS = process.versions.node.split('.');\nif (NODE_PROCESS_VERSION_PARTS[0] === undefined || NODE_PROCESS_VERSION_PARTS[1] === undefined) {\n    throw new Error(`Unexpected behavior. The 'process.versions.node' variable has invalid value: ${process.versions.node}`);\n}\nconst MAJOR_VERSION = Number.parseInt(NODE_PROCESS_VERSION_PARTS[0], 10);\nconst MINOR_VERSION = Number.parseInt(NODE_PROCESS_VERSION_PARTS[1], 10);\nconst SUPPORTED_MAJOR_VERSION = 10;\nconst SUPPORTED_MINOR_VERSION = 10;\nconst IS_MATCHED_BY_MAJOR = MAJOR_VERSION > SUPPORTED_MAJOR_VERSION;\nconst IS_MATCHED_BY_MAJOR_AND_MINOR = MAJOR_VERSION === SUPPORTED_MAJOR_VERSION && MINOR_VERSION >= SUPPORTED_MINOR_VERSION;\n/**\n * IS `true` for Node.js 10.10 and greater.\n */\nexports.IS_SUPPORT_READDIR_WITH_FILE_TYPES = IS_MATCHED_BY_MAJOR || IS_MATCHED_BY_MAJOR_AND_MINOR;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Settings = exports.scandirSync = exports.scandir = void 0;\nconst async = require(\"./providers/async\");\nconst sync = require(\"./providers/sync\");\nconst settings_1 = require(\"./settings\");\nexports.Settings = settings_1.default;\nfunction scandir(path, optionsOrSettingsOrCallback, callback) {\n    if (typeof optionsOrSettingsOrCallback === 'function') {\n        async.read(path, getSettings(), optionsOrSettingsOrCallback);\n        return;\n    }\n    async.read(path, getSettings(optionsOrSettingsOrCallback), callback);\n}\nexports.scandir = scandir;\nfunction scandirSync(path, optionsOrSettings) {\n    const settings = getSettings(optionsOrSettings);\n    return sync.read(path, settings);\n}\nexports.scandirSync = scandirSync;\nfunction getSettings(settingsOrOptions = {}) {\n    if (settingsOrOptions instanceof settings_1.default) {\n        return settingsOrOptions;\n    }\n    return new settings_1.default(settingsOrOptions);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readdir = exports.readdirWithFileTypes = exports.read = void 0;\nconst fsStat = require(\"@nodelib/fs.stat\");\nconst rpl = require(\"run-parallel\");\nconst constants_1 = require(\"../constants\");\nconst utils = require(\"../utils\");\nconst common = require(\"./common\");\nfunction read(directory, settings, callback) {\n    if (!settings.stats && constants_1.IS_SUPPORT_READDIR_WITH_FILE_TYPES) {\n        readdirWithFileTypes(directory, settings, callback);\n        return;\n    }\n    readdir(directory, settings, callback);\n}\nexports.read = read;\nfunction readdirWithFileTypes(directory, settings, callback) {\n    settings.fs.readdir(directory, { withFileTypes: true }, (readdirError, dirents) => {\n        if (readdirError !== null) {\n            callFailureCallback(callback, readdirError);\n            return;\n        }\n        const entries = dirents.map((dirent) => ({\n            dirent,\n            name: dirent.name,\n            path: common.joinPathSegments(directory, dirent.name, settings.pathSegmentSeparator)\n        }));\n        if (!settings.followSymbolicLinks) {\n            callSuccessCallback(callback, entries);\n            return;\n        }\n        const tasks = entries.map((entry) => makeRplTaskEntry(entry, settings));\n        rpl(tasks, (rplError, rplEntries) => {\n            if (rplError !== null) {\n                callFailureCallback(callback, rplError);\n                return;\n            }\n            callSuccessCallback(callback, rplEntries);\n        });\n    });\n}\nexports.readdirWithFileTypes = readdirWithFileTypes;\nfunction makeRplTaskEntry(entry, settings) {\n    return (done) => {\n        if (!entry.dirent.isSymbolicLink()) {\n            done(null, entry);\n            return;\n        }\n        settings.fs.stat(entry.path, (statError, stats) => {\n            if (statError !== null) {\n                if (settings.throwErrorOnBrokenSymbolicLink) {\n                    done(statError);\n                    return;\n                }\n                done(null, entry);\n                return;\n            }\n            entry.dirent = utils.fs.createDirentFromStats(entry.name, stats);\n            done(null, entry);\n        });\n    };\n}\nfunction readdir(directory, settings, callback) {\n    settings.fs.readdir(directory, (readdirError, names) => {\n        if (readdirError !== null) {\n            callFailureCallback(callback, readdirError);\n            return;\n        }\n        const tasks = names.map((name) => {\n            const path = common.joinPathSegments(directory, name, settings.pathSegmentSeparator);\n            return (done) => {\n                fsStat.stat(path, settings.fsStatSettings, (error, stats) => {\n                    if (error !== null) {\n                        done(error);\n                        return;\n                    }\n                    const entry = {\n                        name,\n                        path,\n                        dirent: utils.fs.createDirentFromStats(name, stats)\n                    };\n                    if (settings.stats) {\n                        entry.stats = stats;\n                    }\n                    done(null, entry);\n                });\n            };\n        });\n        rpl(tasks, (rplError, entries) => {\n            if (rplError !== null) {\n                callFailureCallback(callback, rplError);\n                return;\n            }\n            callSuccessCallback(callback, entries);\n        });\n    });\n}\nexports.readdir = readdir;\nfunction callFailureCallback(callback, error) {\n    callback(error);\n}\nfunction callSuccessCallback(callback, result) {\n    callback(null, result);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.joinPathSegments = void 0;\nfunction joinPathSegments(a, b, separator) {\n    /**\n     * The correct handling of cases when the first segment is a root (`/`, `C:/`) or UNC path (`//?/C:/`).\n     */\n    if (a.endsWith(separator)) {\n        return a + b;\n    }\n    return a + separator + b;\n}\nexports.joinPathSegments = joinPathSegments;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readdir = exports.readdirWithFileTypes = exports.read = void 0;\nconst fsStat = require(\"@nodelib/fs.stat\");\nconst constants_1 = require(\"../constants\");\nconst utils = require(\"../utils\");\nconst common = require(\"./common\");\nfunction read(directory, settings) {\n    if (!settings.stats && constants_1.IS_SUPPORT_READDIR_WITH_FILE_TYPES) {\n        return readdirWithFileTypes(directory, settings);\n    }\n    return readdir(directory, settings);\n}\nexports.read = read;\nfunction readdirWithFileTypes(directory, settings) {\n    const dirents = settings.fs.readdirSync(directory, { withFileTypes: true });\n    return dirents.map((dirent) => {\n        const entry = {\n            dirent,\n            name: dirent.name,\n            path: common.joinPathSegments(directory, dirent.name, settings.pathSegmentSeparator)\n        };\n        if (entry.dirent.isSymbolicLink() && settings.followSymbolicLinks) {\n            try {\n                const stats = settings.fs.statSync(entry.path);\n                entry.dirent = utils.fs.createDirentFromStats(entry.name, stats);\n            }\n            catch (error) {\n                if (settings.throwErrorOnBrokenSymbolicLink) {\n                    throw error;\n                }\n            }\n        }\n        return entry;\n    });\n}\nexports.readdirWithFileTypes = readdirWithFileTypes;\nfunction readdir(directory, settings) {\n    const names = settings.fs.readdirSync(directory);\n    return names.map((name) => {\n        const entryPath = common.joinPathSegments(directory, name, settings.pathSegmentSeparator);\n        const stats = fsStat.statSync(entryPath, settings.fsStatSettings);\n        const entry = {\n            name,\n            path: entryPath,\n            dirent: utils.fs.createDirentFromStats(name, stats)\n        };\n        if (settings.stats) {\n            entry.stats = stats;\n        }\n        return entry;\n    });\n}\nexports.readdir = readdir;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path = require(\"path\");\nconst fsStat = require(\"@nodelib/fs.stat\");\nconst fs = require(\"./adapters/fs\");\nclass Settings {\n    constructor(_options = {}) {\n        this._options = _options;\n        this.followSymbolicLinks = this._getValue(this._options.followSymbolicLinks, false);\n        this.fs = fs.createFileSystemAdapter(this._options.fs);\n        this.pathSegmentSeparator = this._getValue(this._options.pathSegmentSeparator, path.sep);\n        this.stats = this._getValue(this._options.stats, false);\n        this.throwErrorOnBrokenSymbolicLink = this._getValue(this._options.throwErrorOnBrokenSymbolicLink, true);\n        this.fsStatSettings = new fsStat.Settings({\n            followSymbolicLink: this.followSymbolicLinks,\n            fs: this.fs,\n            throwErrorOnBrokenSymbolicLink: this.throwErrorOnBrokenSymbolicLink\n        });\n    }\n    _getValue(option, value) {\n        return option !== null && option !== void 0 ? option : value;\n    }\n}\nexports.default = Settings;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDirentFromStats = void 0;\nclass DirentFromStats {\n    constructor(name, stats) {\n        this.name = name;\n        this.isBlockDevice = stats.isBlockDevice.bind(stats);\n        this.isCharacterDevice = stats.isCharacterDevice.bind(stats);\n        this.isDirectory = stats.isDirectory.bind(stats);\n        this.isFIFO = stats.isFIFO.bind(stats);\n        this.isFile = stats.isFile.bind(stats);\n        this.isSocket = stats.isSocket.bind(stats);\n        this.isSymbolicLink = stats.isSymbolicLink.bind(stats);\n    }\n}\nfunction createDirentFromStats(name, stats) {\n    return new DirentFromStats(name, stats);\n}\nexports.createDirentFromStats = createDirentFromStats;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fs = void 0;\nconst fs = require(\"./fs\");\nexports.fs = fs;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createFileSystemAdapter = exports.FILE_SYSTEM_ADAPTER = void 0;\nconst fs = require(\"fs\");\nexports.FILE_SYSTEM_ADAPTER = {\n    lstat: fs.lstat,\n    stat: fs.stat,\n    lstatSync: fs.lstatSync,\n    statSync: fs.statSync\n};\nfunction createFileSystemAdapter(fsMethods) {\n    if (fsMethods === undefined) {\n        return exports.FILE_SYSTEM_ADAPTER;\n    }\n    return Object.assign(Object.assign({}, exports.FILE_SYSTEM_ADAPTER), fsMethods);\n}\nexports.createFileSystemAdapter = createFileSystemAdapter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.statSync = exports.stat = exports.Settings = void 0;\nconst async = require(\"./providers/async\");\nconst sync = require(\"./providers/sync\");\nconst settings_1 = require(\"./settings\");\nexports.Settings = settings_1.default;\nfunction stat(path, optionsOrSettingsOrCallback, callback) {\n    if (typeof optionsOrSettingsOrCallback === 'function') {\n        async.read(path, getSettings(), optionsOrSettingsOrCallback);\n        return;\n    }\n    async.read(path, getSettings(optionsOrSettingsOrCallback), callback);\n}\nexports.stat = stat;\nfunction statSync(path, optionsOrSettings) {\n    const settings = getSettings(optionsOrSettings);\n    return sync.read(path, settings);\n}\nexports.statSync = statSync;\nfunction getSettings(settingsOrOptions = {}) {\n    if (settingsOrOptions instanceof settings_1.default) {\n        return settingsOrOptions;\n    }\n    return new settings_1.default(settingsOrOptions);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.read = void 0;\nfunction read(path, settings, callback) {\n    settings.fs.lstat(path, (lstatError, lstat) => {\n        if (lstatError !== null) {\n            callFailureCallback(callback, lstatError);\n            return;\n        }\n        if (!lstat.isSymbolicLink() || !settings.followSymbolicLink) {\n            callSuccessCallback(callback, lstat);\n            return;\n        }\n        settings.fs.stat(path, (statError, stat) => {\n            if (statError !== null) {\n                if (settings.throwErrorOnBrokenSymbolicLink) {\n                    callFailureCallback(callback, statError);\n                    return;\n                }\n                callSuccessCallback(callback, lstat);\n                return;\n            }\n            if (settings.markSymbolicLink) {\n                stat.isSymbolicLink = () => true;\n            }\n            callSuccessCallback(callback, stat);\n        });\n    });\n}\nexports.read = read;\nfunction callFailureCallback(callback, error) {\n    callback(error);\n}\nfunction callSuccessCallback(callback, result) {\n    callback(null, result);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.read = void 0;\nfunction read(path, settings) {\n    const lstat = settings.fs.lstatSync(path);\n    if (!lstat.isSymbolicLink() || !settings.followSymbolicLink) {\n        return lstat;\n    }\n    try {\n        const stat = settings.fs.statSync(path);\n        if (settings.markSymbolicLink) {\n            stat.isSymbolicLink = () => true;\n        }\n        return stat;\n    }\n    catch (error) {\n        if (!settings.throwErrorOnBrokenSymbolicLink) {\n            return lstat;\n        }\n        throw error;\n    }\n}\nexports.read = read;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fs = require(\"./adapters/fs\");\nclass Settings {\n    constructor(_options = {}) {\n        this._options = _options;\n        this.followSymbolicLink = this._getValue(this._options.followSymbolicLink, true);\n        this.fs = fs.createFileSystemAdapter(this._options.fs);\n        this.markSymbolicLink = this._getValue(this._options.markSymbolicLink, false);\n        this.throwErrorOnBrokenSymbolicLink = this._getValue(this._options.throwErrorOnBrokenSymbolicLink, true);\n    }\n    _getValue(option, value) {\n        return option !== null && option !== void 0 ? option : value;\n    }\n}\nexports.default = Settings;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Settings = exports.walkStream = exports.walkSync = exports.walk = void 0;\nconst async_1 = require(\"./providers/async\");\nconst stream_1 = require(\"./providers/stream\");\nconst sync_1 = require(\"./providers/sync\");\nconst settings_1 = require(\"./settings\");\nexports.Settings = settings_1.default;\nfunction walk(directory, optionsOrSettingsOrCallback, callback) {\n    if (typeof optionsOrSettingsOrCallback === 'function') {\n        new async_1.default(directory, getSettings()).read(optionsOrSettingsOrCallback);\n        return;\n    }\n    new async_1.default(directory, getSettings(optionsOrSettingsOrCallback)).read(callback);\n}\nexports.walk = walk;\nfunction walkSync(directory, optionsOrSettings) {\n    const settings = getSettings(optionsOrSettings);\n    const provider = new sync_1.default(directory, settings);\n    return provider.read();\n}\nexports.walkSync = walkSync;\nfunction walkStream(directory, optionsOrSettings) {\n    const settings = getSettings(optionsOrSettings);\n    const provider = new stream_1.default(directory, settings);\n    return provider.read();\n}\nexports.walkStream = walkStream;\nfunction getSettings(settingsOrOptions = {}) {\n    if (settingsOrOptions instanceof settings_1.default) {\n        return settingsOrOptions;\n    }\n    return new settings_1.default(settingsOrOptions);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst async_1 = require(\"../readers/async\");\nclass AsyncProvider {\n    constructor(_root, _settings) {\n        this._root = _root;\n        this._settings = _settings;\n        this._reader = new async_1.default(this._root, this._settings);\n        this._storage = [];\n    }\n    read(callback) {\n        this._reader.onError((error) => {\n            callFailureCallback(callback, error);\n        });\n        this._reader.onEntry((entry) => {\n            this._storage.push(entry);\n        });\n        this._reader.onEnd(() => {\n            callSuccessCallback(callback, this._storage);\n        });\n        this._reader.read();\n    }\n}\nexports.default = AsyncProvider;\nfunction callFailureCallback(callback, error) {\n    callback(error);\n}\nfunction callSuccessCallback(callback, entries) {\n    callback(null, entries);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stream_1 = require(\"stream\");\nconst async_1 = require(\"../readers/async\");\nclass StreamProvider {\n    constructor(_root, _settings) {\n        this._root = _root;\n        this._settings = _settings;\n        this._reader = new async_1.default(this._root, this._settings);\n        this._stream = new stream_1.Readable({\n            objectMode: true,\n            read: () => { },\n            destroy: () => {\n                if (!this._reader.isDestroyed) {\n                    this._reader.destroy();\n                }\n            }\n        });\n    }\n    read() {\n        this._reader.onError((error) => {\n            this._stream.emit('error', error);\n        });\n        this._reader.onEntry((entry) => {\n            this._stream.push(entry);\n        });\n        this._reader.onEnd(() => {\n            this._stream.push(null);\n        });\n        this._reader.read();\n        return this._stream;\n    }\n}\nexports.default = StreamProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sync_1 = require(\"../readers/sync\");\nclass SyncProvider {\n    constructor(_root, _settings) {\n        this._root = _root;\n        this._settings = _settings;\n        this._reader = new sync_1.default(this._root, this._settings);\n    }\n    read() {\n        return this._reader.read();\n    }\n}\nexports.default = SyncProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst events_1 = require(\"events\");\nconst fsScandir = require(\"@nodelib/fs.scandir\");\nconst fastq = require(\"fastq\");\nconst common = require(\"./common\");\nconst reader_1 = require(\"./reader\");\nclass AsyncReader extends reader_1.default {\n    constructor(_root, _settings) {\n        super(_root, _settings);\n        this._settings = _settings;\n        this._scandir = fsScandir.scandir;\n        this._emitter = new events_1.EventEmitter();\n        this._queue = fastq(this._worker.bind(this), this._settings.concurrency);\n        this._isFatalError = false;\n        this._isDestroyed = false;\n        this._queue.drain = () => {\n            if (!this._isFatalError) {\n                this._emitter.emit('end');\n            }\n        };\n    }\n    read() {\n        this._isFatalError = false;\n        this._isDestroyed = false;\n        setImmediate(() => {\n            this._pushToQueue(this._root, this._settings.basePath);\n        });\n        return this._emitter;\n    }\n    get isDestroyed() {\n        return this._isDestroyed;\n    }\n    destroy() {\n        if (this._isDestroyed) {\n            throw new Error('The reader is already destroyed');\n        }\n        this._isDestroyed = true;\n        this._queue.killAndDrain();\n    }\n    onEntry(callback) {\n        this._emitter.on('entry', callback);\n    }\n    onError(callback) {\n        this._emitter.once('error', callback);\n    }\n    onEnd(callback) {\n        this._emitter.once('end', callback);\n    }\n    _pushToQueue(directory, base) {\n        const queueItem = { directory, base };\n        this._queue.push(queueItem, (error) => {\n            if (error !== null) {\n                this._handleError(error);\n            }\n        });\n    }\n    _worker(item, done) {\n        this._scandir(item.directory, this._settings.fsScandirSettings, (error, entries) => {\n            if (error !== null) {\n                done(error, undefined);\n                return;\n            }\n            for (const entry of entries) {\n                this._handleEntry(entry, item.base);\n            }\n            done(null, undefined);\n        });\n    }\n    _handleError(error) {\n        if (this._isDestroyed || !common.isFatalError(this._settings, error)) {\n            return;\n        }\n        this._isFatalError = true;\n        this._isDestroyed = true;\n        this._emitter.emit('error', error);\n    }\n    _handleEntry(entry, base) {\n        if (this._isDestroyed || this._isFatalError) {\n            return;\n        }\n        const fullpath = entry.path;\n        if (base !== undefined) {\n            entry.path = common.joinPathSegments(base, entry.name, this._settings.pathSegmentSeparator);\n        }\n        if (common.isAppliedFilter(this._settings.entryFilter, entry)) {\n            this._emitEntry(entry);\n        }\n        if (entry.dirent.isDirectory() && common.isAppliedFilter(this._settings.deepFilter, entry)) {\n            this._pushToQueue(fullpath, base === undefined ? undefined : entry.path);\n        }\n    }\n    _emitEntry(entry) {\n        this._emitter.emit('entry', entry);\n    }\n}\nexports.default = AsyncReader;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.joinPathSegments = exports.replacePathSegmentSeparator = exports.isAppliedFilter = exports.isFatalError = void 0;\nfunction isFatalError(settings, error) {\n    if (settings.errorFilter === null) {\n        return true;\n    }\n    return !settings.errorFilter(error);\n}\nexports.isFatalError = isFatalError;\nfunction isAppliedFilter(filter, value) {\n    return filter === null || filter(value);\n}\nexports.isAppliedFilter = isAppliedFilter;\nfunction replacePathSegmentSeparator(filepath, separator) {\n    return filepath.split(/[/\\\\]/).join(separator);\n}\nexports.replacePathSegmentSeparator = replacePathSegmentSeparator;\nfunction joinPathSegments(a, b, separator) {\n    if (a === '') {\n        return b;\n    }\n    /**\n     * The correct handling of cases when the first segment is a root (`/`, `C:/`) or UNC path (`//?/C:/`).\n     */\n    if (a.endsWith(separator)) {\n        return a + b;\n    }\n    return a + separator + b;\n}\nexports.joinPathSegments = joinPathSegments;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst common = require(\"./common\");\nclass Reader {\n    constructor(_root, _settings) {\n        this._root = _root;\n        this._settings = _settings;\n        this._root = common.replacePathSegmentSeparator(_root, _settings.pathSegmentSeparator);\n    }\n}\nexports.default = Reader;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fsScandir = require(\"@nodelib/fs.scandir\");\nconst common = require(\"./common\");\nconst reader_1 = require(\"./reader\");\nclass SyncReader extends reader_1.default {\n    constructor() {\n        super(...arguments);\n        this._scandir = fsScandir.scandirSync;\n        this._storage = [];\n        this._queue = new Set();\n    }\n    read() {\n        this._pushToQueue(this._root, this._settings.basePath);\n        this._handleQueue();\n        return this._storage;\n    }\n    _pushToQueue(directory, base) {\n        this._queue.add({ directory, base });\n    }\n    _handleQueue() {\n        for (const item of this._queue.values()) {\n            this._handleDirectory(item.directory, item.base);\n        }\n    }\n    _handleDirectory(directory, base) {\n        try {\n            const entries = this._scandir(directory, this._settings.fsScandirSettings);\n            for (const entry of entries) {\n                this._handleEntry(entry, base);\n            }\n        }\n        catch (error) {\n            this._handleError(error);\n        }\n    }\n    _handleError(error) {\n        if (!common.isFatalError(this._settings, error)) {\n            return;\n        }\n        throw error;\n    }\n    _handleEntry(entry, base) {\n        const fullpath = entry.path;\n        if (base !== undefined) {\n            entry.path = common.joinPathSegments(base, entry.name, this._settings.pathSegmentSeparator);\n        }\n        if (common.isAppliedFilter(this._settings.entryFilter, entry)) {\n            this._pushToStorage(entry);\n        }\n        if (entry.dirent.isDirectory() && common.isAppliedFilter(this._settings.deepFilter, entry)) {\n            this._pushToQueue(fullpath, base === undefined ? undefined : entry.path);\n        }\n    }\n    _pushToStorage(entry) {\n        this._storage.push(entry);\n    }\n}\nexports.default = SyncReader;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path = require(\"path\");\nconst fsScandir = require(\"@nodelib/fs.scandir\");\nclass Settings {\n    constructor(_options = {}) {\n        this._options = _options;\n        this.basePath = this._getValue(this._options.basePath, undefined);\n        this.concurrency = this._getValue(this._options.concurrency, Number.POSITIVE_INFINITY);\n        this.deepFilter = this._getValue(this._options.deepFilter, null);\n        this.entryFilter = this._getValue(this._options.entryFilter, null);\n        this.errorFilter = this._getValue(this._options.errorFilter, null);\n        this.pathSegmentSeparator = this._getValue(this._options.pathSegmentSeparator, path.sep);\n        this.fsScandirSettings = new fsScandir.Settings({\n            followSymbolicLinks: this._options.followSymbolicLinks,\n            fs: this._options.fs,\n            pathSegmentSeparator: this._options.pathSegmentSeparator,\n            stats: this._options.stats,\n            throwErrorOnBrokenSymbolicLink: this._options.throwErrorOnBrokenSymbolicLink\n        });\n    }\n    _getValue(option, value) {\n        return option !== null && option !== void 0 ? option : value;\n    }\n}\nexports.default = Settings;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS = exports.DEFAULT_USE_DUALSTACK_ENDPOINT = exports.CONFIG_USE_DUALSTACK_ENDPOINT = exports.ENV_USE_DUALSTACK_ENDPOINT = void 0;\nconst util_config_provider_1 = require(\"@smithy/util-config-provider\");\nexports.ENV_USE_DUALSTACK_ENDPOINT = \"AWS_USE_DUALSTACK_ENDPOINT\";\nexports.CONFIG_USE_DUALSTACK_ENDPOINT = \"use_dualstack_endpoint\";\nexports.DEFAULT_USE_DUALSTACK_ENDPOINT = false;\nexports.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => (0, util_config_provider_1.booleanSelector)(env, exports.ENV_USE_DUALSTACK_ENDPOINT, util_config_provider_1.SelectorType.ENV),\n    configFileSelector: (profile) => (0, util_config_provider_1.booleanSelector)(profile, exports.CONFIG_USE_DUALSTACK_ENDPOINT, util_config_provider_1.SelectorType.CONFIG),\n    default: false,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS = exports.DEFAULT_USE_FIPS_ENDPOINT = exports.CONFIG_USE_FIPS_ENDPOINT = exports.ENV_USE_FIPS_ENDPOINT = void 0;\nconst util_config_provider_1 = require(\"@smithy/util-config-provider\");\nexports.ENV_USE_FIPS_ENDPOINT = \"AWS_USE_FIPS_ENDPOINT\";\nexports.CONFIG_USE_FIPS_ENDPOINT = \"use_fips_endpoint\";\nexports.DEFAULT_USE_FIPS_ENDPOINT = false;\nexports.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => (0, util_config_provider_1.booleanSelector)(env, exports.ENV_USE_FIPS_ENDPOINT, util_config_provider_1.SelectorType.ENV),\n    configFileSelector: (profile) => (0, util_config_provider_1.booleanSelector)(profile, exports.CONFIG_USE_FIPS_ENDPOINT, util_config_provider_1.SelectorType.CONFIG),\n    default: false,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./NodeUseDualstackEndpointConfigOptions\"), exports);\ntslib_1.__exportStar(require(\"./NodeUseFipsEndpointConfigOptions\"), exports);\ntslib_1.__exportStar(require(\"./resolveCustomEndpointsConfig\"), exports);\ntslib_1.__exportStar(require(\"./resolveEndpointsConfig\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveCustomEndpointsConfig = void 0;\nconst util_middleware_1 = require(\"@smithy/util-middleware\");\nconst resolveCustomEndpointsConfig = (input) => {\n    var _a, _b;\n    const { endpoint, urlParser } = input;\n    return {\n        ...input,\n        tls: (_a = input.tls) !== null && _a !== void 0 ? _a : true,\n        endpoint: (0, util_middleware_1.normalizeProvider)(typeof endpoint === \"string\" ? urlParser(endpoint) : endpoint),\n        isCustomEndpoint: true,\n        useDualstackEndpoint: (0, util_middleware_1.normalizeProvider)((_b = input.useDualstackEndpoint) !== null && _b !== void 0 ? _b : false),\n    };\n};\nexports.resolveCustomEndpointsConfig = resolveCustomEndpointsConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveEndpointsConfig = void 0;\nconst util_middleware_1 = require(\"@smithy/util-middleware\");\nconst getEndpointFromRegion_1 = require(\"./utils/getEndpointFromRegion\");\nconst resolveEndpointsConfig = (input) => {\n    var _a, _b;\n    const useDualstackEndpoint = (0, util_middleware_1.normalizeProvider)((_a = input.useDualstackEndpoint) !== null && _a !== void 0 ? _a : false);\n    const { endpoint, useFipsEndpoint, urlParser } = input;\n    return {\n        ...input,\n        tls: (_b = input.tls) !== null && _b !== void 0 ? _b : true,\n        endpoint: endpoint\n            ? (0, util_middleware_1.normalizeProvider)(typeof endpoint === \"string\" ? urlParser(endpoint) : endpoint)\n            : () => (0, getEndpointFromRegion_1.getEndpointFromRegion)({ ...input, useDualstackEndpoint, useFipsEndpoint }),\n        isCustomEndpoint: !!endpoint,\n        useDualstackEndpoint,\n    };\n};\nexports.resolveEndpointsConfig = resolveEndpointsConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEndpointFromRegion = void 0;\nconst getEndpointFromRegion = async (input) => {\n    var _a;\n    const { tls = true } = input;\n    const region = await input.region();\n    const dnsHostRegex = new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);\n    if (!dnsHostRegex.test(region)) {\n        throw new Error(\"Invalid region in client config\");\n    }\n    const useDualstackEndpoint = await input.useDualstackEndpoint();\n    const useFipsEndpoint = await input.useFipsEndpoint();\n    const { hostname } = (_a = (await input.regionInfoProvider(region, { useDualstackEndpoint, useFipsEndpoint }))) !== null && _a !== void 0 ? _a : {};\n    if (!hostname) {\n        throw new Error(\"Cannot resolve hostname from client config\");\n    }\n    return input.urlParser(`${tls ? \"https:\" : \"http:\"}//${hostname}`);\n};\nexports.getEndpointFromRegion = getEndpointFromRegion;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./endpointsConfig\"), exports);\ntslib_1.__exportStar(require(\"./regionConfig\"), exports);\ntslib_1.__exportStar(require(\"./regionInfo\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_REGION_CONFIG_FILE_OPTIONS = exports.NODE_REGION_CONFIG_OPTIONS = exports.REGION_INI_NAME = exports.REGION_ENV_NAME = void 0;\nexports.REGION_ENV_NAME = \"AWS_REGION\";\nexports.REGION_INI_NAME = \"region\";\nexports.NODE_REGION_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[exports.REGION_ENV_NAME],\n    configFileSelector: (profile) => profile[exports.REGION_INI_NAME],\n    default: () => {\n        throw new Error(\"Region is missing\");\n    },\n};\nexports.NODE_REGION_CONFIG_FILE_OPTIONS = {\n    preferredFile: \"credentials\",\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRealRegion = void 0;\nconst isFipsRegion_1 = require(\"./isFipsRegion\");\nconst getRealRegion = (region) => (0, isFipsRegion_1.isFipsRegion)(region)\n    ? [\"fips-aws-global\", \"aws-fips\"].includes(region)\n        ? \"us-east-1\"\n        : region.replace(/fips-(dkr-|prod-)?|-fips/, \"\")\n    : region;\nexports.getRealRegion = getRealRegion;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./config\"), exports);\ntslib_1.__exportStar(require(\"./resolveRegionConfig\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isFipsRegion = void 0;\nconst isFipsRegion = (region) => typeof region === \"string\" && (region.startsWith(\"fips-\") || region.endsWith(\"-fips\"));\nexports.isFipsRegion = isFipsRegion;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveRegionConfig = void 0;\nconst getRealRegion_1 = require(\"./getRealRegion\");\nconst isFipsRegion_1 = require(\"./isFipsRegion\");\nconst resolveRegionConfig = (input) => {\n    const { region, useFipsEndpoint } = input;\n    if (!region) {\n        throw new Error(\"Region is missing\");\n    }\n    return {\n        ...input,\n        region: async () => {\n            if (typeof region === \"string\") {\n                return (0, getRealRegion_1.getRealRegion)(region);\n            }\n            const providedRegion = await region();\n            return (0, getRealRegion_1.getRealRegion)(providedRegion);\n        },\n        useFipsEndpoint: async () => {\n            const providedRegion = typeof region === \"string\" ? region : await region();\n            if ((0, isFipsRegion_1.isFipsRegion)(providedRegion)) {\n                return true;\n            }\n            return typeof useFipsEndpoint !== \"function\" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();\n        },\n    };\n};\nexports.resolveRegionConfig = resolveRegionConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getHostnameFromVariants = void 0;\nconst getHostnameFromVariants = (variants = [], { useFipsEndpoint, useDualstackEndpoint }) => {\n    var _a;\n    return (_a = variants.find(({ tags }) => useFipsEndpoint === tags.includes(\"fips\") && useDualstackEndpoint === tags.includes(\"dualstack\"))) === null || _a === void 0 ? void 0 : _a.hostname;\n};\nexports.getHostnameFromVariants = getHostnameFromVariants;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRegionInfo = void 0;\nconst getHostnameFromVariants_1 = require(\"./getHostnameFromVariants\");\nconst getResolvedHostname_1 = require(\"./getResolvedHostname\");\nconst getResolvedPartition_1 = require(\"./getResolvedPartition\");\nconst getResolvedSigningRegion_1 = require(\"./getResolvedSigningRegion\");\nconst getRegionInfo = (region, { useFipsEndpoint = false, useDualstackEndpoint = false, signingService, regionHash, partitionHash, }) => {\n    var _a, _b, _c, _d, _e, _f;\n    const partition = (0, getResolvedPartition_1.getResolvedPartition)(region, { partitionHash });\n    const resolvedRegion = region in regionHash ? region : (_b = (_a = partitionHash[partition]) === null || _a === void 0 ? void 0 : _a.endpoint) !== null && _b !== void 0 ? _b : region;\n    const hostnameOptions = { useFipsEndpoint, useDualstackEndpoint };\n    const regionHostname = (0, getHostnameFromVariants_1.getHostnameFromVariants)((_c = regionHash[resolvedRegion]) === null || _c === void 0 ? void 0 : _c.variants, hostnameOptions);\n    const partitionHostname = (0, getHostnameFromVariants_1.getHostnameFromVariants)((_d = partitionHash[partition]) === null || _d === void 0 ? void 0 : _d.variants, hostnameOptions);\n    const hostname = (0, getResolvedHostname_1.getResolvedHostname)(resolvedRegion, { regionHostname, partitionHostname });\n    if (hostname === undefined) {\n        throw new Error(`Endpoint resolution failed for: ${{ resolvedRegion, useFipsEndpoint, useDualstackEndpoint }}`);\n    }\n    const signingRegion = (0, getResolvedSigningRegion_1.getResolvedSigningRegion)(hostname, {\n        signingRegion: (_e = regionHash[resolvedRegion]) === null || _e === void 0 ? void 0 : _e.signingRegion,\n        regionRegex: partitionHash[partition].regionRegex,\n        useFipsEndpoint,\n    });\n    return {\n        partition,\n        signingService,\n        hostname,\n        ...(signingRegion && { signingRegion }),\n        ...(((_f = regionHash[resolvedRegion]) === null || _f === void 0 ? void 0 : _f.signingService) && {\n            signingService: regionHash[resolvedRegion].signingService,\n        }),\n    };\n};\nexports.getRegionInfo = getRegionInfo;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getResolvedHostname = void 0;\nconst getResolvedHostname = (resolvedRegion, { regionHostname, partitionHostname }) => regionHostname\n    ? regionHostname\n    : partitionHostname\n        ? partitionHostname.replace(\"{region}\", resolvedRegion)\n        : undefined;\nexports.getResolvedHostname = getResolvedHostname;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getResolvedPartition = void 0;\nconst getResolvedPartition = (region, { partitionHash }) => { var _a; return (_a = Object.keys(partitionHash || {}).find((key) => partitionHash[key].regions.includes(region))) !== null && _a !== void 0 ? _a : \"aws\"; };\nexports.getResolvedPartition = getResolvedPartition;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getResolvedSigningRegion = void 0;\nconst getResolvedSigningRegion = (hostname, { signingRegion, regionRegex, useFipsEndpoint }) => {\n    if (signingRegion) {\n        return signingRegion;\n    }\n    else if (useFipsEndpoint) {\n        const regionRegexJs = regionRegex.replace(\"\\\\\\\\\", \"\\\\\").replace(/^\\^/g, \"\\\\.\").replace(/\\$$/g, \"\\\\.\");\n        const regionRegexmatchArray = hostname.match(regionRegexJs);\n        if (regionRegexmatchArray) {\n            return regionRegexmatchArray[0].slice(1, -1);\n        }\n    }\n};\nexports.getResolvedSigningRegion = getResolvedSigningRegion;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./PartitionHash\"), exports);\ntslib_1.__exportStar(require(\"./RegionHash\"), exports);\ntslib_1.__exportStar(require(\"./getRegionInfo\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Endpoint = void 0;\nvar Endpoint;\n(function (Endpoint) {\n    Endpoint[\"IPv4\"] = \"http://169.254.169.254\";\n    Endpoint[\"IPv6\"] = \"http://[fd00:ec2::254]\";\n})(Endpoint = exports.Endpoint || (exports.Endpoint = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ENDPOINT_CONFIG_OPTIONS = exports.CONFIG_ENDPOINT_NAME = exports.ENV_ENDPOINT_NAME = void 0;\nexports.ENV_ENDPOINT_NAME = \"AWS_EC2_METADATA_SERVICE_ENDPOINT\";\nexports.CONFIG_ENDPOINT_NAME = \"ec2_metadata_service_endpoint\";\nexports.ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[exports.ENV_ENDPOINT_NAME],\n    configFileSelector: (profile) => profile[exports.CONFIG_ENDPOINT_NAME],\n    default: undefined,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EndpointMode = void 0;\nvar EndpointMode;\n(function (EndpointMode) {\n    EndpointMode[\"IPv4\"] = \"IPv4\";\n    EndpointMode[\"IPv6\"] = \"IPv6\";\n})(EndpointMode = exports.EndpointMode || (exports.EndpointMode = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ENDPOINT_MODE_CONFIG_OPTIONS = exports.CONFIG_ENDPOINT_MODE_NAME = exports.ENV_ENDPOINT_MODE_NAME = void 0;\nconst EndpointMode_1 = require(\"./EndpointMode\");\nexports.ENV_ENDPOINT_MODE_NAME = \"AWS_EC2_METADATA_SERVICE_ENDPOINT_MODE\";\nexports.CONFIG_ENDPOINT_MODE_NAME = \"ec2_metadata_service_endpoint_mode\";\nexports.ENDPOINT_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[exports.ENV_ENDPOINT_MODE_NAME],\n    configFileSelector: (profile) => profile[exports.CONFIG_ENDPOINT_MODE_NAME],\n    default: EndpointMode_1.EndpointMode.IPv4,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromContainerMetadata = exports.ENV_CMDS_AUTH_TOKEN = exports.ENV_CMDS_RELATIVE_URI = exports.ENV_CMDS_FULL_URI = void 0;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst url_1 = require(\"url\");\nconst httpRequest_1 = require(\"./remoteProvider/httpRequest\");\nconst ImdsCredentials_1 = require(\"./remoteProvider/ImdsCredentials\");\nconst RemoteProviderInit_1 = require(\"./remoteProvider/RemoteProviderInit\");\nconst retry_1 = require(\"./remoteProvider/retry\");\nexports.ENV_CMDS_FULL_URI = \"AWS_CONTAINER_CREDENTIALS_FULL_URI\";\nexports.ENV_CMDS_RELATIVE_URI = \"AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\";\nexports.ENV_CMDS_AUTH_TOKEN = \"AWS_CONTAINER_AUTHORIZATION_TOKEN\";\nconst fromContainerMetadata = (init = {}) => {\n    const { timeout, maxRetries } = (0, RemoteProviderInit_1.providerConfigFromInit)(init);\n    return () => (0, retry_1.retry)(async () => {\n        const requestOptions = await getCmdsUri();\n        const credsResponse = JSON.parse(await requestFromEcsImds(timeout, requestOptions));\n        if (!(0, ImdsCredentials_1.isImdsCredentials)(credsResponse)) {\n            throw new property_provider_1.CredentialsProviderError(\"Invalid response received from instance metadata service.\");\n        }\n        return (0, ImdsCredentials_1.fromImdsCredentials)(credsResponse);\n    }, maxRetries);\n};\nexports.fromContainerMetadata = fromContainerMetadata;\nconst requestFromEcsImds = async (timeout, options) => {\n    if (process.env[exports.ENV_CMDS_AUTH_TOKEN]) {\n        options.headers = {\n            ...options.headers,\n            Authorization: process.env[exports.ENV_CMDS_AUTH_TOKEN],\n        };\n    }\n    const buffer = await (0, httpRequest_1.httpRequest)({\n        ...options,\n        timeout,\n    });\n    return buffer.toString();\n};\nconst CMDS_IP = \"169.254.170.2\";\nconst GREENGRASS_HOSTS = {\n    localhost: true,\n    \"127.0.0.1\": true,\n};\nconst GREENGRASS_PROTOCOLS = {\n    \"http:\": true,\n    \"https:\": true,\n};\nconst getCmdsUri = async () => {\n    if (process.env[exports.ENV_CMDS_RELATIVE_URI]) {\n        return {\n            hostname: CMDS_IP,\n            path: process.env[exports.ENV_CMDS_RELATIVE_URI],\n        };\n    }\n    if (process.env[exports.ENV_CMDS_FULL_URI]) {\n        const parsed = (0, url_1.parse)(process.env[exports.ENV_CMDS_FULL_URI]);\n        if (!parsed.hostname || !(parsed.hostname in GREENGRASS_HOSTS)) {\n            throw new property_provider_1.CredentialsProviderError(`${parsed.hostname} is not a valid container metadata service hostname`, false);\n        }\n        if (!parsed.protocol || !(parsed.protocol in GREENGRASS_PROTOCOLS)) {\n            throw new property_provider_1.CredentialsProviderError(`${parsed.protocol} is not a valid container metadata service protocol`, false);\n        }\n        return {\n            ...parsed,\n            port: parsed.port ? parseInt(parsed.port, 10) : undefined,\n        };\n    }\n    throw new property_provider_1.CredentialsProviderError(\"The container metadata credential provider cannot be used unless\" +\n        ` the ${exports.ENV_CMDS_RELATIVE_URI} or ${exports.ENV_CMDS_FULL_URI} environment` +\n        \" variable is set\", false);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromInstanceMetadata = void 0;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst httpRequest_1 = require(\"./remoteProvider/httpRequest\");\nconst ImdsCredentials_1 = require(\"./remoteProvider/ImdsCredentials\");\nconst RemoteProviderInit_1 = require(\"./remoteProvider/RemoteProviderInit\");\nconst retry_1 = require(\"./remoteProvider/retry\");\nconst getInstanceMetadataEndpoint_1 = require(\"./utils/getInstanceMetadataEndpoint\");\nconst staticStabilityProvider_1 = require(\"./utils/staticStabilityProvider\");\nconst IMDS_PATH = \"/latest/meta-data/iam/security-credentials/\";\nconst IMDS_TOKEN_PATH = \"/latest/api/token\";\nconst fromInstanceMetadata = (init = {}) => (0, staticStabilityProvider_1.staticStabilityProvider)(getInstanceImdsProvider(init), { logger: init.logger });\nexports.fromInstanceMetadata = fromInstanceMetadata;\nconst getInstanceImdsProvider = (init) => {\n    let disableFetchToken = false;\n    const { timeout, maxRetries } = (0, RemoteProviderInit_1.providerConfigFromInit)(init);\n    const getCredentials = async (maxRetries, options) => {\n        const profile = (await (0, retry_1.retry)(async () => {\n            let profile;\n            try {\n                profile = await getProfile(options);\n            }\n            catch (err) {\n                if (err.statusCode === 401) {\n                    disableFetchToken = false;\n                }\n                throw err;\n            }\n            return profile;\n        }, maxRetries)).trim();\n        return (0, retry_1.retry)(async () => {\n            let creds;\n            try {\n                creds = await getCredentialsFromProfile(profile, options);\n            }\n            catch (err) {\n                if (err.statusCode === 401) {\n                    disableFetchToken = false;\n                }\n                throw err;\n            }\n            return creds;\n        }, maxRetries);\n    };\n    return async () => {\n        const endpoint = await (0, getInstanceMetadataEndpoint_1.getInstanceMetadataEndpoint)();\n        if (disableFetchToken) {\n            return getCredentials(maxRetries, { ...endpoint, timeout });\n        }\n        else {\n            let token;\n            try {\n                token = (await getMetadataToken({ ...endpoint, timeout })).toString();\n            }\n            catch (error) {\n                if ((error === null || error === void 0 ? void 0 : error.statusCode) === 400) {\n                    throw Object.assign(error, {\n                        message: \"EC2 Metadata token request returned error\",\n                    });\n                }\n                else if (error.message === \"TimeoutError\" || [403, 404, 405].includes(error.statusCode)) {\n                    disableFetchToken = true;\n                }\n                return getCredentials(maxRetries, { ...endpoint, timeout });\n            }\n            return getCredentials(maxRetries, {\n                ...endpoint,\n                headers: {\n                    \"x-aws-ec2-metadata-token\": token,\n                },\n                timeout,\n            });\n        }\n    };\n};\nconst getMetadataToken = async (options) => (0, httpRequest_1.httpRequest)({\n    ...options,\n    path: IMDS_TOKEN_PATH,\n    method: \"PUT\",\n    headers: {\n        \"x-aws-ec2-metadata-token-ttl-seconds\": \"21600\",\n    },\n});\nconst getProfile = async (options) => (await (0, httpRequest_1.httpRequest)({ ...options, path: IMDS_PATH })).toString();\nconst getCredentialsFromProfile = async (profile, options) => {\n    const credsResponse = JSON.parse((await (0, httpRequest_1.httpRequest)({\n        ...options,\n        path: IMDS_PATH + profile,\n    })).toString());\n    if (!(0, ImdsCredentials_1.isImdsCredentials)(credsResponse)) {\n        throw new property_provider_1.CredentialsProviderError(\"Invalid response received from instance metadata service.\");\n    }\n    return (0, ImdsCredentials_1.fromImdsCredentials)(credsResponse);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getInstanceMetadataEndpoint = exports.httpRequest = void 0;\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./fromContainerMetadata\"), exports);\ntslib_1.__exportStar(require(\"./fromInstanceMetadata\"), exports);\ntslib_1.__exportStar(require(\"./remoteProvider/RemoteProviderInit\"), exports);\ntslib_1.__exportStar(require(\"./types\"), exports);\nvar httpRequest_1 = require(\"./remoteProvider/httpRequest\");\nObject.defineProperty(exports, \"httpRequest\", { enumerable: true, get: function () { return httpRequest_1.httpRequest; } });\nvar getInstanceMetadataEndpoint_1 = require(\"./utils/getInstanceMetadataEndpoint\");\nObject.defineProperty(exports, \"getInstanceMetadataEndpoint\", { enumerable: true, get: function () { return getInstanceMetadataEndpoint_1.getInstanceMetadataEndpoint; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromImdsCredentials = exports.isImdsCredentials = void 0;\nconst isImdsCredentials = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.AccessKeyId === \"string\" &&\n    typeof arg.SecretAccessKey === \"string\" &&\n    typeof arg.Token === \"string\" &&\n    typeof arg.Expiration === \"string\";\nexports.isImdsCredentials = isImdsCredentials;\nconst fromImdsCredentials = (creds) => ({\n    accessKeyId: creds.AccessKeyId,\n    secretAccessKey: creds.SecretAccessKey,\n    sessionToken: creds.Token,\n    expiration: new Date(creds.Expiration),\n});\nexports.fromImdsCredentials = fromImdsCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.providerConfigFromInit = exports.DEFAULT_MAX_RETRIES = exports.DEFAULT_TIMEOUT = void 0;\nexports.DEFAULT_TIMEOUT = 1000;\nexports.DEFAULT_MAX_RETRIES = 0;\nconst providerConfigFromInit = ({ maxRetries = exports.DEFAULT_MAX_RETRIES, timeout = exports.DEFAULT_TIMEOUT, }) => ({ maxRetries, timeout });\nexports.providerConfigFromInit = providerConfigFromInit;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.httpRequest = void 0;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst buffer_1 = require(\"buffer\");\nconst http_1 = require(\"http\");\nfunction httpRequest(options) {\n    return new Promise((resolve, reject) => {\n        var _a;\n        const req = (0, http_1.request)({\n            method: \"GET\",\n            ...options,\n            hostname: (_a = options.hostname) === null || _a === void 0 ? void 0 : _a.replace(/^\\[(.+)\\]$/, \"$1\"),\n        });\n        req.on(\"error\", (err) => {\n            reject(Object.assign(new property_provider_1.ProviderError(\"Unable to connect to instance metadata service\"), err));\n            req.destroy();\n        });\n        req.on(\"timeout\", () => {\n            reject(new property_provider_1.ProviderError(\"TimeoutError from instance metadata service\"));\n            req.destroy();\n        });\n        req.on(\"response\", (res) => {\n            const { statusCode = 400 } = res;\n            if (statusCode < 200 || 300 <= statusCode) {\n                reject(Object.assign(new property_provider_1.ProviderError(\"Error response received from instance metadata service\"), { statusCode }));\n                req.destroy();\n            }\n            const chunks = [];\n            res.on(\"data\", (chunk) => {\n                chunks.push(chunk);\n            });\n            res.on(\"end\", () => {\n                resolve(buffer_1.Buffer.concat(chunks));\n                req.destroy();\n            });\n        });\n        req.end();\n    });\n}\nexports.httpRequest = httpRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.retry = void 0;\nconst retry = (toRetry, maxRetries) => {\n    let promise = toRetry();\n    for (let i = 0; i < maxRetries; i++) {\n        promise = promise.catch(toRetry);\n    }\n    return promise;\n};\nexports.retry = retry;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getExtendedInstanceMetadataCredentials = void 0;\nconst STATIC_STABILITY_REFRESH_INTERVAL_SECONDS = 5 * 60;\nconst STATIC_STABILITY_REFRESH_INTERVAL_JITTER_WINDOW_SECONDS = 5 * 60;\nconst STATIC_STABILITY_DOC_URL = \"https://docs.aws.amazon.com/sdkref/latest/guide/feature-static-credentials.html\";\nconst getExtendedInstanceMetadataCredentials = (credentials, logger) => {\n    var _a;\n    const refreshInterval = STATIC_STABILITY_REFRESH_INTERVAL_SECONDS +\n        Math.floor(Math.random() * STATIC_STABILITY_REFRESH_INTERVAL_JITTER_WINDOW_SECONDS);\n    const newExpiration = new Date(Date.now() + refreshInterval * 1000);\n    logger.warn(\"Attempting credential expiration extension due to a credential service availability issue. A refresh of these \" +\n        \"credentials will be attempted after ${new Date(newExpiration)}.\\nFor more information, please visit: \" +\n        STATIC_STABILITY_DOC_URL);\n    const originalExpiration = (_a = credentials.originalExpiration) !== null && _a !== void 0 ? _a : credentials.expiration;\n    return {\n        ...credentials,\n        ...(originalExpiration ? { originalExpiration } : {}),\n        expiration: newExpiration,\n    };\n};\nexports.getExtendedInstanceMetadataCredentials = getExtendedInstanceMetadataCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getInstanceMetadataEndpoint = void 0;\nconst node_config_provider_1 = require(\"@smithy/node-config-provider\");\nconst url_parser_1 = require(\"@smithy/url-parser\");\nconst Endpoint_1 = require(\"../config/Endpoint\");\nconst EndpointConfigOptions_1 = require(\"../config/EndpointConfigOptions\");\nconst EndpointMode_1 = require(\"../config/EndpointMode\");\nconst EndpointModeConfigOptions_1 = require(\"../config/EndpointModeConfigOptions\");\nconst getInstanceMetadataEndpoint = async () => (0, url_parser_1.parseUrl)((await getFromEndpointConfig()) || (await getFromEndpointModeConfig()));\nexports.getInstanceMetadataEndpoint = getInstanceMetadataEndpoint;\nconst getFromEndpointConfig = async () => (0, node_config_provider_1.loadConfig)(EndpointConfigOptions_1.ENDPOINT_CONFIG_OPTIONS)();\nconst getFromEndpointModeConfig = async () => {\n    const endpointMode = await (0, node_config_provider_1.loadConfig)(EndpointModeConfigOptions_1.ENDPOINT_MODE_CONFIG_OPTIONS)();\n    switch (endpointMode) {\n        case EndpointMode_1.EndpointMode.IPv4:\n            return Endpoint_1.Endpoint.IPv4;\n        case EndpointMode_1.EndpointMode.IPv6:\n            return Endpoint_1.Endpoint.IPv6;\n        default:\n            throw new Error(`Unsupported endpoint mode: ${endpointMode}.` + ` Select from ${Object.values(EndpointMode_1.EndpointMode)}`);\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.staticStabilityProvider = void 0;\nconst getExtendedInstanceMetadataCredentials_1 = require(\"./getExtendedInstanceMetadataCredentials\");\nconst staticStabilityProvider = (provider, options = {}) => {\n    const logger = (options === null || options === void 0 ? void 0 : options.logger) || console;\n    let pastCredentials;\n    return async () => {\n        let credentials;\n        try {\n            credentials = await provider();\n            if (credentials.expiration && credentials.expiration.getTime() < Date.now()) {\n                credentials = (0, getExtendedInstanceMetadataCredentials_1.getExtendedInstanceMetadataCredentials)(credentials, logger);\n            }\n        }\n        catch (e) {\n            if (pastCredentials) {\n                logger.warn(\"Credential renew failed: \", e);\n                credentials = (0, getExtendedInstanceMetadataCredentials_1.getExtendedInstanceMetadataCredentials)(pastCredentials, logger);\n            }\n            else {\n                throw e;\n            }\n        }\n        pastCredentials = credentials;\n        return credentials;\n    };\n};\nexports.staticStabilityProvider = staticStabilityProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventStreamCodec = void 0;\nconst crc32_1 = require(\"@aws-crypto/crc32\");\nconst HeaderMarshaller_1 = require(\"./HeaderMarshaller\");\nconst splitMessage_1 = require(\"./splitMessage\");\nclass EventStreamCodec {\n    constructor(toUtf8, fromUtf8) {\n        this.headerMarshaller = new HeaderMarshaller_1.HeaderMarshaller(toUtf8, fromUtf8);\n        this.messageBuffer = [];\n        this.isEndOfStream = false;\n    }\n    feed(message) {\n        this.messageBuffer.push(this.decode(message));\n    }\n    endOfStream() {\n        this.isEndOfStream = true;\n    }\n    getMessage() {\n        const message = this.messageBuffer.pop();\n        const isEndOfStream = this.isEndOfStream;\n        return {\n            getMessage() {\n                return message;\n            },\n            isEndOfStream() {\n                return isEndOfStream;\n            },\n        };\n    }\n    getAvailableMessages() {\n        const messages = this.messageBuffer;\n        this.messageBuffer = [];\n        const isEndOfStream = this.isEndOfStream;\n        return {\n            getMessages() {\n                return messages;\n            },\n            isEndOfStream() {\n                return isEndOfStream;\n            },\n        };\n    }\n    encode({ headers: rawHeaders, body }) {\n        const headers = this.headerMarshaller.format(rawHeaders);\n        const length = headers.byteLength + body.byteLength + 16;\n        const out = new Uint8Array(length);\n        const view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n        const checksum = new crc32_1.Crc32();\n        view.setUint32(0, length, false);\n        view.setUint32(4, headers.byteLength, false);\n        view.setUint32(8, checksum.update(out.subarray(0, 8)).digest(), false);\n        out.set(headers, 12);\n        out.set(body, headers.byteLength + 12);\n        view.setUint32(length - 4, checksum.update(out.subarray(8, length - 4)).digest(), false);\n        return out;\n    }\n    decode(message) {\n        const { headers, body } = (0, splitMessage_1.splitMessage)(message);\n        return { headers: this.headerMarshaller.parse(headers), body };\n    }\n    formatHeaders(rawHeaders) {\n        return this.headerMarshaller.format(rawHeaders);\n    }\n}\nexports.EventStreamCodec = EventStreamCodec;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HeaderMarshaller = void 0;\nconst util_hex_encoding_1 = require(\"@smithy/util-hex-encoding\");\nconst Int64_1 = require(\"./Int64\");\nclass HeaderMarshaller {\n    constructor(toUtf8, fromUtf8) {\n        this.toUtf8 = toUtf8;\n        this.fromUtf8 = fromUtf8;\n    }\n    format(headers) {\n        const chunks = [];\n        for (const headerName of Object.keys(headers)) {\n            const bytes = this.fromUtf8(headerName);\n            chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));\n        }\n        const out = new Uint8Array(chunks.reduce((carry, bytes) => carry + bytes.byteLength, 0));\n        let position = 0;\n        for (const chunk of chunks) {\n            out.set(chunk, position);\n            position += chunk.byteLength;\n        }\n        return out;\n    }\n    formatHeaderValue(header) {\n        switch (header.type) {\n            case \"boolean\":\n                return Uint8Array.from([header.value ? 0 : 1]);\n            case \"byte\":\n                return Uint8Array.from([2, header.value]);\n            case \"short\":\n                const shortView = new DataView(new ArrayBuffer(3));\n                shortView.setUint8(0, 3);\n                shortView.setInt16(1, header.value, false);\n                return new Uint8Array(shortView.buffer);\n            case \"integer\":\n                const intView = new DataView(new ArrayBuffer(5));\n                intView.setUint8(0, 4);\n                intView.setInt32(1, header.value, false);\n                return new Uint8Array(intView.buffer);\n            case \"long\":\n                const longBytes = new Uint8Array(9);\n                longBytes[0] = 5;\n                longBytes.set(header.value.bytes, 1);\n                return longBytes;\n            case \"binary\":\n                const binView = new DataView(new ArrayBuffer(3 + header.value.byteLength));\n                binView.setUint8(0, 6);\n                binView.setUint16(1, header.value.byteLength, false);\n                const binBytes = new Uint8Array(binView.buffer);\n                binBytes.set(header.value, 3);\n                return binBytes;\n            case \"string\":\n                const utf8Bytes = this.fromUtf8(header.value);\n                const strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));\n                strView.setUint8(0, 7);\n                strView.setUint16(1, utf8Bytes.byteLength, false);\n                const strBytes = new Uint8Array(strView.buffer);\n                strBytes.set(utf8Bytes, 3);\n                return strBytes;\n            case \"timestamp\":\n                const tsBytes = new Uint8Array(9);\n                tsBytes[0] = 8;\n                tsBytes.set(Int64_1.Int64.fromNumber(header.value.valueOf()).bytes, 1);\n                return tsBytes;\n            case \"uuid\":\n                if (!UUID_PATTERN.test(header.value)) {\n                    throw new Error(`Invalid UUID received: ${header.value}`);\n                }\n                const uuidBytes = new Uint8Array(17);\n                uuidBytes[0] = 9;\n                uuidBytes.set((0, util_hex_encoding_1.fromHex)(header.value.replace(/\\-/g, \"\")), 1);\n                return uuidBytes;\n        }\n    }\n    parse(headers) {\n        const out = {};\n        let position = 0;\n        while (position < headers.byteLength) {\n            const nameLength = headers.getUint8(position++);\n            const name = this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, nameLength));\n            position += nameLength;\n            switch (headers.getUint8(position++)) {\n                case 0:\n                    out[name] = {\n                        type: BOOLEAN_TAG,\n                        value: true,\n                    };\n                    break;\n                case 1:\n                    out[name] = {\n                        type: BOOLEAN_TAG,\n                        value: false,\n                    };\n                    break;\n                case 2:\n                    out[name] = {\n                        type: BYTE_TAG,\n                        value: headers.getInt8(position++),\n                    };\n                    break;\n                case 3:\n                    out[name] = {\n                        type: SHORT_TAG,\n                        value: headers.getInt16(position, false),\n                    };\n                    position += 2;\n                    break;\n                case 4:\n                    out[name] = {\n                        type: INT_TAG,\n                        value: headers.getInt32(position, false),\n                    };\n                    position += 4;\n                    break;\n                case 5:\n                    out[name] = {\n                        type: LONG_TAG,\n                        value: new Int64_1.Int64(new Uint8Array(headers.buffer, headers.byteOffset + position, 8)),\n                    };\n                    position += 8;\n                    break;\n                case 6:\n                    const binaryLength = headers.getUint16(position, false);\n                    position += 2;\n                    out[name] = {\n                        type: BINARY_TAG,\n                        value: new Uint8Array(headers.buffer, headers.byteOffset + position, binaryLength),\n                    };\n                    position += binaryLength;\n                    break;\n                case 7:\n                    const stringLength = headers.getUint16(position, false);\n                    position += 2;\n                    out[name] = {\n                        type: STRING_TAG,\n                        value: this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, stringLength)),\n                    };\n                    position += stringLength;\n                    break;\n                case 8:\n                    out[name] = {\n                        type: TIMESTAMP_TAG,\n                        value: new Date(new Int64_1.Int64(new Uint8Array(headers.buffer, headers.byteOffset + position, 8)).valueOf()),\n                    };\n                    position += 8;\n                    break;\n                case 9:\n                    const uuidBytes = new Uint8Array(headers.buffer, headers.byteOffset + position, 16);\n                    position += 16;\n                    out[name] = {\n                        type: UUID_TAG,\n                        value: `${(0, util_hex_encoding_1.toHex)(uuidBytes.subarray(0, 4))}-${(0, util_hex_encoding_1.toHex)(uuidBytes.subarray(4, 6))}-${(0, util_hex_encoding_1.toHex)(uuidBytes.subarray(6, 8))}-${(0, util_hex_encoding_1.toHex)(uuidBytes.subarray(8, 10))}-${(0, util_hex_encoding_1.toHex)(uuidBytes.subarray(10))}`,\n                    };\n                    break;\n                default:\n                    throw new Error(`Unrecognized header type tag`);\n            }\n        }\n        return out;\n    }\n}\nexports.HeaderMarshaller = HeaderMarshaller;\nvar HEADER_VALUE_TYPE;\n(function (HEADER_VALUE_TYPE) {\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"boolTrue\"] = 0] = \"boolTrue\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"boolFalse\"] = 1] = \"boolFalse\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"byte\"] = 2] = \"byte\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"short\"] = 3] = \"short\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"integer\"] = 4] = \"integer\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"long\"] = 5] = \"long\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"byteArray\"] = 6] = \"byteArray\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"string\"] = 7] = \"string\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"timestamp\"] = 8] = \"timestamp\";\n    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"uuid\"] = 9] = \"uuid\";\n})(HEADER_VALUE_TYPE || (HEADER_VALUE_TYPE = {}));\nconst BOOLEAN_TAG = \"boolean\";\nconst BYTE_TAG = \"byte\";\nconst SHORT_TAG = \"short\";\nconst INT_TAG = \"integer\";\nconst LONG_TAG = \"long\";\nconst BINARY_TAG = \"binary\";\nconst STRING_TAG = \"string\";\nconst TIMESTAMP_TAG = \"timestamp\";\nconst UUID_TAG = \"uuid\";\nconst UUID_PATTERN = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Int64 = void 0;\nconst util_hex_encoding_1 = require(\"@smithy/util-hex-encoding\");\nclass Int64 {\n    constructor(bytes) {\n        this.bytes = bytes;\n        if (bytes.byteLength !== 8) {\n            throw new Error(\"Int64 buffers must be exactly 8 bytes\");\n        }\n    }\n    static fromNumber(number) {\n        if (number > 9223372036854776000 || number < -9223372036854776000) {\n            throw new Error(`${number} is too large (or, if negative, too small) to represent as an Int64`);\n        }\n        const bytes = new Uint8Array(8);\n        for (let i = 7, remaining = Math.abs(Math.round(number)); i > -1 && remaining > 0; i--, remaining /= 256) {\n            bytes[i] = remaining;\n        }\n        if (number < 0) {\n            negate(bytes);\n        }\n        return new Int64(bytes);\n    }\n    valueOf() {\n        const bytes = this.bytes.slice(0);\n        const negative = bytes[0] & 0b10000000;\n        if (negative) {\n            negate(bytes);\n        }\n        return parseInt((0, util_hex_encoding_1.toHex)(bytes), 16) * (negative ? -1 : 1);\n    }\n    toString() {\n        return String(this.valueOf());\n    }\n}\nexports.Int64 = Int64;\nfunction negate(bytes) {\n    for (let i = 0; i < 8; i++) {\n        bytes[i] ^= 0xff;\n    }\n    for (let i = 7; i > -1; i--) {\n        bytes[i]++;\n        if (bytes[i] !== 0)\n            break;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessageDecoderStream = void 0;\nclass MessageDecoderStream {\n    constructor(options) {\n        this.options = options;\n    }\n    [Symbol.asyncIterator]() {\n        return this.asyncIterator();\n    }\n    async *asyncIterator() {\n        for await (const bytes of this.options.inputStream) {\n            const decoded = this.options.decoder.decode(bytes);\n            yield decoded;\n        }\n    }\n}\nexports.MessageDecoderStream = MessageDecoderStream;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MessageEncoderStream = void 0;\nclass MessageEncoderStream {\n    constructor(options) {\n        this.options = options;\n    }\n    [Symbol.asyncIterator]() {\n        return this.asyncIterator();\n    }\n    async *asyncIterator() {\n        for await (const msg of this.options.messageStream) {\n            const encoded = this.options.encoder.encode(msg);\n            yield encoded;\n        }\n        if (this.options.includeEndFrame) {\n            yield new Uint8Array(0);\n        }\n    }\n}\nexports.MessageEncoderStream = MessageEncoderStream;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SmithyMessageDecoderStream = void 0;\nclass SmithyMessageDecoderStream {\n    constructor(options) {\n        this.options = options;\n    }\n    [Symbol.asyncIterator]() {\n        return this.asyncIterator();\n    }\n    async *asyncIterator() {\n        for await (const message of this.options.messageStream) {\n            const deserialized = await this.options.deserializer(message);\n            if (deserialized === undefined)\n                continue;\n            yield deserialized;\n        }\n    }\n}\nexports.SmithyMessageDecoderStream = SmithyMessageDecoderStream;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SmithyMessageEncoderStream = void 0;\nclass SmithyMessageEncoderStream {\n    constructor(options) {\n        this.options = options;\n    }\n    [Symbol.asyncIterator]() {\n        return this.asyncIterator();\n    }\n    async *asyncIterator() {\n        for await (const chunk of this.options.inputStream) {\n            const payloadBuf = this.options.serializer(chunk);\n            yield payloadBuf;\n        }\n    }\n}\nexports.SmithyMessageEncoderStream = SmithyMessageEncoderStream;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./EventStreamCodec\"), exports);\ntslib_1.__exportStar(require(\"./HeaderMarshaller\"), exports);\ntslib_1.__exportStar(require(\"./Int64\"), exports);\ntslib_1.__exportStar(require(\"./Message\"), exports);\ntslib_1.__exportStar(require(\"./MessageDecoderStream\"), exports);\ntslib_1.__exportStar(require(\"./MessageEncoderStream\"), exports);\ntslib_1.__exportStar(require(\"./SmithyMessageDecoderStream\"), exports);\ntslib_1.__exportStar(require(\"./SmithyMessageEncoderStream\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.splitMessage = void 0;\nconst crc32_1 = require(\"@aws-crypto/crc32\");\nconst PRELUDE_MEMBER_LENGTH = 4;\nconst PRELUDE_LENGTH = PRELUDE_MEMBER_LENGTH * 2;\nconst CHECKSUM_LENGTH = 4;\nconst MINIMUM_MESSAGE_LENGTH = PRELUDE_LENGTH + CHECKSUM_LENGTH * 2;\nfunction splitMessage({ byteLength, byteOffset, buffer }) {\n    if (byteLength < MINIMUM_MESSAGE_LENGTH) {\n        throw new Error(\"Provided message too short to accommodate event stream message overhead\");\n    }\n    const view = new DataView(buffer, byteOffset, byteLength);\n    const messageLength = view.getUint32(0, false);\n    if (byteLength !== messageLength) {\n        throw new Error(\"Reported message length does not match received message length\");\n    }\n    const headerLength = view.getUint32(PRELUDE_MEMBER_LENGTH, false);\n    const expectedPreludeChecksum = view.getUint32(PRELUDE_LENGTH, false);\n    const expectedMessageChecksum = view.getUint32(byteLength - CHECKSUM_LENGTH, false);\n    const checksummer = new crc32_1.Crc32().update(new Uint8Array(buffer, byteOffset, PRELUDE_LENGTH));\n    if (expectedPreludeChecksum !== checksummer.digest()) {\n        throw new Error(`The prelude checksum specified in the message (${expectedPreludeChecksum}) does not match the calculated CRC32 checksum (${checksummer.digest()})`);\n    }\n    checksummer.update(new Uint8Array(buffer, byteOffset + PRELUDE_LENGTH, byteLength - (PRELUDE_LENGTH + CHECKSUM_LENGTH)));\n    if (expectedMessageChecksum !== checksummer.digest()) {\n        throw new Error(`The message checksum (${checksummer.digest()}) did not match the expected value of ${expectedMessageChecksum}`);\n    }\n    return {\n        headers: new DataView(buffer, byteOffset + PRELUDE_LENGTH + CHECKSUM_LENGTH, headerLength),\n        body: new Uint8Array(buffer, byteOffset + PRELUDE_LENGTH + CHECKSUM_LENGTH + headerLength, messageLength - headerLength - (PRELUDE_LENGTH + CHECKSUM_LENGTH + CHECKSUM_LENGTH)),\n    };\n}\nexports.splitMessage = splitMessage;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveEventStreamSerdeConfig = void 0;\nconst resolveEventStreamSerdeConfig = (input) => ({\n    ...input,\n    eventStreamMarshaller: input.eventStreamSerdeProvider(input),\n});\nexports.resolveEventStreamSerdeConfig = resolveEventStreamSerdeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./EventStreamSerdeConfig\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventStreamMarshaller = void 0;\nconst eventstream_serde_universal_1 = require(\"@smithy/eventstream-serde-universal\");\nconst stream_1 = require(\"stream\");\nconst utils_1 = require(\"./utils\");\nclass EventStreamMarshaller {\n    constructor({ utf8Encoder, utf8Decoder }) {\n        this.universalMarshaller = new eventstream_serde_universal_1.EventStreamMarshaller({\n            utf8Decoder,\n            utf8Encoder,\n        });\n    }\n    deserialize(body, deserializer) {\n        const bodyIterable = typeof body[Symbol.asyncIterator] === \"function\" ? body : (0, utils_1.readabletoIterable)(body);\n        return this.universalMarshaller.deserialize(bodyIterable, deserializer);\n    }\n    serialize(input, serializer) {\n        return stream_1.Readable.from(this.universalMarshaller.serialize(input, serializer));\n    }\n}\nexports.EventStreamMarshaller = EventStreamMarshaller;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./EventStreamMarshaller\"), exports);\ntslib_1.__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.eventStreamSerdeProvider = void 0;\nconst EventStreamMarshaller_1 = require(\"./EventStreamMarshaller\");\nconst eventStreamSerdeProvider = (options) => new EventStreamMarshaller_1.EventStreamMarshaller(options);\nexports.eventStreamSerdeProvider = eventStreamSerdeProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readabletoIterable = void 0;\nasync function* readabletoIterable(readStream) {\n    let streamEnded = false;\n    let generationEnded = false;\n    const records = new Array();\n    readStream.on(\"error\", (err) => {\n        if (!streamEnded) {\n            streamEnded = true;\n        }\n        if (err) {\n            throw err;\n        }\n    });\n    readStream.on(\"data\", (data) => {\n        records.push(data);\n    });\n    readStream.on(\"end\", () => {\n        streamEnded = true;\n    });\n    while (!generationEnded) {\n        const value = await new Promise((resolve) => setTimeout(() => resolve(records.shift()), 0));\n        if (value) {\n            yield value;\n        }\n        generationEnded = streamEnded && records.length === 0;\n    }\n}\nexports.readabletoIterable = readabletoIterable;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventStreamMarshaller = void 0;\nconst eventstream_codec_1 = require(\"@smithy/eventstream-codec\");\nconst getChunkedStream_1 = require(\"./getChunkedStream\");\nconst getUnmarshalledStream_1 = require(\"./getUnmarshalledStream\");\nclass EventStreamMarshaller {\n    constructor({ utf8Encoder, utf8Decoder }) {\n        this.eventStreamCodec = new eventstream_codec_1.EventStreamCodec(utf8Encoder, utf8Decoder);\n        this.utfEncoder = utf8Encoder;\n    }\n    deserialize(body, deserializer) {\n        const inputStream = (0, getChunkedStream_1.getChunkedStream)(body);\n        return new eventstream_codec_1.SmithyMessageDecoderStream({\n            messageStream: new eventstream_codec_1.MessageDecoderStream({ inputStream, decoder: this.eventStreamCodec }),\n            deserializer: (0, getUnmarshalledStream_1.getMessageUnmarshaller)(deserializer, this.utfEncoder),\n        });\n    }\n    serialize(inputStream, serializer) {\n        return new eventstream_codec_1.MessageEncoderStream({\n            messageStream: new eventstream_codec_1.SmithyMessageEncoderStream({ inputStream, serializer }),\n            encoder: this.eventStreamCodec,\n            includeEndFrame: true,\n        });\n    }\n}\nexports.EventStreamMarshaller = EventStreamMarshaller;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getChunkedStream = void 0;\nfunction getChunkedStream(source) {\n    let currentMessageTotalLength = 0;\n    let currentMessagePendingLength = 0;\n    let currentMessage = null;\n    let messageLengthBuffer = null;\n    const allocateMessage = (size) => {\n        if (typeof size !== \"number\") {\n            throw new Error(\"Attempted to allocate an event message where size was not a number: \" + size);\n        }\n        currentMessageTotalLength = size;\n        currentMessagePendingLength = 4;\n        currentMessage = new Uint8Array(size);\n        const currentMessageView = new DataView(currentMessage.buffer);\n        currentMessageView.setUint32(0, size, false);\n    };\n    const iterator = async function* () {\n        const sourceIterator = source[Symbol.asyncIterator]();\n        while (true) {\n            const { value, done } = await sourceIterator.next();\n            if (done) {\n                if (!currentMessageTotalLength) {\n                    return;\n                }\n                else if (currentMessageTotalLength === currentMessagePendingLength) {\n                    yield currentMessage;\n                }\n                else {\n                    throw new Error(\"Truncated event message received.\");\n                }\n                return;\n            }\n            const chunkLength = value.length;\n            let currentOffset = 0;\n            while (currentOffset < chunkLength) {\n                if (!currentMessage) {\n                    const bytesRemaining = chunkLength - currentOffset;\n                    if (!messageLengthBuffer) {\n                        messageLengthBuffer = new Uint8Array(4);\n                    }\n                    const numBytesForTotal = Math.min(4 - currentMessagePendingLength, bytesRemaining);\n                    messageLengthBuffer.set(value.slice(currentOffset, currentOffset + numBytesForTotal), currentMessagePendingLength);\n                    currentMessagePendingLength += numBytesForTotal;\n                    currentOffset += numBytesForTotal;\n                    if (currentMessagePendingLength < 4) {\n                        break;\n                    }\n                    allocateMessage(new DataView(messageLengthBuffer.buffer).getUint32(0, false));\n                    messageLengthBuffer = null;\n                }\n                const numBytesToWrite = Math.min(currentMessageTotalLength - currentMessagePendingLength, chunkLength - currentOffset);\n                currentMessage.set(value.slice(currentOffset, currentOffset + numBytesToWrite), currentMessagePendingLength);\n                currentMessagePendingLength += numBytesToWrite;\n                currentOffset += numBytesToWrite;\n                if (currentMessageTotalLength && currentMessageTotalLength === currentMessagePendingLength) {\n                    yield currentMessage;\n                    currentMessage = null;\n                    currentMessageTotalLength = 0;\n                    currentMessagePendingLength = 0;\n                }\n            }\n        }\n    };\n    return {\n        [Symbol.asyncIterator]: iterator,\n    };\n}\nexports.getChunkedStream = getChunkedStream;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMessageUnmarshaller = exports.getUnmarshalledStream = void 0;\nfunction getUnmarshalledStream(source, options) {\n    const messageUnmarshaller = getMessageUnmarshaller(options.deserializer, options.toUtf8);\n    return {\n        [Symbol.asyncIterator]: async function* () {\n            for await (const chunk of source) {\n                const message = options.eventStreamCodec.decode(chunk);\n                const type = await messageUnmarshaller(message);\n                if (type === undefined)\n                    continue;\n                yield type;\n            }\n        },\n    };\n}\nexports.getUnmarshalledStream = getUnmarshalledStream;\nfunction getMessageUnmarshaller(deserializer, toUtf8) {\n    return async function (message) {\n        const { value: messageType } = message.headers[\":message-type\"];\n        if (messageType === \"error\") {\n            const unmodeledError = new Error(message.headers[\":error-message\"].value || \"UnknownError\");\n            unmodeledError.name = message.headers[\":error-code\"].value;\n            throw unmodeledError;\n        }\n        else if (messageType === \"exception\") {\n            const code = message.headers[\":exception-type\"].value;\n            const exception = { [code]: message };\n            const deserializedException = await deserializer(exception);\n            if (deserializedException.$unknown) {\n                const error = new Error(toUtf8(message.body));\n                error.name = code;\n                throw error;\n            }\n            throw deserializedException[code];\n        }\n        else if (messageType === \"event\") {\n            const event = {\n                [message.headers[\":event-type\"].value]: message,\n            };\n            const deserialized = await deserializer(event);\n            if (deserialized.$unknown)\n                return;\n            return deserialized;\n        }\n        else {\n            throw Error(`Unrecognizable event type: ${message.headers[\":event-type\"].value}`);\n        }\n    };\n}\nexports.getMessageUnmarshaller = getMessageUnmarshaller;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./EventStreamMarshaller\"), exports);\ntslib_1.__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.eventStreamSerdeProvider = void 0;\nconst EventStreamMarshaller_1 = require(\"./EventStreamMarshaller\");\nconst eventStreamSerdeProvider = (options) => new EventStreamMarshaller_1.EventStreamMarshaller(options);\nexports.eventStreamSerdeProvider = eventStreamSerdeProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Hash = void 0;\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst buffer_1 = require(\"buffer\");\nconst crypto_1 = require(\"crypto\");\nclass Hash {\n    constructor(algorithmIdentifier, secret) {\n        this.algorithmIdentifier = algorithmIdentifier;\n        this.secret = secret;\n        this.reset();\n    }\n    update(toHash, encoding) {\n        this.hash.update((0, util_utf8_1.toUint8Array)(castSourceData(toHash, encoding)));\n    }\n    digest() {\n        return Promise.resolve(this.hash.digest());\n    }\n    reset() {\n        this.hash = this.secret\n            ? (0, crypto_1.createHmac)(this.algorithmIdentifier, castSourceData(this.secret))\n            : (0, crypto_1.createHash)(this.algorithmIdentifier);\n    }\n}\nexports.Hash = Hash;\nfunction castSourceData(toCast, encoding) {\n    if (buffer_1.Buffer.isBuffer(toCast)) {\n        return toCast;\n    }\n    if (typeof toCast === \"string\") {\n        return (0, util_buffer_from_1.fromString)(toCast, encoding);\n    }\n    if (ArrayBuffer.isView(toCast)) {\n        return (0, util_buffer_from_1.fromArrayBuffer)(toCast.buffer, toCast.byteOffset, toCast.byteLength);\n    }\n    return (0, util_buffer_from_1.fromArrayBuffer)(toCast);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HashCalculator = void 0;\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst stream_1 = require(\"stream\");\nclass HashCalculator extends stream_1.Writable {\n    constructor(hash, options) {\n        super(options);\n        this.hash = hash;\n    }\n    _write(chunk, encoding, callback) {\n        try {\n            this.hash.update((0, util_utf8_1.toUint8Array)(chunk));\n        }\n        catch (err) {\n            return callback(err);\n        }\n        callback();\n    }\n}\nexports.HashCalculator = HashCalculator;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fileStreamHasher = void 0;\nconst fs_1 = require(\"fs\");\nconst HashCalculator_1 = require(\"./HashCalculator\");\nconst fileStreamHasher = (hashCtor, fileStream) => new Promise((resolve, reject) => {\n    if (!isReadStream(fileStream)) {\n        reject(new Error(\"Unable to calculate hash for non-file streams.\"));\n        return;\n    }\n    const fileStreamTee = (0, fs_1.createReadStream)(fileStream.path, {\n        start: fileStream.start,\n        end: fileStream.end,\n    });\n    const hash = new hashCtor();\n    const hashCalculator = new HashCalculator_1.HashCalculator(hash);\n    fileStreamTee.pipe(hashCalculator);\n    fileStreamTee.on(\"error\", (err) => {\n        hashCalculator.end();\n        reject(err);\n    });\n    hashCalculator.on(\"error\", reject);\n    hashCalculator.on(\"finish\", function () {\n        hash.digest().then(resolve).catch(reject);\n    });\n});\nexports.fileStreamHasher = fileStreamHasher;\nconst isReadStream = (stream) => typeof stream.path === \"string\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./fileStreamHasher\"), exports);\ntslib_1.__exportStar(require(\"./readableStreamHasher\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readableStreamHasher = void 0;\nconst HashCalculator_1 = require(\"./HashCalculator\");\nconst readableStreamHasher = (hashCtor, readableStream) => {\n    if (readableStream.readableFlowing !== null) {\n        throw new Error(\"Unable to calculate hash for flowing readable stream\");\n    }\n    const hash = new hashCtor();\n    const hashCalculator = new HashCalculator_1.HashCalculator(hash);\n    readableStream.pipe(hashCalculator);\n    return new Promise((resolve, reject) => {\n        readableStream.on(\"error\", (err) => {\n            hashCalculator.end();\n            reject(err);\n        });\n        hashCalculator.on(\"error\", reject);\n        hashCalculator.on(\"finish\", () => {\n            hash.digest().then(resolve).catch(reject);\n        });\n    });\n};\nexports.readableStreamHasher = readableStreamHasher;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isArrayBuffer = void 0;\nconst isArrayBuffer = (arg) => (typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\";\nexports.isArrayBuffer = isArrayBuffer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getContentLengthPlugin = exports.contentLengthMiddlewareOptions = exports.contentLengthMiddleware = void 0;\nconst protocol_http_1 = require(\"@smithy/protocol-http\");\nconst CONTENT_LENGTH_HEADER = \"content-length\";\nfunction contentLengthMiddleware(bodyLengthChecker) {\n    return (next) => async (args) => {\n        const request = args.request;\n        if (protocol_http_1.HttpRequest.isInstance(request)) {\n            const { body, headers } = request;\n            if (body &&\n                Object.keys(headers)\n                    .map((str) => str.toLowerCase())\n                    .indexOf(CONTENT_LENGTH_HEADER) === -1) {\n                try {\n                    const length = bodyLengthChecker(body);\n                    request.headers = {\n                        ...request.headers,\n                        [CONTENT_LENGTH_HEADER]: String(length),\n                    };\n                }\n                catch (error) {\n                }\n            }\n        }\n        return next({\n            ...args,\n            request,\n        });\n    };\n}\nexports.contentLengthMiddleware = contentLengthMiddleware;\nexports.contentLengthMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n    name: \"contentLengthMiddleware\",\n    override: true,\n};\nconst getContentLengthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), exports.contentLengthMiddlewareOptions);\n    },\n});\nexports.getContentLengthPlugin = getContentLengthPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createConfigValueProvider = void 0;\nconst createConfigValueProvider = (configKey, canonicalEndpointParamKey, config) => {\n    const configProvider = async () => {\n        var _a;\n        const configValue = (_a = config[configKey]) !== null && _a !== void 0 ? _a : config[canonicalEndpointParamKey];\n        if (typeof configValue === \"function\") {\n            return configValue();\n        }\n        return configValue;\n    };\n    if (configKey === \"endpoint\" || canonicalEndpointParamKey === \"endpoint\") {\n        return async () => {\n            const endpoint = await configProvider();\n            if (endpoint && typeof endpoint === \"object\") {\n                if (\"url\" in endpoint) {\n                    return endpoint.url.href;\n                }\n                if (\"hostname\" in endpoint) {\n                    const { protocol, hostname, port, path } = endpoint;\n                    return `${protocol}//${hostname}${port ? \":\" + port : \"\"}${path}`;\n                }\n            }\n            return endpoint;\n        };\n    }\n    return configProvider;\n};\nexports.createConfigValueProvider = createConfigValueProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveParams = exports.getEndpointFromInstructions = void 0;\nconst service_customizations_1 = require(\"../service-customizations\");\nconst createConfigValueProvider_1 = require(\"./createConfigValueProvider\");\nconst getEndpointFromInstructions = async (commandInput, instructionsSupplier, clientConfig, context) => {\n    const endpointParams = await (0, exports.resolveParams)(commandInput, instructionsSupplier, clientConfig);\n    if (typeof clientConfig.endpointProvider !== \"function\") {\n        throw new Error(\"config.endpointProvider is not set.\");\n    }\n    const endpoint = clientConfig.endpointProvider(endpointParams, context);\n    return endpoint;\n};\nexports.getEndpointFromInstructions = getEndpointFromInstructions;\nconst resolveParams = async (commandInput, instructionsSupplier, clientConfig) => {\n    var _a;\n    const endpointParams = {};\n    const instructions = ((_a = instructionsSupplier === null || instructionsSupplier === void 0 ? void 0 : instructionsSupplier.getEndpointParameterInstructions) === null || _a === void 0 ? void 0 : _a.call(instructionsSupplier)) || {};\n    for (const [name, instruction] of Object.entries(instructions)) {\n        switch (instruction.type) {\n            case \"staticContextParams\":\n                endpointParams[name] = instruction.value;\n                break;\n            case \"contextParams\":\n                endpointParams[name] = commandInput[instruction.name];\n                break;\n            case \"clientContextParams\":\n            case \"builtInParams\":\n                endpointParams[name] = await (0, createConfigValueProvider_1.createConfigValueProvider)(instruction.name, name, clientConfig)();\n                break;\n            default:\n                throw new Error(\"Unrecognized endpoint parameter instruction: \" + JSON.stringify(instruction));\n        }\n    }\n    if (Object.keys(instructions).length === 0) {\n        Object.assign(endpointParams, clientConfig);\n    }\n    if (String(clientConfig.serviceId).toLowerCase() === \"s3\") {\n        await (0, service_customizations_1.resolveParamsForS3)(endpointParams);\n    }\n    return endpointParams;\n};\nexports.resolveParams = resolveParams;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./getEndpointFromInstructions\"), exports);\ntslib_1.__exportStar(require(\"./toEndpointV1\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toEndpointV1 = void 0;\nconst url_parser_1 = require(\"@smithy/url-parser\");\nconst toEndpointV1 = (endpoint) => {\n    if (typeof endpoint === \"object\") {\n        if (\"url\" in endpoint) {\n            return (0, url_parser_1.parseUrl)(endpoint.url);\n        }\n        return endpoint;\n    }\n    return (0, url_parser_1.parseUrl)(endpoint);\n};\nexports.toEndpointV1 = toEndpointV1;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.endpointMiddleware = void 0;\nconst getEndpointFromInstructions_1 = require(\"./adaptors/getEndpointFromInstructions\");\nconst endpointMiddleware = ({ config, instructions, }) => {\n    return (next, context) => async (args) => {\n        var _a, _b;\n        const endpoint = await (0, getEndpointFromInstructions_1.getEndpointFromInstructions)(args.input, {\n            getEndpointParameterInstructions() {\n                return instructions;\n            },\n        }, { ...config }, context);\n        context.endpointV2 = endpoint;\n        context.authSchemes = (_a = endpoint.properties) === null || _a === void 0 ? void 0 : _a.authSchemes;\n        const authScheme = (_b = context.authSchemes) === null || _b === void 0 ? void 0 : _b[0];\n        if (authScheme) {\n            context[\"signing_region\"] = authScheme.signingRegion;\n            context[\"signing_service\"] = authScheme.signingName;\n        }\n        return next({\n            ...args,\n        });\n    };\n};\nexports.endpointMiddleware = endpointMiddleware;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEndpointPlugin = exports.endpointMiddlewareOptions = void 0;\nconst middleware_serde_1 = require(\"@smithy/middleware-serde\");\nconst endpointMiddleware_1 = require(\"./endpointMiddleware\");\nexports.endpointMiddlewareOptions = {\n    step: \"serialize\",\n    tags: [\"ENDPOINT_PARAMETERS\", \"ENDPOINT_V2\", \"ENDPOINT\"],\n    name: \"endpointV2Middleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: middleware_serde_1.serializerMiddlewareOption.name,\n};\nconst getEndpointPlugin = (config, instructions) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo((0, endpointMiddleware_1.endpointMiddleware)({\n            config,\n            instructions,\n        }), exports.endpointMiddlewareOptions);\n    },\n});\nexports.getEndpointPlugin = getEndpointPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./adaptors\"), exports);\ntslib_1.__exportStar(require(\"./endpointMiddleware\"), exports);\ntslib_1.__exportStar(require(\"./getEndpointPlugin\"), exports);\ntslib_1.__exportStar(require(\"./resolveEndpointConfig\"), exports);\ntslib_1.__exportStar(require(\"./types\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveEndpointConfig = void 0;\nconst util_middleware_1 = require(\"@smithy/util-middleware\");\nconst toEndpointV1_1 = require(\"./adaptors/toEndpointV1\");\nconst resolveEndpointConfig = (input) => {\n    var _a, _b, _c;\n    const tls = (_a = input.tls) !== null && _a !== void 0 ? _a : true;\n    const { endpoint } = input;\n    const customEndpointProvider = endpoint != null ? async () => (0, toEndpointV1_1.toEndpointV1)(await (0, util_middleware_1.normalizeProvider)(endpoint)()) : undefined;\n    const isCustomEndpoint = !!endpoint;\n    return {\n        ...input,\n        endpoint: customEndpointProvider,\n        tls,\n        isCustomEndpoint,\n        useDualstackEndpoint: (0, util_middleware_1.normalizeProvider)((_b = input.useDualstackEndpoint) !== null && _b !== void 0 ? _b : false),\n        useFipsEndpoint: (0, util_middleware_1.normalizeProvider)((_c = input.useFipsEndpoint) !== null && _c !== void 0 ? _c : false),\n    };\n};\nexports.resolveEndpointConfig = resolveEndpointConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./s3\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isArnBucketName = exports.isDnsCompatibleBucketName = exports.S3_HOSTNAME_PATTERN = exports.DOT_PATTERN = exports.resolveParamsForS3 = void 0;\nconst resolveParamsForS3 = async (endpointParams) => {\n    const bucket = (endpointParams === null || endpointParams === void 0 ? void 0 : endpointParams.Bucket) || \"\";\n    if (typeof endpointParams.Bucket === \"string\") {\n        endpointParams.Bucket = bucket.replace(/#/g, encodeURIComponent(\"#\")).replace(/\\?/g, encodeURIComponent(\"?\"));\n    }\n    if ((0, exports.isArnBucketName)(bucket)) {\n        if (endpointParams.ForcePathStyle === true) {\n            throw new Error(\"Path-style addressing cannot be used with ARN buckets\");\n        }\n    }\n    else if (!(0, exports.isDnsCompatibleBucketName)(bucket) ||\n        (bucket.indexOf(\".\") !== -1 && !String(endpointParams.Endpoint).startsWith(\"http:\")) ||\n        bucket.toLowerCase() !== bucket ||\n        bucket.length < 3) {\n        endpointParams.ForcePathStyle = true;\n    }\n    if (endpointParams.DisableMultiRegionAccessPoints) {\n        endpointParams.disableMultiRegionAccessPoints = true;\n        endpointParams.DisableMRAP = true;\n    }\n    return endpointParams;\n};\nexports.resolveParamsForS3 = resolveParamsForS3;\nconst DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/;\nconst IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nconst DOTS_PATTERN = /\\.\\./;\nexports.DOT_PATTERN = /\\./;\nexports.S3_HOSTNAME_PATTERN = /^(.+\\.)?s3(-fips)?(\\.dualstack)?[.-]([a-z0-9-]+)\\./;\nconst isDnsCompatibleBucketName = (bucketName) => DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);\nexports.isDnsCompatibleBucketName = isDnsCompatibleBucketName;\nconst isArnBucketName = (bucketName) => {\n    const [arn, partition, service, region, account, typeOrId] = bucketName.split(\":\");\n    const isArn = arn === \"arn\" && bucketName.split(\":\").length >= 6;\n    const isValidArn = [arn, partition, service, account, typeOrId].filter(Boolean).length === 5;\n    if (isArn && !isValidArn) {\n        throw new Error(`Invalid ARN: ${bucketName} was an invalid ARN.`);\n    }\n    return arn === \"arn\" && !!partition && !!service && !!account && !!typeOrId;\n};\nexports.isArnBucketName = isArnBucketName;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AdaptiveRetryStrategy = void 0;\nconst util_retry_1 = require(\"@smithy/util-retry\");\nconst StandardRetryStrategy_1 = require(\"./StandardRetryStrategy\");\nclass AdaptiveRetryStrategy extends StandardRetryStrategy_1.StandardRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        const { rateLimiter, ...superOptions } = options !== null && options !== void 0 ? options : {};\n        super(maxAttemptsProvider, superOptions);\n        this.rateLimiter = rateLimiter !== null && rateLimiter !== void 0 ? rateLimiter : new util_retry_1.DefaultRateLimiter();\n        this.mode = util_retry_1.RETRY_MODES.ADAPTIVE;\n    }\n    async retry(next, args) {\n        return super.retry(next, args, {\n            beforeRequest: async () => {\n                return this.rateLimiter.getSendToken();\n            },\n            afterRequest: (response) => {\n                this.rateLimiter.updateClientSendingRate(response);\n            },\n        });\n    }\n}\nexports.AdaptiveRetryStrategy = AdaptiveRetryStrategy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StandardRetryStrategy = void 0;\nconst protocol_http_1 = require(\"@smithy/protocol-http\");\nconst service_error_classification_1 = require(\"@smithy/service-error-classification\");\nconst util_retry_1 = require(\"@smithy/util-retry\");\nconst uuid_1 = require(\"uuid\");\nconst defaultRetryQuota_1 = require(\"./defaultRetryQuota\");\nconst delayDecider_1 = require(\"./delayDecider\");\nconst retryDecider_1 = require(\"./retryDecider\");\nconst util_1 = require(\"./util\");\nclass StandardRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        var _a, _b, _c;\n        this.maxAttemptsProvider = maxAttemptsProvider;\n        this.mode = util_retry_1.RETRY_MODES.STANDARD;\n        this.retryDecider = (_a = options === null || options === void 0 ? void 0 : options.retryDecider) !== null && _a !== void 0 ? _a : retryDecider_1.defaultRetryDecider;\n        this.delayDecider = (_b = options === null || options === void 0 ? void 0 : options.delayDecider) !== null && _b !== void 0 ? _b : delayDecider_1.defaultDelayDecider;\n        this.retryQuota = (_c = options === null || options === void 0 ? void 0 : options.retryQuota) !== null && _c !== void 0 ? _c : (0, defaultRetryQuota_1.getDefaultRetryQuota)(util_retry_1.INITIAL_RETRY_TOKENS);\n    }\n    shouldRetry(error, attempts, maxAttempts) {\n        return attempts < maxAttempts && this.retryDecider(error) && this.retryQuota.hasRetryTokens(error);\n    }\n    async getMaxAttempts() {\n        let maxAttempts;\n        try {\n            maxAttempts = await this.maxAttemptsProvider();\n        }\n        catch (error) {\n            maxAttempts = util_retry_1.DEFAULT_MAX_ATTEMPTS;\n        }\n        return maxAttempts;\n    }\n    async retry(next, args, options) {\n        let retryTokenAmount;\n        let attempts = 0;\n        let totalDelay = 0;\n        const maxAttempts = await this.getMaxAttempts();\n        const { request } = args;\n        if (protocol_http_1.HttpRequest.isInstance(request)) {\n            request.headers[util_retry_1.INVOCATION_ID_HEADER] = (0, uuid_1.v4)();\n        }\n        while (true) {\n            try {\n                if (protocol_http_1.HttpRequest.isInstance(request)) {\n                    request.headers[util_retry_1.REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n                }\n                if (options === null || options === void 0 ? void 0 : options.beforeRequest) {\n                    await options.beforeRequest();\n                }\n                const { response, output } = await next(args);\n                if (options === null || options === void 0 ? void 0 : options.afterRequest) {\n                    options.afterRequest(response);\n                }\n                this.retryQuota.releaseRetryTokens(retryTokenAmount);\n                output.$metadata.attempts = attempts + 1;\n                output.$metadata.totalRetryDelay = totalDelay;\n                return { response, output };\n            }\n            catch (e) {\n                const err = (0, util_1.asSdkError)(e);\n                attempts++;\n                if (this.shouldRetry(err, attempts, maxAttempts)) {\n                    retryTokenAmount = this.retryQuota.retrieveRetryTokens(err);\n                    const delayFromDecider = this.delayDecider((0, service_error_classification_1.isThrottlingError)(err) ? util_retry_1.THROTTLING_RETRY_DELAY_BASE : util_retry_1.DEFAULT_RETRY_DELAY_BASE, attempts);\n                    const delayFromResponse = getDelayFromRetryAfterHeader(err.$response);\n                    const delay = Math.max(delayFromResponse || 0, delayFromDecider);\n                    totalDelay += delay;\n                    await new Promise((resolve) => setTimeout(resolve, delay));\n                    continue;\n                }\n                if (!err.$metadata) {\n                    err.$metadata = {};\n                }\n                err.$metadata.attempts = attempts;\n                err.$metadata.totalRetryDelay = totalDelay;\n                throw err;\n            }\n        }\n    }\n}\nexports.StandardRetryStrategy = StandardRetryStrategy;\nconst getDelayFromRetryAfterHeader = (response) => {\n    if (!protocol_http_1.HttpResponse.isInstance(response))\n        return;\n    const retryAfterHeaderName = Object.keys(response.headers).find((key) => key.toLowerCase() === \"retry-after\");\n    if (!retryAfterHeaderName)\n        return;\n    const retryAfter = response.headers[retryAfterHeaderName];\n    const retryAfterSeconds = Number(retryAfter);\n    if (!Number.isNaN(retryAfterSeconds))\n        return retryAfterSeconds * 1000;\n    const retryAfterDate = new Date(retryAfter);\n    return retryAfterDate.getTime() - Date.now();\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_RETRY_MODE_CONFIG_OPTIONS = exports.CONFIG_RETRY_MODE = exports.ENV_RETRY_MODE = exports.resolveRetryConfig = exports.NODE_MAX_ATTEMPT_CONFIG_OPTIONS = exports.CONFIG_MAX_ATTEMPTS = exports.ENV_MAX_ATTEMPTS = void 0;\nconst util_middleware_1 = require(\"@smithy/util-middleware\");\nconst util_retry_1 = require(\"@smithy/util-retry\");\nexports.ENV_MAX_ATTEMPTS = \"AWS_MAX_ATTEMPTS\";\nexports.CONFIG_MAX_ATTEMPTS = \"max_attempts\";\nexports.NODE_MAX_ATTEMPT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        const value = env[exports.ENV_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Environment variable ${exports.ENV_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    configFileSelector: (profile) => {\n        const value = profile[exports.CONFIG_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Shared config file entry ${exports.CONFIG_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    default: util_retry_1.DEFAULT_MAX_ATTEMPTS,\n};\nconst resolveRetryConfig = (input) => {\n    var _a;\n    const { retryStrategy } = input;\n    const maxAttempts = (0, util_middleware_1.normalizeProvider)((_a = input.maxAttempts) !== null && _a !== void 0 ? _a : util_retry_1.DEFAULT_MAX_ATTEMPTS);\n    return {\n        ...input,\n        maxAttempts,\n        retryStrategy: async () => {\n            if (retryStrategy) {\n                return retryStrategy;\n            }\n            const retryMode = await (0, util_middleware_1.normalizeProvider)(input.retryMode)();\n            if (retryMode === util_retry_1.RETRY_MODES.ADAPTIVE) {\n                return new util_retry_1.AdaptiveRetryStrategy(maxAttempts);\n            }\n            return new util_retry_1.StandardRetryStrategy(maxAttempts);\n        },\n    };\n};\nexports.resolveRetryConfig = resolveRetryConfig;\nexports.ENV_RETRY_MODE = \"AWS_RETRY_MODE\";\nexports.CONFIG_RETRY_MODE = \"retry_mode\";\nexports.NODE_RETRY_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[exports.ENV_RETRY_MODE],\n    configFileSelector: (profile) => profile[exports.CONFIG_RETRY_MODE],\n    default: util_retry_1.DEFAULT_RETRY_MODE,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultRetryQuota = void 0;\nconst util_retry_1 = require(\"@smithy/util-retry\");\nconst getDefaultRetryQuota = (initialRetryTokens, options) => {\n    var _a, _b, _c;\n    const MAX_CAPACITY = initialRetryTokens;\n    const noRetryIncrement = (_a = options === null || options === void 0 ? void 0 : options.noRetryIncrement) !== null && _a !== void 0 ? _a : util_retry_1.NO_RETRY_INCREMENT;\n    const retryCost = (_b = options === null || options === void 0 ? void 0 : options.retryCost) !== null && _b !== void 0 ? _b : util_retry_1.RETRY_COST;\n    const timeoutRetryCost = (_c = options === null || options === void 0 ? void 0 : options.timeoutRetryCost) !== null && _c !== void 0 ? _c : util_retry_1.TIMEOUT_RETRY_COST;\n    let availableCapacity = initialRetryTokens;\n    const getCapacityAmount = (error) => (error.name === \"TimeoutError\" ? timeoutRetryCost : retryCost);\n    const hasRetryTokens = (error) => getCapacityAmount(error) <= availableCapacity;\n    const retrieveRetryTokens = (error) => {\n        if (!hasRetryTokens(error)) {\n            throw new Error(\"No retry token available\");\n        }\n        const capacityAmount = getCapacityAmount(error);\n        availableCapacity -= capacityAmount;\n        return capacityAmount;\n    };\n    const releaseRetryTokens = (capacityReleaseAmount) => {\n        availableCapacity += capacityReleaseAmount !== null && capacityReleaseAmount !== void 0 ? capacityReleaseAmount : noRetryIncrement;\n        availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);\n    };\n    return Object.freeze({\n        hasRetryTokens,\n        retrieveRetryTokens,\n        releaseRetryTokens,\n    });\n};\nexports.getDefaultRetryQuota = getDefaultRetryQuota;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultDelayDecider = void 0;\nconst util_retry_1 = require(\"@smithy/util-retry\");\nconst defaultDelayDecider = (delayBase, attempts) => Math.floor(Math.min(util_retry_1.MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));\nexports.defaultDelayDecider = defaultDelayDecider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./AdaptiveRetryStrategy\"), exports);\ntslib_1.__exportStar(require(\"./StandardRetryStrategy\"), exports);\ntslib_1.__exportStar(require(\"./configurations\"), exports);\ntslib_1.__exportStar(require(\"./delayDecider\"), exports);\ntslib_1.__exportStar(require(\"./omitRetryHeadersMiddleware\"), exports);\ntslib_1.__exportStar(require(\"./retryDecider\"), exports);\ntslib_1.__exportStar(require(\"./retryMiddleware\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getOmitRetryHeadersPlugin = exports.omitRetryHeadersMiddlewareOptions = exports.omitRetryHeadersMiddleware = void 0;\nconst protocol_http_1 = require(\"@smithy/protocol-http\");\nconst util_retry_1 = require(\"@smithy/util-retry\");\nconst omitRetryHeadersMiddleware = () => (next) => async (args) => {\n    const { request } = args;\n    if (protocol_http_1.HttpRequest.isInstance(request)) {\n        delete request.headers[util_retry_1.INVOCATION_ID_HEADER];\n        delete request.headers[util_retry_1.REQUEST_HEADER];\n    }\n    return next(args);\n};\nexports.omitRetryHeadersMiddleware = omitRetryHeadersMiddleware;\nexports.omitRetryHeadersMiddlewareOptions = {\n    name: \"omitRetryHeadersMiddleware\",\n    tags: [\"RETRY\", \"HEADERS\", \"OMIT_RETRY_HEADERS\"],\n    relation: \"before\",\n    toMiddleware: \"awsAuthMiddleware\",\n    override: true,\n};\nconst getOmitRetryHeadersPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo((0, exports.omitRetryHeadersMiddleware)(), exports.omitRetryHeadersMiddlewareOptions);\n    },\n});\nexports.getOmitRetryHeadersPlugin = getOmitRetryHeadersPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultRetryDecider = void 0;\nconst service_error_classification_1 = require(\"@smithy/service-error-classification\");\nconst defaultRetryDecider = (error) => {\n    if (!error) {\n        return false;\n    }\n    return (0, service_error_classification_1.isRetryableByTrait)(error) || (0, service_error_classification_1.isClockSkewError)(error) || (0, service_error_classification_1.isThrottlingError)(error) || (0, service_error_classification_1.isTransientError)(error);\n};\nexports.defaultRetryDecider = defaultRetryDecider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRetryAfterHint = exports.getRetryPlugin = exports.retryMiddlewareOptions = exports.retryMiddleware = void 0;\nconst protocol_http_1 = require(\"@smithy/protocol-http\");\nconst service_error_classification_1 = require(\"@smithy/service-error-classification\");\nconst util_retry_1 = require(\"@smithy/util-retry\");\nconst uuid_1 = require(\"uuid\");\nconst util_1 = require(\"./util\");\nconst retryMiddleware = (options) => (next, context) => async (args) => {\n    let retryStrategy = await options.retryStrategy();\n    const maxAttempts = await options.maxAttempts();\n    if (isRetryStrategyV2(retryStrategy)) {\n        retryStrategy = retryStrategy;\n        let retryToken = await retryStrategy.acquireInitialRetryToken(context[\"partition_id\"]);\n        let lastError = new Error();\n        let attempts = 0;\n        let totalRetryDelay = 0;\n        const { request } = args;\n        if (protocol_http_1.HttpRequest.isInstance(request)) {\n            request.headers[util_retry_1.INVOCATION_ID_HEADER] = (0, uuid_1.v4)();\n        }\n        while (true) {\n            try {\n                if (protocol_http_1.HttpRequest.isInstance(request)) {\n                    request.headers[util_retry_1.REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n                }\n                const { response, output } = await next(args);\n                retryStrategy.recordSuccess(retryToken);\n                output.$metadata.attempts = attempts + 1;\n                output.$metadata.totalRetryDelay = totalRetryDelay;\n                return { response, output };\n            }\n            catch (e) {\n                const retryErrorInfo = getRetryErrorInfo(e);\n                lastError = (0, util_1.asSdkError)(e);\n                try {\n                    retryToken = await retryStrategy.refreshRetryTokenForRetry(retryToken, retryErrorInfo);\n                }\n                catch (refreshError) {\n                    if (!lastError.$metadata) {\n                        lastError.$metadata = {};\n                    }\n                    lastError.$metadata.attempts = attempts + 1;\n                    lastError.$metadata.totalRetryDelay = totalRetryDelay;\n                    throw lastError;\n                }\n                attempts = retryToken.getRetryCount();\n                const delay = retryToken.getRetryDelay();\n                totalRetryDelay += delay;\n                await new Promise((resolve) => setTimeout(resolve, delay));\n            }\n        }\n    }\n    else {\n        retryStrategy = retryStrategy;\n        if (retryStrategy === null || retryStrategy === void 0 ? void 0 : retryStrategy.mode)\n            context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", retryStrategy.mode]];\n        return retryStrategy.retry(next, args);\n    }\n};\nexports.retryMiddleware = retryMiddleware;\nconst isRetryStrategyV2 = (retryStrategy) => typeof retryStrategy.acquireInitialRetryToken !== \"undefined\" &&\n    typeof retryStrategy.refreshRetryTokenForRetry !== \"undefined\" &&\n    typeof retryStrategy.recordSuccess !== \"undefined\";\nconst getRetryErrorInfo = (error) => {\n    const errorInfo = {\n        errorType: getRetryErrorType(error),\n    };\n    const retryAfterHint = (0, exports.getRetryAfterHint)(error.$response);\n    if (retryAfterHint) {\n        errorInfo.retryAfterHint = retryAfterHint;\n    }\n    return errorInfo;\n};\nconst getRetryErrorType = (error) => {\n    if ((0, service_error_classification_1.isThrottlingError)(error))\n        return \"THROTTLING\";\n    if ((0, service_error_classification_1.isTransientError)(error))\n        return \"TRANSIENT\";\n    if ((0, service_error_classification_1.isServerError)(error))\n        return \"SERVER_ERROR\";\n    return \"CLIENT_ERROR\";\n};\nexports.retryMiddlewareOptions = {\n    name: \"retryMiddleware\",\n    tags: [\"RETRY\"],\n    step: \"finalizeRequest\",\n    priority: \"high\",\n    override: true,\n};\nconst getRetryPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add((0, exports.retryMiddleware)(options), exports.retryMiddlewareOptions);\n    },\n});\nexports.getRetryPlugin = getRetryPlugin;\nconst getRetryAfterHint = (response) => {\n    if (!protocol_http_1.HttpResponse.isInstance(response))\n        return;\n    const retryAfterHeaderName = Object.keys(response.headers).find((key) => key.toLowerCase() === \"retry-after\");\n    if (!retryAfterHeaderName)\n        return;\n    const retryAfter = response.headers[retryAfterHeaderName];\n    const retryAfterSeconds = Number(retryAfter);\n    if (!Number.isNaN(retryAfterSeconds))\n        return new Date(retryAfterSeconds * 1000);\n    const retryAfterDate = new Date(retryAfter);\n    return retryAfterDate;\n};\nexports.getRetryAfterHint = getRetryAfterHint;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.asSdkError = void 0;\nconst asSdkError = (error) => {\n    if (error instanceof Error)\n        return error;\n    if (error instanceof Object)\n        return Object.assign(new Error(), error);\n    if (typeof error === \"string\")\n        return new Error(error);\n    return new Error(`AWS SDK error wrapper for ${error}`);\n};\nexports.asSdkError = asSdkError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializerMiddleware = void 0;\nconst deserializerMiddleware = (options, deserializer) => (next, context) => async (args) => {\n    const { response } = await next(args);\n    try {\n        const parsed = await deserializer(response, options);\n        return {\n            response,\n            output: parsed,\n        };\n    }\n    catch (error) {\n        Object.defineProperty(error, \"$response\", {\n            value: response,\n        });\n        if (!(\"$metadata\" in error)) {\n            const hint = `Deserialization error: to see the raw response, inspect the hidden field {error}.$response on this object.`;\n            error.message += \"\\n  \" + hint;\n        }\n        throw error;\n    }\n};\nexports.deserializerMiddleware = deserializerMiddleware;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./deserializerMiddleware\"), exports);\ntslib_1.__exportStar(require(\"./serdePlugin\"), exports);\ntslib_1.__exportStar(require(\"./serializerMiddleware\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSerdePlugin = exports.serializerMiddlewareOption = exports.deserializerMiddlewareOption = void 0;\nconst deserializerMiddleware_1 = require(\"./deserializerMiddleware\");\nconst serializerMiddleware_1 = require(\"./serializerMiddleware\");\nexports.deserializerMiddlewareOption = {\n    name: \"deserializerMiddleware\",\n    step: \"deserialize\",\n    tags: [\"DESERIALIZER\"],\n    override: true,\n};\nexports.serializerMiddlewareOption = {\n    name: \"serializerMiddleware\",\n    step: \"serialize\",\n    tags: [\"SERIALIZER\"],\n    override: true,\n};\nfunction getSerdePlugin(config, serializer, deserializer) {\n    return {\n        applyToStack: (commandStack) => {\n            commandStack.add((0, deserializerMiddleware_1.deserializerMiddleware)(config, deserializer), exports.deserializerMiddlewareOption);\n            commandStack.add((0, serializerMiddleware_1.serializerMiddleware)(config, serializer), exports.serializerMiddlewareOption);\n        },\n    };\n}\nexports.getSerdePlugin = getSerdePlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializerMiddleware = void 0;\nconst serializerMiddleware = (options, serializer) => (next, context) => async (args) => {\n    var _a;\n    const endpoint = ((_a = context.endpointV2) === null || _a === void 0 ? void 0 : _a.url) && options.urlParser\n        ? async () => options.urlParser(context.endpointV2.url)\n        : options.endpoint;\n    if (!endpoint) {\n        throw new Error(\"No valid endpoint provider available.\");\n    }\n    const request = await serializer(args.input, { ...options, endpoint });\n    return next({\n        ...args,\n        request,\n    });\n};\nexports.serializerMiddleware = serializerMiddleware;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.constructStack = void 0;\nconst constructStack = () => {\n    let absoluteEntries = [];\n    let relativeEntries = [];\n    const entriesNameSet = new Set();\n    const sort = (entries) => entries.sort((a, b) => stepWeights[b.step] - stepWeights[a.step] ||\n        priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"]);\n    const removeByName = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.name && entry.name === toRemove) {\n                isRemoved = true;\n                entriesNameSet.delete(toRemove);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const removeByReference = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.middleware === toRemove) {\n                isRemoved = true;\n                if (entry.name)\n                    entriesNameSet.delete(entry.name);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const cloneTo = (toStack) => {\n        absoluteEntries.forEach((entry) => {\n            toStack.add(entry.middleware, { ...entry });\n        });\n        relativeEntries.forEach((entry) => {\n            toStack.addRelativeTo(entry.middleware, { ...entry });\n        });\n        return toStack;\n    };\n    const expandRelativeMiddlewareList = (from) => {\n        const expandedMiddlewareList = [];\n        from.before.forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        expandedMiddlewareList.push(from);\n        from.after.reverse().forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        return expandedMiddlewareList;\n    };\n    const getMiddlewareList = (debug = false) => {\n        const normalizedAbsoluteEntries = [];\n        const normalizedRelativeEntries = [];\n        const normalizedEntriesNameMap = {};\n        absoluteEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedAbsoluteEntries.push(normalizedEntry);\n        });\n        relativeEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedRelativeEntries.push(normalizedEntry);\n        });\n        normalizedRelativeEntries.forEach((entry) => {\n            if (entry.toMiddleware) {\n                const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n                if (toMiddleware === undefined) {\n                    if (debug) {\n                        return;\n                    }\n                    throw new Error(`${entry.toMiddleware} is not found when adding ${entry.name || \"anonymous\"} middleware ${entry.relation} ${entry.toMiddleware}`);\n                }\n                if (entry.relation === \"after\") {\n                    toMiddleware.after.push(entry);\n                }\n                if (entry.relation === \"before\") {\n                    toMiddleware.before.push(entry);\n                }\n            }\n        });\n        const mainChain = sort(normalizedAbsoluteEntries)\n            .map(expandRelativeMiddlewareList)\n            .reduce((wholeList, expandedMiddlewareList) => {\n            wholeList.push(...expandedMiddlewareList);\n            return wholeList;\n        }, []);\n        return mainChain;\n    };\n    const stack = {\n        add: (middleware, options = {}) => {\n            const { name, override } = options;\n            const entry = {\n                step: \"initialize\",\n                priority: \"normal\",\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = absoluteEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = absoluteEntries[toOverrideIndex];\n                    if (toOverride.step !== entry.step || toOverride.priority !== entry.priority) {\n                        throw new Error(`\"${name}\" middleware with ${toOverride.priority} priority in ${toOverride.step} step cannot be ` +\n                            `overridden by same-name middleware with ${entry.priority} priority in ${entry.step} step.`);\n                    }\n                    absoluteEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            absoluteEntries.push(entry);\n        },\n        addRelativeTo: (middleware, options) => {\n            const { name, override } = options;\n            const entry = {\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = relativeEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = relativeEntries[toOverrideIndex];\n                    if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n                        throw new Error(`\"${name}\" middleware ${toOverride.relation} \"${toOverride.toMiddleware}\" middleware cannot be overridden ` +\n                            `by same-name middleware ${entry.relation} \"${entry.toMiddleware}\" middleware.`);\n                    }\n                    relativeEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            relativeEntries.push(entry);\n        },\n        clone: () => cloneTo((0, exports.constructStack)()),\n        use: (plugin) => {\n            plugin.applyToStack(stack);\n        },\n        remove: (toRemove) => {\n            if (typeof toRemove === \"string\")\n                return removeByName(toRemove);\n            else\n                return removeByReference(toRemove);\n        },\n        removeByTag: (toRemove) => {\n            let isRemoved = false;\n            const filterCb = (entry) => {\n                const { tags, name } = entry;\n                if (tags && tags.includes(toRemove)) {\n                    if (name)\n                        entriesNameSet.delete(name);\n                    isRemoved = true;\n                    return false;\n                }\n                return true;\n            };\n            absoluteEntries = absoluteEntries.filter(filterCb);\n            relativeEntries = relativeEntries.filter(filterCb);\n            return isRemoved;\n        },\n        concat: (from) => {\n            const cloned = cloneTo((0, exports.constructStack)());\n            cloned.use(from);\n            return cloned;\n        },\n        applyToStack: cloneTo,\n        identify: () => {\n            return getMiddlewareList(true).map((mw) => {\n                return mw.name + \": \" + (mw.tags || []).join(\",\");\n            });\n        },\n        resolve: (handler, context) => {\n            for (const middleware of getMiddlewareList()\n                .map((entry) => entry.middleware)\n                .reverse()) {\n                handler = middleware(handler, context);\n            }\n            return handler;\n        },\n    };\n    return stack;\n};\nexports.constructStack = constructStack;\nconst stepWeights = {\n    initialize: 5,\n    serialize: 4,\n    build: 3,\n    finalizeRequest: 2,\n    deserialize: 1,\n};\nconst priorityWeights = {\n    high: 3,\n    normal: 2,\n    low: 1,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./MiddlewareStack\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadConfig = void 0;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst fromEnv_1 = require(\"./fromEnv\");\nconst fromSharedConfigFiles_1 = require(\"./fromSharedConfigFiles\");\nconst fromStatic_1 = require(\"./fromStatic\");\nconst loadConfig = ({ environmentVariableSelector, configFileSelector, default: defaultValue }, configuration = {}) => (0, property_provider_1.memoize)((0, property_provider_1.chain)((0, fromEnv_1.fromEnv)(environmentVariableSelector), (0, fromSharedConfigFiles_1.fromSharedConfigFiles)(configFileSelector, configuration), (0, fromStatic_1.fromStatic)(defaultValue)));\nexports.loadConfig = loadConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromEnv = void 0;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst fromEnv = (envVarSelector) => async () => {\n    try {\n        const config = envVarSelector(process.env);\n        if (config === undefined) {\n            throw new Error();\n        }\n        return config;\n    }\n    catch (e) {\n        throw new property_provider_1.CredentialsProviderError(e.message || `Cannot load config from environment variables with getter: ${envVarSelector}`);\n    }\n};\nexports.fromEnv = fromEnv;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromSharedConfigFiles = void 0;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst shared_ini_file_loader_1 = require(\"@smithy/shared-ini-file-loader\");\nconst fromSharedConfigFiles = (configSelector, { preferredFile = \"config\", ...init } = {}) => async () => {\n    const profile = (0, shared_ini_file_loader_1.getProfileName)(init);\n    const { configFile, credentialsFile } = await (0, shared_ini_file_loader_1.loadSharedConfigFiles)(init);\n    const profileFromCredentials = credentialsFile[profile] || {};\n    const profileFromConfig = configFile[profile] || {};\n    const mergedProfile = preferredFile === \"config\"\n        ? { ...profileFromCredentials, ...profileFromConfig }\n        : { ...profileFromConfig, ...profileFromCredentials };\n    try {\n        const configValue = configSelector(mergedProfile);\n        if (configValue === undefined) {\n            throw new Error();\n        }\n        return configValue;\n    }\n    catch (e) {\n        throw new property_provider_1.CredentialsProviderError(e.message || `Cannot load config for profile ${profile} in SDK configuration files with getter: ${configSelector}`);\n    }\n};\nexports.fromSharedConfigFiles = fromSharedConfigFiles;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromStatic = void 0;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst isFunction = (func) => typeof func === \"function\";\nconst fromStatic = (defaultValue) => isFunction(defaultValue) ? async () => await defaultValue() : (0, property_provider_1.fromStatic)(defaultValue);\nexports.fromStatic = fromStatic;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./configLoader\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODEJS_TIMEOUT_ERROR_CODES = void 0;\nexports.NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"EPIPE\", \"ETIMEDOUT\"];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTransformedHeaders = void 0;\nconst getTransformedHeaders = (headers) => {\n    const transformedHeaders = {};\n    for (const name of Object.keys(headers)) {\n        const headerValues = headers[name];\n        transformedHeaders[name] = Array.isArray(headerValues) ? headerValues.join(\",\") : headerValues;\n    }\n    return transformedHeaders;\n};\nexports.getTransformedHeaders = getTransformedHeaders;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./node-http-handler\"), exports);\ntslib_1.__exportStar(require(\"./node-http2-handler\"), exports);\ntslib_1.__exportStar(require(\"./stream-collector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeHttpHandler = exports.DEFAULT_REQUEST_TIMEOUT = void 0;\nconst protocol_http_1 = require(\"@smithy/protocol-http\");\nconst querystring_builder_1 = require(\"@smithy/querystring-builder\");\nconst http_1 = require(\"http\");\nconst https_1 = require(\"https\");\nconst constants_1 = require(\"./constants\");\nconst get_transformed_headers_1 = require(\"./get-transformed-headers\");\nconst set_connection_timeout_1 = require(\"./set-connection-timeout\");\nconst set_socket_keep_alive_1 = require(\"./set-socket-keep-alive\");\nconst set_socket_timeout_1 = require(\"./set-socket-timeout\");\nconst write_request_body_1 = require(\"./write-request-body\");\nexports.DEFAULT_REQUEST_TIMEOUT = 0;\nclass NodeHttpHandler {\n    constructor(options) {\n        this.metadata = { handlerProtocol: \"http/1.1\" };\n        this.configProvider = new Promise((resolve, reject) => {\n            if (typeof options === \"function\") {\n                options()\n                    .then((_options) => {\n                    resolve(this.resolveDefaultConfig(_options));\n                })\n                    .catch(reject);\n            }\n            else {\n                resolve(this.resolveDefaultConfig(options));\n            }\n        });\n    }\n    resolveDefaultConfig(options) {\n        const { requestTimeout, connectionTimeout, socketTimeout, httpAgent, httpsAgent } = options || {};\n        const keepAlive = true;\n        const maxSockets = 50;\n        return {\n            connectionTimeout,\n            requestTimeout: requestTimeout !== null && requestTimeout !== void 0 ? requestTimeout : socketTimeout,\n            httpAgent: httpAgent || new http_1.Agent({ keepAlive, maxSockets }),\n            httpsAgent: httpsAgent || new https_1.Agent({ keepAlive, maxSockets }),\n        };\n    }\n    destroy() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.httpAgent) === null || _b === void 0 ? void 0 : _b.destroy();\n        (_d = (_c = this.config) === null || _c === void 0 ? void 0 : _c.httpsAgent) === null || _d === void 0 ? void 0 : _d.destroy();\n    }\n    async handle(request, { abortSignal } = {}) {\n        if (!this.config) {\n            this.config = await this.configProvider;\n        }\n        return new Promise((_resolve, _reject) => {\n            var _a, _b;\n            let writeRequestBodyPromise = undefined;\n            const resolve = async (arg) => {\n                await writeRequestBodyPromise;\n                _resolve(arg);\n            };\n            const reject = async (arg) => {\n                await writeRequestBodyPromise;\n                _reject(arg);\n            };\n            if (!this.config) {\n                throw new Error(\"Node HTTP request handler config is not resolved\");\n            }\n            if (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted) {\n                const abortError = new Error(\"Request aborted\");\n                abortError.name = \"AbortError\";\n                reject(abortError);\n                return;\n            }\n            const isSSL = request.protocol === \"https:\";\n            const queryString = (0, querystring_builder_1.buildQueryString)(request.query || {});\n            let auth = undefined;\n            if (request.username != null || request.password != null) {\n                const username = (_a = request.username) !== null && _a !== void 0 ? _a : \"\";\n                const password = (_b = request.password) !== null && _b !== void 0 ? _b : \"\";\n                auth = `${username}:${password}`;\n            }\n            let path = request.path;\n            if (queryString) {\n                path += `?${queryString}`;\n            }\n            if (request.fragment) {\n                path += `#${request.fragment}`;\n            }\n            const nodeHttpsOptions = {\n                headers: request.headers,\n                host: request.hostname,\n                method: request.method,\n                path,\n                port: request.port,\n                agent: isSSL ? this.config.httpsAgent : this.config.httpAgent,\n                auth,\n            };\n            const requestFunc = isSSL ? https_1.request : http_1.request;\n            const req = requestFunc(nodeHttpsOptions, (res) => {\n                const httpResponse = new protocol_http_1.HttpResponse({\n                    statusCode: res.statusCode || -1,\n                    reason: res.statusMessage,\n                    headers: (0, get_transformed_headers_1.getTransformedHeaders)(res.headers),\n                    body: res,\n                });\n                resolve({ response: httpResponse });\n            });\n            req.on(\"error\", (err) => {\n                if (constants_1.NODEJS_TIMEOUT_ERROR_CODES.includes(err.code)) {\n                    reject(Object.assign(err, { name: \"TimeoutError\" }));\n                }\n                else {\n                    reject(err);\n                }\n            });\n            (0, set_connection_timeout_1.setConnectionTimeout)(req, reject, this.config.connectionTimeout);\n            (0, set_socket_timeout_1.setSocketTimeout)(req, reject, this.config.requestTimeout);\n            if (abortSignal) {\n                abortSignal.onabort = () => {\n                    req.abort();\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n            }\n            const httpAgent = nodeHttpsOptions.agent;\n            if (typeof httpAgent === \"object\" && \"keepAlive\" in httpAgent) {\n                (0, set_socket_keep_alive_1.setSocketKeepAlive)(req, {\n                    keepAlive: httpAgent.keepAlive,\n                    keepAliveMsecs: httpAgent.keepAliveMsecs,\n                });\n            }\n            writeRequestBodyPromise = (0, write_request_body_1.writeRequestBody)(req, request, this.config.requestTimeout).catch(_reject);\n        });\n    }\n}\nexports.NodeHttpHandler = NodeHttpHandler;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeHttp2ConnectionManager = void 0;\nconst tslib_1 = require(\"tslib\");\nconst http2_1 = tslib_1.__importDefault(require(\"http2\"));\nconst node_http2_connection_pool_1 = require(\"./node-http2-connection-pool\");\nclass NodeHttp2ConnectionManager {\n    constructor(config) {\n        this.sessionCache = new Map();\n        this.config = config;\n        if (this.config.maxConcurrency && this.config.maxConcurrency <= 0) {\n            throw new RangeError(\"maxConcurrency must be greater than zero.\");\n        }\n    }\n    lease(requestContext, connectionConfiguration) {\n        const url = this.getUrlString(requestContext);\n        const existingPool = this.sessionCache.get(url);\n        if (existingPool) {\n            const existingSession = existingPool.poll();\n            if (existingSession && !this.config.disableConcurrency) {\n                return existingSession;\n            }\n        }\n        const session = http2_1.default.connect(url);\n        if (this.config.maxConcurrency) {\n            session.settings({ maxConcurrentStreams: this.config.maxConcurrency }, (err) => {\n                if (err) {\n                    throw new Error(\"Fail to set maxConcurrentStreams to \" +\n                        this.config.maxConcurrency +\n                        \"when creating new session for \" +\n                        requestContext.destination.toString());\n                }\n            });\n        }\n        session.unref();\n        const destroySessionCb = () => {\n            session.destroy();\n            this.deleteSession(url, session);\n        };\n        session.on(\"goaway\", destroySessionCb);\n        session.on(\"error\", destroySessionCb);\n        session.on(\"frameError\", destroySessionCb);\n        session.on(\"close\", () => this.deleteSession(url, session));\n        if (connectionConfiguration.requestTimeout) {\n            session.setTimeout(connectionConfiguration.requestTimeout, destroySessionCb);\n        }\n        const connectionPool = this.sessionCache.get(url) || new node_http2_connection_pool_1.NodeHttp2ConnectionPool();\n        connectionPool.offerLast(session);\n        this.sessionCache.set(url, connectionPool);\n        return session;\n    }\n    deleteSession(authority, session) {\n        const existingConnectionPool = this.sessionCache.get(authority);\n        if (!existingConnectionPool) {\n            return;\n        }\n        if (!existingConnectionPool.contains(session)) {\n            return;\n        }\n        existingConnectionPool.remove(session);\n        this.sessionCache.set(authority, existingConnectionPool);\n    }\n    release(requestContext, session) {\n        var _a;\n        const cacheKey = this.getUrlString(requestContext);\n        (_a = this.sessionCache.get(cacheKey)) === null || _a === void 0 ? void 0 : _a.offerLast(session);\n    }\n    destroy() {\n        for (const [key, connectionPool] of this.sessionCache) {\n            for (const session of connectionPool) {\n                if (!session.destroyed) {\n                    session.destroy();\n                }\n                connectionPool.remove(session);\n            }\n            this.sessionCache.delete(key);\n        }\n    }\n    setMaxConcurrentStreams(maxConcurrentStreams) {\n        if (this.config.maxConcurrency && this.config.maxConcurrency <= 0) {\n            throw new RangeError(\"maxConcurrentStreams must be greater than zero.\");\n        }\n        this.config.maxConcurrency = maxConcurrentStreams;\n    }\n    setDisableConcurrentStreams(disableConcurrentStreams) {\n        this.config.disableConcurrency = disableConcurrentStreams;\n    }\n    getUrlString(request) {\n        return request.destination.toString();\n    }\n}\nexports.NodeHttp2ConnectionManager = NodeHttp2ConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeHttp2ConnectionPool = void 0;\nclass NodeHttp2ConnectionPool {\n    constructor(sessions) {\n        this.sessions = [];\n        this.sessions = sessions !== null && sessions !== void 0 ? sessions : [];\n    }\n    poll() {\n        if (this.sessions.length > 0) {\n            return this.sessions.shift();\n        }\n    }\n    offerLast(session) {\n        this.sessions.push(session);\n    }\n    contains(session) {\n        return this.sessions.includes(session);\n    }\n    remove(session) {\n        this.sessions = this.sessions.filter((s) => s !== session);\n    }\n    [Symbol.iterator]() {\n        return this.sessions[Symbol.iterator]();\n    }\n    destroy(connection) {\n        for (const session of this.sessions) {\n            if (session === connection) {\n                if (!session.destroyed) {\n                    session.destroy();\n                }\n            }\n        }\n    }\n}\nexports.NodeHttp2ConnectionPool = NodeHttp2ConnectionPool;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeHttp2Handler = void 0;\nconst protocol_http_1 = require(\"@smithy/protocol-http\");\nconst querystring_builder_1 = require(\"@smithy/querystring-builder\");\nconst http2_1 = require(\"http2\");\nconst get_transformed_headers_1 = require(\"./get-transformed-headers\");\nconst node_http2_connection_manager_1 = require(\"./node-http2-connection-manager\");\nconst write_request_body_1 = require(\"./write-request-body\");\nclass NodeHttp2Handler {\n    constructor(options) {\n        this.metadata = { handlerProtocol: \"h2\" };\n        this.connectionManager = new node_http2_connection_manager_1.NodeHttp2ConnectionManager({});\n        this.configProvider = new Promise((resolve, reject) => {\n            if (typeof options === \"function\") {\n                options()\n                    .then((opts) => {\n                    resolve(opts || {});\n                })\n                    .catch(reject);\n            }\n            else {\n                resolve(options || {});\n            }\n        });\n    }\n    destroy() {\n        this.connectionManager.destroy();\n    }\n    async handle(request, { abortSignal } = {}) {\n        if (!this.config) {\n            this.config = await this.configProvider;\n            this.connectionManager.setDisableConcurrentStreams(this.config.disableConcurrentStreams || false);\n            if (this.config.maxConcurrentStreams) {\n                this.connectionManager.setMaxConcurrentStreams(this.config.maxConcurrentStreams);\n            }\n        }\n        const { requestTimeout, disableConcurrentStreams } = this.config;\n        return new Promise((_resolve, _reject) => {\n            var _a, _b, _c;\n            let fulfilled = false;\n            let writeRequestBodyPromise = undefined;\n            const resolve = async (arg) => {\n                await writeRequestBodyPromise;\n                _resolve(arg);\n            };\n            const reject = async (arg) => {\n                await writeRequestBodyPromise;\n                _reject(arg);\n            };\n            if (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted) {\n                fulfilled = true;\n                const abortError = new Error(\"Request aborted\");\n                abortError.name = \"AbortError\";\n                reject(abortError);\n                return;\n            }\n            const { hostname, method, port, protocol, query } = request;\n            let auth = \"\";\n            if (request.username != null || request.password != null) {\n                const username = (_a = request.username) !== null && _a !== void 0 ? _a : \"\";\n                const password = (_b = request.password) !== null && _b !== void 0 ? _b : \"\";\n                auth = `${username}:${password}@`;\n            }\n            const authority = `${protocol}//${auth}${hostname}${port ? `:${port}` : \"\"}`;\n            const requestContext = { destination: new URL(authority) };\n            const session = this.connectionManager.lease(requestContext, {\n                requestTimeout: (_c = this.config) === null || _c === void 0 ? void 0 : _c.sessionTimeout,\n                disableConcurrentStreams: disableConcurrentStreams || false,\n            });\n            const rejectWithDestroy = (err) => {\n                if (disableConcurrentStreams) {\n                    this.destroySession(session);\n                }\n                fulfilled = true;\n                reject(err);\n            };\n            const queryString = (0, querystring_builder_1.buildQueryString)(query || {});\n            let path = request.path;\n            if (queryString) {\n                path += `?${queryString}`;\n            }\n            if (request.fragment) {\n                path += `#${request.fragment}`;\n            }\n            const req = session.request({\n                ...request.headers,\n                [http2_1.constants.HTTP2_HEADER_PATH]: path,\n                [http2_1.constants.HTTP2_HEADER_METHOD]: method,\n            });\n            session.ref();\n            req.on(\"response\", (headers) => {\n                const httpResponse = new protocol_http_1.HttpResponse({\n                    statusCode: headers[\":status\"] || -1,\n                    headers: (0, get_transformed_headers_1.getTransformedHeaders)(headers),\n                    body: req,\n                });\n                fulfilled = true;\n                resolve({ response: httpResponse });\n                if (disableConcurrentStreams) {\n                    session.close();\n                    this.connectionManager.deleteSession(authority, session);\n                }\n            });\n            if (requestTimeout) {\n                req.setTimeout(requestTimeout, () => {\n                    req.close();\n                    const timeoutError = new Error(`Stream timed out because of no activity for ${requestTimeout} ms`);\n                    timeoutError.name = \"TimeoutError\";\n                    rejectWithDestroy(timeoutError);\n                });\n            }\n            if (abortSignal) {\n                abortSignal.onabort = () => {\n                    req.close();\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    rejectWithDestroy(abortError);\n                };\n            }\n            req.on(\"frameError\", (type, code, id) => {\n                rejectWithDestroy(new Error(`Frame type id ${type} in stream id ${id} has failed with code ${code}.`));\n            });\n            req.on(\"error\", rejectWithDestroy);\n            req.on(\"aborted\", () => {\n                rejectWithDestroy(new Error(`HTTP/2 stream is abnormally aborted in mid-communication with result code ${req.rstCode}.`));\n            });\n            req.on(\"close\", () => {\n                session.unref();\n                if (disableConcurrentStreams) {\n                    session.destroy();\n                }\n                if (!fulfilled) {\n                    rejectWithDestroy(new Error(\"Unexpected error: http2 request did not get a response\"));\n                }\n            });\n            writeRequestBodyPromise = (0, write_request_body_1.writeRequestBody)(req, request, requestTimeout);\n        });\n    }\n    destroySession(session) {\n        if (!session.destroyed) {\n            session.destroy();\n        }\n    }\n}\nexports.NodeHttp2Handler = NodeHttp2Handler;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setConnectionTimeout = void 0;\nconst setConnectionTimeout = (request, reject, timeoutInMs = 0) => {\n    if (!timeoutInMs) {\n        return;\n    }\n    const timeoutId = setTimeout(() => {\n        request.destroy();\n        reject(Object.assign(new Error(`Socket timed out without establishing a connection within ${timeoutInMs} ms`), {\n            name: \"TimeoutError\",\n        }));\n    }, timeoutInMs);\n    request.on(\"socket\", (socket) => {\n        if (socket.connecting) {\n            socket.on(\"connect\", () => {\n                clearTimeout(timeoutId);\n            });\n        }\n        else {\n            clearTimeout(timeoutId);\n        }\n    });\n};\nexports.setConnectionTimeout = setConnectionTimeout;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setSocketKeepAlive = void 0;\nconst setSocketKeepAlive = (request, { keepAlive, keepAliveMsecs }) => {\n    if (keepAlive !== true) {\n        return;\n    }\n    request.on(\"socket\", (socket) => {\n        socket.setKeepAlive(keepAlive, keepAliveMsecs || 0);\n    });\n};\nexports.setSocketKeepAlive = setSocketKeepAlive;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setSocketTimeout = void 0;\nconst setSocketTimeout = (request, reject, timeoutInMs = 0) => {\n    request.setTimeout(timeoutInMs, () => {\n        request.destroy();\n        reject(Object.assign(new Error(`Connection timed out after ${timeoutInMs} ms`), { name: \"TimeoutError\" }));\n    });\n};\nexports.setSocketTimeout = setSocketTimeout;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Collector = void 0;\nconst stream_1 = require(\"stream\");\nclass Collector extends stream_1.Writable {\n    constructor() {\n        super(...arguments);\n        this.bufferedBytes = [];\n    }\n    _write(chunk, encoding, callback) {\n        this.bufferedBytes.push(chunk);\n        callback();\n    }\n}\nexports.Collector = Collector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.streamCollector = void 0;\nconst collector_1 = require(\"./collector\");\nconst streamCollector = (stream) => new Promise((resolve, reject) => {\n    const collector = new collector_1.Collector();\n    stream.pipe(collector);\n    stream.on(\"error\", (err) => {\n        collector.end();\n        reject(err);\n    });\n    collector.on(\"error\", reject);\n    collector.on(\"finish\", function () {\n        const bytes = new Uint8Array(Buffer.concat(this.bufferedBytes));\n        resolve(bytes);\n    });\n});\nexports.streamCollector = streamCollector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.writeRequestBody = void 0;\nconst stream_1 = require(\"stream\");\nconst MIN_WAIT_TIME = 1000;\nasync function writeRequestBody(httpRequest, request, maxContinueTimeoutMs = MIN_WAIT_TIME) {\n    var _a;\n    const headers = (_a = request.headers) !== null && _a !== void 0 ? _a : {};\n    const expect = headers[\"Expect\"] || headers[\"expect\"];\n    let timeoutId = -1;\n    let hasError = false;\n    if (expect === \"100-continue\") {\n        await Promise.race([\n            new Promise((resolve) => {\n                timeoutId = Number(setTimeout(resolve, Math.max(MIN_WAIT_TIME, maxContinueTimeoutMs)));\n            }),\n            new Promise((resolve) => {\n                httpRequest.on(\"continue\", () => {\n                    clearTimeout(timeoutId);\n                    resolve();\n                });\n                httpRequest.on(\"error\", () => {\n                    hasError = true;\n                    clearTimeout(timeoutId);\n                    resolve();\n                });\n            }),\n        ]);\n    }\n    if (!hasError) {\n        writeBody(httpRequest, request.body);\n    }\n}\nexports.writeRequestBody = writeRequestBody;\nfunction writeBody(httpRequest, body) {\n    if (body instanceof stream_1.Readable) {\n        body.pipe(httpRequest);\n    }\n    else if (body) {\n        httpRequest.end(Buffer.from(body));\n    }\n    else {\n        httpRequest.end();\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CredentialsProviderError = void 0;\nconst ProviderError_1 = require(\"./ProviderError\");\nclass CredentialsProviderError extends ProviderError_1.ProviderError {\n    constructor(message, tryNextLink = true) {\n        super(message, tryNextLink);\n        this.tryNextLink = tryNextLink;\n        this.name = \"CredentialsProviderError\";\n        Object.setPrototypeOf(this, CredentialsProviderError.prototype);\n    }\n}\nexports.CredentialsProviderError = CredentialsProviderError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProviderError = void 0;\nclass ProviderError extends Error {\n    constructor(message, tryNextLink = true) {\n        super(message);\n        this.tryNextLink = tryNextLink;\n        this.name = \"ProviderError\";\n        Object.setPrototypeOf(this, ProviderError.prototype);\n    }\n    static from(error, tryNextLink = true) {\n        return Object.assign(new this(error.message, tryNextLink), error);\n    }\n}\nexports.ProviderError = ProviderError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenProviderError = void 0;\nconst ProviderError_1 = require(\"./ProviderError\");\nclass TokenProviderError extends ProviderError_1.ProviderError {\n    constructor(message, tryNextLink = true) {\n        super(message, tryNextLink);\n        this.tryNextLink = tryNextLink;\n        this.name = \"TokenProviderError\";\n        Object.setPrototypeOf(this, TokenProviderError.prototype);\n    }\n}\nexports.TokenProviderError = TokenProviderError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chain = void 0;\nconst ProviderError_1 = require(\"./ProviderError\");\nfunction chain(...providers) {\n    return () => {\n        let promise = Promise.reject(new ProviderError_1.ProviderError(\"No providers in chain\"));\n        for (const provider of providers) {\n            promise = promise.catch((err) => {\n                if (err === null || err === void 0 ? void 0 : err.tryNextLink) {\n                    return provider();\n                }\n                throw err;\n            });\n        }\n        return promise;\n    };\n}\nexports.chain = chain;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromStatic = void 0;\nconst fromStatic = (staticValue) => () => Promise.resolve(staticValue);\nexports.fromStatic = fromStatic;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./CredentialsProviderError\"), exports);\ntslib_1.__exportStar(require(\"./ProviderError\"), exports);\ntslib_1.__exportStar(require(\"./TokenProviderError\"), exports);\ntslib_1.__exportStar(require(\"./chain\"), exports);\ntslib_1.__exportStar(require(\"./fromStatic\"), exports);\ntslib_1.__exportStar(require(\"./memoize\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.memoize = void 0;\nconst memoize = (provider, isExpired, requiresRefresh) => {\n    let resolved;\n    let pending;\n    let hasResult;\n    let isConstant = false;\n    const coalesceProvider = async () => {\n        if (!pending) {\n            pending = provider();\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n            isConstant = false;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async (options) => {\n            if (!hasResult || (options === null || options === void 0 ? void 0 : options.forceRefresh)) {\n                resolved = await coalesceProvider();\n            }\n            return resolved;\n        };\n    }\n    return async (options) => {\n        if (!hasResult || (options === null || options === void 0 ? void 0 : options.forceRefresh)) {\n            resolved = await coalesceProvider();\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (requiresRefresh && !requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider();\n            return resolved;\n        }\n        return resolved;\n    };\n};\nexports.memoize = memoize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Field = void 0;\nconst types_1 = require(\"@smithy/types\");\nclass Field {\n    constructor({ name, kind = types_1.FieldPosition.HEADER, values = [] }) {\n        this.name = name;\n        this.kind = kind;\n        this.values = values;\n    }\n    add(value) {\n        this.values.push(value);\n    }\n    set(values) {\n        this.values = values;\n    }\n    remove(value) {\n        this.values = this.values.filter((v) => v !== value);\n    }\n    toString() {\n        return this.values.map((v) => (v.includes(\",\") || v.includes(\" \") ? `\"${v}\"` : v)).join(\", \");\n    }\n    get() {\n        return this.values;\n    }\n}\nexports.Field = Field;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Fields = void 0;\nclass Fields {\n    constructor({ fields = [], encoding = \"utf-8\" }) {\n        this.entries = {};\n        fields.forEach(this.setField.bind(this));\n        this.encoding = encoding;\n    }\n    setField(field) {\n        this.entries[field.name.toLowerCase()] = field;\n    }\n    getField(name) {\n        return this.entries[name.toLowerCase()];\n    }\n    removeField(name) {\n        delete this.entries[name.toLowerCase()];\n    }\n    getByType(kind) {\n        return Object.values(this.entries).filter((field) => field.kind === kind);\n    }\n}\nexports.Fields = Fields;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpRequest = void 0;\nclass HttpRequest {\n    constructor(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.slice(-1) !== \":\"\n                ? `${options.protocol}:`\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\n        this.username = options.username;\n        this.password = options.password;\n        this.fragment = options.fragment;\n    }\n    static isInstance(request) {\n        if (!request)\n            return false;\n        const req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    }\n    clone() {\n        const cloned = new HttpRequest({\n            ...this,\n            headers: { ...this.headers },\n        });\n        if (cloned.query)\n            cloned.query = cloneQuery(cloned.query);\n        return cloned;\n    }\n}\nexports.HttpRequest = HttpRequest;\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce((carry, paramName) => {\n        const param = query[paramName];\n        return {\n            ...carry,\n            [paramName]: Array.isArray(param) ? [...param] : param,\n        };\n    }, {});\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpResponse = void 0;\nclass HttpResponse {\n    constructor(options) {\n        this.statusCode = options.statusCode;\n        this.reason = options.reason;\n        this.headers = options.headers || {};\n        this.body = options.body;\n    }\n    static isInstance(response) {\n        if (!response)\n            return false;\n        const resp = response;\n        return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n    }\n}\nexports.HttpResponse = HttpResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./Field\"), exports);\ntslib_1.__exportStar(require(\"./Fields\"), exports);\ntslib_1.__exportStar(require(\"./httpHandler\"), exports);\ntslib_1.__exportStar(require(\"./httpRequest\"), exports);\ntslib_1.__exportStar(require(\"./httpResponse\"), exports);\ntslib_1.__exportStar(require(\"./isValidHostname\"), exports);\ntslib_1.__exportStar(require(\"./types\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidHostname = void 0;\nfunction isValidHostname(hostname) {\n    const hostPattern = /^[a-z0-9][a-z0-9\\.\\-]*[a-z0-9]$/;\n    return hostPattern.test(hostname);\n}\nexports.isValidHostname = isValidHostname;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildQueryString = void 0;\nconst util_uri_escape_1 = require(\"@smithy/util-uri-escape\");\nfunction buildQueryString(query) {\n    const parts = [];\n    for (let key of Object.keys(query).sort()) {\n        const value = query[key];\n        key = (0, util_uri_escape_1.escapeUri)(key);\n        if (Array.isArray(value)) {\n            for (let i = 0, iLen = value.length; i < iLen; i++) {\n                parts.push(`${key}=${(0, util_uri_escape_1.escapeUri)(value[i])}`);\n            }\n        }\n        else {\n            let qsEntry = key;\n            if (value || typeof value === \"string\") {\n                qsEntry += `=${(0, util_uri_escape_1.escapeUri)(value)}`;\n            }\n            parts.push(qsEntry);\n        }\n    }\n    return parts.join(\"&\");\n}\nexports.buildQueryString = buildQueryString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseQueryString = void 0;\nfunction parseQueryString(querystring) {\n    const query = {};\n    querystring = querystring.replace(/^\\?/, \"\");\n    if (querystring) {\n        for (const pair of querystring.split(\"&\")) {\n            let [key, value = null] = pair.split(\"=\");\n            key = decodeURIComponent(key);\n            if (value) {\n                value = decodeURIComponent(value);\n            }\n            if (!(key in query)) {\n                query[key] = value;\n            }\n            else if (Array.isArray(query[key])) {\n                query[key].push(value);\n            }\n            else {\n                query[key] = [query[key], value];\n            }\n        }\n    }\n    return query;\n}\nexports.parseQueryString = parseQueryString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODEJS_TIMEOUT_ERROR_CODES = exports.TRANSIENT_ERROR_STATUS_CODES = exports.TRANSIENT_ERROR_CODES = exports.THROTTLING_ERROR_CODES = exports.CLOCK_SKEW_ERROR_CODES = void 0;\nexports.CLOCK_SKEW_ERROR_CODES = [\n    \"AuthFailure\",\n    \"InvalidSignatureException\",\n    \"RequestExpired\",\n    \"RequestInTheFuture\",\n    \"RequestTimeTooSkewed\",\n    \"SignatureDoesNotMatch\",\n];\nexports.THROTTLING_ERROR_CODES = [\n    \"BandwidthLimitExceeded\",\n    \"EC2ThrottledException\",\n    \"LimitExceededException\",\n    \"PriorRequestNotComplete\",\n    \"ProvisionedThroughputExceededException\",\n    \"RequestLimitExceeded\",\n    \"RequestThrottled\",\n    \"RequestThrottledException\",\n    \"SlowDown\",\n    \"ThrottledException\",\n    \"Throttling\",\n    \"ThrottlingException\",\n    \"TooManyRequestsException\",\n    \"TransactionInProgressException\",\n];\nexports.TRANSIENT_ERROR_CODES = [\"TimeoutError\", \"RequestTimeout\", \"RequestTimeoutException\"];\nexports.TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];\nexports.NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"ECONNREFUSED\", \"EPIPE\", \"ETIMEDOUT\"];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isServerError = exports.isTransientError = exports.isThrottlingError = exports.isClockSkewError = exports.isRetryableByTrait = void 0;\nconst constants_1 = require(\"./constants\");\nconst isRetryableByTrait = (error) => error.$retryable !== undefined;\nexports.isRetryableByTrait = isRetryableByTrait;\nconst isClockSkewError = (error) => constants_1.CLOCK_SKEW_ERROR_CODES.includes(error.name);\nexports.isClockSkewError = isClockSkewError;\nconst isThrottlingError = (error) => {\n    var _a, _b;\n    return ((_a = error.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode) === 429 ||\n        constants_1.THROTTLING_ERROR_CODES.includes(error.name) ||\n        ((_b = error.$retryable) === null || _b === void 0 ? void 0 : _b.throttling) == true;\n};\nexports.isThrottlingError = isThrottlingError;\nconst isTransientError = (error) => {\n    var _a;\n    return constants_1.TRANSIENT_ERROR_CODES.includes(error.name) ||\n        constants_1.NODEJS_TIMEOUT_ERROR_CODES.includes((error === null || error === void 0 ? void 0 : error.code) || \"\") ||\n        constants_1.TRANSIENT_ERROR_STATUS_CODES.includes(((_a = error.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode) || 0);\n};\nexports.isTransientError = isTransientError;\nconst isServerError = (error) => {\n    var _a;\n    if (((_a = error.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode) !== undefined) {\n        const statusCode = error.$metadata.httpStatusCode;\n        if (500 <= statusCode && statusCode <= 599 && !(0, exports.isTransientError)(error)) {\n            return true;\n        }\n        return false;\n    }\n    return false;\n};\nexports.isServerError = isServerError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getConfigFilepath = exports.ENV_CONFIG_PATH = void 0;\nconst path_1 = require(\"path\");\nconst getHomeDir_1 = require(\"./getHomeDir\");\nexports.ENV_CONFIG_PATH = \"AWS_CONFIG_FILE\";\nconst getConfigFilepath = () => process.env[exports.ENV_CONFIG_PATH] || (0, path_1.join)((0, getHomeDir_1.getHomeDir)(), \".aws\", \"config\");\nexports.getConfigFilepath = getConfigFilepath;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCredentialsFilepath = exports.ENV_CREDENTIALS_PATH = void 0;\nconst path_1 = require(\"path\");\nconst getHomeDir_1 = require(\"./getHomeDir\");\nexports.ENV_CREDENTIALS_PATH = \"AWS_SHARED_CREDENTIALS_FILE\";\nconst getCredentialsFilepath = () => process.env[exports.ENV_CREDENTIALS_PATH] || (0, path_1.join)((0, getHomeDir_1.getHomeDir)(), \".aws\", \"credentials\");\nexports.getCredentialsFilepath = getCredentialsFilepath;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getHomeDir = void 0;\nconst os_1 = require(\"os\");\nconst path_1 = require(\"path\");\nconst getHomeDir = () => {\n    const { HOME, USERPROFILE, HOMEPATH, HOMEDRIVE = `C:${path_1.sep}` } = process.env;\n    if (HOME)\n        return HOME;\n    if (USERPROFILE)\n        return USERPROFILE;\n    if (HOMEPATH)\n        return `${HOMEDRIVE}${HOMEPATH}`;\n    return (0, os_1.homedir)();\n};\nexports.getHomeDir = getHomeDir;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getProfileData = void 0;\nconst profileKeyRegex = /^profile\\s([\"'])?([^\\1]+)\\1$/;\nconst getProfileData = (data) => Object.entries(data)\n    .filter(([key]) => profileKeyRegex.test(key))\n    .reduce((acc, [key, value]) => ({ ...acc, [profileKeyRegex.exec(key)[2]]: value }), {\n    ...(data.default && { default: data.default }),\n});\nexports.getProfileData = getProfileData;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getProfileName = exports.DEFAULT_PROFILE = exports.ENV_PROFILE = void 0;\nexports.ENV_PROFILE = \"AWS_PROFILE\";\nexports.DEFAULT_PROFILE = \"default\";\nconst getProfileName = (init) => init.profile || process.env[exports.ENV_PROFILE] || exports.DEFAULT_PROFILE;\nexports.getProfileName = getProfileName;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSSOTokenFilepath = void 0;\nconst crypto_1 = require(\"crypto\");\nconst path_1 = require(\"path\");\nconst getHomeDir_1 = require(\"./getHomeDir\");\nconst getSSOTokenFilepath = (id) => {\n    const hasher = (0, crypto_1.createHash)(\"sha1\");\n    const cacheName = hasher.update(id).digest(\"hex\");\n    return (0, path_1.join)((0, getHomeDir_1.getHomeDir)(), \".aws\", \"sso\", \"cache\", `${cacheName}.json`);\n};\nexports.getSSOTokenFilepath = getSSOTokenFilepath;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSSOTokenFromFile = void 0;\nconst fs_1 = require(\"fs\");\nconst getSSOTokenFilepath_1 = require(\"./getSSOTokenFilepath\");\nconst { readFile } = fs_1.promises;\nconst getSSOTokenFromFile = async (id) => {\n    const ssoTokenFilepath = (0, getSSOTokenFilepath_1.getSSOTokenFilepath)(id);\n    const ssoTokenText = await readFile(ssoTokenFilepath, \"utf8\");\n    return JSON.parse(ssoTokenText);\n};\nexports.getSSOTokenFromFile = getSSOTokenFromFile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSsoSessionData = void 0;\nconst ssoSessionKeyRegex = /^sso-session\\s([\"'])?([^\\1]+)\\1$/;\nconst getSsoSessionData = (data) => Object.entries(data)\n    .filter(([key]) => ssoSessionKeyRegex.test(key))\n    .reduce((acc, [key, value]) => ({ ...acc, [ssoSessionKeyRegex.exec(key)[2]]: value }), {});\nexports.getSsoSessionData = getSsoSessionData;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./getHomeDir\"), exports);\ntslib_1.__exportStar(require(\"./getProfileName\"), exports);\ntslib_1.__exportStar(require(\"./getSSOTokenFilepath\"), exports);\ntslib_1.__exportStar(require(\"./getSSOTokenFromFile\"), exports);\ntslib_1.__exportStar(require(\"./loadSharedConfigFiles\"), exports);\ntslib_1.__exportStar(require(\"./loadSsoSessionData\"), exports);\ntslib_1.__exportStar(require(\"./parseKnownFiles\"), exports);\ntslib_1.__exportStar(require(\"./types\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadSharedConfigFiles = void 0;\nconst getConfigFilepath_1 = require(\"./getConfigFilepath\");\nconst getCredentialsFilepath_1 = require(\"./getCredentialsFilepath\");\nconst getProfileData_1 = require(\"./getProfileData\");\nconst parseIni_1 = require(\"./parseIni\");\nconst slurpFile_1 = require(\"./slurpFile\");\nconst swallowError = () => ({});\nconst loadSharedConfigFiles = async (init = {}) => {\n    const { filepath = (0, getCredentialsFilepath_1.getCredentialsFilepath)(), configFilepath = (0, getConfigFilepath_1.getConfigFilepath)() } = init;\n    const parsedFiles = await Promise.all([\n        (0, slurpFile_1.slurpFile)(configFilepath, {\n            ignoreCache: init.ignoreCache,\n        })\n            .then(parseIni_1.parseIni)\n            .then(getProfileData_1.getProfileData)\n            .catch(swallowError),\n        (0, slurpFile_1.slurpFile)(filepath, {\n            ignoreCache: init.ignoreCache,\n        })\n            .then(parseIni_1.parseIni)\n            .catch(swallowError),\n    ]);\n    return {\n        configFile: parsedFiles[0],\n        credentialsFile: parsedFiles[1],\n    };\n};\nexports.loadSharedConfigFiles = loadSharedConfigFiles;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadSsoSessionData = void 0;\nconst getConfigFilepath_1 = require(\"./getConfigFilepath\");\nconst getSsoSessionData_1 = require(\"./getSsoSessionData\");\nconst parseIni_1 = require(\"./parseIni\");\nconst slurpFile_1 = require(\"./slurpFile\");\nconst swallowError = () => ({});\nconst loadSsoSessionData = async (init = {}) => {\n    var _a;\n    return (0, slurpFile_1.slurpFile)((_a = init.configFilepath) !== null && _a !== void 0 ? _a : (0, getConfigFilepath_1.getConfigFilepath)())\n        .then(parseIni_1.parseIni)\n        .then(getSsoSessionData_1.getSsoSessionData)\n        .catch(swallowError);\n};\nexports.loadSsoSessionData = loadSsoSessionData;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeConfigFiles = void 0;\nconst mergeConfigFiles = (...files) => {\n    const merged = {};\n    for (const file of files) {\n        for (const [key, values] of Object.entries(file)) {\n            if (merged[key] !== undefined) {\n                Object.assign(merged[key], values);\n            }\n            else {\n                merged[key] = values;\n            }\n        }\n    }\n    return merged;\n};\nexports.mergeConfigFiles = mergeConfigFiles;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseIni = void 0;\nconst profileNameBlockList = [\"__proto__\", \"profile __proto__\"];\nconst parseIni = (iniData) => {\n    const map = {};\n    let currentSection;\n    for (let line of iniData.split(/\\r?\\n/)) {\n        line = line.split(/(^|\\s)[;#]/)[0].trim();\n        const isSection = line[0] === \"[\" && line[line.length - 1] === \"]\";\n        if (isSection) {\n            currentSection = line.substring(1, line.length - 1);\n            if (profileNameBlockList.includes(currentSection)) {\n                throw new Error(`Found invalid profile name \"${currentSection}\"`);\n            }\n        }\n        else if (currentSection) {\n            const indexOfEqualsSign = line.indexOf(\"=\");\n            const start = 0;\n            const end = line.length - 1;\n            const isAssignment = indexOfEqualsSign !== -1 && indexOfEqualsSign !== start && indexOfEqualsSign !== end;\n            if (isAssignment) {\n                const [name, value] = [\n                    line.substring(0, indexOfEqualsSign).trim(),\n                    line.substring(indexOfEqualsSign + 1).trim(),\n                ];\n                map[currentSection] = map[currentSection] || {};\n                map[currentSection][name] = value;\n            }\n        }\n    }\n    return map;\n};\nexports.parseIni = parseIni;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseKnownFiles = void 0;\nconst loadSharedConfigFiles_1 = require(\"./loadSharedConfigFiles\");\nconst mergeConfigFiles_1 = require(\"./mergeConfigFiles\");\nconst parseKnownFiles = async (init) => {\n    const parsedFiles = await (0, loadSharedConfigFiles_1.loadSharedConfigFiles)(init);\n    return (0, mergeConfigFiles_1.mergeConfigFiles)(parsedFiles.configFile, parsedFiles.credentialsFile);\n};\nexports.parseKnownFiles = parseKnownFiles;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.slurpFile = void 0;\nconst fs_1 = require(\"fs\");\nconst { readFile } = fs_1.promises;\nconst filePromisesHash = {};\nconst slurpFile = (path, options) => {\n    if (!filePromisesHash[path] || (options === null || options === void 0 ? void 0 : options.ignoreCache)) {\n        filePromisesHash[path] = readFile(path, \"utf8\");\n    }\n    return filePromisesHash[path];\n};\nexports.slurpFile = slurpFile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignatureV4 = void 0;\nconst eventstream_codec_1 = require(\"@smithy/eventstream-codec\");\nconst util_hex_encoding_1 = require(\"@smithy/util-hex-encoding\");\nconst util_middleware_1 = require(\"@smithy/util-middleware\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst constants_1 = require(\"./constants\");\nconst credentialDerivation_1 = require(\"./credentialDerivation\");\nconst getCanonicalHeaders_1 = require(\"./getCanonicalHeaders\");\nconst getCanonicalQuery_1 = require(\"./getCanonicalQuery\");\nconst getPayloadHash_1 = require(\"./getPayloadHash\");\nconst headerUtil_1 = require(\"./headerUtil\");\nconst moveHeadersToQuery_1 = require(\"./moveHeadersToQuery\");\nconst prepareRequest_1 = require(\"./prepareRequest\");\nconst utilDate_1 = require(\"./utilDate\");\nclass SignatureV4 {\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\n        this.headerMarshaller = new eventstream_codec_1.HeaderMarshaller(util_utf8_1.toUtf8, util_utf8_1.fromUtf8);\n        this.service = service;\n        this.sha256 = sha256;\n        this.uriEscapePath = uriEscapePath;\n        this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\n        this.regionProvider = (0, util_middleware_1.normalizeProvider)(region);\n        this.credentialProvider = (0, util_middleware_1.normalizeProvider)(credentials);\n    }\n    async presign(originalRequest, options = {}) {\n        const { signingDate = new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, signingRegion, signingService, } = options;\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : (await this.regionProvider());\n        const { longDate, shortDate } = formatDate(signingDate);\n        if (expiresIn > constants_1.MAX_PRESIGNED_TTL) {\n            return Promise.reject(\"Signature version 4 presigned URLs\" + \" must have an expiration date less than one week in\" + \" the future\");\n        }\n        const scope = (0, credentialDerivation_1.createScope)(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);\n        const request = (0, moveHeadersToQuery_1.moveHeadersToQuery)((0, prepareRequest_1.prepareRequest)(originalRequest), { unhoistableHeaders });\n        if (credentials.sessionToken) {\n            request.query[constants_1.TOKEN_QUERY_PARAM] = credentials.sessionToken;\n        }\n        request.query[constants_1.ALGORITHM_QUERY_PARAM] = constants_1.ALGORITHM_IDENTIFIER;\n        request.query[constants_1.CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;\n        request.query[constants_1.AMZ_DATE_QUERY_PARAM] = longDate;\n        request.query[constants_1.EXPIRES_QUERY_PARAM] = expiresIn.toString(10);\n        const canonicalHeaders = (0, getCanonicalHeaders_1.getCanonicalHeaders)(request, unsignableHeaders, signableHeaders);\n        request.query[constants_1.SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList(canonicalHeaders);\n        request.query[constants_1.SIGNATURE_QUERY_PARAM] = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, await (0, getPayloadHash_1.getPayloadHash)(originalRequest, this.sha256)));\n        return request;\n    }\n    async sign(toSign, options) {\n        if (typeof toSign === \"string\") {\n            return this.signString(toSign, options);\n        }\n        else if (toSign.headers && toSign.payload) {\n            return this.signEvent(toSign, options);\n        }\n        else if (toSign.message) {\n            return this.signMessage(toSign, options);\n        }\n        else {\n            return this.signRequest(toSign, options);\n        }\n    }\n    async signEvent({ headers, payload }, { signingDate = new Date(), priorSignature, signingRegion, signingService }) {\n        const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : (await this.regionProvider());\n        const { shortDate, longDate } = formatDate(signingDate);\n        const scope = (0, credentialDerivation_1.createScope)(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);\n        const hashedPayload = await (0, getPayloadHash_1.getPayloadHash)({ headers: {}, body: payload }, this.sha256);\n        const hash = new this.sha256();\n        hash.update(headers);\n        const hashedHeaders = (0, util_hex_encoding_1.toHex)(await hash.digest());\n        const stringToSign = [\n            constants_1.EVENT_ALGORITHM_IDENTIFIER,\n            longDate,\n            scope,\n            priorSignature,\n            hashedHeaders,\n            hashedPayload,\n        ].join(\"\\n\");\n        return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });\n    }\n    async signMessage(signableMessage, { signingDate = new Date(), signingRegion, signingService }) {\n        const promise = this.signEvent({\n            headers: this.headerMarshaller.format(signableMessage.message.headers),\n            payload: signableMessage.message.body,\n        }, {\n            signingDate,\n            signingRegion,\n            signingService,\n            priorSignature: signableMessage.priorSignature,\n        });\n        return promise.then((signature) => {\n            return { message: signableMessage.message, signature };\n        });\n    }\n    async signString(stringToSign, { signingDate = new Date(), signingRegion, signingService } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : (await this.regionProvider());\n        const { shortDate } = formatDate(signingDate);\n        const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));\n        hash.update((0, util_utf8_1.toUint8Array)(stringToSign));\n        return (0, util_hex_encoding_1.toHex)(await hash.digest());\n    }\n    async signRequest(requestToSign, { signingDate = new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService, } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : (await this.regionProvider());\n        const request = (0, prepareRequest_1.prepareRequest)(requestToSign);\n        const { longDate, shortDate } = formatDate(signingDate);\n        const scope = (0, credentialDerivation_1.createScope)(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);\n        request.headers[constants_1.AMZ_DATE_HEADER] = longDate;\n        if (credentials.sessionToken) {\n            request.headers[constants_1.TOKEN_HEADER] = credentials.sessionToken;\n        }\n        const payloadHash = await (0, getPayloadHash_1.getPayloadHash)(request, this.sha256);\n        if (!(0, headerUtil_1.hasHeader)(constants_1.SHA256_HEADER, request.headers) && this.applyChecksum) {\n            request.headers[constants_1.SHA256_HEADER] = payloadHash;\n        }\n        const canonicalHeaders = (0, getCanonicalHeaders_1.getCanonicalHeaders)(request, unsignableHeaders, signableHeaders);\n        const signature = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash));\n        request.headers[constants_1.AUTH_HEADER] =\n            `${constants_1.ALGORITHM_IDENTIFIER} ` +\n                `Credential=${credentials.accessKeyId}/${scope}, ` +\n                `SignedHeaders=${getCanonicalHeaderList(canonicalHeaders)}, ` +\n                `Signature=${signature}`;\n        return request;\n    }\n    createCanonicalRequest(request, canonicalHeaders, payloadHash) {\n        const sortedHeaders = Object.keys(canonicalHeaders).sort();\n        return `${request.method}\n${this.getCanonicalPath(request)}\n${(0, getCanonicalQuery_1.getCanonicalQuery)(request)}\n${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join(\"\\n\")}\n\n${sortedHeaders.join(\";\")}\n${payloadHash}`;\n    }\n    async createStringToSign(longDate, credentialScope, canonicalRequest) {\n        const hash = new this.sha256();\n        hash.update((0, util_utf8_1.toUint8Array)(canonicalRequest));\n        const hashedRequest = await hash.digest();\n        return `${constants_1.ALGORITHM_IDENTIFIER}\n${longDate}\n${credentialScope}\n${(0, util_hex_encoding_1.toHex)(hashedRequest)}`;\n    }\n    getCanonicalPath({ path }) {\n        if (this.uriEscapePath) {\n            const normalizedPathSegments = [];\n            for (const pathSegment of path.split(\"/\")) {\n                if ((pathSegment === null || pathSegment === void 0 ? void 0 : pathSegment.length) === 0)\n                    continue;\n                if (pathSegment === \".\")\n                    continue;\n                if (pathSegment === \"..\") {\n                    normalizedPathSegments.pop();\n                }\n                else {\n                    normalizedPathSegments.push(pathSegment);\n                }\n            }\n            const normalizedPath = `${(path === null || path === void 0 ? void 0 : path.startsWith(\"/\")) ? \"/\" : \"\"}${normalizedPathSegments.join(\"/\")}${normalizedPathSegments.length > 0 && (path === null || path === void 0 ? void 0 : path.endsWith(\"/\")) ? \"/\" : \"\"}`;\n            const doubleEncoded = encodeURIComponent(normalizedPath);\n            return doubleEncoded.replace(/%2F/g, \"/\");\n        }\n        return path;\n    }\n    async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {\n        const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest);\n        const hash = new this.sha256(await keyPromise);\n        hash.update((0, util_utf8_1.toUint8Array)(stringToSign));\n        return (0, util_hex_encoding_1.toHex)(await hash.digest());\n    }\n    getSigningKey(credentials, region, shortDate, service) {\n        return (0, credentialDerivation_1.getSigningKey)(this.sha256, credentials, shortDate, region, service || this.service);\n    }\n    validateResolvedCredentials(credentials) {\n        if (typeof credentials !== \"object\" ||\n            typeof credentials.accessKeyId !== \"string\" ||\n            typeof credentials.secretAccessKey !== \"string\") {\n            throw new Error(\"Resolved credential object is not valid\");\n        }\n    }\n}\nexports.SignatureV4 = SignatureV4;\nconst formatDate = (now) => {\n    const longDate = (0, utilDate_1.iso8601)(now).replace(/[\\-:]/g, \"\");\n    return {\n        longDate,\n        shortDate: longDate.slice(0, 8),\n    };\n};\nconst getCanonicalHeaderList = (headers) => Object.keys(headers).sort().join(\";\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cloneQuery = exports.cloneRequest = void 0;\nconst cloneRequest = ({ headers, query, ...rest }) => ({\n    ...rest,\n    headers: { ...headers },\n    query: query ? (0, exports.cloneQuery)(query) : undefined,\n});\nexports.cloneRequest = cloneRequest;\nconst cloneQuery = (query) => Object.keys(query).reduce((carry, paramName) => {\n    const param = query[paramName];\n    return {\n        ...carry,\n        [paramName]: Array.isArray(param) ? [...param] : param,\n    };\n}, {});\nexports.cloneQuery = cloneQuery;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MAX_PRESIGNED_TTL = exports.KEY_TYPE_IDENTIFIER = exports.MAX_CACHE_SIZE = exports.UNSIGNED_PAYLOAD = exports.EVENT_ALGORITHM_IDENTIFIER = exports.ALGORITHM_IDENTIFIER_V4A = exports.ALGORITHM_IDENTIFIER = exports.UNSIGNABLE_PATTERNS = exports.SEC_HEADER_PATTERN = exports.PROXY_HEADER_PATTERN = exports.ALWAYS_UNSIGNABLE_HEADERS = exports.HOST_HEADER = exports.TOKEN_HEADER = exports.SHA256_HEADER = exports.SIGNATURE_HEADER = exports.GENERATED_HEADERS = exports.DATE_HEADER = exports.AMZ_DATE_HEADER = exports.AUTH_HEADER = exports.REGION_SET_PARAM = exports.TOKEN_QUERY_PARAM = exports.SIGNATURE_QUERY_PARAM = exports.EXPIRES_QUERY_PARAM = exports.SIGNED_HEADERS_QUERY_PARAM = exports.AMZ_DATE_QUERY_PARAM = exports.CREDENTIAL_QUERY_PARAM = exports.ALGORITHM_QUERY_PARAM = void 0;\nexports.ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\nexports.CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\nexports.AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\nexports.SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\nexports.EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\nexports.SIGNATURE_QUERY_PARAM = \"X-Amz-Signature\";\nexports.TOKEN_QUERY_PARAM = \"X-Amz-Security-Token\";\nexports.REGION_SET_PARAM = \"X-Amz-Region-Set\";\nexports.AUTH_HEADER = \"authorization\";\nexports.AMZ_DATE_HEADER = exports.AMZ_DATE_QUERY_PARAM.toLowerCase();\nexports.DATE_HEADER = \"date\";\nexports.GENERATED_HEADERS = [exports.AUTH_HEADER, exports.AMZ_DATE_HEADER, exports.DATE_HEADER];\nexports.SIGNATURE_HEADER = exports.SIGNATURE_QUERY_PARAM.toLowerCase();\nexports.SHA256_HEADER = \"x-amz-content-sha256\";\nexports.TOKEN_HEADER = exports.TOKEN_QUERY_PARAM.toLowerCase();\nexports.HOST_HEADER = \"host\";\nexports.ALWAYS_UNSIGNABLE_HEADERS = {\n    authorization: true,\n    \"cache-control\": true,\n    connection: true,\n    expect: true,\n    from: true,\n    \"keep-alive\": true,\n    \"max-forwards\": true,\n    pragma: true,\n    referer: true,\n    te: true,\n    trailer: true,\n    \"transfer-encoding\": true,\n    upgrade: true,\n    \"user-agent\": true,\n    \"x-amzn-trace-id\": true,\n};\nexports.PROXY_HEADER_PATTERN = /^proxy-/;\nexports.SEC_HEADER_PATTERN = /^sec-/;\nexports.UNSIGNABLE_PATTERNS = [/^proxy-/i, /^sec-/i];\nexports.ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";\nexports.ALGORITHM_IDENTIFIER_V4A = \"AWS4-ECDSA-P256-SHA256\";\nexports.EVENT_ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256-PAYLOAD\";\nexports.UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\nexports.MAX_CACHE_SIZE = 50;\nexports.KEY_TYPE_IDENTIFIER = \"aws4_request\";\nexports.MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clearCredentialCache = exports.getSigningKey = exports.createScope = void 0;\nconst util_hex_encoding_1 = require(\"@smithy/util-hex-encoding\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst constants_1 = require(\"./constants\");\nconst signingKeyCache = {};\nconst cacheQueue = [];\nconst createScope = (shortDate, region, service) => `${shortDate}/${region}/${service}/${constants_1.KEY_TYPE_IDENTIFIER}`;\nexports.createScope = createScope;\nconst getSigningKey = async (sha256Constructor, credentials, shortDate, region, service) => {\n    const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);\n    const cacheKey = `${shortDate}:${region}:${service}:${(0, util_hex_encoding_1.toHex)(credsHash)}:${credentials.sessionToken}`;\n    if (cacheKey in signingKeyCache) {\n        return signingKeyCache[cacheKey];\n    }\n    cacheQueue.push(cacheKey);\n    while (cacheQueue.length > constants_1.MAX_CACHE_SIZE) {\n        delete signingKeyCache[cacheQueue.shift()];\n    }\n    let key = `AWS4${credentials.secretAccessKey}`;\n    for (const signable of [shortDate, region, service, constants_1.KEY_TYPE_IDENTIFIER]) {\n        key = await hmac(sha256Constructor, key, signable);\n    }\n    return (signingKeyCache[cacheKey] = key);\n};\nexports.getSigningKey = getSigningKey;\nconst clearCredentialCache = () => {\n    cacheQueue.length = 0;\n    Object.keys(signingKeyCache).forEach((cacheKey) => {\n        delete signingKeyCache[cacheKey];\n    });\n};\nexports.clearCredentialCache = clearCredentialCache;\nconst hmac = (ctor, secret, data) => {\n    const hash = new ctor(secret);\n    hash.update((0, util_utf8_1.toUint8Array)(data));\n    return hash.digest();\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCanonicalHeaders = void 0;\nconst constants_1 = require(\"./constants\");\nconst getCanonicalHeaders = ({ headers }, unsignableHeaders, signableHeaders) => {\n    const canonical = {};\n    for (const headerName of Object.keys(headers).sort()) {\n        if (headers[headerName] == undefined) {\n            continue;\n        }\n        const canonicalHeaderName = headerName.toLowerCase();\n        if (canonicalHeaderName in constants_1.ALWAYS_UNSIGNABLE_HEADERS ||\n            (unsignableHeaders === null || unsignableHeaders === void 0 ? void 0 : unsignableHeaders.has(canonicalHeaderName)) ||\n            constants_1.PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\n            constants_1.SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n            if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\n                continue;\n            }\n        }\n        canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n    }\n    return canonical;\n};\nexports.getCanonicalHeaders = getCanonicalHeaders;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCanonicalQuery = void 0;\nconst util_uri_escape_1 = require(\"@smithy/util-uri-escape\");\nconst constants_1 = require(\"./constants\");\nconst getCanonicalQuery = ({ query = {} }) => {\n    const keys = [];\n    const serialized = {};\n    for (const key of Object.keys(query).sort()) {\n        if (key.toLowerCase() === constants_1.SIGNATURE_HEADER) {\n            continue;\n        }\n        keys.push(key);\n        const value = query[key];\n        if (typeof value === \"string\") {\n            serialized[key] = `${(0, util_uri_escape_1.escapeUri)(key)}=${(0, util_uri_escape_1.escapeUri)(value)}`;\n        }\n        else if (Array.isArray(value)) {\n            serialized[key] = value\n                .slice(0)\n                .reduce((encoded, value) => encoded.concat([`${(0, util_uri_escape_1.escapeUri)(key)}=${(0, util_uri_escape_1.escapeUri)(value)}`]), [])\n                .sort()\n                .join(\"&\");\n        }\n    }\n    return keys\n        .map((key) => serialized[key])\n        .filter((serialized) => serialized)\n        .join(\"&\");\n};\nexports.getCanonicalQuery = getCanonicalQuery;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPayloadHash = void 0;\nconst is_array_buffer_1 = require(\"@smithy/is-array-buffer\");\nconst util_hex_encoding_1 = require(\"@smithy/util-hex-encoding\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst constants_1 = require(\"./constants\");\nconst getPayloadHash = async ({ headers, body }, hashConstructor) => {\n    for (const headerName of Object.keys(headers)) {\n        if (headerName.toLowerCase() === constants_1.SHA256_HEADER) {\n            return headers[headerName];\n        }\n    }\n    if (body == undefined) {\n        return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n    }\n    else if (typeof body === \"string\" || ArrayBuffer.isView(body) || (0, is_array_buffer_1.isArrayBuffer)(body)) {\n        const hashCtor = new hashConstructor();\n        hashCtor.update((0, util_utf8_1.toUint8Array)(body));\n        return (0, util_hex_encoding_1.toHex)(await hashCtor.digest());\n    }\n    return constants_1.UNSIGNED_PAYLOAD;\n};\nexports.getPayloadHash = getPayloadHash;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deleteHeader = exports.getHeaderValue = exports.hasHeader = void 0;\nconst hasHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return true;\n        }\n    }\n    return false;\n};\nexports.hasHeader = hasHeader;\nconst getHeaderValue = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return headers[headerName];\n        }\n    }\n    return undefined;\n};\nexports.getHeaderValue = getHeaderValue;\nconst deleteHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            delete headers[headerName];\n        }\n    }\n};\nexports.deleteHeader = deleteHeader;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.prepareRequest = exports.moveHeadersToQuery = exports.getPayloadHash = exports.getCanonicalQuery = exports.getCanonicalHeaders = void 0;\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./SignatureV4\"), exports);\nvar getCanonicalHeaders_1 = require(\"./getCanonicalHeaders\");\nObject.defineProperty(exports, \"getCanonicalHeaders\", { enumerable: true, get: function () { return getCanonicalHeaders_1.getCanonicalHeaders; } });\nvar getCanonicalQuery_1 = require(\"./getCanonicalQuery\");\nObject.defineProperty(exports, \"getCanonicalQuery\", { enumerable: true, get: function () { return getCanonicalQuery_1.getCanonicalQuery; } });\nvar getPayloadHash_1 = require(\"./getPayloadHash\");\nObject.defineProperty(exports, \"getPayloadHash\", { enumerable: true, get: function () { return getPayloadHash_1.getPayloadHash; } });\nvar moveHeadersToQuery_1 = require(\"./moveHeadersToQuery\");\nObject.defineProperty(exports, \"moveHeadersToQuery\", { enumerable: true, get: function () { return moveHeadersToQuery_1.moveHeadersToQuery; } });\nvar prepareRequest_1 = require(\"./prepareRequest\");\nObject.defineProperty(exports, \"prepareRequest\", { enumerable: true, get: function () { return prepareRequest_1.prepareRequest; } });\ntslib_1.__exportStar(require(\"./credentialDerivation\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.moveHeadersToQuery = void 0;\nconst cloneRequest_1 = require(\"./cloneRequest\");\nconst moveHeadersToQuery = (request, options = {}) => {\n    var _a;\n    const { headers, query = {} } = typeof request.clone === \"function\" ? request.clone() : (0, cloneRequest_1.cloneRequest)(request);\n    for (const name of Object.keys(headers)) {\n        const lname = name.toLowerCase();\n        if (lname.slice(0, 6) === \"x-amz-\" && !((_a = options.unhoistableHeaders) === null || _a === void 0 ? void 0 : _a.has(lname))) {\n            query[name] = headers[name];\n            delete headers[name];\n        }\n    }\n    return {\n        ...request,\n        headers,\n        query,\n    };\n};\nexports.moveHeadersToQuery = moveHeadersToQuery;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.prepareRequest = void 0;\nconst cloneRequest_1 = require(\"./cloneRequest\");\nconst constants_1 = require(\"./constants\");\nconst prepareRequest = (request) => {\n    request = typeof request.clone === \"function\" ? request.clone() : (0, cloneRequest_1.cloneRequest)(request);\n    for (const headerName of Object.keys(request.headers)) {\n        if (constants_1.GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n            delete request.headers[headerName];\n        }\n    }\n    return request;\n};\nexports.prepareRequest = prepareRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toDate = exports.iso8601 = void 0;\nconst iso8601 = (time) => (0, exports.toDate)(time)\n    .toISOString()\n    .replace(/\\.\\d{3}Z$/, \"Z\");\nexports.iso8601 = iso8601;\nconst toDate = (time) => {\n    if (typeof time === \"number\") {\n        return new Date(time * 1000);\n    }\n    if (typeof time === \"string\") {\n        if (Number(time)) {\n            return new Date(Number(time) * 1000);\n        }\n        return new Date(time);\n    }\n    return time;\n};\nexports.toDate = toDate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoOpLogger = void 0;\nclass NoOpLogger {\n    trace() { }\n    debug() { }\n    info() { }\n    warn() { }\n    error() { }\n}\nexports.NoOpLogger = NoOpLogger;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Client = void 0;\nconst middleware_stack_1 = require(\"@smithy/middleware-stack\");\nclass Client {\n    constructor(config) {\n        this.middlewareStack = (0, middleware_stack_1.constructStack)();\n        this.config = config;\n    }\n    send(command, optionsOrCb, cb) {\n        const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n        const callback = typeof optionsOrCb === \"function\" ? optionsOrCb : cb;\n        const handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n        if (callback) {\n            handler(command)\n                .then((result) => callback(null, result.output), (err) => callback(err))\n                .catch(() => { });\n        }\n        else {\n            return handler(command).then((result) => result.output);\n        }\n    }\n    destroy() {\n        if (this.config.requestHandler.destroy)\n            this.config.requestHandler.destroy();\n    }\n}\nexports.Client = Client;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.collectBody = void 0;\nconst util_stream_1 = require(\"@smithy/util-stream\");\nconst collectBody = async (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return util_stream_1.Uint8ArrayBlobAdapter.mutate(streamBody);\n    }\n    if (!streamBody) {\n        return util_stream_1.Uint8ArrayBlobAdapter.mutate(new Uint8Array());\n    }\n    const fromContext = context.streamCollector(streamBody);\n    return util_stream_1.Uint8ArrayBlobAdapter.mutate(await fromContext);\n};\nexports.collectBody = collectBody;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Command = void 0;\nconst middleware_stack_1 = require(\"@smithy/middleware-stack\");\nclass Command {\n    constructor() {\n        this.middlewareStack = (0, middleware_stack_1.constructStack)();\n    }\n}\nexports.Command = Command;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SENSITIVE_STRING = void 0;\nexports.SENSITIVE_STRING = \"***SensitiveInformation***\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createAggregatedClient = void 0;\nconst createAggregatedClient = (commands, Client) => {\n    for (const command of Object.keys(commands)) {\n        const CommandCtor = commands[command];\n        const methodImpl = async function (args, optionsOrCb, cb) {\n            const command = new CommandCtor(args);\n            if (typeof optionsOrCb === \"function\") {\n                this.send(command, optionsOrCb);\n            }\n            else if (typeof cb === \"function\") {\n                if (typeof optionsOrCb !== \"object\")\n                    throw new Error(`Expected http options but got ${typeof optionsOrCb}`);\n                this.send(command, optionsOrCb || {}, cb);\n            }\n            else {\n                return this.send(command, optionsOrCb);\n            }\n        };\n        const methodName = (command[0].toLowerCase() + command.slice(1)).replace(/Command$/, \"\");\n        Client.prototype[methodName] = methodImpl;\n    }\n};\nexports.createAggregatedClient = createAggregatedClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseEpochTimestamp = exports.parseRfc7231DateTime = exports.parseRfc3339DateTimeWithOffset = exports.parseRfc3339DateTime = exports.dateToUtcString = void 0;\nconst parse_utils_1 = require(\"./parse-utils\");\nconst DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nconst MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nfunction dateToUtcString(date) {\n    const year = date.getUTCFullYear();\n    const month = date.getUTCMonth();\n    const dayOfWeek = date.getUTCDay();\n    const dayOfMonthInt = date.getUTCDate();\n    const hoursInt = date.getUTCHours();\n    const minutesInt = date.getUTCMinutes();\n    const secondsInt = date.getUTCSeconds();\n    const dayOfMonthString = dayOfMonthInt < 10 ? `0${dayOfMonthInt}` : `${dayOfMonthInt}`;\n    const hoursString = hoursInt < 10 ? `0${hoursInt}` : `${hoursInt}`;\n    const minutesString = minutesInt < 10 ? `0${minutesInt}` : `${minutesInt}`;\n    const secondsString = secondsInt < 10 ? `0${secondsInt}` : `${secondsInt}`;\n    return `${DAYS[dayOfWeek]}, ${dayOfMonthString} ${MONTHS[month]} ${year} ${hoursString}:${minutesString}:${secondsString} GMT`;\n}\nexports.dateToUtcString = dateToUtcString;\nconst RFC3339 = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?[zZ]$/);\nconst parseRfc3339DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n    }\n    const match = RFC3339.exec(value);\n    if (!match) {\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\n    }\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n    const year = (0, parse_utils_1.strictParseShort)(stripLeadingZeroes(yearStr));\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\n    return buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n};\nexports.parseRfc3339DateTime = parseRfc3339DateTime;\nconst RFC3339_WITH_OFFSET = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?(([-+]\\d{2}\\:\\d{2})|[zZ])$/);\nconst parseRfc3339DateTimeWithOffset = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n    }\n    const match = RFC3339_WITH_OFFSET.exec(value);\n    if (!match) {\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\n    }\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, offsetStr] = match;\n    const year = (0, parse_utils_1.strictParseShort)(stripLeadingZeroes(yearStr));\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\n    const date = buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n    if (offsetStr.toUpperCase() != \"Z\") {\n        date.setTime(date.getTime() - parseOffsetToMilliseconds(offsetStr));\n    }\n    return date;\n};\nexports.parseRfc3339DateTimeWithOffset = parseRfc3339DateTimeWithOffset;\nconst IMF_FIXDATE = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d{2}) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst RFC_850_DATE = new RegExp(/^(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\\d{2})-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst ASC_TIME = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( [1-9]|\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? (\\d{4})$/);\nconst parseRfc7231DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-7231 date-times must be expressed as strings\");\n    }\n    let match = IMF_FIXDATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return buildDate((0, parse_utils_1.strictParseShort)(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    match = RFC_850_DATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return adjustRfc850Year(buildDate(parseTwoDigitYear(yearStr), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), {\n            hours,\n            minutes,\n            seconds,\n            fractionalMilliseconds,\n        }));\n    }\n    match = ASC_TIME.exec(value);\n    if (match) {\n        const [_, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, yearStr] = match;\n        return buildDate((0, parse_utils_1.strictParseShort)(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr.trimLeft(), \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    throw new TypeError(\"Invalid RFC-7231 date-time value\");\n};\nexports.parseRfc7231DateTime = parseRfc7231DateTime;\nconst parseEpochTimestamp = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    let valueAsDouble;\n    if (typeof value === \"number\") {\n        valueAsDouble = value;\n    }\n    else if (typeof value === \"string\") {\n        valueAsDouble = (0, parse_utils_1.strictParseDouble)(value);\n    }\n    else {\n        throw new TypeError(\"Epoch timestamps must be expressed as floating point numbers or their string representation\");\n    }\n    if (Number.isNaN(valueAsDouble) || valueAsDouble === Infinity || valueAsDouble === -Infinity) {\n        throw new TypeError(\"Epoch timestamps must be valid, non-Infinite, non-NaN numerics\");\n    }\n    return new Date(Math.round(valueAsDouble * 1000));\n};\nexports.parseEpochTimestamp = parseEpochTimestamp;\nconst buildDate = (year, month, day, time) => {\n    const adjustedMonth = month - 1;\n    validateDayOfMonth(year, adjustedMonth, day);\n    return new Date(Date.UTC(year, adjustedMonth, day, parseDateValue(time.hours, \"hour\", 0, 23), parseDateValue(time.minutes, \"minute\", 0, 59), parseDateValue(time.seconds, \"seconds\", 0, 60), parseMilliseconds(time.fractionalMilliseconds)));\n};\nconst parseTwoDigitYear = (value) => {\n    const thisYear = new Date().getUTCFullYear();\n    const valueInThisCentury = Math.floor(thisYear / 100) * 100 + (0, parse_utils_1.strictParseShort)(stripLeadingZeroes(value));\n    if (valueInThisCentury < thisYear) {\n        return valueInThisCentury + 100;\n    }\n    return valueInThisCentury;\n};\nconst FIFTY_YEARS_IN_MILLIS = 50 * 365 * 24 * 60 * 60 * 1000;\nconst adjustRfc850Year = (input) => {\n    if (input.getTime() - new Date().getTime() > FIFTY_YEARS_IN_MILLIS) {\n        return new Date(Date.UTC(input.getUTCFullYear() - 100, input.getUTCMonth(), input.getUTCDate(), input.getUTCHours(), input.getUTCMinutes(), input.getUTCSeconds(), input.getUTCMilliseconds()));\n    }\n    return input;\n};\nconst parseMonthByShortName = (value) => {\n    const monthIdx = MONTHS.indexOf(value);\n    if (monthIdx < 0) {\n        throw new TypeError(`Invalid month: ${value}`);\n    }\n    return monthIdx + 1;\n};\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst validateDayOfMonth = (year, month, day) => {\n    let maxDays = DAYS_IN_MONTH[month];\n    if (month === 1 && isLeapYear(year)) {\n        maxDays = 29;\n    }\n    if (day > maxDays) {\n        throw new TypeError(`Invalid day for ${MONTHS[month]} in ${year}: ${day}`);\n    }\n};\nconst isLeapYear = (year) => {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n};\nconst parseDateValue = (value, type, lower, upper) => {\n    const dateVal = (0, parse_utils_1.strictParseByte)(stripLeadingZeroes(value));\n    if (dateVal < lower || dateVal > upper) {\n        throw new TypeError(`${type} must be between ${lower} and ${upper}, inclusive`);\n    }\n    return dateVal;\n};\nconst parseMilliseconds = (value) => {\n    if (value === null || value === undefined) {\n        return 0;\n    }\n    return (0, parse_utils_1.strictParseFloat32)(\"0.\" + value) * 1000;\n};\nconst parseOffsetToMilliseconds = (value) => {\n    const directionStr = value[0];\n    let direction = 1;\n    if (directionStr == \"+\") {\n        direction = 1;\n    }\n    else if (directionStr == \"-\") {\n        direction = -1;\n    }\n    else {\n        throw new TypeError(`Offset direction, ${directionStr}, must be \"+\" or \"-\"`);\n    }\n    const hour = Number(value.substring(1, 3));\n    const minute = Number(value.substring(4, 6));\n    return direction * (hour * 60 + minute) * 60 * 1000;\n};\nconst stripLeadingZeroes = (value) => {\n    let idx = 0;\n    while (idx < value.length - 1 && value.charAt(idx) === \"0\") {\n        idx++;\n    }\n    if (idx === 0) {\n        return value;\n    }\n    return value.slice(idx);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.withBaseException = exports.throwDefaultError = void 0;\nconst exceptions_1 = require(\"./exceptions\");\nconst throwDefaultError = ({ output, parsedBody, exceptionCtor, errorCode }) => {\n    const $metadata = deserializeMetadata(output);\n    const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + \"\" : undefined;\n    const response = new exceptionCtor({\n        name: (parsedBody === null || parsedBody === void 0 ? void 0 : parsedBody.code) || (parsedBody === null || parsedBody === void 0 ? void 0 : parsedBody.Code) || errorCode || statusCode || \"UnknownError\",\n        $fault: \"client\",\n        $metadata,\n    });\n    throw (0, exceptions_1.decorateServiceException)(response, parsedBody);\n};\nexports.throwDefaultError = throwDefaultError;\nconst withBaseException = (ExceptionCtor) => {\n    return ({ output, parsedBody, errorCode }) => {\n        (0, exports.throwDefaultError)({ output, parsedBody, exceptionCtor: ExceptionCtor, errorCode });\n    };\n};\nexports.withBaseException = withBaseException;\nconst deserializeMetadata = (output) => {\n    var _a, _b;\n    return ({\n        httpStatusCode: output.statusCode,\n        requestId: (_b = (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"]) !== null && _b !== void 0 ? _b : output.headers[\"x-amz-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"],\n    });\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadConfigsForDefaultMode = void 0;\nconst loadConfigsForDefaultMode = (mode) => {\n    switch (mode) {\n        case \"standard\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"in-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 1100,\n            };\n        case \"cross-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"mobile\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 30000,\n            };\n        default:\n            return {};\n    }\n};\nexports.loadConfigsForDefaultMode = loadConfigsForDefaultMode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.emitWarningIfUnsupportedVersion = void 0;\nlet warningEmitted = false;\nconst emitWarningIfUnsupportedVersion = (version) => {\n    if (version && !warningEmitted && parseInt(version.substring(1, version.indexOf(\".\"))) < 14) {\n        warningEmitted = true;\n    }\n};\nexports.emitWarningIfUnsupportedVersion = emitWarningIfUnsupportedVersion;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decorateServiceException = exports.ServiceException = void 0;\nclass ServiceException extends Error {\n    constructor(options) {\n        super(options.message);\n        Object.setPrototypeOf(this, ServiceException.prototype);\n        this.name = options.name;\n        this.$fault = options.$fault;\n        this.$metadata = options.$metadata;\n    }\n}\nexports.ServiceException = ServiceException;\nconst decorateServiceException = (exception, additions = {}) => {\n    Object.entries(additions)\n        .filter(([, v]) => v !== undefined)\n        .forEach(([k, v]) => {\n        if (exception[k] == undefined || exception[k] === \"\") {\n            exception[k] = v;\n        }\n    });\n    const message = exception.message || exception.Message || \"UnknownError\";\n    exception.message = message;\n    delete exception.Message;\n    return exception;\n};\nexports.decorateServiceException = decorateServiceException;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendedEncodeURIComponent = void 0;\nfunction extendedEncodeURIComponent(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n        return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n}\nexports.extendedEncodeURIComponent = extendedEncodeURIComponent;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveChecksumRuntimeConfig = exports.getChecksumConfiguration = exports.AlgorithmId = void 0;\nconst types_1 = require(\"@smithy/types\");\nObject.defineProperty(exports, \"AlgorithmId\", { enumerable: true, get: function () { return types_1.AlgorithmId; } });\nconst getChecksumConfiguration = (runtimeConfig) => {\n    const checksumAlgorithms = [];\n    if (runtimeConfig.sha256 !== undefined) {\n        checksumAlgorithms.push({\n            algorithmId: () => types_1.AlgorithmId.SHA256,\n            checksumConstructor: () => runtimeConfig.sha256,\n        });\n    }\n    if (runtimeConfig.md5 != undefined) {\n        checksumAlgorithms.push({\n            algorithmId: () => types_1.AlgorithmId.MD5,\n            checksumConstructor: () => runtimeConfig.md5,\n        });\n    }\n    return {\n        _checksumAlgorithms: checksumAlgorithms,\n        addChecksumAlgorithm(algo) {\n            this._checksumAlgorithms.push(algo);\n        },\n        checksumAlgorithms() {\n            return this._checksumAlgorithms;\n        },\n    };\n};\nexports.getChecksumConfiguration = getChecksumConfiguration;\nconst resolveChecksumRuntimeConfig = (clientConfig) => {\n    const runtimeConfig = {};\n    clientConfig.checksumAlgorithms().forEach((checksumAlgorithm) => {\n        runtimeConfig[checksumAlgorithm.algorithmId()] = checksumAlgorithm.checksumConstructor();\n    });\n    return runtimeConfig;\n};\nexports.resolveChecksumRuntimeConfig = resolveChecksumRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveDefaultRuntimeConfig = exports.getDefaultClientConfiguration = exports.getDefaultExtensionConfiguration = void 0;\nconst checksum_1 = require(\"./checksum\");\nconst getDefaultExtensionConfiguration = (runtimeConfig) => {\n    return {\n        ...(0, checksum_1.getChecksumConfiguration)(runtimeConfig),\n    };\n};\nexports.getDefaultExtensionConfiguration = getDefaultExtensionConfiguration;\nexports.getDefaultClientConfiguration = exports.getDefaultExtensionConfiguration;\nconst resolveDefaultRuntimeConfig = (config) => {\n    return {\n        ...(0, checksum_1.resolveChecksumRuntimeConfig)(config),\n    };\n};\nexports.resolveDefaultRuntimeConfig = resolveDefaultRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./defaultExtensionConfiguration\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getArrayIfSingleItem = void 0;\nconst getArrayIfSingleItem = (mayBeArray) => Array.isArray(mayBeArray) ? mayBeArray : [mayBeArray];\nexports.getArrayIfSingleItem = getArrayIfSingleItem;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getValueFromTextNode = void 0;\nconst getValueFromTextNode = (obj) => {\n    const textNodeName = \"#text\";\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key) && obj[key][textNodeName] !== undefined) {\n            obj[key] = obj[key][textNodeName];\n        }\n        else if (typeof obj[key] === \"object\" && obj[key] !== null) {\n            obj[key] = (0, exports.getValueFromTextNode)(obj[key]);\n        }\n    }\n    return obj;\n};\nexports.getValueFromTextNode = getValueFromTextNode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./NoOpLogger\"), exports);\ntslib_1.__exportStar(require(\"./client\"), exports);\ntslib_1.__exportStar(require(\"./collect-stream-body\"), exports);\ntslib_1.__exportStar(require(\"./command\"), exports);\ntslib_1.__exportStar(require(\"./constants\"), exports);\ntslib_1.__exportStar(require(\"./create-aggregated-client\"), exports);\ntslib_1.__exportStar(require(\"./date-utils\"), exports);\ntslib_1.__exportStar(require(\"./default-error-handler\"), exports);\ntslib_1.__exportStar(require(\"./defaults-mode\"), exports);\ntslib_1.__exportStar(require(\"./emitWarningIfUnsupportedVersion\"), exports);\ntslib_1.__exportStar(require(\"./extensions\"), exports);\ntslib_1.__exportStar(require(\"./exceptions\"), exports);\ntslib_1.__exportStar(require(\"./extended-encode-uri-component\"), exports);\ntslib_1.__exportStar(require(\"./get-array-if-single-item\"), exports);\ntslib_1.__exportStar(require(\"./get-value-from-text-node\"), exports);\ntslib_1.__exportStar(require(\"./lazy-json\"), exports);\ntslib_1.__exportStar(require(\"./object-mapping\"), exports);\ntslib_1.__exportStar(require(\"./parse-utils\"), exports);\ntslib_1.__exportStar(require(\"./resolve-path\"), exports);\ntslib_1.__exportStar(require(\"./ser-utils\"), exports);\ntslib_1.__exportStar(require(\"./serde-json\"), exports);\ntslib_1.__exportStar(require(\"./split-every\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LazyJsonString = exports.StringWrapper = void 0;\nconst StringWrapper = function () {\n    const Class = Object.getPrototypeOf(this).constructor;\n    const Constructor = Function.bind.apply(String, [null, ...arguments]);\n    const instance = new Constructor();\n    Object.setPrototypeOf(instance, Class.prototype);\n    return instance;\n};\nexports.StringWrapper = StringWrapper;\nexports.StringWrapper.prototype = Object.create(String.prototype, {\n    constructor: {\n        value: exports.StringWrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true,\n    },\n});\nObject.setPrototypeOf(exports.StringWrapper, String);\nclass LazyJsonString extends exports.StringWrapper {\n    deserializeJSON() {\n        return JSON.parse(super.toString());\n    }\n    toJSON() {\n        return super.toString();\n    }\n    static fromObject(object) {\n        if (object instanceof LazyJsonString) {\n            return object;\n        }\n        else if (object instanceof String || typeof object === \"string\") {\n            return new LazyJsonString(object);\n        }\n        return new LazyJsonString(JSON.stringify(object));\n    }\n}\nexports.LazyJsonString = LazyJsonString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.take = exports.convertMap = exports.map = void 0;\nfunction map(arg0, arg1, arg2) {\n    let target;\n    let filter;\n    let instructions;\n    if (typeof arg1 === \"undefined\" && typeof arg2 === \"undefined\") {\n        target = {};\n        instructions = arg0;\n    }\n    else {\n        target = arg0;\n        if (typeof arg1 === \"function\") {\n            filter = arg1;\n            instructions = arg2;\n            return mapWithFilter(target, filter, instructions);\n        }\n        else {\n            instructions = arg1;\n        }\n    }\n    for (const key of Object.keys(instructions)) {\n        if (!Array.isArray(instructions[key])) {\n            target[key] = instructions[key];\n            continue;\n        }\n        applyInstruction(target, null, instructions, key);\n    }\n    return target;\n}\nexports.map = map;\nconst convertMap = (target) => {\n    const output = {};\n    for (const [k, v] of Object.entries(target || {})) {\n        output[k] = [, v];\n    }\n    return output;\n};\nexports.convertMap = convertMap;\nconst take = (source, instructions) => {\n    const out = {};\n    for (const key in instructions) {\n        applyInstruction(out, source, instructions, key);\n    }\n    return out;\n};\nexports.take = take;\nconst mapWithFilter = (target, filter, instructions) => {\n    return map(target, Object.entries(instructions).reduce((_instructions, [key, value]) => {\n        if (Array.isArray(value)) {\n            _instructions[key] = value;\n        }\n        else {\n            if (typeof value === \"function\") {\n                _instructions[key] = [filter, value()];\n            }\n            else {\n                _instructions[key] = [filter, value];\n            }\n        }\n        return _instructions;\n    }, {}));\n};\nconst applyInstruction = (target, source, instructions, targetKey) => {\n    if (source !== null) {\n        let instruction = instructions[targetKey];\n        if (typeof instruction === \"function\") {\n            instruction = [, instruction];\n        }\n        const [filter = nonNullish, valueFn = pass, sourceKey = targetKey] = instruction;\n        if ((typeof filter === \"function\" && filter(source[sourceKey])) || (typeof filter !== \"function\" && !!filter)) {\n            target[targetKey] = valueFn(source[sourceKey]);\n        }\n        return;\n    }\n    let [filter, value] = instructions[targetKey];\n    if (typeof value === \"function\") {\n        let _value;\n        const defaultFilterPassed = filter === undefined && (_value = value()) != null;\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(void 0)) || (typeof filter !== \"function\" && !!filter);\n        if (defaultFilterPassed) {\n            target[targetKey] = _value;\n        }\n        else if (customFilterPassed) {\n            target[targetKey] = value();\n        }\n    }\n    else {\n        const defaultFilterPassed = filter === undefined && value != null;\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(value)) || (typeof filter !== \"function\" && !!filter);\n        if (defaultFilterPassed || customFilterPassed) {\n            target[targetKey] = value;\n        }\n    }\n};\nconst nonNullish = (_) => _ != null;\nconst pass = (_) => _;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logger = exports.strictParseByte = exports.strictParseShort = exports.strictParseInt32 = exports.strictParseInt = exports.strictParseLong = exports.limitedParseFloat32 = exports.limitedParseFloat = exports.handleFloat = exports.limitedParseDouble = exports.strictParseFloat32 = exports.strictParseFloat = exports.strictParseDouble = exports.expectUnion = exports.expectString = exports.expectObject = exports.expectNonNull = exports.expectByte = exports.expectShort = exports.expectInt32 = exports.expectInt = exports.expectLong = exports.expectFloat32 = exports.expectNumber = exports.expectBoolean = exports.parseBoolean = void 0;\nconst parseBoolean = (value) => {\n    switch (value) {\n        case \"true\":\n            return true;\n        case \"false\":\n            return false;\n        default:\n            throw new Error(`Unable to parse boolean value \"${value}\"`);\n    }\n};\nexports.parseBoolean = parseBoolean;\nconst expectBoolean = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"number\") {\n        if (value === 0 || value === 1) {\n            exports.logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (value === 0) {\n            return false;\n        }\n        if (value === 1) {\n            return true;\n        }\n    }\n    if (typeof value === \"string\") {\n        const lower = value.toLowerCase();\n        if (lower === \"false\" || lower === \"true\") {\n            exports.logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (lower === \"false\") {\n            return false;\n        }\n        if (lower === \"true\") {\n            return true;\n        }\n    }\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    throw new TypeError(`Expected boolean, got ${typeof value}: ${value}`);\n};\nexports.expectBoolean = expectBoolean;\nconst expectNumber = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        const parsed = parseFloat(value);\n        if (!Number.isNaN(parsed)) {\n            if (String(parsed) !== String(value)) {\n                exports.logger.warn(stackTraceWarning(`Expected number but observed string: ${value}`));\n            }\n            return parsed;\n        }\n    }\n    if (typeof value === \"number\") {\n        return value;\n    }\n    throw new TypeError(`Expected number, got ${typeof value}: ${value}`);\n};\nexports.expectNumber = expectNumber;\nconst MAX_FLOAT = Math.ceil(2 ** 127 * (2 - 2 ** -23));\nconst expectFloat32 = (value) => {\n    const expected = (0, exports.expectNumber)(value);\n    if (expected !== undefined && !Number.isNaN(expected) && expected !== Infinity && expected !== -Infinity) {\n        if (Math.abs(expected) > MAX_FLOAT) {\n            throw new TypeError(`Expected 32-bit float, got ${value}`);\n        }\n    }\n    return expected;\n};\nexports.expectFloat32 = expectFloat32;\nconst expectLong = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (Number.isInteger(value) && !Number.isNaN(value)) {\n        return value;\n    }\n    throw new TypeError(`Expected integer, got ${typeof value}: ${value}`);\n};\nexports.expectLong = expectLong;\nexports.expectInt = exports.expectLong;\nconst expectInt32 = (value) => expectSizedInt(value, 32);\nexports.expectInt32 = expectInt32;\nconst expectShort = (value) => expectSizedInt(value, 16);\nexports.expectShort = expectShort;\nconst expectByte = (value) => expectSizedInt(value, 8);\nexports.expectByte = expectByte;\nconst expectSizedInt = (value, size) => {\n    const expected = (0, exports.expectLong)(value);\n    if (expected !== undefined && castInt(expected, size) !== expected) {\n        throw new TypeError(`Expected ${size}-bit integer, got ${value}`);\n    }\n    return expected;\n};\nconst castInt = (value, size) => {\n    switch (size) {\n        case 32:\n            return Int32Array.of(value)[0];\n        case 16:\n            return Int16Array.of(value)[0];\n        case 8:\n            return Int8Array.of(value)[0];\n    }\n};\nconst expectNonNull = (value, location) => {\n    if (value === null || value === undefined) {\n        if (location) {\n            throw new TypeError(`Expected a non-null value for ${location}`);\n        }\n        throw new TypeError(\"Expected a non-null value\");\n    }\n    return value;\n};\nexports.expectNonNull = expectNonNull;\nconst expectObject = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"object\" && !Array.isArray(value)) {\n        return value;\n    }\n    const receivedType = Array.isArray(value) ? \"array\" : typeof value;\n    throw new TypeError(`Expected object, got ${receivedType}: ${value}`);\n};\nexports.expectObject = expectObject;\nconst expectString = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        return value;\n    }\n    if ([\"boolean\", \"number\", \"bigint\"].includes(typeof value)) {\n        exports.logger.warn(stackTraceWarning(`Expected string, got ${typeof value}: ${value}`));\n        return String(value);\n    }\n    throw new TypeError(`Expected string, got ${typeof value}: ${value}`);\n};\nexports.expectString = expectString;\nconst expectUnion = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    const asObject = (0, exports.expectObject)(value);\n    const setKeys = Object.entries(asObject)\n        .filter(([, v]) => v != null)\n        .map(([k]) => k);\n    if (setKeys.length === 0) {\n        throw new TypeError(`Unions must have exactly one non-null member. None were found.`);\n    }\n    if (setKeys.length > 1) {\n        throw new TypeError(`Unions must have exactly one non-null member. Keys ${setKeys} were not null.`);\n    }\n    return asObject;\n};\nexports.expectUnion = expectUnion;\nconst strictParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return (0, exports.expectNumber)(parseNumber(value));\n    }\n    return (0, exports.expectNumber)(value);\n};\nexports.strictParseDouble = strictParseDouble;\nexports.strictParseFloat = exports.strictParseDouble;\nconst strictParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return (0, exports.expectFloat32)(parseNumber(value));\n    }\n    return (0, exports.expectFloat32)(value);\n};\nexports.strictParseFloat32 = strictParseFloat32;\nconst NUMBER_REGEX = /(-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)|(-?Infinity)|(NaN)/g;\nconst parseNumber = (value) => {\n    const matches = value.match(NUMBER_REGEX);\n    if (matches === null || matches[0].length !== value.length) {\n        throw new TypeError(`Expected real number, got implicit NaN`);\n    }\n    return parseFloat(value);\n};\nconst limitedParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return (0, exports.expectNumber)(value);\n};\nexports.limitedParseDouble = limitedParseDouble;\nexports.handleFloat = exports.limitedParseDouble;\nexports.limitedParseFloat = exports.limitedParseDouble;\nconst limitedParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return (0, exports.expectFloat32)(value);\n};\nexports.limitedParseFloat32 = limitedParseFloat32;\nconst parseFloatString = (value) => {\n    switch (value) {\n        case \"NaN\":\n            return NaN;\n        case \"Infinity\":\n            return Infinity;\n        case \"-Infinity\":\n            return -Infinity;\n        default:\n            throw new Error(`Unable to parse float value: ${value}`);\n    }\n};\nconst strictParseLong = (value) => {\n    if (typeof value === \"string\") {\n        return (0, exports.expectLong)(parseNumber(value));\n    }\n    return (0, exports.expectLong)(value);\n};\nexports.strictParseLong = strictParseLong;\nexports.strictParseInt = exports.strictParseLong;\nconst strictParseInt32 = (value) => {\n    if (typeof value === \"string\") {\n        return (0, exports.expectInt32)(parseNumber(value));\n    }\n    return (0, exports.expectInt32)(value);\n};\nexports.strictParseInt32 = strictParseInt32;\nconst strictParseShort = (value) => {\n    if (typeof value === \"string\") {\n        return (0, exports.expectShort)(parseNumber(value));\n    }\n    return (0, exports.expectShort)(value);\n};\nexports.strictParseShort = strictParseShort;\nconst strictParseByte = (value) => {\n    if (typeof value === \"string\") {\n        return (0, exports.expectByte)(parseNumber(value));\n    }\n    return (0, exports.expectByte)(value);\n};\nexports.strictParseByte = strictParseByte;\nconst stackTraceWarning = (message) => {\n    return String(new TypeError(message).stack || message)\n        .split(\"\\n\")\n        .slice(0, 5)\n        .filter((s) => !s.includes(\"stackTraceWarning\"))\n        .join(\"\\n\");\n};\nexports.logger = {\n    warn: console.warn,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolvedPath = void 0;\nconst extended_encode_uri_component_1 = require(\"./extended-encode-uri-component\");\nconst resolvedPath = (resolvedPath, input, memberName, labelValueProvider, uriLabel, isGreedyLabel) => {\n    if (input != null && input[memberName] !== undefined) {\n        const labelValue = labelValueProvider();\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: \" + memberName + \".\");\n        }\n        resolvedPath = resolvedPath.replace(uriLabel, isGreedyLabel\n            ? labelValue\n                .split(\"/\")\n                .map((segment) => (0, extended_encode_uri_component_1.extendedEncodeURIComponent)(segment))\n                .join(\"/\")\n            : (0, extended_encode_uri_component_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: \" + memberName + \".\");\n    }\n    return resolvedPath;\n};\nexports.resolvedPath = resolvedPath;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeFloat = void 0;\nconst serializeFloat = (value) => {\n    if (value !== value) {\n        return \"NaN\";\n    }\n    switch (value) {\n        case Infinity:\n            return \"Infinity\";\n        case -Infinity:\n            return \"-Infinity\";\n        default:\n            return value;\n    }\n};\nexports.serializeFloat = serializeFloat;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._json = void 0;\nconst _json = (obj) => {\n    if (obj == null) {\n        return {};\n    }\n    if (Array.isArray(obj)) {\n        return obj.filter((_) => _ != null);\n    }\n    if (typeof obj === \"object\") {\n        const target = {};\n        for (const key of Object.keys(obj)) {\n            if (obj[key] == null) {\n                continue;\n            }\n            target[key] = (0, exports._json)(obj[key]);\n        }\n        return target;\n    }\n    return obj;\n};\nexports._json = _json;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.splitEvery = void 0;\nfunction splitEvery(value, delimiter, numDelimiters) {\n    if (numDelimiters <= 0 || !Number.isInteger(numDelimiters)) {\n        throw new Error(\"Invalid number of delimiters (\" + numDelimiters + \") for splitEvery.\");\n    }\n    const segments = value.split(delimiter);\n    if (numDelimiters === 1) {\n        return segments;\n    }\n    const compoundSegments = [];\n    let currentSegment = \"\";\n    for (let i = 0; i < segments.length; i++) {\n        if (currentSegment === \"\") {\n            currentSegment = segments[i];\n        }\n        else {\n            currentSegment += delimiter + segments[i];\n        }\n        if ((i + 1) % numDelimiters === 0) {\n            compoundSegments.push(currentSegment);\n            currentSegment = \"\";\n        }\n    }\n    if (currentSegment !== \"\") {\n        compoundSegments.push(currentSegment);\n    }\n    return compoundSegments;\n}\nexports.splitEvery = splitEvery;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpAuthLocation = void 0;\nvar HttpAuthLocation;\n(function (HttpAuthLocation) {\n    HttpAuthLocation[\"HEADER\"] = \"header\";\n    HttpAuthLocation[\"QUERY\"] = \"query\";\n})(HttpAuthLocation = exports.HttpAuthLocation || (exports.HttpAuthLocation = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./config\"), exports);\ntslib_1.__exportStar(require(\"./manager\"), exports);\ntslib_1.__exportStar(require(\"./pool\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EndpointURLScheme = void 0;\nvar EndpointURLScheme;\n(function (EndpointURLScheme) {\n    EndpointURLScheme[\"HTTP\"] = \"http\";\n    EndpointURLScheme[\"HTTPS\"] = \"https\";\n})(EndpointURLScheme = exports.EndpointURLScheme || (exports.EndpointURLScheme = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./EndpointRuleObject\"), exports);\ntslib_1.__exportStar(require(\"./ErrorRuleObject\"), exports);\ntslib_1.__exportStar(require(\"./RuleSetObject\"), exports);\ntslib_1.__exportStar(require(\"./shared\"), exports);\ntslib_1.__exportStar(require(\"./TreeRuleObject\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveChecksumRuntimeConfig = exports.getChecksumConfiguration = exports.AlgorithmId = void 0;\nvar AlgorithmId;\n(function (AlgorithmId) {\n    AlgorithmId[\"MD5\"] = \"md5\";\n    AlgorithmId[\"CRC32\"] = \"crc32\";\n    AlgorithmId[\"CRC32C\"] = \"crc32c\";\n    AlgorithmId[\"SHA1\"] = \"sha1\";\n    AlgorithmId[\"SHA256\"] = \"sha256\";\n})(AlgorithmId = exports.AlgorithmId || (exports.AlgorithmId = {}));\nconst getChecksumConfiguration = (runtimeConfig) => {\n    const checksumAlgorithms = [];\n    if (runtimeConfig.sha256 !== undefined) {\n        checksumAlgorithms.push({\n            algorithmId: () => AlgorithmId.SHA256,\n            checksumConstructor: () => runtimeConfig.sha256,\n        });\n    }\n    if (runtimeConfig.md5 != undefined) {\n        checksumAlgorithms.push({\n            algorithmId: () => AlgorithmId.MD5,\n            checksumConstructor: () => runtimeConfig.md5,\n        });\n    }\n    return {\n        _checksumAlgorithms: checksumAlgorithms,\n        addChecksumAlgorithm(algo) {\n            this._checksumAlgorithms.push(algo);\n        },\n        checksumAlgorithms() {\n            return this._checksumAlgorithms;\n        },\n    };\n};\nexports.getChecksumConfiguration = getChecksumConfiguration;\nconst resolveChecksumRuntimeConfig = (clientConfig) => {\n    const runtimeConfig = {};\n    clientConfig.checksumAlgorithms().forEach((checksumAlgorithm) => {\n        runtimeConfig[checksumAlgorithm.algorithmId()] = checksumAlgorithm.checksumConstructor();\n    });\n    return runtimeConfig;\n};\nexports.resolveChecksumRuntimeConfig = resolveChecksumRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveDefaultRuntimeConfig = exports.getDefaultClientConfiguration = void 0;\nconst checksum_1 = require(\"./checksum\");\nconst getDefaultClientConfiguration = (runtimeConfig) => {\n    return {\n        ...(0, checksum_1.getChecksumConfiguration)(runtimeConfig),\n    };\n};\nexports.getDefaultClientConfiguration = getDefaultClientConfiguration;\nconst resolveDefaultRuntimeConfig = (config) => {\n    return {\n        ...(0, checksum_1.resolveChecksumRuntimeConfig)(config),\n    };\n};\nexports.resolveDefaultRuntimeConfig = resolveDefaultRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AlgorithmId = void 0;\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./defaultClientConfiguration\"), exports);\ntslib_1.__exportStar(require(\"./defaultExtensionConfiguration\"), exports);\nvar checksum_1 = require(\"./checksum\");\nObject.defineProperty(exports, \"AlgorithmId\", { enumerable: true, get: function () { return checksum_1.AlgorithmId; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FieldPosition = void 0;\nvar FieldPosition;\n(function (FieldPosition) {\n    FieldPosition[FieldPosition[\"HEADER\"] = 0] = \"HEADER\";\n    FieldPosition[FieldPosition[\"TRAILER\"] = 1] = \"TRAILER\";\n})(FieldPosition = exports.FieldPosition || (exports.FieldPosition = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./awsCredentialIdentity\"), exports);\ntslib_1.__exportStar(require(\"./identity\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./abort\"), exports);\ntslib_1.__exportStar(require(\"./auth\"), exports);\ntslib_1.__exportStar(require(\"./blob/blob-payload-input-types\"), exports);\ntslib_1.__exportStar(require(\"./checksum\"), exports);\ntslib_1.__exportStar(require(\"./client\"), exports);\ntslib_1.__exportStar(require(\"./command\"), exports);\ntslib_1.__exportStar(require(\"./connection\"), exports);\ntslib_1.__exportStar(require(\"./crypto\"), exports);\ntslib_1.__exportStar(require(\"./encode\"), exports);\ntslib_1.__exportStar(require(\"./endpoint\"), exports);\ntslib_1.__exportStar(require(\"./endpoints\"), exports);\ntslib_1.__exportStar(require(\"./eventStream\"), exports);\ntslib_1.__exportStar(require(\"./extensions\"), exports);\ntslib_1.__exportStar(require(\"./http\"), exports);\ntslib_1.__exportStar(require(\"./identity\"), exports);\ntslib_1.__exportStar(require(\"./logger\"), exports);\ntslib_1.__exportStar(require(\"./middleware\"), exports);\ntslib_1.__exportStar(require(\"./pagination\"), exports);\ntslib_1.__exportStar(require(\"./profile\"), exports);\ntslib_1.__exportStar(require(\"./response\"), exports);\ntslib_1.__exportStar(require(\"./retry\"), exports);\ntslib_1.__exportStar(require(\"./serde\"), exports);\ntslib_1.__exportStar(require(\"./shapes\"), exports);\ntslib_1.__exportStar(require(\"./signature\"), exports);\ntslib_1.__exportStar(require(\"./stream\"), exports);\ntslib_1.__exportStar(require(\"./streaming-payload/streaming-blob-common-types\"), exports);\ntslib_1.__exportStar(require(\"./streaming-payload/streaming-blob-payload-input-types\"), exports);\ntslib_1.__exportStar(require(\"./streaming-payload/streaming-blob-payload-output-types\"), exports);\ntslib_1.__exportStar(require(\"./transfer\"), exports);\ntslib_1.__exportStar(require(\"./transform/client-payload-blob-type-narrow\"), exports);\ntslib_1.__exportStar(require(\"./transform/type-transform\"), exports);\ntslib_1.__exportStar(require(\"./uri\"), exports);\ntslib_1.__exportStar(require(\"./util\"), exports);\ntslib_1.__exportStar(require(\"./waiter\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequestHandlerProtocol = void 0;\nvar RequestHandlerProtocol;\n(function (RequestHandlerProtocol) {\n    RequestHandlerProtocol[\"HTTP_0_9\"] = \"http/0.9\";\n    RequestHandlerProtocol[\"HTTP_1_0\"] = \"http/1.0\";\n    RequestHandlerProtocol[\"TDS_8_0\"] = \"tds/8.0\";\n})(RequestHandlerProtocol = exports.RequestHandlerProtocol || (exports.RequestHandlerProtocol = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseUrl = void 0;\nconst querystring_parser_1 = require(\"@smithy/querystring-parser\");\nconst parseUrl = (url) => {\n    if (typeof url === \"string\") {\n        return (0, exports.parseUrl)(new URL(url));\n    }\n    const { hostname, pathname, port, protocol, search } = url;\n    let query;\n    if (search) {\n        query = (0, querystring_parser_1.parseQueryString)(search);\n    }\n    return {\n        hostname,\n        port: port ? parseInt(port) : undefined,\n        protocol,\n        path: pathname,\n        query,\n    };\n};\nexports.parseUrl = parseUrl;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromBase64 = void 0;\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst BASE64_REGEX = /^[A-Za-z0-9+/]*={0,2}$/;\nconst fromBase64 = (input) => {\n    if ((input.length * 3) % 4 !== 0) {\n        throw new TypeError(`Incorrect padding on base64 string.`);\n    }\n    if (!BASE64_REGEX.exec(input)) {\n        throw new TypeError(`Invalid base64 string.`);\n    }\n    const buffer = (0, util_buffer_from_1.fromString)(input, \"base64\");\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n};\nexports.fromBase64 = fromBase64;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./fromBase64\"), exports);\ntslib_1.__exportStar(require(\"./toBase64\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBase64 = void 0;\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst toBase64 = (input) => (0, util_buffer_from_1.fromArrayBuffer)(input.buffer, input.byteOffset, input.byteLength).toString(\"base64\");\nexports.toBase64 = toBase64;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateBodyLength = void 0;\nconst fs_1 = require(\"fs\");\nconst calculateBodyLength = (body) => {\n    if (!body) {\n        return 0;\n    }\n    if (typeof body === \"string\") {\n        return Buffer.from(body).length;\n    }\n    else if (typeof body.byteLength === \"number\") {\n        return body.byteLength;\n    }\n    else if (typeof body.size === \"number\") {\n        return body.size;\n    }\n    else if (typeof body.start === \"number\" && typeof body.end === \"number\") {\n        return body.end + 1 - body.start;\n    }\n    else if (typeof body.path === \"string\" || Buffer.isBuffer(body.path)) {\n        return (0, fs_1.lstatSync)(body.path).size;\n    }\n    else if (typeof body.fd === \"number\") {\n        return (0, fs_1.fstatSync)(body.fd).size;\n    }\n    throw new Error(`Body Length computation failed for ${body}`);\n};\nexports.calculateBodyLength = calculateBodyLength;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./calculateBodyLength\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromString = exports.fromArrayBuffer = void 0;\nconst is_array_buffer_1 = require(\"@smithy/is-array-buffer\");\nconst buffer_1 = require(\"buffer\");\nconst fromArrayBuffer = (input, offset = 0, length = input.byteLength - offset) => {\n    if (!(0, is_array_buffer_1.isArrayBuffer)(input)) {\n        throw new TypeError(`The \"input\" argument must be ArrayBuffer. Received type ${typeof input} (${input})`);\n    }\n    return buffer_1.Buffer.from(input, offset, length);\n};\nexports.fromArrayBuffer = fromArrayBuffer;\nconst fromString = (input, encoding) => {\n    if (typeof input !== \"string\") {\n        throw new TypeError(`The \"input\" argument must be of type string. Received type ${typeof input} (${input})`);\n    }\n    return encoding ? buffer_1.Buffer.from(input, encoding) : buffer_1.Buffer.from(input);\n};\nexports.fromString = fromString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.booleanSelector = exports.SelectorType = void 0;\nvar SelectorType;\n(function (SelectorType) {\n    SelectorType[\"ENV\"] = \"env\";\n    SelectorType[\"CONFIG\"] = \"shared config entry\";\n})(SelectorType = exports.SelectorType || (exports.SelectorType = {}));\nconst booleanSelector = (obj, key, type) => {\n    if (!(key in obj))\n        return undefined;\n    if (obj[key] === \"true\")\n        return true;\n    if (obj[key] === \"false\")\n        return false;\n    throw new Error(`Cannot load ${type} \"${key}\". Expected \"true\" or \"false\", got ${obj[key]}.`);\n};\nexports.booleanSelector = booleanSelector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./booleanSelector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IMDS_REGION_PATH = exports.DEFAULTS_MODE_OPTIONS = exports.ENV_IMDS_DISABLED = exports.AWS_DEFAULT_REGION_ENV = exports.AWS_REGION_ENV = exports.AWS_EXECUTION_ENV = void 0;\nexports.AWS_EXECUTION_ENV = \"AWS_EXECUTION_ENV\";\nexports.AWS_REGION_ENV = \"AWS_REGION\";\nexports.AWS_DEFAULT_REGION_ENV = \"AWS_DEFAULT_REGION\";\nexports.ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nexports.DEFAULTS_MODE_OPTIONS = [\"in-region\", \"cross-region\", \"mobile\", \"standard\", \"legacy\"];\nexports.IMDS_REGION_PATH = \"/latest/meta-data/placement/region\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_DEFAULTS_MODE_CONFIG_OPTIONS = void 0;\nconst AWS_DEFAULTS_MODE_ENV = \"AWS_DEFAULTS_MODE\";\nconst AWS_DEFAULTS_MODE_CONFIG = \"defaults_mode\";\nexports.NODE_DEFAULTS_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        return env[AWS_DEFAULTS_MODE_ENV];\n    },\n    configFileSelector: (profile) => {\n        return profile[AWS_DEFAULTS_MODE_CONFIG];\n    },\n    default: \"legacy\",\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./resolveDefaultsModeConfig\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveDefaultsModeConfig = void 0;\nconst config_resolver_1 = require(\"@smithy/config-resolver\");\nconst credential_provider_imds_1 = require(\"@smithy/credential-provider-imds\");\nconst node_config_provider_1 = require(\"@smithy/node-config-provider\");\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst constants_1 = require(\"./constants\");\nconst defaultsModeConfig_1 = require(\"./defaultsModeConfig\");\nconst resolveDefaultsModeConfig = ({ region = (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_REGION_CONFIG_OPTIONS), defaultsMode = (0, node_config_provider_1.loadConfig)(defaultsModeConfig_1.NODE_DEFAULTS_MODE_CONFIG_OPTIONS), } = {}) => (0, property_provider_1.memoize)(async () => {\n    const mode = typeof defaultsMode === \"function\" ? await defaultsMode() : defaultsMode;\n    switch (mode === null || mode === void 0 ? void 0 : mode.toLowerCase()) {\n        case \"auto\":\n            return resolveNodeDefaultsModeAuto(region);\n        case \"in-region\":\n        case \"cross-region\":\n        case \"mobile\":\n        case \"standard\":\n        case \"legacy\":\n            return Promise.resolve(mode === null || mode === void 0 ? void 0 : mode.toLocaleLowerCase());\n        case undefined:\n            return Promise.resolve(\"legacy\");\n        default:\n            throw new Error(`Invalid parameter for \"defaultsMode\", expect ${constants_1.DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`);\n    }\n});\nexports.resolveDefaultsModeConfig = resolveDefaultsModeConfig;\nconst resolveNodeDefaultsModeAuto = async (clientRegion) => {\n    if (clientRegion) {\n        const resolvedRegion = typeof clientRegion === \"function\" ? await clientRegion() : clientRegion;\n        const inferredRegion = await inferPhysicalRegion();\n        if (!inferredRegion) {\n            return \"standard\";\n        }\n        if (resolvedRegion === inferredRegion) {\n            return \"in-region\";\n        }\n        else {\n            return \"cross-region\";\n        }\n    }\n    return \"standard\";\n};\nconst inferPhysicalRegion = async () => {\n    var _a;\n    if (process.env[constants_1.AWS_EXECUTION_ENV] && (process.env[constants_1.AWS_REGION_ENV] || process.env[constants_1.AWS_DEFAULT_REGION_ENV])) {\n        return (_a = process.env[constants_1.AWS_REGION_ENV]) !== null && _a !== void 0 ? _a : process.env[constants_1.AWS_DEFAULT_REGION_ENV];\n    }\n    if (!process.env[constants_1.ENV_IMDS_DISABLED]) {\n        try {\n            const endpoint = await (0, credential_provider_imds_1.getInstanceMetadataEndpoint)();\n            return (await (0, credential_provider_imds_1.httpRequest)({ ...endpoint, path: constants_1.IMDS_REGION_PATH })).toString();\n        }\n        catch (e) {\n        }\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toHex = exports.fromHex = void 0;\nconst SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nfunction fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexports.fromHex = fromHex;\nfunction toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\nexports.toHex = toHex;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./normalizeProvider\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeProvider = void 0;\nconst normalizeProvider = (input) => {\n    if (typeof input === \"function\")\n        return input;\n    const promisified = Promise.resolve(input);\n    return () => promisified;\n};\nexports.normalizeProvider = normalizeProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AdaptiveRetryStrategy = void 0;\nconst config_1 = require(\"./config\");\nconst DefaultRateLimiter_1 = require(\"./DefaultRateLimiter\");\nconst StandardRetryStrategy_1 = require(\"./StandardRetryStrategy\");\nclass AdaptiveRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        this.maxAttemptsProvider = maxAttemptsProvider;\n        this.mode = config_1.RETRY_MODES.ADAPTIVE;\n        const { rateLimiter } = options !== null && options !== void 0 ? options : {};\n        this.rateLimiter = rateLimiter !== null && rateLimiter !== void 0 ? rateLimiter : new DefaultRateLimiter_1.DefaultRateLimiter();\n        this.standardRetryStrategy = new StandardRetryStrategy_1.StandardRetryStrategy(maxAttemptsProvider);\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        await this.rateLimiter.getSendToken();\n        return this.standardRetryStrategy.acquireInitialRetryToken(retryTokenScope);\n    }\n    async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n        this.rateLimiter.updateClientSendingRate(errorInfo);\n        return this.standardRetryStrategy.refreshRetryTokenForRetry(tokenToRenew, errorInfo);\n    }\n    recordSuccess(token) {\n        this.rateLimiter.updateClientSendingRate({});\n        this.standardRetryStrategy.recordSuccess(token);\n    }\n}\nexports.AdaptiveRetryStrategy = AdaptiveRetryStrategy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConfiguredRetryStrategy = void 0;\nconst constants_1 = require(\"./constants\");\nconst StandardRetryStrategy_1 = require(\"./StandardRetryStrategy\");\nclass ConfiguredRetryStrategy extends StandardRetryStrategy_1.StandardRetryStrategy {\n    constructor(maxAttempts, computeNextBackoffDelay = constants_1.DEFAULT_RETRY_DELAY_BASE) {\n        super(typeof maxAttempts === \"function\" ? maxAttempts : async () => maxAttempts);\n        if (typeof computeNextBackoffDelay === \"number\") {\n            this.computeNextBackoffDelay = () => computeNextBackoffDelay;\n        }\n        else {\n            this.computeNextBackoffDelay = computeNextBackoffDelay;\n        }\n    }\n    async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n        const token = await super.refreshRetryTokenForRetry(tokenToRenew, errorInfo);\n        token.getRetryDelay = () => this.computeNextBackoffDelay(token.getRetryCount());\n        return token;\n    }\n}\nexports.ConfiguredRetryStrategy = ConfiguredRetryStrategy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultRateLimiter = void 0;\nconst service_error_classification_1 = require(\"@smithy/service-error-classification\");\nclass DefaultRateLimiter {\n    constructor(options) {\n        var _a, _b, _c, _d, _e;\n        this.currentCapacity = 0;\n        this.enabled = false;\n        this.lastMaxRate = 0;\n        this.measuredTxRate = 0;\n        this.requestCount = 0;\n        this.lastTimestamp = 0;\n        this.timeWindow = 0;\n        this.beta = (_a = options === null || options === void 0 ? void 0 : options.beta) !== null && _a !== void 0 ? _a : 0.7;\n        this.minCapacity = (_b = options === null || options === void 0 ? void 0 : options.minCapacity) !== null && _b !== void 0 ? _b : 1;\n        this.minFillRate = (_c = options === null || options === void 0 ? void 0 : options.minFillRate) !== null && _c !== void 0 ? _c : 0.5;\n        this.scaleConstant = (_d = options === null || options === void 0 ? void 0 : options.scaleConstant) !== null && _d !== void 0 ? _d : 0.4;\n        this.smooth = (_e = options === null || options === void 0 ? void 0 : options.smooth) !== null && _e !== void 0 ? _e : 0.8;\n        const currentTimeInSeconds = this.getCurrentTimeInSeconds();\n        this.lastThrottleTime = currentTimeInSeconds;\n        this.lastTxRateBucket = Math.floor(this.getCurrentTimeInSeconds());\n        this.fillRate = this.minFillRate;\n        this.maxCapacity = this.minCapacity;\n    }\n    getCurrentTimeInSeconds() {\n        return Date.now() / 1000;\n    }\n    async getSendToken() {\n        return this.acquireTokenBucket(1);\n    }\n    async acquireTokenBucket(amount) {\n        if (!this.enabled) {\n            return;\n        }\n        this.refillTokenBucket();\n        if (amount > this.currentCapacity) {\n            const delay = ((amount - this.currentCapacity) / this.fillRate) * 1000;\n            await new Promise((resolve) => setTimeout(resolve, delay));\n        }\n        this.currentCapacity = this.currentCapacity - amount;\n    }\n    refillTokenBucket() {\n        const timestamp = this.getCurrentTimeInSeconds();\n        if (!this.lastTimestamp) {\n            this.lastTimestamp = timestamp;\n            return;\n        }\n        const fillAmount = (timestamp - this.lastTimestamp) * this.fillRate;\n        this.currentCapacity = Math.min(this.maxCapacity, this.currentCapacity + fillAmount);\n        this.lastTimestamp = timestamp;\n    }\n    updateClientSendingRate(response) {\n        let calculatedRate;\n        this.updateMeasuredRate();\n        if ((0, service_error_classification_1.isThrottlingError)(response)) {\n            const rateToUse = !this.enabled ? this.measuredTxRate : Math.min(this.measuredTxRate, this.fillRate);\n            this.lastMaxRate = rateToUse;\n            this.calculateTimeWindow();\n            this.lastThrottleTime = this.getCurrentTimeInSeconds();\n            calculatedRate = this.cubicThrottle(rateToUse);\n            this.enableTokenBucket();\n        }\n        else {\n            this.calculateTimeWindow();\n            calculatedRate = this.cubicSuccess(this.getCurrentTimeInSeconds());\n        }\n        const newRate = Math.min(calculatedRate, 2 * this.measuredTxRate);\n        this.updateTokenBucketRate(newRate);\n    }\n    calculateTimeWindow() {\n        this.timeWindow = this.getPrecise(Math.pow((this.lastMaxRate * (1 - this.beta)) / this.scaleConstant, 1 / 3));\n    }\n    cubicThrottle(rateToUse) {\n        return this.getPrecise(rateToUse * this.beta);\n    }\n    cubicSuccess(timestamp) {\n        return this.getPrecise(this.scaleConstant * Math.pow(timestamp - this.lastThrottleTime - this.timeWindow, 3) + this.lastMaxRate);\n    }\n    enableTokenBucket() {\n        this.enabled = true;\n    }\n    updateTokenBucketRate(newRate) {\n        this.refillTokenBucket();\n        this.fillRate = Math.max(newRate, this.minFillRate);\n        this.maxCapacity = Math.max(newRate, this.minCapacity);\n        this.currentCapacity = Math.min(this.currentCapacity, this.maxCapacity);\n    }\n    updateMeasuredRate() {\n        const t = this.getCurrentTimeInSeconds();\n        const timeBucket = Math.floor(t * 2) / 2;\n        this.requestCount++;\n        if (timeBucket > this.lastTxRateBucket) {\n            const currentRate = this.requestCount / (timeBucket - this.lastTxRateBucket);\n            this.measuredTxRate = this.getPrecise(currentRate * this.smooth + this.measuredTxRate * (1 - this.smooth));\n            this.requestCount = 0;\n            this.lastTxRateBucket = timeBucket;\n        }\n    }\n    getPrecise(num) {\n        return parseFloat(num.toFixed(8));\n    }\n}\nexports.DefaultRateLimiter = DefaultRateLimiter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StandardRetryStrategy = void 0;\nconst config_1 = require(\"./config\");\nconst constants_1 = require(\"./constants\");\nconst defaultRetryBackoffStrategy_1 = require(\"./defaultRetryBackoffStrategy\");\nconst defaultRetryToken_1 = require(\"./defaultRetryToken\");\nclass StandardRetryStrategy {\n    constructor(maxAttempts) {\n        this.maxAttempts = maxAttempts;\n        this.mode = config_1.RETRY_MODES.STANDARD;\n        this.capacity = constants_1.INITIAL_RETRY_TOKENS;\n        this.retryBackoffStrategy = (0, defaultRetryBackoffStrategy_1.getDefaultRetryBackoffStrategy)();\n        this.maxAttemptsProvider = typeof maxAttempts === \"function\" ? maxAttempts : async () => maxAttempts;\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        return (0, defaultRetryToken_1.createDefaultRetryToken)({\n            retryDelay: constants_1.DEFAULT_RETRY_DELAY_BASE,\n            retryCount: 0,\n        });\n    }\n    async refreshRetryTokenForRetry(token, errorInfo) {\n        const maxAttempts = await this.getMaxAttempts();\n        if (this.shouldRetry(token, errorInfo, maxAttempts)) {\n            const errorType = errorInfo.errorType;\n            this.retryBackoffStrategy.setDelayBase(errorType === \"THROTTLING\" ? constants_1.THROTTLING_RETRY_DELAY_BASE : constants_1.DEFAULT_RETRY_DELAY_BASE);\n            const delayFromErrorType = this.retryBackoffStrategy.computeNextBackoffDelay(token.getRetryCount());\n            const retryDelay = errorInfo.retryAfterHint\n                ? Math.max(errorInfo.retryAfterHint.getTime() - Date.now() || 0, delayFromErrorType)\n                : delayFromErrorType;\n            const capacityCost = this.getCapacityCost(errorType);\n            this.capacity -= capacityCost;\n            return (0, defaultRetryToken_1.createDefaultRetryToken)({\n                retryDelay,\n                retryCount: token.getRetryCount() + 1,\n                retryCost: capacityCost,\n            });\n        }\n        throw new Error(\"No retry token available\");\n    }\n    recordSuccess(token) {\n        var _a;\n        this.capacity = Math.max(constants_1.INITIAL_RETRY_TOKENS, this.capacity + ((_a = token.getRetryCost()) !== null && _a !== void 0 ? _a : constants_1.NO_RETRY_INCREMENT));\n    }\n    getCapacity() {\n        return this.capacity;\n    }\n    async getMaxAttempts() {\n        try {\n            return await this.maxAttemptsProvider();\n        }\n        catch (error) {\n            console.warn(`Max attempts provider could not resolve. Using default of ${config_1.DEFAULT_MAX_ATTEMPTS}`);\n            return config_1.DEFAULT_MAX_ATTEMPTS;\n        }\n    }\n    shouldRetry(tokenToRenew, errorInfo, maxAttempts) {\n        const attempts = tokenToRenew.getRetryCount() + 1;\n        return (attempts < maxAttempts &&\n            this.capacity >= this.getCapacityCost(errorInfo.errorType) &&\n            this.isRetryableError(errorInfo.errorType));\n    }\n    getCapacityCost(errorType) {\n        return errorType === \"TRANSIENT\" ? constants_1.TIMEOUT_RETRY_COST : constants_1.RETRY_COST;\n    }\n    isRetryableError(errorType) {\n        return errorType === \"THROTTLING\" || errorType === \"TRANSIENT\";\n    }\n}\nexports.StandardRetryStrategy = StandardRetryStrategy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_RETRY_MODE = exports.DEFAULT_MAX_ATTEMPTS = exports.RETRY_MODES = void 0;\nvar RETRY_MODES;\n(function (RETRY_MODES) {\n    RETRY_MODES[\"STANDARD\"] = \"standard\";\n    RETRY_MODES[\"ADAPTIVE\"] = \"adaptive\";\n})(RETRY_MODES = exports.RETRY_MODES || (exports.RETRY_MODES = {}));\nexports.DEFAULT_MAX_ATTEMPTS = 3;\nexports.DEFAULT_RETRY_MODE = RETRY_MODES.STANDARD;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.REQUEST_HEADER = exports.INVOCATION_ID_HEADER = exports.NO_RETRY_INCREMENT = exports.TIMEOUT_RETRY_COST = exports.RETRY_COST = exports.INITIAL_RETRY_TOKENS = exports.THROTTLING_RETRY_DELAY_BASE = exports.MAXIMUM_RETRY_DELAY = exports.DEFAULT_RETRY_DELAY_BASE = void 0;\nexports.DEFAULT_RETRY_DELAY_BASE = 100;\nexports.MAXIMUM_RETRY_DELAY = 20 * 1000;\nexports.THROTTLING_RETRY_DELAY_BASE = 500;\nexports.INITIAL_RETRY_TOKENS = 500;\nexports.RETRY_COST = 5;\nexports.TIMEOUT_RETRY_COST = 10;\nexports.NO_RETRY_INCREMENT = 1;\nexports.INVOCATION_ID_HEADER = \"amz-sdk-invocation-id\";\nexports.REQUEST_HEADER = \"amz-sdk-request\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultRetryBackoffStrategy = void 0;\nconst constants_1 = require(\"./constants\");\nconst getDefaultRetryBackoffStrategy = () => {\n    let delayBase = constants_1.DEFAULT_RETRY_DELAY_BASE;\n    const computeNextBackoffDelay = (attempts) => {\n        return Math.floor(Math.min(constants_1.MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));\n    };\n    const setDelayBase = (delay) => {\n        delayBase = delay;\n    };\n    return {\n        computeNextBackoffDelay,\n        setDelayBase,\n    };\n};\nexports.getDefaultRetryBackoffStrategy = getDefaultRetryBackoffStrategy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDefaultRetryToken = void 0;\nconst constants_1 = require(\"./constants\");\nconst createDefaultRetryToken = ({ retryDelay, retryCount, retryCost, }) => {\n    const getRetryCount = () => retryCount;\n    const getRetryDelay = () => Math.min(constants_1.MAXIMUM_RETRY_DELAY, retryDelay);\n    const getRetryCost = () => retryCost;\n    return {\n        getRetryCount,\n        getRetryDelay,\n        getRetryCost,\n    };\n};\nexports.createDefaultRetryToken = createDefaultRetryToken;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./AdaptiveRetryStrategy\"), exports);\ntslib_1.__exportStar(require(\"./ConfiguredRetryStrategy\"), exports);\ntslib_1.__exportStar(require(\"./DefaultRateLimiter\"), exports);\ntslib_1.__exportStar(require(\"./StandardRetryStrategy\"), exports);\ntslib_1.__exportStar(require(\"./config\"), exports);\ntslib_1.__exportStar(require(\"./constants\"), exports);\ntslib_1.__exportStar(require(\"./types\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Uint8ArrayBlobAdapter = void 0;\nconst transforms_1 = require(\"./transforms\");\nclass Uint8ArrayBlobAdapter extends Uint8Array {\n    static fromString(source, encoding = \"utf-8\") {\n        switch (typeof source) {\n            case \"string\":\n                return (0, transforms_1.transformFromString)(source, encoding);\n            default:\n                throw new Error(`Unsupported conversion from ${typeof source} to Uint8ArrayBlobAdapter.`);\n        }\n    }\n    static mutate(source) {\n        Object.setPrototypeOf(source, Uint8ArrayBlobAdapter.prototype);\n        return source;\n    }\n    transformToString(encoding = \"utf-8\") {\n        return (0, transforms_1.transformToString)(this, encoding);\n    }\n}\nexports.Uint8ArrayBlobAdapter = Uint8ArrayBlobAdapter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transformFromString = exports.transformToString = void 0;\nconst util_base64_1 = require(\"@smithy/util-base64\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst Uint8ArrayBlobAdapter_1 = require(\"./Uint8ArrayBlobAdapter\");\nfunction transformToString(payload, encoding = \"utf-8\") {\n    if (encoding === \"base64\") {\n        return (0, util_base64_1.toBase64)(payload);\n    }\n    return (0, util_utf8_1.toUtf8)(payload);\n}\nexports.transformToString = transformToString;\nfunction transformFromString(str, encoding) {\n    if (encoding === \"base64\") {\n        return Uint8ArrayBlobAdapter_1.Uint8ArrayBlobAdapter.mutate((0, util_base64_1.fromBase64)(str));\n    }\n    return Uint8ArrayBlobAdapter_1.Uint8ArrayBlobAdapter.mutate((0, util_utf8_1.fromUtf8)(str));\n}\nexports.transformFromString = transformFromString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAwsChunkedEncodingStream = void 0;\nconst stream_1 = require(\"stream\");\nconst getAwsChunkedEncodingStream = (readableStream, options) => {\n    const { base64Encoder, bodyLengthChecker, checksumAlgorithmFn, checksumLocationName, streamHasher } = options;\n    const checksumRequired = base64Encoder !== undefined &&\n        checksumAlgorithmFn !== undefined &&\n        checksumLocationName !== undefined &&\n        streamHasher !== undefined;\n    const digest = checksumRequired ? streamHasher(checksumAlgorithmFn, readableStream) : undefined;\n    const awsChunkedEncodingStream = new stream_1.Readable({ read: () => { } });\n    readableStream.on(\"data\", (data) => {\n        const length = bodyLengthChecker(data) || 0;\n        awsChunkedEncodingStream.push(`${length.toString(16)}\\r\\n`);\n        awsChunkedEncodingStream.push(data);\n        awsChunkedEncodingStream.push(\"\\r\\n\");\n    });\n    readableStream.on(\"end\", async () => {\n        awsChunkedEncodingStream.push(`0\\r\\n`);\n        if (checksumRequired) {\n            const checksum = base64Encoder(await digest);\n            awsChunkedEncodingStream.push(`${checksumLocationName}:${checksum}\\r\\n`);\n            awsChunkedEncodingStream.push(`\\r\\n`);\n        }\n        awsChunkedEncodingStream.push(null);\n    });\n    return awsChunkedEncodingStream;\n};\nexports.getAwsChunkedEncodingStream = getAwsChunkedEncodingStream;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./blob/Uint8ArrayBlobAdapter\"), exports);\ntslib_1.__exportStar(require(\"./getAwsChunkedEncodingStream\"), exports);\ntslib_1.__exportStar(require(\"./sdk-stream-mixin\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sdkStreamMixin = void 0;\nconst node_http_handler_1 = require(\"@smithy/node-http-handler\");\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst stream_1 = require(\"stream\");\nconst util_1 = require(\"util\");\nconst ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED = \"The stream has already been transformed.\";\nconst sdkStreamMixin = (stream) => {\n    var _a, _b;\n    if (!(stream instanceof stream_1.Readable)) {\n        const name = ((_b = (_a = stream === null || stream === void 0 ? void 0 : stream.__proto__) === null || _a === void 0 ? void 0 : _a.constructor) === null || _b === void 0 ? void 0 : _b.name) || stream;\n        throw new Error(`Unexpected stream implementation, expect Stream.Readable instance, got ${name}`);\n    }\n    let transformed = false;\n    const transformToByteArray = async () => {\n        if (transformed) {\n            throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);\n        }\n        transformed = true;\n        return await (0, node_http_handler_1.streamCollector)(stream);\n    };\n    return Object.assign(stream, {\n        transformToByteArray,\n        transformToString: async (encoding) => {\n            const buf = await transformToByteArray();\n            if (encoding === undefined || Buffer.isEncoding(encoding)) {\n                return (0, util_buffer_from_1.fromArrayBuffer)(buf.buffer, buf.byteOffset, buf.byteLength).toString(encoding);\n            }\n            else {\n                const decoder = new util_1.TextDecoder(encoding);\n                return decoder.decode(buf);\n            }\n        },\n        transformToWebStream: () => {\n            if (transformed) {\n                throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);\n            }\n            if (stream.readableFlowing !== null) {\n                throw new Error(\"The stream has been consumed by other callbacks.\");\n            }\n            if (typeof stream_1.Readable.toWeb !== \"function\") {\n                throw new Error(\"Readable.toWeb() is not supported. Please make sure you are using Node.js >= 17.0.0, or polyfill is available.\");\n            }\n            transformed = true;\n            return stream_1.Readable.toWeb(stream);\n        },\n    });\n};\nexports.sdkStreamMixin = sdkStreamMixin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeUriPath = void 0;\nconst escape_uri_1 = require(\"./escape-uri\");\nconst escapeUriPath = (uri) => uri.split(\"/\").map(escape_uri_1.escapeUri).join(\"/\");\nexports.escapeUriPath = escapeUriPath;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeUri = void 0;\nconst escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nexports.escapeUri = escapeUri;\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./escape-uri\"), exports);\ntslib_1.__exportStar(require(\"./escape-uri-path\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromUtf8 = void 0;\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst fromUtf8 = (input) => {\n    const buf = (0, util_buffer_from_1.fromString)(input, \"utf8\");\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n};\nexports.fromUtf8 = fromUtf8;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./fromUtf8\"), exports);\ntslib_1.__exportStar(require(\"./toUint8Array\"), exports);\ntslib_1.__exportStar(require(\"./toUtf8\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUint8Array = void 0;\nconst fromUtf8_1 = require(\"./fromUtf8\");\nconst toUint8Array = (data) => {\n    if (typeof data === \"string\") {\n        return (0, fromUtf8_1.fromUtf8)(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n};\nexports.toUint8Array = toUint8Array;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUtf8 = void 0;\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst toUtf8 = (input) => (0, util_buffer_from_1.fromArrayBuffer)(input.buffer, input.byteOffset, input.byteLength).toString(\"utf8\");\nexports.toUtf8 = toUtf8;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createWaiter = void 0;\nconst poller_1 = require(\"./poller\");\nconst utils_1 = require(\"./utils\");\nconst waiter_1 = require(\"./waiter\");\nconst abortTimeout = async (abortSignal) => {\n    return new Promise((resolve) => {\n        abortSignal.onabort = () => resolve({ state: waiter_1.WaiterState.ABORTED });\n    });\n};\nconst createWaiter = async (options, input, acceptorChecks) => {\n    const params = {\n        ...waiter_1.waiterServiceDefaults,\n        ...options,\n    };\n    (0, utils_1.validateWaiterOptions)(params);\n    const exitConditions = [(0, poller_1.runPolling)(params, input, acceptorChecks)];\n    if (options.abortController) {\n        exitConditions.push(abortTimeout(options.abortController.signal));\n    }\n    if (options.abortSignal) {\n        exitConditions.push(abortTimeout(options.abortSignal));\n    }\n    return Promise.race(exitConditions);\n};\nexports.createWaiter = createWaiter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./createWaiter\"), exports);\ntslib_1.__exportStar(require(\"./waiter\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.runPolling = void 0;\nconst sleep_1 = require(\"./utils/sleep\");\nconst waiter_1 = require(\"./waiter\");\nconst exponentialBackoffWithJitter = (minDelay, maxDelay, attemptCeiling, attempt) => {\n    if (attempt > attemptCeiling)\n        return maxDelay;\n    const delay = minDelay * 2 ** (attempt - 1);\n    return randomInRange(minDelay, delay);\n};\nconst randomInRange = (min, max) => min + Math.random() * (max - min);\nconst runPolling = async ({ minDelay, maxDelay, maxWaitTime, abortController, client, abortSignal }, input, acceptorChecks) => {\n    var _a;\n    const { state, reason } = await acceptorChecks(client, input);\n    if (state !== waiter_1.WaiterState.RETRY) {\n        return { state, reason };\n    }\n    let currentAttempt = 1;\n    const waitUntil = Date.now() + maxWaitTime * 1000;\n    const attemptCeiling = Math.log(maxDelay / minDelay) / Math.log(2) + 1;\n    while (true) {\n        if (((_a = abortController === null || abortController === void 0 ? void 0 : abortController.signal) === null || _a === void 0 ? void 0 : _a.aborted) || (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted)) {\n            return { state: waiter_1.WaiterState.ABORTED };\n        }\n        const delay = exponentialBackoffWithJitter(minDelay, maxDelay, attemptCeiling, currentAttempt);\n        if (Date.now() + delay * 1000 > waitUntil) {\n            return { state: waiter_1.WaiterState.TIMEOUT };\n        }\n        await (0, sleep_1.sleep)(delay);\n        const { state, reason } = await acceptorChecks(client, input);\n        if (state !== waiter_1.WaiterState.RETRY) {\n            return { state, reason };\n        }\n        currentAttempt += 1;\n    }\n};\nexports.runPolling = runPolling;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./sleep\"), exports);\ntslib_1.__exportStar(require(\"./validate\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sleep = void 0;\nconst sleep = (seconds) => {\n    return new Promise((resolve) => setTimeout(resolve, seconds * 1000));\n};\nexports.sleep = sleep;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateWaiterOptions = void 0;\nconst validateWaiterOptions = (options) => {\n    if (options.maxWaitTime < 1) {\n        throw new Error(`WaiterConfiguration.maxWaitTime must be greater than 0`);\n    }\n    else if (options.minDelay < 1) {\n        throw new Error(`WaiterConfiguration.minDelay must be greater than 0`);\n    }\n    else if (options.maxDelay < 1) {\n        throw new Error(`WaiterConfiguration.maxDelay must be greater than 0`);\n    }\n    else if (options.maxWaitTime <= options.minDelay) {\n        throw new Error(`WaiterConfiguration.maxWaitTime [${options.maxWaitTime}] must be greater than WaiterConfiguration.minDelay [${options.minDelay}] for this waiter`);\n    }\n    else if (options.maxDelay < options.minDelay) {\n        throw new Error(`WaiterConfiguration.maxDelay [${options.maxDelay}] must be greater than WaiterConfiguration.minDelay [${options.minDelay}] for this waiter`);\n    }\n};\nexports.validateWaiterOptions = validateWaiterOptions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkExceptions = exports.WaiterState = exports.waiterServiceDefaults = void 0;\nexports.waiterServiceDefaults = {\n    minDelay: 2,\n    maxDelay: 120,\n};\nvar WaiterState;\n(function (WaiterState) {\n    WaiterState[\"ABORTED\"] = \"ABORTED\";\n    WaiterState[\"FAILURE\"] = \"FAILURE\";\n    WaiterState[\"SUCCESS\"] = \"SUCCESS\";\n    WaiterState[\"RETRY\"] = \"RETRY\";\n    WaiterState[\"TIMEOUT\"] = \"TIMEOUT\";\n})(WaiterState = exports.WaiterState || (exports.WaiterState = {}));\nconst checkExceptions = (result) => {\n    if (result.state === WaiterState.ABORTED) {\n        const abortError = new Error(`${JSON.stringify({\n            ...result,\n            reason: \"Request was aborted\",\n        })}`);\n        abortError.name = \"AbortError\";\n        throw abortError;\n    }\n    else if (result.state === WaiterState.TIMEOUT) {\n        const timeoutError = new Error(`${JSON.stringify({\n            ...result,\n            reason: \"Waiter has timed out\",\n        })}`);\n        timeoutError.name = \"TimeoutError\";\n        throw timeoutError;\n    }\n    else if (result.state !== WaiterState.SUCCESS) {\n        throw new Error(`${JSON.stringify({ result })}`);\n    }\n    return result;\n};\nexports.checkExceptions = checkExceptions;\n","'use strict';\n\nconst stringify = require('./lib/stringify');\nconst compile = require('./lib/compile');\nconst expand = require('./lib/expand');\nconst parse = require('./lib/parse');\n\n/**\n * Expand the given pattern or create a regex-compatible string.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces('{a,b,c}', { compile: true })); //=> ['(a|b|c)']\n * console.log(braces('{a,b,c}')); //=> ['a', 'b', 'c']\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {String}\n * @api public\n */\n\nconst braces = (input, options = {}) => {\n  let output = [];\n\n  if (Array.isArray(input)) {\n    for (let pattern of input) {\n      let result = braces.create(pattern, options);\n      if (Array.isArray(result)) {\n        output.push(...result);\n      } else {\n        output.push(result);\n      }\n    }\n  } else {\n    output = [].concat(braces.create(input, options));\n  }\n\n  if (options && options.expand === true && options.nodupes === true) {\n    output = [...new Set(output)];\n  }\n  return output;\n};\n\n/**\n * Parse the given `str` with the given `options`.\n *\n * ```js\n * // braces.parse(pattern, [, options]);\n * const ast = braces.parse('a/{b,c}/d');\n * console.log(ast);\n * ```\n * @param {String} pattern Brace pattern to parse\n * @param {Object} options\n * @return {Object} Returns an AST\n * @api public\n */\n\nbraces.parse = (input, options = {}) => parse(input, options);\n\n/**\n * Creates a braces string from an AST, or an AST node.\n *\n * ```js\n * const braces = require('braces');\n * let ast = braces.parse('foo/{a,b}/bar');\n * console.log(stringify(ast.nodes[2])); //=> '{a,b}'\n * ```\n * @param {String} `input` Brace pattern or AST.\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.stringify = (input, options = {}) => {\n  if (typeof input === 'string') {\n    return stringify(braces.parse(input, options), options);\n  }\n  return stringify(input, options);\n};\n\n/**\n * Compiles a brace pattern into a regex-compatible, optimized string.\n * This method is called by the main [braces](#braces) function by default.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.compile('a/{b,c}/d'));\n * //=> ['a/(b|c)/d']\n * ```\n * @param {String} `input` Brace pattern or AST.\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.compile = (input, options = {}) => {\n  if (typeof input === 'string') {\n    input = braces.parse(input, options);\n  }\n  return compile(input, options);\n};\n\n/**\n * Expands a brace pattern into an array. This method is called by the\n * main [braces](#braces) function when `options.expand` is true. Before\n * using this method it's recommended that you read the [performance notes](#performance))\n * and advantages of using [.compile](#compile) instead.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.expand('a/{b,c}/d'));\n * //=> ['a/b/d', 'a/c/d'];\n * ```\n * @param {String} `pattern` Brace pattern\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.expand = (input, options = {}) => {\n  if (typeof input === 'string') {\n    input = braces.parse(input, options);\n  }\n\n  let result = expand(input, options);\n\n  // filter out empty strings if specified\n  if (options.noempty === true) {\n    result = result.filter(Boolean);\n  }\n\n  // filter out duplicates if specified\n  if (options.nodupes === true) {\n    result = [...new Set(result)];\n  }\n\n  return result;\n};\n\n/**\n * Processes a brace pattern and returns either an expanded array\n * (if `options.expand` is true), a highly optimized regex-compatible string.\n * This method is called by the main [braces](#braces) function.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.create('user-{200..300}/project-{a,b,c}-{1..10}'))\n * //=> 'user-(20[0-9]|2[1-9][0-9]|300)/project-(a|b|c)-([1-9]|10)'\n * ```\n * @param {String} `pattern` Brace pattern\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.create = (input, options = {}) => {\n  if (input === '' || input.length < 3) {\n    return [input];\n  }\n\n return options.expand !== true\n    ? braces.compile(input, options)\n    : braces.expand(input, options);\n};\n\n/**\n * Expose \"braces\"\n */\n\nmodule.exports = braces;\n","'use strict';\n\nconst fill = require('fill-range');\nconst utils = require('./utils');\n\nconst compile = (ast, options = {}) => {\n  let walk = (node, parent = {}) => {\n    let invalidBlock = utils.isInvalidBrace(parent);\n    let invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let invalid = invalidBlock === true || invalidNode === true;\n    let prefix = options.escapeInvalid === true ? '\\\\' : '';\n    let output = '';\n\n    if (node.isOpen === true) {\n      return prefix + node.value;\n    }\n    if (node.isClose === true) {\n      return prefix + node.value;\n    }\n\n    if (node.type === 'open') {\n      return invalid ? (prefix + node.value) : '(';\n    }\n\n    if (node.type === 'close') {\n      return invalid ? (prefix + node.value) : ')';\n    }\n\n    if (node.type === 'comma') {\n      return node.prev.type === 'comma' ? '' : (invalid ? node.value : '|');\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      let args = utils.reduce(node.nodes);\n      let range = fill(...args, { ...options, wrap: false, toRegex: true });\n\n      if (range.length !== 0) {\n        return args.length > 1 && range.length > 1 ? `(${range})` : range;\n      }\n    }\n\n    if (node.nodes) {\n      for (let child of node.nodes) {\n        output += walk(child, node);\n      }\n    }\n    return output;\n  };\n\n  return walk(ast);\n};\n\nmodule.exports = compile;\n","'use strict';\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n\n  // Digits\n  CHAR_0: '0', /* 0 */\n  CHAR_9: '9', /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 'A', /* A */\n  CHAR_LOWERCASE_A: 'a', /* a */\n  CHAR_UPPERCASE_Z: 'Z', /* Z */\n  CHAR_LOWERCASE_Z: 'z', /* z */\n\n  CHAR_LEFT_PARENTHESES: '(', /* ( */\n  CHAR_RIGHT_PARENTHESES: ')', /* ) */\n\n  CHAR_ASTERISK: '*', /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: '&', /* & */\n  CHAR_AT: '@', /* @ */\n  CHAR_BACKSLASH: '\\\\', /* \\ */\n  CHAR_BACKTICK: '`', /* ` */\n  CHAR_CARRIAGE_RETURN: '\\r', /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: '^', /* ^ */\n  CHAR_COLON: ':', /* : */\n  CHAR_COMMA: ',', /* , */\n  CHAR_DOLLAR: '$', /* . */\n  CHAR_DOT: '.', /* . */\n  CHAR_DOUBLE_QUOTE: '\"', /* \" */\n  CHAR_EQUAL: '=', /* = */\n  CHAR_EXCLAMATION_MARK: '!', /* ! */\n  CHAR_FORM_FEED: '\\f', /* \\f */\n  CHAR_FORWARD_SLASH: '/', /* / */\n  CHAR_HASH: '#', /* # */\n  CHAR_HYPHEN_MINUS: '-', /* - */\n  CHAR_LEFT_ANGLE_BRACKET: '<', /* < */\n  CHAR_LEFT_CURLY_BRACE: '{', /* { */\n  CHAR_LEFT_SQUARE_BRACKET: '[', /* [ */\n  CHAR_LINE_FEED: '\\n', /* \\n */\n  CHAR_NO_BREAK_SPACE: '\\u00A0', /* \\u00A0 */\n  CHAR_PERCENT: '%', /* % */\n  CHAR_PLUS: '+', /* + */\n  CHAR_QUESTION_MARK: '?', /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: '>', /* > */\n  CHAR_RIGHT_CURLY_BRACE: '}', /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: ']', /* ] */\n  CHAR_SEMICOLON: ';', /* ; */\n  CHAR_SINGLE_QUOTE: '\\'', /* ' */\n  CHAR_SPACE: ' ', /*   */\n  CHAR_TAB: '\\t', /* \\t */\n  CHAR_UNDERSCORE: '_', /* _ */\n  CHAR_VERTICAL_LINE: '|', /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: '\\uFEFF' /* \\uFEFF */\n};\n","'use strict';\n\nconst fill = require('fill-range');\nconst stringify = require('./stringify');\nconst utils = require('./utils');\n\nconst append = (queue = '', stash = '', enclose = false) => {\n  let result = [];\n\n  queue = [].concat(queue);\n  stash = [].concat(stash);\n\n  if (!stash.length) return queue;\n  if (!queue.length) {\n    return enclose ? utils.flatten(stash).map(ele => `{${ele}}`) : stash;\n  }\n\n  for (let item of queue) {\n    if (Array.isArray(item)) {\n      for (let value of item) {\n        result.push(append(value, stash, enclose));\n      }\n    } else {\n      for (let ele of stash) {\n        if (enclose === true && typeof ele === 'string') ele = `{${ele}}`;\n        result.push(Array.isArray(ele) ? append(item, ele, enclose) : (item + ele));\n      }\n    }\n  }\n  return utils.flatten(result);\n};\n\nconst expand = (ast, options = {}) => {\n  let rangeLimit = options.rangeLimit === void 0 ? 1000 : options.rangeLimit;\n\n  let walk = (node, parent = {}) => {\n    node.queue = [];\n\n    let p = parent;\n    let q = parent.queue;\n\n    while (p.type !== 'brace' && p.type !== 'root' && p.parent) {\n      p = p.parent;\n      q = p.queue;\n    }\n\n    if (node.invalid || node.dollar) {\n      q.push(append(q.pop(), stringify(node, options)));\n      return;\n    }\n\n    if (node.type === 'brace' && node.invalid !== true && node.nodes.length === 2) {\n      q.push(append(q.pop(), ['{}']));\n      return;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      let args = utils.reduce(node.nodes);\n\n      if (utils.exceedsLimit(...args, options.step, rangeLimit)) {\n        throw new RangeError('expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.');\n      }\n\n      let range = fill(...args, options);\n      if (range.length === 0) {\n        range = stringify(node, options);\n      }\n\n      q.push(append(q.pop(), range));\n      node.nodes = [];\n      return;\n    }\n\n    let enclose = utils.encloseBrace(node);\n    let queue = node.queue;\n    let block = node;\n\n    while (block.type !== 'brace' && block.type !== 'root' && block.parent) {\n      block = block.parent;\n      queue = block.queue;\n    }\n\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i];\n\n      if (child.type === 'comma' && node.type === 'brace') {\n        if (i === 1) queue.push('');\n        queue.push('');\n        continue;\n      }\n\n      if (child.type === 'close') {\n        q.push(append(q.pop(), queue, enclose));\n        continue;\n      }\n\n      if (child.value && child.type !== 'open') {\n        queue.push(append(queue.pop(), child.value));\n        continue;\n      }\n\n      if (child.nodes) {\n        walk(child, node);\n      }\n    }\n\n    return queue;\n  };\n\n  return utils.flatten(walk(ast));\n};\n\nmodule.exports = expand;\n","'use strict';\n\nconst stringify = require('./stringify');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  CHAR_BACKSLASH, /* \\ */\n  CHAR_BACKTICK, /* ` */\n  CHAR_COMMA, /* , */\n  CHAR_DOT, /* . */\n  CHAR_LEFT_PARENTHESES, /* ( */\n  CHAR_RIGHT_PARENTHESES, /* ) */\n  CHAR_LEFT_CURLY_BRACE, /* { */\n  CHAR_RIGHT_CURLY_BRACE, /* } */\n  CHAR_LEFT_SQUARE_BRACKET, /* [ */\n  CHAR_RIGHT_SQUARE_BRACKET, /* ] */\n  CHAR_DOUBLE_QUOTE, /* \" */\n  CHAR_SINGLE_QUOTE, /* ' */\n  CHAR_NO_BREAK_SPACE,\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE\n} = require('./constants');\n\n/**\n * parse\n */\n\nconst parse = (input, options = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  let opts = options || {};\n  let max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  if (input.length > max) {\n    throw new SyntaxError(`Input length (${input.length}), exceeds max characters (${max})`);\n  }\n\n  let ast = { type: 'root', input, nodes: [] };\n  let stack = [ast];\n  let block = ast;\n  let prev = ast;\n  let brackets = 0;\n  let length = input.length;\n  let index = 0;\n  let depth = 0;\n  let value;\n  let memo = {};\n\n  /**\n   * Helpers\n   */\n\n  const advance = () => input[index++];\n  const push = node => {\n    if (node.type === 'text' && prev.type === 'dot') {\n      prev.type = 'text';\n    }\n\n    if (prev && prev.type === 'text' && node.type === 'text') {\n      prev.value += node.value;\n      return;\n    }\n\n    block.nodes.push(node);\n    node.parent = block;\n    node.prev = prev;\n    prev = node;\n    return node;\n  };\n\n  push({ type: 'bos' });\n\n  while (index < length) {\n    block = stack[stack.length - 1];\n    value = advance();\n\n    /**\n     * Invalid chars\n     */\n\n    if (value === CHAR_ZERO_WIDTH_NOBREAK_SPACE || value === CHAR_NO_BREAK_SPACE) {\n      continue;\n    }\n\n    /**\n     * Escaped chars\n     */\n\n    if (value === CHAR_BACKSLASH) {\n      push({ type: 'text', value: (options.keepEscaping ? value : '') + advance() });\n      continue;\n    }\n\n    /**\n     * Right square bracket (literal): ']'\n     */\n\n    if (value === CHAR_RIGHT_SQUARE_BRACKET) {\n      push({ type: 'text', value: '\\\\' + value });\n      continue;\n    }\n\n    /**\n     * Left square bracket: '['\n     */\n\n    if (value === CHAR_LEFT_SQUARE_BRACKET) {\n      brackets++;\n\n      let closed = true;\n      let next;\n\n      while (index < length && (next = advance())) {\n        value += next;\n\n        if (next === CHAR_LEFT_SQUARE_BRACKET) {\n          brackets++;\n          continue;\n        }\n\n        if (next === CHAR_BACKSLASH) {\n          value += advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          brackets--;\n\n          if (brackets === 0) {\n            break;\n          }\n        }\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === CHAR_LEFT_PARENTHESES) {\n      block = push({ type: 'paren', nodes: [] });\n      stack.push(block);\n      push({ type: 'text', value });\n      continue;\n    }\n\n    if (value === CHAR_RIGHT_PARENTHESES) {\n      if (block.type !== 'paren') {\n        push({ type: 'text', value });\n        continue;\n      }\n      block = stack.pop();\n      push({ type: 'text', value });\n      block = stack[stack.length - 1];\n      continue;\n    }\n\n    /**\n     * Quotes: '|\"|`\n     */\n\n    if (value === CHAR_DOUBLE_QUOTE || value === CHAR_SINGLE_QUOTE || value === CHAR_BACKTICK) {\n      let open = value;\n      let next;\n\n      if (options.keepQuotes !== true) {\n        value = '';\n      }\n\n      while (index < length && (next = advance())) {\n        if (next === CHAR_BACKSLASH) {\n          value += next + advance();\n          continue;\n        }\n\n        if (next === open) {\n          if (options.keepQuotes === true) value += next;\n          break;\n        }\n\n        value += next;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Left curly brace: '{'\n     */\n\n    if (value === CHAR_LEFT_CURLY_BRACE) {\n      depth++;\n\n      let dollar = prev.value && prev.value.slice(-1) === '$' || block.dollar === true;\n      let brace = {\n        type: 'brace',\n        open: true,\n        close: false,\n        dollar,\n        depth,\n        commas: 0,\n        ranges: 0,\n        nodes: []\n      };\n\n      block = push(brace);\n      stack.push(block);\n      push({ type: 'open', value });\n      continue;\n    }\n\n    /**\n     * Right curly brace: '}'\n     */\n\n    if (value === CHAR_RIGHT_CURLY_BRACE) {\n      if (block.type !== 'brace') {\n        push({ type: 'text', value });\n        continue;\n      }\n\n      let type = 'close';\n      block = stack.pop();\n      block.close = true;\n\n      push({ type, value });\n      depth--;\n\n      block = stack[stack.length - 1];\n      continue;\n    }\n\n    /**\n     * Comma: ','\n     */\n\n    if (value === CHAR_COMMA && depth > 0) {\n      if (block.ranges > 0) {\n        block.ranges = 0;\n        let open = block.nodes.shift();\n        block.nodes = [open, { type: 'text', value: stringify(block) }];\n      }\n\n      push({ type: 'comma', value });\n      block.commas++;\n      continue;\n    }\n\n    /**\n     * Dot: '.'\n     */\n\n    if (value === CHAR_DOT && depth > 0 && block.commas === 0) {\n      let siblings = block.nodes;\n\n      if (depth === 0 || siblings.length === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n\n      if (prev.type === 'dot') {\n        block.range = [];\n        prev.value += value;\n        prev.type = 'range';\n\n        if (block.nodes.length !== 3 && block.nodes.length !== 5) {\n          block.invalid = true;\n          block.ranges = 0;\n          prev.type = 'text';\n          continue;\n        }\n\n        block.ranges++;\n        block.args = [];\n        continue;\n      }\n\n      if (prev.type === 'range') {\n        siblings.pop();\n\n        let before = siblings[siblings.length - 1];\n        before.value += prev.value + value;\n        prev = before;\n        block.ranges--;\n        continue;\n      }\n\n      push({ type: 'dot', value });\n      continue;\n    }\n\n    /**\n     * Text\n     */\n\n    push({ type: 'text', value });\n  }\n\n  // Mark imbalanced braces and brackets as invalid\n  do {\n    block = stack.pop();\n\n    if (block.type !== 'root') {\n      block.nodes.forEach(node => {\n        if (!node.nodes) {\n          if (node.type === 'open') node.isOpen = true;\n          if (node.type === 'close') node.isClose = true;\n          if (!node.nodes) node.type = 'text';\n          node.invalid = true;\n        }\n      });\n\n      // get the location of the block on parent.nodes (block's siblings)\n      let parent = stack[stack.length - 1];\n      let index = parent.nodes.indexOf(block);\n      // replace the (invalid) block with it's nodes\n      parent.nodes.splice(index, 1, ...block.nodes);\n    }\n  } while (stack.length > 0);\n\n  push({ type: 'eos' });\n  return ast;\n};\n\nmodule.exports = parse;\n","'use strict';\n\nconst utils = require('./utils');\n\nmodule.exports = (ast, options = {}) => {\n  let stringify = (node, parent = {}) => {\n    let invalidBlock = options.escapeInvalid && utils.isInvalidBrace(parent);\n    let invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let output = '';\n\n    if (node.value) {\n      if ((invalidBlock || invalidNode) && utils.isOpenOrClose(node)) {\n        return '\\\\' + node.value;\n      }\n      return node.value;\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes) {\n      for (let child of node.nodes) {\n        output += stringify(child);\n      }\n    }\n    return output;\n  };\n\n  return stringify(ast);\n};\n\n","'use strict';\n\nexports.isInteger = num => {\n  if (typeof num === 'number') {\n    return Number.isInteger(num);\n  }\n  if (typeof num === 'string' && num.trim() !== '') {\n    return Number.isInteger(Number(num));\n  }\n  return false;\n};\n\n/**\n * Find a node of the given type\n */\n\nexports.find = (node, type) => node.nodes.find(node => node.type === type);\n\n/**\n * Find a node of the given type\n */\n\nexports.exceedsLimit = (min, max, step = 1, limit) => {\n  if (limit === false) return false;\n  if (!exports.isInteger(min) || !exports.isInteger(max)) return false;\n  return ((Number(max) - Number(min)) / Number(step)) >= limit;\n};\n\n/**\n * Escape the given node with '\\\\' before node.value\n */\n\nexports.escapeNode = (block, n = 0, type) => {\n  let node = block.nodes[n];\n  if (!node) return;\n\n  if ((type && node.type === type) || node.type === 'open' || node.type === 'close') {\n    if (node.escaped !== true) {\n      node.value = '\\\\' + node.value;\n      node.escaped = true;\n    }\n  }\n};\n\n/**\n * Returns true if the given brace node should be enclosed in literal braces\n */\n\nexports.encloseBrace = node => {\n  if (node.type !== 'brace') return false;\n  if ((node.commas >> 0 + node.ranges >> 0) === 0) {\n    node.invalid = true;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Returns true if a brace node is invalid.\n */\n\nexports.isInvalidBrace = block => {\n  if (block.type !== 'brace') return false;\n  if (block.invalid === true || block.dollar) return true;\n  if ((block.commas >> 0 + block.ranges >> 0) === 0) {\n    block.invalid = true;\n    return true;\n  }\n  if (block.open !== true || block.close !== true) {\n    block.invalid = true;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Returns true if a node is an open or close node\n */\n\nexports.isOpenOrClose = node => {\n  if (node.type === 'open' || node.type === 'close') {\n    return true;\n  }\n  return node.open === true || node.close === true;\n};\n\n/**\n * Reduce an array of text nodes.\n */\n\nexports.reduce = nodes => nodes.reduce((acc, node) => {\n  if (node.type === 'text') acc.push(node.value);\n  if (node.type === 'range') node.type = 'text';\n  return acc;\n}, []);\n\n/**\n * Flatten an array\n */\n\nexports.flatten = (...args) => {\n  const result = [];\n  const flat = arr => {\n    for (let i = 0; i < arr.length; i++) {\n      let ele = arr[i];\n      Array.isArray(ele) ? flat(ele, result) : ele !== void 0 && result.push(ele);\n    }\n    return result;\n  };\n  flat(args);\n  return result;\n};\n","'use strict';\nconst path = require('path');\nconst pathType = require('path-type');\n\nconst getExtensions = extensions => extensions.length > 1 ? `{${extensions.join(',')}}` : extensions[0];\n\nconst getPath = (filepath, cwd) => {\n\tconst pth = filepath[0] === '!' ? filepath.slice(1) : filepath;\n\treturn path.isAbsolute(pth) ? pth : path.join(cwd, pth);\n};\n\nconst addExtensions = (file, extensions) => {\n\tif (path.extname(file)) {\n\t\treturn `**/${file}`;\n\t}\n\n\treturn `**/${file}.${getExtensions(extensions)}`;\n};\n\nconst getGlob = (directory, options) => {\n\tif (options.files && !Array.isArray(options.files)) {\n\t\tthrow new TypeError(`Expected \\`files\\` to be of type \\`Array\\` but received type \\`${typeof options.files}\\``);\n\t}\n\n\tif (options.extensions && !Array.isArray(options.extensions)) {\n\t\tthrow new TypeError(`Expected \\`extensions\\` to be of type \\`Array\\` but received type \\`${typeof options.extensions}\\``);\n\t}\n\n\tif (options.files && options.extensions) {\n\t\treturn options.files.map(x => path.posix.join(directory, addExtensions(x, options.extensions)));\n\t}\n\n\tif (options.files) {\n\t\treturn options.files.map(x => path.posix.join(directory, `**/${x}`));\n\t}\n\n\tif (options.extensions) {\n\t\treturn [path.posix.join(directory, `**/*.${getExtensions(options.extensions)}`)];\n\t}\n\n\treturn [path.posix.join(directory, '**')];\n};\n\nmodule.exports = async (input, options) => {\n\toptions = {\n\t\tcwd: process.cwd(),\n\t\t...options\n\t};\n\n\tif (typeof options.cwd !== 'string') {\n\t\tthrow new TypeError(`Expected \\`cwd\\` to be of type \\`string\\` but received type \\`${typeof options.cwd}\\``);\n\t}\n\n\tconst globs = await Promise.all([].concat(input).map(async x => {\n\t\tconst isDirectory = await pathType.isDirectory(getPath(x, options.cwd));\n\t\treturn isDirectory ? getGlob(x, options) : x;\n\t}));\n\n\treturn [].concat.apply([], globs); // eslint-disable-line prefer-spread\n};\n\nmodule.exports.sync = (input, options) => {\n\toptions = {\n\t\tcwd: process.cwd(),\n\t\t...options\n\t};\n\n\tif (typeof options.cwd !== 'string') {\n\t\tthrow new TypeError(`Expected \\`cwd\\` to be of type \\`string\\` but received type \\`${typeof options.cwd}\\``);\n\t}\n\n\tconst globs = [].concat(input).map(x => pathType.isDirectorySync(getPath(x, options.cwd)) ? getGlob(x, options) : x);\n\n\treturn [].concat.apply([], globs); // eslint-disable-line prefer-spread\n};\n","'use strict';\n\nvar isGlob = require('is-glob');\nvar pathPosixDirname = require('path').posix.dirname;\nvar isWin32 = require('os').platform() === 'win32';\n\nvar slash = '/';\nvar backslash = /\\\\/g;\nvar enclosure = /[\\{\\[].*[\\}\\]]$/;\nvar globby = /(^|[^\\\\])([\\{\\[]|\\([^\\)]+$)/;\nvar escaped = /\\\\([\\!\\*\\?\\|\\[\\]\\(\\)\\{\\}])/g;\n\n/**\n * @param {string} str\n * @param {Object} opts\n * @param {boolean} [opts.flipBackslashes=true]\n * @returns {string}\n */\nmodule.exports = function globParent(str, opts) {\n  var options = Object.assign({ flipBackslashes: true }, opts);\n\n  // flip windows path separators\n  if (options.flipBackslashes && isWin32 && str.indexOf(slash) < 0) {\n    str = str.replace(backslash, slash);\n  }\n\n  // special case for strings ending in enclosure containing path separator\n  if (enclosure.test(str)) {\n    str += slash;\n  }\n\n  // preserves full path in case of trailing path separator\n  str += 'a';\n\n  // remove path parts that are globby\n  do {\n    str = pathPosixDirname(str);\n  } while (isGlob(str) || globby.test(str));\n\n  // remove escape chars and return result\n  return str.replace(escaped, '$1');\n};\n","\"use strict\";\nconst taskManager = require(\"./managers/tasks\");\nconst async_1 = require(\"./providers/async\");\nconst stream_1 = require(\"./providers/stream\");\nconst sync_1 = require(\"./providers/sync\");\nconst settings_1 = require(\"./settings\");\nconst utils = require(\"./utils\");\nasync function FastGlob(source, options) {\n    assertPatternsInput(source);\n    const works = getWorks(source, async_1.default, options);\n    const result = await Promise.all(works);\n    return utils.array.flatten(result);\n}\n// https://github.com/typescript-eslint/typescript-eslint/issues/60\n// eslint-disable-next-line no-redeclare\n(function (FastGlob) {\n    FastGlob.glob = FastGlob;\n    FastGlob.globSync = sync;\n    FastGlob.globStream = stream;\n    FastGlob.async = FastGlob;\n    function sync(source, options) {\n        assertPatternsInput(source);\n        const works = getWorks(source, sync_1.default, options);\n        return utils.array.flatten(works);\n    }\n    FastGlob.sync = sync;\n    function stream(source, options) {\n        assertPatternsInput(source);\n        const works = getWorks(source, stream_1.default, options);\n        /**\n         * The stream returned by the provider cannot work with an asynchronous iterator.\n         * To support asynchronous iterators, regardless of the number of tasks, we always multiplex streams.\n         * This affects performance (+25%). I don't see best solution right now.\n         */\n        return utils.stream.merge(works);\n    }\n    FastGlob.stream = stream;\n    function generateTasks(source, options) {\n        assertPatternsInput(source);\n        const patterns = [].concat(source);\n        const settings = new settings_1.default(options);\n        return taskManager.generate(patterns, settings);\n    }\n    FastGlob.generateTasks = generateTasks;\n    function isDynamicPattern(source, options) {\n        assertPatternsInput(source);\n        const settings = new settings_1.default(options);\n        return utils.pattern.isDynamicPattern(source, settings);\n    }\n    FastGlob.isDynamicPattern = isDynamicPattern;\n    function escapePath(source) {\n        assertPatternsInput(source);\n        return utils.path.escape(source);\n    }\n    FastGlob.escapePath = escapePath;\n    function convertPathToPattern(source) {\n        assertPatternsInput(source);\n        return utils.path.convertPathToPattern(source);\n    }\n    FastGlob.convertPathToPattern = convertPathToPattern;\n    let posix;\n    (function (posix) {\n        function escapePath(source) {\n            assertPatternsInput(source);\n            return utils.path.escapePosixPath(source);\n        }\n        posix.escapePath = escapePath;\n        function convertPathToPattern(source) {\n            assertPatternsInput(source);\n            return utils.path.convertPosixPathToPattern(source);\n        }\n        posix.convertPathToPattern = convertPathToPattern;\n    })(posix = FastGlob.posix || (FastGlob.posix = {}));\n    let win32;\n    (function (win32) {\n        function escapePath(source) {\n            assertPatternsInput(source);\n            return utils.path.escapeWindowsPath(source);\n        }\n        win32.escapePath = escapePath;\n        function convertPathToPattern(source) {\n            assertPatternsInput(source);\n            return utils.path.convertWindowsPathToPattern(source);\n        }\n        win32.convertPathToPattern = convertPathToPattern;\n    })(win32 = FastGlob.win32 || (FastGlob.win32 = {}));\n})(FastGlob || (FastGlob = {}));\nfunction getWorks(source, _Provider, options) {\n    const patterns = [].concat(source);\n    const settings = new settings_1.default(options);\n    const tasks = taskManager.generate(patterns, settings);\n    const provider = new _Provider(settings);\n    return tasks.map(provider.read, provider);\n}\nfunction assertPatternsInput(input) {\n    const source = [].concat(input);\n    const isValidSource = source.every((item) => utils.string.isString(item) && !utils.string.isEmpty(item));\n    if (!isValidSource) {\n        throw new TypeError('Patterns must be a string (non empty) or an array of strings');\n    }\n}\nmodule.exports = FastGlob;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertPatternGroupToTask = exports.convertPatternGroupsToTasks = exports.groupPatternsByBaseDirectory = exports.getNegativePatternsAsPositive = exports.getPositivePatterns = exports.convertPatternsToTasks = exports.generate = void 0;\nconst utils = require(\"../utils\");\nfunction generate(input, settings) {\n    const patterns = processPatterns(input, settings);\n    const ignore = processPatterns(settings.ignore, settings);\n    const positivePatterns = getPositivePatterns(patterns);\n    const negativePatterns = getNegativePatternsAsPositive(patterns, ignore);\n    const staticPatterns = positivePatterns.filter((pattern) => utils.pattern.isStaticPattern(pattern, settings));\n    const dynamicPatterns = positivePatterns.filter((pattern) => utils.pattern.isDynamicPattern(pattern, settings));\n    const staticTasks = convertPatternsToTasks(staticPatterns, negativePatterns, /* dynamic */ false);\n    const dynamicTasks = convertPatternsToTasks(dynamicPatterns, negativePatterns, /* dynamic */ true);\n    return staticTasks.concat(dynamicTasks);\n}\nexports.generate = generate;\nfunction processPatterns(input, settings) {\n    let patterns = input;\n    /**\n     * The original pattern like `{,*,**,a/*}` can lead to problems checking the depth when matching entry\n     * and some problems with the micromatch package (see fast-glob issues: #365, #394).\n     *\n     * To solve this problem, we expand all patterns containing brace expansion. This can lead to a slight slowdown\n     * in matching in the case of a large set of patterns after expansion.\n     */\n    if (settings.braceExpansion) {\n        patterns = utils.pattern.expandPatternsWithBraceExpansion(patterns);\n    }\n    /**\n     * If the `baseNameMatch` option is enabled, we must add globstar to patterns, so that they can be used\n     * at any nesting level.\n     *\n     * We do this here, because otherwise we have to complicate the filtering logic. For example, we need to change\n     * the pattern in the filter before creating a regular expression. There is no need to change the patterns\n     * in the application. Only on the input.\n     */\n    if (settings.baseNameMatch) {\n        patterns = patterns.map((pattern) => pattern.includes('/') ? pattern : `**/${pattern}`);\n    }\n    /**\n     * This method also removes duplicate slashes that may have been in the pattern or formed as a result of expansion.\n     */\n    return patterns.map((pattern) => utils.pattern.removeDuplicateSlashes(pattern));\n}\n/**\n * Returns tasks grouped by basic pattern directories.\n *\n * Patterns that can be found inside (`./`) and outside (`../`) the current directory are handled separately.\n * This is necessary because directory traversal starts at the base directory and goes deeper.\n */\nfunction convertPatternsToTasks(positive, negative, dynamic) {\n    const tasks = [];\n    const patternsOutsideCurrentDirectory = utils.pattern.getPatternsOutsideCurrentDirectory(positive);\n    const patternsInsideCurrentDirectory = utils.pattern.getPatternsInsideCurrentDirectory(positive);\n    const outsideCurrentDirectoryGroup = groupPatternsByBaseDirectory(patternsOutsideCurrentDirectory);\n    const insideCurrentDirectoryGroup = groupPatternsByBaseDirectory(patternsInsideCurrentDirectory);\n    tasks.push(...convertPatternGroupsToTasks(outsideCurrentDirectoryGroup, negative, dynamic));\n    /*\n     * For the sake of reducing future accesses to the file system, we merge all tasks within the current directory\n     * into a global task, if at least one pattern refers to the root (`.`). In this case, the global task covers the rest.\n     */\n    if ('.' in insideCurrentDirectoryGroup) {\n        tasks.push(convertPatternGroupToTask('.', patternsInsideCurrentDirectory, negative, dynamic));\n    }\n    else {\n        tasks.push(...convertPatternGroupsToTasks(insideCurrentDirectoryGroup, negative, dynamic));\n    }\n    return tasks;\n}\nexports.convertPatternsToTasks = convertPatternsToTasks;\nfunction getPositivePatterns(patterns) {\n    return utils.pattern.getPositivePatterns(patterns);\n}\nexports.getPositivePatterns = getPositivePatterns;\nfunction getNegativePatternsAsPositive(patterns, ignore) {\n    const negative = utils.pattern.getNegativePatterns(patterns).concat(ignore);\n    const positive = negative.map(utils.pattern.convertToPositivePattern);\n    return positive;\n}\nexports.getNegativePatternsAsPositive = getNegativePatternsAsPositive;\nfunction groupPatternsByBaseDirectory(patterns) {\n    const group = {};\n    return patterns.reduce((collection, pattern) => {\n        const base = utils.pattern.getBaseDirectory(pattern);\n        if (base in collection) {\n            collection[base].push(pattern);\n        }\n        else {\n            collection[base] = [pattern];\n        }\n        return collection;\n    }, group);\n}\nexports.groupPatternsByBaseDirectory = groupPatternsByBaseDirectory;\nfunction convertPatternGroupsToTasks(positive, negative, dynamic) {\n    return Object.keys(positive).map((base) => {\n        return convertPatternGroupToTask(base, positive[base], negative, dynamic);\n    });\n}\nexports.convertPatternGroupsToTasks = convertPatternGroupsToTasks;\nfunction convertPatternGroupToTask(base, positive, negative, dynamic) {\n    return {\n        dynamic,\n        positive,\n        negative,\n        base,\n        patterns: [].concat(positive, negative.map(utils.pattern.convertToNegativePattern))\n    };\n}\nexports.convertPatternGroupToTask = convertPatternGroupToTask;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst async_1 = require(\"../readers/async\");\nconst provider_1 = require(\"./provider\");\nclass ProviderAsync extends provider_1.default {\n    constructor() {\n        super(...arguments);\n        this._reader = new async_1.default(this._settings);\n    }\n    async read(task) {\n        const root = this._getRootDirectory(task);\n        const options = this._getReaderOptions(task);\n        const entries = await this.api(root, task, options);\n        return entries.map((entry) => options.transform(entry));\n    }\n    api(root, task, options) {\n        if (task.dynamic) {\n            return this._reader.dynamic(root, options);\n        }\n        return this._reader.static(task.patterns, options);\n    }\n}\nexports.default = ProviderAsync;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils = require(\"../../utils\");\nconst partial_1 = require(\"../matchers/partial\");\nclass DeepFilter {\n    constructor(_settings, _micromatchOptions) {\n        this._settings = _settings;\n        this._micromatchOptions = _micromatchOptions;\n    }\n    getFilter(basePath, positive, negative) {\n        const matcher = this._getMatcher(positive);\n        const negativeRe = this._getNegativePatternsRe(negative);\n        return (entry) => this._filter(basePath, entry, matcher, negativeRe);\n    }\n    _getMatcher(patterns) {\n        return new partial_1.default(patterns, this._settings, this._micromatchOptions);\n    }\n    _getNegativePatternsRe(patterns) {\n        const affectDepthOfReadingPatterns = patterns.filter(utils.pattern.isAffectDepthOfReadingPattern);\n        return utils.pattern.convertPatternsToRe(affectDepthOfReadingPatterns, this._micromatchOptions);\n    }\n    _filter(basePath, entry, matcher, negativeRe) {\n        if (this._isSkippedByDeep(basePath, entry.path)) {\n            return false;\n        }\n        if (this._isSkippedSymbolicLink(entry)) {\n            return false;\n        }\n        const filepath = utils.path.removeLeadingDotSegment(entry.path);\n        if (this._isSkippedByPositivePatterns(filepath, matcher)) {\n            return false;\n        }\n        return this._isSkippedByNegativePatterns(filepath, negativeRe);\n    }\n    _isSkippedByDeep(basePath, entryPath) {\n        /**\n         * Avoid unnecessary depth calculations when it doesn't matter.\n         */\n        if (this._settings.deep === Infinity) {\n            return false;\n        }\n        return this._getEntryLevel(basePath, entryPath) >= this._settings.deep;\n    }\n    _getEntryLevel(basePath, entryPath) {\n        const entryPathDepth = entryPath.split('/').length;\n        if (basePath === '') {\n            return entryPathDepth;\n        }\n        const basePathDepth = basePath.split('/').length;\n        return entryPathDepth - basePathDepth;\n    }\n    _isSkippedSymbolicLink(entry) {\n        return !this._settings.followSymbolicLinks && entry.dirent.isSymbolicLink();\n    }\n    _isSkippedByPositivePatterns(entryPath, matcher) {\n        return !this._settings.baseNameMatch && !matcher.match(entryPath);\n    }\n    _isSkippedByNegativePatterns(entryPath, patternsRe) {\n        return !utils.pattern.matchAny(entryPath, patternsRe);\n    }\n}\nexports.default = DeepFilter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils = require(\"../../utils\");\nclass EntryFilter {\n    constructor(_settings, _micromatchOptions) {\n        this._settings = _settings;\n        this._micromatchOptions = _micromatchOptions;\n        this.index = new Map();\n    }\n    getFilter(positive, negative) {\n        const positiveRe = utils.pattern.convertPatternsToRe(positive, this._micromatchOptions);\n        const negativeRe = utils.pattern.convertPatternsToRe(negative, Object.assign(Object.assign({}, this._micromatchOptions), { dot: true }));\n        return (entry) => this._filter(entry, positiveRe, negativeRe);\n    }\n    _filter(entry, positiveRe, negativeRe) {\n        const filepath = utils.path.removeLeadingDotSegment(entry.path);\n        if (this._settings.unique && this._isDuplicateEntry(filepath)) {\n            return false;\n        }\n        if (this._onlyFileFilter(entry) || this._onlyDirectoryFilter(entry)) {\n            return false;\n        }\n        if (this._isSkippedByAbsoluteNegativePatterns(filepath, negativeRe)) {\n            return false;\n        }\n        const isDirectory = entry.dirent.isDirectory();\n        const isMatched = this._isMatchToPatterns(filepath, positiveRe, isDirectory) && !this._isMatchToPatterns(filepath, negativeRe, isDirectory);\n        if (this._settings.unique && isMatched) {\n            this._createIndexRecord(filepath);\n        }\n        return isMatched;\n    }\n    _isDuplicateEntry(filepath) {\n        return this.index.has(filepath);\n    }\n    _createIndexRecord(filepath) {\n        this.index.set(filepath, undefined);\n    }\n    _onlyFileFilter(entry) {\n        return this._settings.onlyFiles && !entry.dirent.isFile();\n    }\n    _onlyDirectoryFilter(entry) {\n        return this._settings.onlyDirectories && !entry.dirent.isDirectory();\n    }\n    _isSkippedByAbsoluteNegativePatterns(entryPath, patternsRe) {\n        if (!this._settings.absolute) {\n            return false;\n        }\n        const fullpath = utils.path.makeAbsolute(this._settings.cwd, entryPath);\n        return utils.pattern.matchAny(fullpath, patternsRe);\n    }\n    _isMatchToPatterns(filepath, patternsRe, isDirectory) {\n        // Trying to match files and directories by patterns.\n        const isMatched = utils.pattern.matchAny(filepath, patternsRe);\n        // A pattern with a trailling slash can be used for directory matching.\n        // To apply such pattern, we need to add a tralling slash to the path.\n        if (!isMatched && isDirectory) {\n            return utils.pattern.matchAny(filepath + '/', patternsRe);\n        }\n        return isMatched;\n    }\n}\nexports.default = EntryFilter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils = require(\"../../utils\");\nclass ErrorFilter {\n    constructor(_settings) {\n        this._settings = _settings;\n    }\n    getFilter() {\n        return (error) => this._isNonFatalError(error);\n    }\n    _isNonFatalError(error) {\n        return utils.errno.isEnoentCodeError(error) || this._settings.suppressErrors;\n    }\n}\nexports.default = ErrorFilter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils = require(\"../../utils\");\nclass Matcher {\n    constructor(_patterns, _settings, _micromatchOptions) {\n        this._patterns = _patterns;\n        this._settings = _settings;\n        this._micromatchOptions = _micromatchOptions;\n        this._storage = [];\n        this._fillStorage();\n    }\n    _fillStorage() {\n        for (const pattern of this._patterns) {\n            const segments = this._getPatternSegments(pattern);\n            const sections = this._splitSegmentsIntoSections(segments);\n            this._storage.push({\n                complete: sections.length <= 1,\n                pattern,\n                segments,\n                sections\n            });\n        }\n    }\n    _getPatternSegments(pattern) {\n        const parts = utils.pattern.getPatternParts(pattern, this._micromatchOptions);\n        return parts.map((part) => {\n            const dynamic = utils.pattern.isDynamicPattern(part, this._settings);\n            if (!dynamic) {\n                return {\n                    dynamic: false,\n                    pattern: part\n                };\n            }\n            return {\n                dynamic: true,\n                pattern: part,\n                patternRe: utils.pattern.makeRe(part, this._micromatchOptions)\n            };\n        });\n    }\n    _splitSegmentsIntoSections(segments) {\n        return utils.array.splitWhen(segments, (segment) => segment.dynamic && utils.pattern.hasGlobStar(segment.pattern));\n    }\n}\nexports.default = Matcher;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst matcher_1 = require(\"./matcher\");\nclass PartialMatcher extends matcher_1.default {\n    match(filepath) {\n        const parts = filepath.split('/');\n        const levels = parts.length;\n        const patterns = this._storage.filter((info) => !info.complete || info.segments.length > levels);\n        for (const pattern of patterns) {\n            const section = pattern.sections[0];\n            /**\n             * In this case, the pattern has a globstar and we must read all directories unconditionally,\n             * but only if the level has reached the end of the first group.\n             *\n             * fixtures/{a,b}/**\n             *  ^ true/false  ^ always true\n            */\n            if (!pattern.complete && levels > section.length) {\n                return true;\n            }\n            const match = parts.every((part, index) => {\n                const segment = pattern.segments[index];\n                if (segment.dynamic && segment.patternRe.test(part)) {\n                    return true;\n                }\n                if (!segment.dynamic && segment.pattern === part) {\n                    return true;\n                }\n                return false;\n            });\n            if (match) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nexports.default = PartialMatcher;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path = require(\"path\");\nconst deep_1 = require(\"./filters/deep\");\nconst entry_1 = require(\"./filters/entry\");\nconst error_1 = require(\"./filters/error\");\nconst entry_2 = require(\"./transformers/entry\");\nclass Provider {\n    constructor(_settings) {\n        this._settings = _settings;\n        this.errorFilter = new error_1.default(this._settings);\n        this.entryFilter = new entry_1.default(this._settings, this._getMicromatchOptions());\n        this.deepFilter = new deep_1.default(this._settings, this._getMicromatchOptions());\n        this.entryTransformer = new entry_2.default(this._settings);\n    }\n    _getRootDirectory(task) {\n        return path.resolve(this._settings.cwd, task.base);\n    }\n    _getReaderOptions(task) {\n        const basePath = task.base === '.' ? '' : task.base;\n        return {\n            basePath,\n            pathSegmentSeparator: '/',\n            concurrency: this._settings.concurrency,\n            deepFilter: this.deepFilter.getFilter(basePath, task.positive, task.negative),\n            entryFilter: this.entryFilter.getFilter(task.positive, task.negative),\n            errorFilter: this.errorFilter.getFilter(),\n            followSymbolicLinks: this._settings.followSymbolicLinks,\n            fs: this._settings.fs,\n            stats: this._settings.stats,\n            throwErrorOnBrokenSymbolicLink: this._settings.throwErrorOnBrokenSymbolicLink,\n            transform: this.entryTransformer.getTransformer()\n        };\n    }\n    _getMicromatchOptions() {\n        return {\n            dot: this._settings.dot,\n            matchBase: this._settings.baseNameMatch,\n            nobrace: !this._settings.braceExpansion,\n            nocase: !this._settings.caseSensitiveMatch,\n            noext: !this._settings.extglob,\n            noglobstar: !this._settings.globstar,\n            posix: true,\n            strictSlashes: false\n        };\n    }\n}\nexports.default = Provider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stream_1 = require(\"stream\");\nconst stream_2 = require(\"../readers/stream\");\nconst provider_1 = require(\"./provider\");\nclass ProviderStream extends provider_1.default {\n    constructor() {\n        super(...arguments);\n        this._reader = new stream_2.default(this._settings);\n    }\n    read(task) {\n        const root = this._getRootDirectory(task);\n        const options = this._getReaderOptions(task);\n        const source = this.api(root, task, options);\n        const destination = new stream_1.Readable({ objectMode: true, read: () => { } });\n        source\n            .once('error', (error) => destination.emit('error', error))\n            .on('data', (entry) => destination.emit('data', options.transform(entry)))\n            .once('end', () => destination.emit('end'));\n        destination\n            .once('close', () => source.destroy());\n        return destination;\n    }\n    api(root, task, options) {\n        if (task.dynamic) {\n            return this._reader.dynamic(root, options);\n        }\n        return this._reader.static(task.patterns, options);\n    }\n}\nexports.default = ProviderStream;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sync_1 = require(\"../readers/sync\");\nconst provider_1 = require(\"./provider\");\nclass ProviderSync extends provider_1.default {\n    constructor() {\n        super(...arguments);\n        this._reader = new sync_1.default(this._settings);\n    }\n    read(task) {\n        const root = this._getRootDirectory(task);\n        const options = this._getReaderOptions(task);\n        const entries = this.api(root, task, options);\n        return entries.map(options.transform);\n    }\n    api(root, task, options) {\n        if (task.dynamic) {\n            return this._reader.dynamic(root, options);\n        }\n        return this._reader.static(task.patterns, options);\n    }\n}\nexports.default = ProviderSync;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils = require(\"../../utils\");\nclass EntryTransformer {\n    constructor(_settings) {\n        this._settings = _settings;\n    }\n    getTransformer() {\n        return (entry) => this._transform(entry);\n    }\n    _transform(entry) {\n        let filepath = entry.path;\n        if (this._settings.absolute) {\n            filepath = utils.path.makeAbsolute(this._settings.cwd, filepath);\n            filepath = utils.path.unixify(filepath);\n        }\n        if (this._settings.markDirectories && entry.dirent.isDirectory()) {\n            filepath += '/';\n        }\n        if (!this._settings.objectMode) {\n            return filepath;\n        }\n        return Object.assign(Object.assign({}, entry), { path: filepath });\n    }\n}\nexports.default = EntryTransformer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fsWalk = require(\"@nodelib/fs.walk\");\nconst reader_1 = require(\"./reader\");\nconst stream_1 = require(\"./stream\");\nclass ReaderAsync extends reader_1.default {\n    constructor() {\n        super(...arguments);\n        this._walkAsync = fsWalk.walk;\n        this._readerStream = new stream_1.default(this._settings);\n    }\n    dynamic(root, options) {\n        return new Promise((resolve, reject) => {\n            this._walkAsync(root, options, (error, entries) => {\n                if (error === null) {\n                    resolve(entries);\n                }\n                else {\n                    reject(error);\n                }\n            });\n        });\n    }\n    async static(patterns, options) {\n        const entries = [];\n        const stream = this._readerStream.static(patterns, options);\n        // After #235, replace it with an asynchronous iterator.\n        return new Promise((resolve, reject) => {\n            stream.once('error', reject);\n            stream.on('data', (entry) => entries.push(entry));\n            stream.once('end', () => resolve(entries));\n        });\n    }\n}\nexports.default = ReaderAsync;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path = require(\"path\");\nconst fsStat = require(\"@nodelib/fs.stat\");\nconst utils = require(\"../utils\");\nclass Reader {\n    constructor(_settings) {\n        this._settings = _settings;\n        this._fsStatSettings = new fsStat.Settings({\n            followSymbolicLink: this._settings.followSymbolicLinks,\n            fs: this._settings.fs,\n            throwErrorOnBrokenSymbolicLink: this._settings.followSymbolicLinks\n        });\n    }\n    _getFullEntryPath(filepath) {\n        return path.resolve(this._settings.cwd, filepath);\n    }\n    _makeEntry(stats, pattern) {\n        const entry = {\n            name: pattern,\n            path: pattern,\n            dirent: utils.fs.createDirentFromStats(pattern, stats)\n        };\n        if (this._settings.stats) {\n            entry.stats = stats;\n        }\n        return entry;\n    }\n    _isFatalError(error) {\n        return !utils.errno.isEnoentCodeError(error) && !this._settings.suppressErrors;\n    }\n}\nexports.default = Reader;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stream_1 = require(\"stream\");\nconst fsStat = require(\"@nodelib/fs.stat\");\nconst fsWalk = require(\"@nodelib/fs.walk\");\nconst reader_1 = require(\"./reader\");\nclass ReaderStream extends reader_1.default {\n    constructor() {\n        super(...arguments);\n        this._walkStream = fsWalk.walkStream;\n        this._stat = fsStat.stat;\n    }\n    dynamic(root, options) {\n        return this._walkStream(root, options);\n    }\n    static(patterns, options) {\n        const filepaths = patterns.map(this._getFullEntryPath, this);\n        const stream = new stream_1.PassThrough({ objectMode: true });\n        stream._write = (index, _enc, done) => {\n            return this._getEntry(filepaths[index], patterns[index], options)\n                .then((entry) => {\n                if (entry !== null && options.entryFilter(entry)) {\n                    stream.push(entry);\n                }\n                if (index === filepaths.length - 1) {\n                    stream.end();\n                }\n                done();\n            })\n                .catch(done);\n        };\n        for (let i = 0; i < filepaths.length; i++) {\n            stream.write(i);\n        }\n        return stream;\n    }\n    _getEntry(filepath, pattern, options) {\n        return this._getStat(filepath)\n            .then((stats) => this._makeEntry(stats, pattern))\n            .catch((error) => {\n            if (options.errorFilter(error)) {\n                return null;\n            }\n            throw error;\n        });\n    }\n    _getStat(filepath) {\n        return new Promise((resolve, reject) => {\n            this._stat(filepath, this._fsStatSettings, (error, stats) => {\n                return error === null ? resolve(stats) : reject(error);\n            });\n        });\n    }\n}\nexports.default = ReaderStream;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fsStat = require(\"@nodelib/fs.stat\");\nconst fsWalk = require(\"@nodelib/fs.walk\");\nconst reader_1 = require(\"./reader\");\nclass ReaderSync extends reader_1.default {\n    constructor() {\n        super(...arguments);\n        this._walkSync = fsWalk.walkSync;\n        this._statSync = fsStat.statSync;\n    }\n    dynamic(root, options) {\n        return this._walkSync(root, options);\n    }\n    static(patterns, options) {\n        const entries = [];\n        for (const pattern of patterns) {\n            const filepath = this._getFullEntryPath(pattern);\n            const entry = this._getEntry(filepath, pattern, options);\n            if (entry === null || !options.entryFilter(entry)) {\n                continue;\n            }\n            entries.push(entry);\n        }\n        return entries;\n    }\n    _getEntry(filepath, pattern, options) {\n        try {\n            const stats = this._getStat(filepath);\n            return this._makeEntry(stats, pattern);\n        }\n        catch (error) {\n            if (options.errorFilter(error)) {\n                return null;\n            }\n            throw error;\n        }\n    }\n    _getStat(filepath) {\n        return this._statSync(filepath, this._fsStatSettings);\n    }\n}\nexports.default = ReaderSync;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_FILE_SYSTEM_ADAPTER = void 0;\nconst fs = require(\"fs\");\nconst os = require(\"os\");\n/**\n * The `os.cpus` method can return zero. We expect the number of cores to be greater than zero.\n * https://github.com/nodejs/node/blob/7faeddf23a98c53896f8b574a6e66589e8fb1eb8/lib/os.js#L106-L107\n */\nconst CPU_COUNT = Math.max(os.cpus().length, 1);\nexports.DEFAULT_FILE_SYSTEM_ADAPTER = {\n    lstat: fs.lstat,\n    lstatSync: fs.lstatSync,\n    stat: fs.stat,\n    statSync: fs.statSync,\n    readdir: fs.readdir,\n    readdirSync: fs.readdirSync\n};\nclass Settings {\n    constructor(_options = {}) {\n        this._options = _options;\n        this.absolute = this._getValue(this._options.absolute, false);\n        this.baseNameMatch = this._getValue(this._options.baseNameMatch, false);\n        this.braceExpansion = this._getValue(this._options.braceExpansion, true);\n        this.caseSensitiveMatch = this._getValue(this._options.caseSensitiveMatch, true);\n        this.concurrency = this._getValue(this._options.concurrency, CPU_COUNT);\n        this.cwd = this._getValue(this._options.cwd, process.cwd());\n        this.deep = this._getValue(this._options.deep, Infinity);\n        this.dot = this._getValue(this._options.dot, false);\n        this.extglob = this._getValue(this._options.extglob, true);\n        this.followSymbolicLinks = this._getValue(this._options.followSymbolicLinks, true);\n        this.fs = this._getFileSystemMethods(this._options.fs);\n        this.globstar = this._getValue(this._options.globstar, true);\n        this.ignore = this._getValue(this._options.ignore, []);\n        this.markDirectories = this._getValue(this._options.markDirectories, false);\n        this.objectMode = this._getValue(this._options.objectMode, false);\n        this.onlyDirectories = this._getValue(this._options.onlyDirectories, false);\n        this.onlyFiles = this._getValue(this._options.onlyFiles, true);\n        this.stats = this._getValue(this._options.stats, false);\n        this.suppressErrors = this._getValue(this._options.suppressErrors, false);\n        this.throwErrorOnBrokenSymbolicLink = this._getValue(this._options.throwErrorOnBrokenSymbolicLink, false);\n        this.unique = this._getValue(this._options.unique, true);\n        if (this.onlyDirectories) {\n            this.onlyFiles = false;\n        }\n        if (this.stats) {\n            this.objectMode = true;\n        }\n        // Remove the cast to the array in the next major (#404).\n        this.ignore = [].concat(this.ignore);\n    }\n    _getValue(option, value) {\n        return option === undefined ? value : option;\n    }\n    _getFileSystemMethods(methods = {}) {\n        return Object.assign(Object.assign({}, exports.DEFAULT_FILE_SYSTEM_ADAPTER), methods);\n    }\n}\nexports.default = Settings;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.splitWhen = exports.flatten = void 0;\nfunction flatten(items) {\n    return items.reduce((collection, item) => [].concat(collection, item), []);\n}\nexports.flatten = flatten;\nfunction splitWhen(items, predicate) {\n    const result = [[]];\n    let groupIndex = 0;\n    for (const item of items) {\n        if (predicate(item)) {\n            groupIndex++;\n            result[groupIndex] = [];\n        }\n        else {\n            result[groupIndex].push(item);\n        }\n    }\n    return result;\n}\nexports.splitWhen = splitWhen;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isEnoentCodeError = void 0;\nfunction isEnoentCodeError(error) {\n    return error.code === 'ENOENT';\n}\nexports.isEnoentCodeError = isEnoentCodeError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDirentFromStats = void 0;\nclass DirentFromStats {\n    constructor(name, stats) {\n        this.name = name;\n        this.isBlockDevice = stats.isBlockDevice.bind(stats);\n        this.isCharacterDevice = stats.isCharacterDevice.bind(stats);\n        this.isDirectory = stats.isDirectory.bind(stats);\n        this.isFIFO = stats.isFIFO.bind(stats);\n        this.isFile = stats.isFile.bind(stats);\n        this.isSocket = stats.isSocket.bind(stats);\n        this.isSymbolicLink = stats.isSymbolicLink.bind(stats);\n    }\n}\nfunction createDirentFromStats(name, stats) {\n    return new DirentFromStats(name, stats);\n}\nexports.createDirentFromStats = createDirentFromStats;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.string = exports.stream = exports.pattern = exports.path = exports.fs = exports.errno = exports.array = void 0;\nconst array = require(\"./array\");\nexports.array = array;\nconst errno = require(\"./errno\");\nexports.errno = errno;\nconst fs = require(\"./fs\");\nexports.fs = fs;\nconst path = require(\"./path\");\nexports.path = path;\nconst pattern = require(\"./pattern\");\nexports.pattern = pattern;\nconst stream = require(\"./stream\");\nexports.stream = stream;\nconst string = require(\"./string\");\nexports.string = string;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertPosixPathToPattern = exports.convertWindowsPathToPattern = exports.convertPathToPattern = exports.escapePosixPath = exports.escapeWindowsPath = exports.escape = exports.removeLeadingDotSegment = exports.makeAbsolute = exports.unixify = void 0;\nconst os = require(\"os\");\nconst path = require(\"path\");\nconst IS_WINDOWS_PLATFORM = os.platform() === 'win32';\nconst LEADING_DOT_SEGMENT_CHARACTERS_COUNT = 2; // ./ or .\\\\\n/**\n * All non-escaped special characters.\n * Posix: ()*?[\\]{|}, !+@ before (, ! at the beginning, \\\\ before non-special characters.\n * Windows: (){}, !+@ before (, ! at the beginning.\n */\nconst POSIX_UNESCAPED_GLOB_SYMBOLS_RE = /(\\\\?)([()*?[\\]{|}]|^!|[!+@](?=\\()|\\\\(?![!()*+?@[\\]{|}]))/g;\nconst WINDOWS_UNESCAPED_GLOB_SYMBOLS_RE = /(\\\\?)([(){}]|^!|[!+@](?=\\())/g;\n/**\n * The device path (\\\\.\\ or \\\\?\\).\n * https://learn.microsoft.com/en-us/dotnet/standard/io/file-path-formats#dos-device-paths\n */\nconst DOS_DEVICE_PATH_RE = /^\\\\\\\\([.?])/;\n/**\n * All backslashes except those escaping special characters.\n * Windows: !()+@{}\n * https://learn.microsoft.com/en-us/windows/win32/fileio/naming-a-file#naming-conventions\n */\nconst WINDOWS_BACKSLASHES_RE = /\\\\(?![!()+@{}])/g;\n/**\n * Designed to work only with simple paths: `dir\\\\file`.\n */\nfunction unixify(filepath) {\n    return filepath.replace(/\\\\/g, '/');\n}\nexports.unixify = unixify;\nfunction makeAbsolute(cwd, filepath) {\n    return path.resolve(cwd, filepath);\n}\nexports.makeAbsolute = makeAbsolute;\nfunction removeLeadingDotSegment(entry) {\n    // We do not use `startsWith` because this is 10x slower than current implementation for some cases.\n    // eslint-disable-next-line @typescript-eslint/prefer-string-starts-ends-with\n    if (entry.charAt(0) === '.') {\n        const secondCharactery = entry.charAt(1);\n        if (secondCharactery === '/' || secondCharactery === '\\\\') {\n            return entry.slice(LEADING_DOT_SEGMENT_CHARACTERS_COUNT);\n        }\n    }\n    return entry;\n}\nexports.removeLeadingDotSegment = removeLeadingDotSegment;\nexports.escape = IS_WINDOWS_PLATFORM ? escapeWindowsPath : escapePosixPath;\nfunction escapeWindowsPath(pattern) {\n    return pattern.replace(WINDOWS_UNESCAPED_GLOB_SYMBOLS_RE, '\\\\$2');\n}\nexports.escapeWindowsPath = escapeWindowsPath;\nfunction escapePosixPath(pattern) {\n    return pattern.replace(POSIX_UNESCAPED_GLOB_SYMBOLS_RE, '\\\\$2');\n}\nexports.escapePosixPath = escapePosixPath;\nexports.convertPathToPattern = IS_WINDOWS_PLATFORM ? convertWindowsPathToPattern : convertPosixPathToPattern;\nfunction convertWindowsPathToPattern(filepath) {\n    return escapeWindowsPath(filepath)\n        .replace(DOS_DEVICE_PATH_RE, '//$1')\n        .replace(WINDOWS_BACKSLASHES_RE, '/');\n}\nexports.convertWindowsPathToPattern = convertWindowsPathToPattern;\nfunction convertPosixPathToPattern(filepath) {\n    return escapePosixPath(filepath);\n}\nexports.convertPosixPathToPattern = convertPosixPathToPattern;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeDuplicateSlashes = exports.matchAny = exports.convertPatternsToRe = exports.makeRe = exports.getPatternParts = exports.expandBraceExpansion = exports.expandPatternsWithBraceExpansion = exports.isAffectDepthOfReadingPattern = exports.endsWithSlashGlobStar = exports.hasGlobStar = exports.getBaseDirectory = exports.isPatternRelatedToParentDirectory = exports.getPatternsOutsideCurrentDirectory = exports.getPatternsInsideCurrentDirectory = exports.getPositivePatterns = exports.getNegativePatterns = exports.isPositivePattern = exports.isNegativePattern = exports.convertToNegativePattern = exports.convertToPositivePattern = exports.isDynamicPattern = exports.isStaticPattern = void 0;\nconst path = require(\"path\");\nconst globParent = require(\"glob-parent\");\nconst micromatch = require(\"micromatch\");\nconst GLOBSTAR = '**';\nconst ESCAPE_SYMBOL = '\\\\';\nconst COMMON_GLOB_SYMBOLS_RE = /[*?]|^!/;\nconst REGEX_CHARACTER_CLASS_SYMBOLS_RE = /\\[[^[]*]/;\nconst REGEX_GROUP_SYMBOLS_RE = /(?:^|[^!*+?@])\\([^(]*\\|[^|]*\\)/;\nconst GLOB_EXTENSION_SYMBOLS_RE = /[!*+?@]\\([^(]*\\)/;\nconst BRACE_EXPANSION_SEPARATORS_RE = /,|\\.\\./;\n/**\n * Matches a sequence of two or more consecutive slashes, excluding the first two slashes at the beginning of the string.\n * The latter is due to the presence of the device path at the beginning of the UNC path.\n */\nconst DOUBLE_SLASH_RE = /(?!^)\\/{2,}/g;\nfunction isStaticPattern(pattern, options = {}) {\n    return !isDynamicPattern(pattern, options);\n}\nexports.isStaticPattern = isStaticPattern;\nfunction isDynamicPattern(pattern, options = {}) {\n    /**\n     * A special case with an empty string is necessary for matching patterns that start with a forward slash.\n     * An empty string cannot be a dynamic pattern.\n     * For example, the pattern `/lib/*` will be spread into parts: '', 'lib', '*'.\n     */\n    if (pattern === '') {\n        return false;\n    }\n    /**\n     * When the `caseSensitiveMatch` option is disabled, all patterns must be marked as dynamic, because we cannot check\n     * filepath directly (without read directory).\n     */\n    if (options.caseSensitiveMatch === false || pattern.includes(ESCAPE_SYMBOL)) {\n        return true;\n    }\n    if (COMMON_GLOB_SYMBOLS_RE.test(pattern) || REGEX_CHARACTER_CLASS_SYMBOLS_RE.test(pattern) || REGEX_GROUP_SYMBOLS_RE.test(pattern)) {\n        return true;\n    }\n    if (options.extglob !== false && GLOB_EXTENSION_SYMBOLS_RE.test(pattern)) {\n        return true;\n    }\n    if (options.braceExpansion !== false && hasBraceExpansion(pattern)) {\n        return true;\n    }\n    return false;\n}\nexports.isDynamicPattern = isDynamicPattern;\nfunction hasBraceExpansion(pattern) {\n    const openingBraceIndex = pattern.indexOf('{');\n    if (openingBraceIndex === -1) {\n        return false;\n    }\n    const closingBraceIndex = pattern.indexOf('}', openingBraceIndex + 1);\n    if (closingBraceIndex === -1) {\n        return false;\n    }\n    const braceContent = pattern.slice(openingBraceIndex, closingBraceIndex);\n    return BRACE_EXPANSION_SEPARATORS_RE.test(braceContent);\n}\nfunction convertToPositivePattern(pattern) {\n    return isNegativePattern(pattern) ? pattern.slice(1) : pattern;\n}\nexports.convertToPositivePattern = convertToPositivePattern;\nfunction convertToNegativePattern(pattern) {\n    return '!' + pattern;\n}\nexports.convertToNegativePattern = convertToNegativePattern;\nfunction isNegativePattern(pattern) {\n    return pattern.startsWith('!') && pattern[1] !== '(';\n}\nexports.isNegativePattern = isNegativePattern;\nfunction isPositivePattern(pattern) {\n    return !isNegativePattern(pattern);\n}\nexports.isPositivePattern = isPositivePattern;\nfunction getNegativePatterns(patterns) {\n    return patterns.filter(isNegativePattern);\n}\nexports.getNegativePatterns = getNegativePatterns;\nfunction getPositivePatterns(patterns) {\n    return patterns.filter(isPositivePattern);\n}\nexports.getPositivePatterns = getPositivePatterns;\n/**\n * Returns patterns that can be applied inside the current directory.\n *\n * @example\n * // ['./*', '*', 'a/*']\n * getPatternsInsideCurrentDirectory(['./*', '*', 'a/*', '../*', './../*'])\n */\nfunction getPatternsInsideCurrentDirectory(patterns) {\n    return patterns.filter((pattern) => !isPatternRelatedToParentDirectory(pattern));\n}\nexports.getPatternsInsideCurrentDirectory = getPatternsInsideCurrentDirectory;\n/**\n * Returns patterns to be expanded relative to (outside) the current directory.\n *\n * @example\n * // ['../*', './../*']\n * getPatternsInsideCurrentDirectory(['./*', '*', 'a/*', '../*', './../*'])\n */\nfunction getPatternsOutsideCurrentDirectory(patterns) {\n    return patterns.filter(isPatternRelatedToParentDirectory);\n}\nexports.getPatternsOutsideCurrentDirectory = getPatternsOutsideCurrentDirectory;\nfunction isPatternRelatedToParentDirectory(pattern) {\n    return pattern.startsWith('..') || pattern.startsWith('./..');\n}\nexports.isPatternRelatedToParentDirectory = isPatternRelatedToParentDirectory;\nfunction getBaseDirectory(pattern) {\n    return globParent(pattern, { flipBackslashes: false });\n}\nexports.getBaseDirectory = getBaseDirectory;\nfunction hasGlobStar(pattern) {\n    return pattern.includes(GLOBSTAR);\n}\nexports.hasGlobStar = hasGlobStar;\nfunction endsWithSlashGlobStar(pattern) {\n    return pattern.endsWith('/' + GLOBSTAR);\n}\nexports.endsWithSlashGlobStar = endsWithSlashGlobStar;\nfunction isAffectDepthOfReadingPattern(pattern) {\n    const basename = path.basename(pattern);\n    return endsWithSlashGlobStar(pattern) || isStaticPattern(basename);\n}\nexports.isAffectDepthOfReadingPattern = isAffectDepthOfReadingPattern;\nfunction expandPatternsWithBraceExpansion(patterns) {\n    return patterns.reduce((collection, pattern) => {\n        return collection.concat(expandBraceExpansion(pattern));\n    }, []);\n}\nexports.expandPatternsWithBraceExpansion = expandPatternsWithBraceExpansion;\nfunction expandBraceExpansion(pattern) {\n    const patterns = micromatch.braces(pattern, { expand: true, nodupes: true });\n    /**\n     * Sort the patterns by length so that the same depth patterns are processed side by side.\n     * `a/{b,}/{c,}/*` – `['a///*', 'a/b//*', 'a//c/*', 'a/b/c/*']`\n     */\n    patterns.sort((a, b) => a.length - b.length);\n    /**\n     * Micromatch can return an empty string in the case of patterns like `{a,}`.\n     */\n    return patterns.filter((pattern) => pattern !== '');\n}\nexports.expandBraceExpansion = expandBraceExpansion;\nfunction getPatternParts(pattern, options) {\n    let { parts } = micromatch.scan(pattern, Object.assign(Object.assign({}, options), { parts: true }));\n    /**\n     * The scan method returns an empty array in some cases.\n     * See micromatch/picomatch#58 for more details.\n     */\n    if (parts.length === 0) {\n        parts = [pattern];\n    }\n    /**\n     * The scan method does not return an empty part for the pattern with a forward slash.\n     * This is another part of micromatch/picomatch#58.\n     */\n    if (parts[0].startsWith('/')) {\n        parts[0] = parts[0].slice(1);\n        parts.unshift('');\n    }\n    return parts;\n}\nexports.getPatternParts = getPatternParts;\nfunction makeRe(pattern, options) {\n    return micromatch.makeRe(pattern, options);\n}\nexports.makeRe = makeRe;\nfunction convertPatternsToRe(patterns, options) {\n    return patterns.map((pattern) => makeRe(pattern, options));\n}\nexports.convertPatternsToRe = convertPatternsToRe;\nfunction matchAny(entry, patternsRe) {\n    return patternsRe.some((patternRe) => patternRe.test(entry));\n}\nexports.matchAny = matchAny;\n/**\n * This package only works with forward slashes as a path separator.\n * Because of this, we cannot use the standard `path.normalize` method, because on Windows platform it will use of backslashes.\n */\nfunction removeDuplicateSlashes(pattern) {\n    return pattern.replace(DOUBLE_SLASH_RE, '/');\n}\nexports.removeDuplicateSlashes = removeDuplicateSlashes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.merge = void 0;\nconst merge2 = require(\"merge2\");\nfunction merge(streams) {\n    const mergedStream = merge2(streams);\n    streams.forEach((stream) => {\n        stream.once('error', (error) => mergedStream.emit('error', error));\n    });\n    mergedStream.once('close', () => propagateCloseEventToSources(streams));\n    mergedStream.once('end', () => propagateCloseEventToSources(streams));\n    return mergedStream;\n}\nexports.merge = merge;\nfunction propagateCloseEventToSources(streams) {\n    streams.forEach((stream) => stream.emit('close'));\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isEmpty = exports.isString = void 0;\nfunction isString(input) {\n    return typeof input === 'string';\n}\nexports.isString = isString;\nfunction isEmpty(input) {\n    return input === '';\n}\nexports.isEmpty = isEmpty;\n","'use strict';\n\nconst validator = require('./validator');\nconst XMLParser = require('./xmlparser/XMLParser');\nconst XMLBuilder = require('./xmlbuilder/json2xml');\n\nmodule.exports = {\n  XMLParser: XMLParser,\n  XMLValidator: validator,\n  XMLBuilder: XMLBuilder\n}","'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n","'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n","'use strict';\n//parse Empty Node as self closing node\nconst buildFromOrderedJs = require('./orderedJs2Xml');\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressUnpairedNode: true,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: [\n    { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },//it must be on top\n    { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  ],\n  processEntities: true,\n  stopNodes: [],\n  // transformTagName: false,\n  // transformAttributeName: false,\n  oneListGroup: false\n};\n\nfunction Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  for (let key in jObj) {\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n      else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n      // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextValNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += this.buildAttrPairStr(attr, '' + jObj[key]);\n      }else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextValNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      let listTagVal = \"\";\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n          else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          if(this.options.oneListGroup ){\n            listTagVal += this.j2x(item, level + 1).val;\n          }else{\n            listTagVal += this.processTextOrObjNode(item, key, level)\n          }\n        } else {\n          listTagVal += this.buildTextValNode(item, key, '', level);\n        }\n      }\n      if(this.options.oneListGroup){\n        listTagVal = this.buildObjectNode(listTagVal, key, '', level);\n      }\n      val += listTagVal;\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += this.buildAttrPairStr(Ks[j], '' + jObj[key][Ks[j]]);\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nBuilder.prototype.buildAttrPairStr = function(attrName, val){\n  val = this.options.attributeValueProcessor(attrName, '' + val);\n  val = this.replaceEntitiesValue(val);\n  if (this.options.suppressBooleanAttributes && val === \"true\") {\n    return ' ' + attrName;\n  } else return ' ' + attrName + '=\"' + val + '\"';\n}\n\nfunction processTextOrObjNode (object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextValNode(object[this.options.textNodeName], key, result.attrStr, level);\n  } else {\n    return this.buildObjectNode(result.val, key, result.attrStr, level);\n  }\n}\n\nBuilder.prototype.buildObjectNode = function(val, key, attrStr, level) {\n  if(val === \"\"){\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }\n  }else{\n\n    let tagEndExp = '</' + key + this.tagEndChar;\n    let piClosingChar = \"\";\n    \n    if(key[0] === \"?\") {\n      piClosingChar = \"?\";\n      tagEndExp = \"\";\n    }\n  \n    if (attrStr && val.indexOf('<') === -1) {\n      return ( this.indentate(level) + '<' +  key + attrStr + piClosingChar + '>' + val + tagEndExp );\n    } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n      return this.indentate(level) + `<!--${val}-->` + this.newLine;\n    }else {\n      return (\n        this.indentate(level) + '<' + key + attrStr + piClosingChar + this.tagEndChar +\n        val +\n        this.indentate(level) + tagEndExp    );\n    }\n  }\n}\n\nBuilder.prototype.closeTag = function(key){\n  let closeTag = \"\";\n  if(this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n    if(!this.options.suppressUnpairedNode) closeTag = \"/\"\n  }else if(this.options.suppressEmptyNode){ //empty\n    closeTag = \"/\";\n  }else{\n    closeTag = `></${key}`\n  }\n  return closeTag;\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n      // return this.buildTagStr(level,key, attrStr);\n    }\n  }\n}\n\nBuilder.prototype.buildTextValNode = function(val, key, attrStr, level) {\n  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n    return this.indentate(level) + `<![CDATA[${val}]]>` +  this.newLine;\n  }else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n    return this.indentate(level) + `<!--${val}-->` +  this.newLine;\n  }else if(key[0] === \"?\") {//PI tag\n    return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar; \n  }else{\n    let textValue = this.options.tagValueProcessor(key, val);\n    textValue = this.replaceEntitiesValue(textValue);\n  \n    if( textValue === ''){\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }else{\n      return this.indentate(level) + '<' + key + attrStr + '>' +\n         textValue +\n        '</' + key + this.tagEndChar;\n    }\n  }\n}\n\nBuilder.prototype.replaceEntitiesValue = function(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (let i=0; i<this.options.entities.length; i++) {\n      const entity = this.options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = Builder;\n","const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nfunction toXml(jArray, options) {\n    let indentation = \"\";\n    if (options.format && options.indentBy.length > 0) {\n        indentation = EOL;\n    }\n    return arrToStr(jArray, options, \"\", indentation);\n}\n\nfunction arrToStr(arr, options, jPath, indentation) {\n    let xmlStr = \"\";\n    let isPreviousElementTag = false;\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        let newJPath = \"\";\n        if (jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if (tagName === options.textNodeName) {\n            let tagText = tagObj[tagName];\n            if (!isStopNode(newJPath, options)) {\n                tagText = options.tagValueProcessor(tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += tagText;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.cdataPropName) {\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.commentPropName) {\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            isPreviousElementTag = true;\n            continue;\n        } else if (tagName[0] === \"?\") {\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n            let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n            piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\"; //remove extra spacing\n            xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr}?>`;\n            isPreviousElementTag = true;\n            continue;\n        }\n        let newIdentation = indentation;\n        if (newIdentation !== \"\") {\n            newIdentation += options.indentBy;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        const tagStart = indentation + `<${tagName}${attStr}`;\n        const tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);\n        if (options.unpairedTags.indexOf(tagName) !== -1) {\n            if (options.suppressUnpairedNode) xmlStr += tagStart + \">\";\n            else xmlStr += tagStart + \"/>\";\n        } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {\n            xmlStr += tagStart + \"/>\";\n        } else if (tagValue && tagValue.endsWith(\">\")) {\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>`;\n        } else {\n            xmlStr += tagStart + \">\";\n            if (tagValue && indentation !== \"\" && (tagValue.includes(\"/>\") || tagValue.includes(\"</\"))) {\n                xmlStr += indentation + options.indentBy + tagValue + indentation;\n            } else {\n                xmlStr += tagValue;\n            }\n            xmlStr += `</${tagName}>`;\n        }\n        isPreviousElementTag = true;\n    }\n\n    return xmlStr;\n}\n\nfunction propName(obj) {\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (key !== \":@\") return key;\n    }\n}\n\nfunction attr_to_str(attrMap, options) {\n    let attrStr = \"\";\n    if (attrMap && !options.ignoreAttributes) {\n        for (let attr in attrMap) {\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if (attrVal === true && options.suppressBooleanAttributes) {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            } else {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options) {\n    jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for (let index in options.stopNodes) {\n        if (options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\" + tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options) {\n    if (textValue && textValue.length > 0 && options.processEntities) {\n        for (let i = 0; i < options.entities.length; i++) {\n            const entity = options.entities[i];\n            textValue = textValue.replace(entity.regex, entity.val);\n        }\n    }\n    return textValue;\n}\nmodule.exports = toXml;\n","const util = require('../util');\n\n//TODO: handle comments\nfunction readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<' && !comment) { //Determine the tag type\n                if( hasBody && isEntity(xmlData, i)){\n                    i += 7; \n                    [entityName, val,i] = readEntityExp(xmlData,i+1);\n                    if(val.indexOf(\"&\") === -1) //Parameter entities are not supported\n                        entities[ validateEntityName(entityName) ] = {\n                            regx : RegExp( `&${entityName};`,\"g\"),\n                            val: val\n                        };\n                }\n                else if( hasBody && isElement(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isAttlist(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isNotation(xmlData, i)) i += 9;//Not supported\n                else if( isComment)                         comment = true;\n                else                                        throw new Error(\"Invalid DOCTYPE\");\n\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') { //Read tag content\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                        angleBracketsCount--;\n                    }\n                }else{\n                    angleBracketsCount--;\n                }\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nfunction readEntityExp(xmlData,i){\n    //External entities are not supported\n    //    <!ENTITY ext SYSTEM \"http://normal-website.com\" >\n\n    //Parameter entities are not supported\n    //    <!ENTITY entityname \"&anotherElement;\">\n\n    //Internal entities are supported\n    //    <!ENTITY entityname \"replacement text\">\n    \n    //read EntityName\n    let entityName = \"\";\n    for (; i < xmlData.length && (xmlData[i] !== \"'\" && xmlData[i] !== '\"' ); i++) {\n        // if(xmlData[i] === \" \") continue;\n        // else \n        entityName += xmlData[i];\n    }\n    entityName = entityName.trim();\n    if(entityName.indexOf(\" \") !== -1) throw new Error(\"External entites are not supported\");\n\n    //read Entity Value\n    const startChar = xmlData[i++];\n    let val = \"\"\n    for (; i < xmlData.length && xmlData[i] !== startChar ; i++) {\n        val += xmlData[i];\n    }\n    return [entityName, val, i];\n}\n\nfunction isComment(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === '-' &&\n    xmlData[i+3] === '-') return true\n    return false\n}\nfunction isEntity(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'N' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'I' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'Y') return true\n    return false\n}\nfunction isElement(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'L' &&\n    xmlData[i+4] === 'E' &&\n    xmlData[i+5] === 'M' &&\n    xmlData[i+6] === 'E' &&\n    xmlData[i+7] === 'N' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\n\nfunction isAttlist(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'A' &&\n    xmlData[i+3] === 'T' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'L' &&\n    xmlData[i+6] === 'I' &&\n    xmlData[i+7] === 'S' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\nfunction isNotation(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'N' &&\n    xmlData[i+3] === 'O' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'A' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'I' &&\n    xmlData[i+8] === 'O' &&\n    xmlData[i+9] === 'N') return true\n    return false\n}\n\nfunction validateEntityName(name){\n    if (util.isName(name))\n\treturn name;\n    else\n        throw new Error(`Invalid entity name ${name}`);\n}\n\nmodule.exports = readDocType;\n","\nconst defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true,\n      eNotation: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false,\n    transformTagName: false,\n    transformAttributeName: false,\n    updateTag: function(tagName, jPath, attrs){\n      return tagName\n    },\n    // skipEmptyListItem: false\n};\n   \nconst buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;","'use strict';\n///@ts-check\n\nconst util = require('../util');\nconst xmlNode = require('./xmlNode');\nconst readDocType = require(\"./DocTypeReader\");\nconst toNumber = require(\"strnum\");\n\nconst regx =\n  '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n  .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nclass OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val : \"&\"};\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"₹\" },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n    this.addChild = addChild;\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath, tagName) {\n  if (!this.options.ignoreAttributes && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      let oldVal = matches[i][4];\n      let aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (this.options.transformAttributeName) {\n          aName = this.options.transformAttributeName(aName);\n        }\n        if(aName === \"__proto__\") aName  = \"#__proto__\";\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        //check if last tag of nested tag was unpaired tag\n        const lastTagName = jPath.substring(jPath.lastIndexOf(\".\")+1);\n        if(tagName && this.options.unpairedTags.indexOf(tagName) !== -1 ){\n          throw new Error(`Unpaired tag can not be used as closing tag: </${tagName}>`);\n        }\n        let propIndex = 0\n        if(lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1 ){\n          propIndex = jPath.lastIndexOf('.', jPath.lastIndexOf('.')-1)\n          this.tagsNodeStack.pop();\n        }else{\n          propIndex = jPath.lastIndexOf(\".\");\n        }\n        jPath = jPath.substring(0, propIndex);\n\n        currentNode = this.tagsNodeStack.pop();//avoid recursion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if( (this.options.ignoreDeclaration && tagData.tagName === \"?xml\") || this.options.ignorePiTags){\n\n        }else{\n  \n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);\n          }\n          this.addChild(currentNode, childNode, jPath)\n\n        }\n\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i+4, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          // let val = this.parseTextData(tagExp, this.options.cdataPropName, jPath + \".\" + this.options.cdataPropName, true, false, true);\n          // if(!val) val = \"\";\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true);\n          if(val == undefined) val = \"\";\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n        let result = readTagExp(xmlData,i, this.options.removeNSPrefix);\n        let tagName= result.tagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n          jPath = jPath.substring(0, jPath.lastIndexOf(\".\"));\n        }\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) { //TODO: namespace\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            i = result.closeIndex;\n          }\n          //unpaired tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){\n            i = result.closeIndex;\n          }\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, tagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${tagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          this.addChild(currentNode, childNode, jPath)\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            \n            if(this.options.transformTagName) {\n              tagName = this.options.transformTagName(tagName);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nfunction addChild(currentNode, childNode, jPath){\n  const result = this.options.updateTag(childNode.tagname, jPath, childNode[\":@\"])\n  if(result === false){\n  }else if(typeof result === \"string\"){\n    childNode.tagname = result\n    currentNode.addChild(childNode);\n  }else{\n    currentNode.addChild(childNode);\n  }\n}\n\nconst replaceEntitiesValue = function(val){\n\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n    val = val.replace( this.ampEntity.regex, this.ampEntity.val);\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = Object.keys(currentNode.child).length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-double quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substr(0, separatorIndex).replace(/\\s\\s*$/, '');\n    tagExp = tagExp.substr(separatorIndex + 1);\n  }\n\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  // Starting at 1 since we already have an open tag\n  let openTagCount = 1;\n\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\"){ \n      if (xmlData[i+1] === \"/\") {//close tag\n          const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n          let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n          if(closeTagName === tagName){\n            openTagCount--;\n            if (openTagCount === 0) {\n              return {\n                tagContent: xmlData.substring(startIndex, i),\n                i : closeIndex\n              }\n            }\n          }\n          i=closeIndex;\n        } else if(xmlData[i+1] === '?') { \n          const closeIndex = findClosingIndex(xmlData, \"?>\", i+1, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 3) === '!--') { \n          const closeIndex = findClosingIndex(xmlData, \"-->\", i+3, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 2) === '![') { \n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n          i=closeIndex;\n        } else {\n          const tagData = readTagExp(xmlData, i, '>')\n\n          if (tagData) {\n            const openTagName = tagData && tagData.tagName;\n            if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length-1] !== \"/\") {\n              openTagCount++;\n            }\n            i=tagData.closeIndex;\n          }\n        }\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n\nmodule.exports = OrderedObjParser;\n","const { buildOptions} = require(\"./OptionsBuilder\");\nconst OrderedObjParser = require(\"./OrderedObjParser\");\nconst { prettify} = require(\"./node2json\");\nconst validator = require('../validator');\n\nclass XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validator.validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else if(value === \"&\"){\n            throw new Error(\"An entity with value '&' is not permitted\");\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n}\n\nmodule.exports = XMLParser;","'use strict';\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nfunction prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined && compressedObj.hasOwnProperty(property)) {\n        if(!Array.isArray(compressedObj[property])) {\n            compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const { textNodeName } = options;\n  const propCount = Object.keys(obj).length;\n  \n  if (propCount === 0) {\n    return true;\n  }\n\n  if (\n    propCount === 1 &&\n    (obj[textNodeName] || typeof obj[textNodeName] === \"boolean\" || obj[textNodeName] === 0)\n  ) {\n    return true;\n  }\n\n  return false;\n}\nexports.prettify = prettify;\n","'use strict';\n\nclass XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    if(key === \"__proto__\") key = \"#__proto__\";\n    this.child.push( {[key]: val });\n  }\n  addChild(node) {\n    if(node.tagname === \"__proto__\") node.tagname = \"#__proto__\";\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n  };\n};\n\n\nmodule.exports = XmlNode;","'use strict'\n\n/* eslint-disable no-var */\n\nvar reusify = require('reusify')\n\nfunction fastqueue (context, worker, concurrency) {\n  if (typeof context === 'function') {\n    concurrency = worker\n    worker = context\n    context = null\n  }\n\n  if (concurrency < 1) {\n    throw new Error('fastqueue concurrency must be greater than 1')\n  }\n\n  var cache = reusify(Task)\n  var queueHead = null\n  var queueTail = null\n  var _running = 0\n  var errorHandler = null\n\n  var self = {\n    push: push,\n    drain: noop,\n    saturated: noop,\n    pause: pause,\n    paused: false,\n    concurrency: concurrency,\n    running: running,\n    resume: resume,\n    idle: idle,\n    length: length,\n    getQueue: getQueue,\n    unshift: unshift,\n    empty: noop,\n    kill: kill,\n    killAndDrain: killAndDrain,\n    error: error\n  }\n\n  return self\n\n  function running () {\n    return _running\n  }\n\n  function pause () {\n    self.paused = true\n  }\n\n  function length () {\n    var current = queueHead\n    var counter = 0\n\n    while (current) {\n      current = current.next\n      counter++\n    }\n\n    return counter\n  }\n\n  function getQueue () {\n    var current = queueHead\n    var tasks = []\n\n    while (current) {\n      tasks.push(current.value)\n      current = current.next\n    }\n\n    return tasks\n  }\n\n  function resume () {\n    if (!self.paused) return\n    self.paused = false\n    for (var i = 0; i < self.concurrency; i++) {\n      _running++\n      release()\n    }\n  }\n\n  function idle () {\n    return _running === 0 && self.length() === 0\n  }\n\n  function push (value, done) {\n    var current = cache.get()\n\n    current.context = context\n    current.release = release\n    current.value = value\n    current.callback = done || noop\n    current.errorHandler = errorHandler\n\n    if (_running === self.concurrency || self.paused) {\n      if (queueTail) {\n        queueTail.next = current\n        queueTail = current\n      } else {\n        queueHead = current\n        queueTail = current\n        self.saturated()\n      }\n    } else {\n      _running++\n      worker.call(context, current.value, current.worked)\n    }\n  }\n\n  function unshift (value, done) {\n    var current = cache.get()\n\n    current.context = context\n    current.release = release\n    current.value = value\n    current.callback = done || noop\n\n    if (_running === self.concurrency || self.paused) {\n      if (queueHead) {\n        current.next = queueHead\n        queueHead = current\n      } else {\n        queueHead = current\n        queueTail = current\n        self.saturated()\n      }\n    } else {\n      _running++\n      worker.call(context, current.value, current.worked)\n    }\n  }\n\n  function release (holder) {\n    if (holder) {\n      cache.release(holder)\n    }\n    var next = queueHead\n    if (next) {\n      if (!self.paused) {\n        if (queueTail === queueHead) {\n          queueTail = null\n        }\n        queueHead = next.next\n        next.next = null\n        worker.call(context, next.value, next.worked)\n        if (queueTail === null) {\n          self.empty()\n        }\n      } else {\n        _running--\n      }\n    } else if (--_running === 0) {\n      self.drain()\n    }\n  }\n\n  function kill () {\n    queueHead = null\n    queueTail = null\n    self.drain = noop\n  }\n\n  function killAndDrain () {\n    queueHead = null\n    queueTail = null\n    self.drain()\n    self.drain = noop\n  }\n\n  function error (handler) {\n    errorHandler = handler\n  }\n}\n\nfunction noop () {}\n\nfunction Task () {\n  this.value = null\n  this.callback = noop\n  this.next = null\n  this.release = noop\n  this.context = null\n  this.errorHandler = null\n\n  var self = this\n\n  this.worked = function worked (err, result) {\n    var callback = self.callback\n    var errorHandler = self.errorHandler\n    var val = self.value\n    self.value = null\n    self.callback = noop\n    if (self.errorHandler) {\n      errorHandler(err, val)\n    }\n    callback.call(self.context, err, result)\n    self.release(self)\n  }\n}\n\nfunction queueAsPromised (context, worker, concurrency) {\n  if (typeof context === 'function') {\n    concurrency = worker\n    worker = context\n    context = null\n  }\n\n  function asyncWrapper (arg, cb) {\n    worker.call(this, arg)\n      .then(function (res) {\n        cb(null, res)\n      }, cb)\n  }\n\n  var queue = fastqueue(context, asyncWrapper, concurrency)\n\n  var pushCb = queue.push\n  var unshiftCb = queue.unshift\n\n  queue.push = push\n  queue.unshift = unshift\n  queue.drained = drained\n\n  return queue\n\n  function push (value) {\n    var p = new Promise(function (resolve, reject) {\n      pushCb(value, function (err, result) {\n        if (err) {\n          reject(err)\n          return\n        }\n        resolve(result)\n      })\n    })\n\n    // Let's fork the promise chain to\n    // make the error bubble up to the user but\n    // not lead to a unhandledRejection\n    p.catch(noop)\n\n    return p\n  }\n\n  function unshift (value) {\n    var p = new Promise(function (resolve, reject) {\n      unshiftCb(value, function (err, result) {\n        if (err) {\n          reject(err)\n          return\n        }\n        resolve(result)\n      })\n    })\n\n    // Let's fork the promise chain to\n    // make the error bubble up to the user but\n    // not lead to a unhandledRejection\n    p.catch(noop)\n\n    return p\n  }\n\n  function drained () {\n    var previousDrain = queue.drain\n\n    var p = new Promise(function (resolve) {\n      queue.drain = function () {\n        previousDrain()\n        resolve()\n      }\n    })\n\n    return p\n  }\n}\n\nmodule.exports = fastqueue\nmodule.exports.promise = queueAsPromised\n","/*!\n * fill-range <https://github.com/jonschlinkert/fill-range>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nconst util = require('util');\nconst toRegexRange = require('to-regex-range');\n\nconst isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\n\nconst transform = toNumber => {\n  return value => toNumber === true ? Number(value) : String(value);\n};\n\nconst isValidValue = value => {\n  return typeof value === 'number' || (typeof value === 'string' && value !== '');\n};\n\nconst isNumber = num => Number.isInteger(+num);\n\nconst zeros = input => {\n  let value = `${input}`;\n  let index = -1;\n  if (value[0] === '-') value = value.slice(1);\n  if (value === '0') return false;\n  while (value[++index] === '0');\n  return index > 0;\n};\n\nconst stringify = (start, end, options) => {\n  if (typeof start === 'string' || typeof end === 'string') {\n    return true;\n  }\n  return options.stringify === true;\n};\n\nconst pad = (input, maxLength, toNumber) => {\n  if (maxLength > 0) {\n    let dash = input[0] === '-' ? '-' : '';\n    if (dash) input = input.slice(1);\n    input = (dash + input.padStart(dash ? maxLength - 1 : maxLength, '0'));\n  }\n  if (toNumber === false) {\n    return String(input);\n  }\n  return input;\n};\n\nconst toMaxLen = (input, maxLength) => {\n  let negative = input[0] === '-' ? '-' : '';\n  if (negative) {\n    input = input.slice(1);\n    maxLength--;\n  }\n  while (input.length < maxLength) input = '0' + input;\n  return negative ? ('-' + input) : input;\n};\n\nconst toSequence = (parts, options) => {\n  parts.negatives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\n  parts.positives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\n\n  let prefix = options.capture ? '' : '?:';\n  let positives = '';\n  let negatives = '';\n  let result;\n\n  if (parts.positives.length) {\n    positives = parts.positives.join('|');\n  }\n\n  if (parts.negatives.length) {\n    negatives = `-(${prefix}${parts.negatives.join('|')})`;\n  }\n\n  if (positives && negatives) {\n    result = `${positives}|${negatives}`;\n  } else {\n    result = positives || negatives;\n  }\n\n  if (options.wrap) {\n    return `(${prefix}${result})`;\n  }\n\n  return result;\n};\n\nconst toRange = (a, b, isNumbers, options) => {\n  if (isNumbers) {\n    return toRegexRange(a, b, { wrap: false, ...options });\n  }\n\n  let start = String.fromCharCode(a);\n  if (a === b) return start;\n\n  let stop = String.fromCharCode(b);\n  return `[${start}-${stop}]`;\n};\n\nconst toRegex = (start, end, options) => {\n  if (Array.isArray(start)) {\n    let wrap = options.wrap === true;\n    let prefix = options.capture ? '' : '?:';\n    return wrap ? `(${prefix}${start.join('|')})` : start.join('|');\n  }\n  return toRegexRange(start, end, options);\n};\n\nconst rangeError = (...args) => {\n  return new RangeError('Invalid range arguments: ' + util.inspect(...args));\n};\n\nconst invalidRange = (start, end, options) => {\n  if (options.strictRanges === true) throw rangeError([start, end]);\n  return [];\n};\n\nconst invalidStep = (step, options) => {\n  if (options.strictRanges === true) {\n    throw new TypeError(`Expected step \"${step}\" to be a number`);\n  }\n  return [];\n};\n\nconst fillNumbers = (start, end, step = 1, options = {}) => {\n  let a = Number(start);\n  let b = Number(end);\n\n  if (!Number.isInteger(a) || !Number.isInteger(b)) {\n    if (options.strictRanges === true) throw rangeError([start, end]);\n    return [];\n  }\n\n  // fix negative zero\n  if (a === 0) a = 0;\n  if (b === 0) b = 0;\n\n  let descending = a > b;\n  let startString = String(start);\n  let endString = String(end);\n  let stepString = String(step);\n  step = Math.max(Math.abs(step), 1);\n\n  let padded = zeros(startString) || zeros(endString) || zeros(stepString);\n  let maxLen = padded ? Math.max(startString.length, endString.length, stepString.length) : 0;\n  let toNumber = padded === false && stringify(start, end, options) === false;\n  let format = options.transform || transform(toNumber);\n\n  if (options.toRegex && step === 1) {\n    return toRange(toMaxLen(start, maxLen), toMaxLen(end, maxLen), true, options);\n  }\n\n  let parts = { negatives: [], positives: [] };\n  let push = num => parts[num < 0 ? 'negatives' : 'positives'].push(Math.abs(num));\n  let range = [];\n  let index = 0;\n\n  while (descending ? a >= b : a <= b) {\n    if (options.toRegex === true && step > 1) {\n      push(a);\n    } else {\n      range.push(pad(format(a, index), maxLen, toNumber));\n    }\n    a = descending ? a - step : a + step;\n    index++;\n  }\n\n  if (options.toRegex === true) {\n    return step > 1\n      ? toSequence(parts, options)\n      : toRegex(range, null, { wrap: false, ...options });\n  }\n\n  return range;\n};\n\nconst fillLetters = (start, end, step = 1, options = {}) => {\n  if ((!isNumber(start) && start.length > 1) || (!isNumber(end) && end.length > 1)) {\n    return invalidRange(start, end, options);\n  }\n\n\n  let format = options.transform || (val => String.fromCharCode(val));\n  let a = `${start}`.charCodeAt(0);\n  let b = `${end}`.charCodeAt(0);\n\n  let descending = a > b;\n  let min = Math.min(a, b);\n  let max = Math.max(a, b);\n\n  if (options.toRegex && step === 1) {\n    return toRange(min, max, false, options);\n  }\n\n  let range = [];\n  let index = 0;\n\n  while (descending ? a >= b : a <= b) {\n    range.push(format(a, index));\n    a = descending ? a - step : a + step;\n    index++;\n  }\n\n  if (options.toRegex === true) {\n    return toRegex(range, null, { wrap: false, options });\n  }\n\n  return range;\n};\n\nconst fill = (start, end, step, options = {}) => {\n  if (end == null && isValidValue(start)) {\n    return [start];\n  }\n\n  if (!isValidValue(start) || !isValidValue(end)) {\n    return invalidRange(start, end, options);\n  }\n\n  if (typeof step === 'function') {\n    return fill(start, end, 1, { transform: step });\n  }\n\n  if (isObject(step)) {\n    return fill(start, end, 0, step);\n  }\n\n  let opts = { ...options };\n  if (opts.capture === true) opts.wrap = true;\n  step = step || opts.step || 1;\n\n  if (!isNumber(step)) {\n    if (step != null && !isObject(step)) return invalidStep(step, opts);\n    return fill(start, end, 1, step);\n  }\n\n  if (isNumber(start) && isNumber(end)) {\n    return fillNumbers(start, end, step, opts);\n  }\n\n  return fillLetters(start, end, Math.max(Math.abs(step), 1), opts);\n};\n\nmodule.exports = fill;\n","// A simple implementation of make-array\nfunction makeArray (subject) {\n  return Array.isArray(subject)\n    ? subject\n    : [subject]\n}\n\nconst EMPTY = ''\nconst SPACE = ' '\nconst ESCAPE = '\\\\'\nconst REGEX_TEST_BLANK_LINE = /^\\s+$/\nconst REGEX_INVALID_TRAILING_BACKSLASH = /(?:[^\\\\]|^)\\\\$/\nconst REGEX_REPLACE_LEADING_EXCAPED_EXCLAMATION = /^\\\\!/\nconst REGEX_REPLACE_LEADING_EXCAPED_HASH = /^\\\\#/\nconst REGEX_SPLITALL_CRLF = /\\r?\\n/g\n// /foo,\n// ./foo,\n// ../foo,\n// .\n// ..\nconst REGEX_TEST_INVALID_PATH = /^\\.*\\/|^\\.+$/\n\nconst SLASH = '/'\n\n// Do not use ternary expression here, since \"istanbul ignore next\" is buggy\nlet TMP_KEY_IGNORE = 'node-ignore'\n/* istanbul ignore else */\nif (typeof Symbol !== 'undefined') {\n  TMP_KEY_IGNORE = Symbol.for('node-ignore')\n}\nconst KEY_IGNORE = TMP_KEY_IGNORE\n\nconst define = (object, key, value) =>\n  Object.defineProperty(object, key, {value})\n\nconst REGEX_REGEXP_RANGE = /([0-z])-([0-z])/g\n\nconst RETURN_FALSE = () => false\n\n// Sanitize the range of a regular expression\n// The cases are complicated, see test cases for details\nconst sanitizeRange = range => range.replace(\n  REGEX_REGEXP_RANGE,\n  (match, from, to) => from.charCodeAt(0) <= to.charCodeAt(0)\n    ? match\n    // Invalid range (out of order) which is ok for gitignore rules but\n    //   fatal for JavaScript regular expression, so eliminate it.\n    : EMPTY\n)\n\n// See fixtures #59\nconst cleanRangeBackSlash = slashes => {\n  const {length} = slashes\n  return slashes.slice(0, length - length % 2)\n}\n\n// > If the pattern ends with a slash,\n// > it is removed for the purpose of the following description,\n// > but it would only find a match with a directory.\n// > In other words, foo/ will match a directory foo and paths underneath it,\n// > but will not match a regular file or a symbolic link foo\n// >  (this is consistent with the way how pathspec works in general in Git).\n// '`foo/`' will not match regular file '`foo`' or symbolic link '`foo`'\n// -> ignore-rules will not deal with it, because it costs extra `fs.stat` call\n//      you could use option `mark: true` with `glob`\n\n// '`foo/`' should not continue with the '`..`'\nconst REPLACERS = [\n\n  // > Trailing spaces are ignored unless they are quoted with backslash (\"\\\")\n  [\n    // (a\\ ) -> (a )\n    // (a  ) -> (a)\n    // (a \\ ) -> (a  )\n    /\\\\?\\s+$/,\n    match => match.indexOf('\\\\') === 0\n      ? SPACE\n      : EMPTY\n  ],\n\n  // replace (\\ ) with ' '\n  [\n    /\\\\\\s/g,\n    () => SPACE\n  ],\n\n  // Escape metacharacters\n  // which is written down by users but means special for regular expressions.\n\n  // > There are 12 characters with special meanings:\n  // > - the backslash \\,\n  // > - the caret ^,\n  // > - the dollar sign $,\n  // > - the period or dot .,\n  // > - the vertical bar or pipe symbol |,\n  // > - the question mark ?,\n  // > - the asterisk or star *,\n  // > - the plus sign +,\n  // > - the opening parenthesis (,\n  // > - the closing parenthesis ),\n  // > - and the opening square bracket [,\n  // > - the opening curly brace {,\n  // > These special characters are often called \"metacharacters\".\n  [\n    /[\\\\$.|*+(){^]/g,\n    match => `\\\\${match}`\n  ],\n\n  [\n    // > a question mark (?) matches a single character\n    /(?!\\\\)\\?/g,\n    () => '[^/]'\n  ],\n\n  // leading slash\n  [\n\n    // > A leading slash matches the beginning of the pathname.\n    // > For example, \"/*.c\" matches \"cat-file.c\" but not \"mozilla-sha1/sha1.c\".\n    // A leading slash matches the beginning of the pathname\n    /^\\//,\n    () => '^'\n  ],\n\n  // replace special metacharacter slash after the leading slash\n  [\n    /\\//g,\n    () => '\\\\/'\n  ],\n\n  [\n    // > A leading \"**\" followed by a slash means match in all directories.\n    // > For example, \"**/foo\" matches file or directory \"foo\" anywhere,\n    // > the same as pattern \"foo\".\n    // > \"**/foo/bar\" matches file or directory \"bar\" anywhere that is directly\n    // >   under directory \"foo\".\n    // Notice that the '*'s have been replaced as '\\\\*'\n    /^\\^*\\\\\\*\\\\\\*\\\\\\//,\n\n    // '**/foo' <-> 'foo'\n    () => '^(?:.*\\\\/)?'\n  ],\n\n  // starting\n  [\n    // there will be no leading '/'\n    //   (which has been replaced by section \"leading slash\")\n    // If starts with '**', adding a '^' to the regular expression also works\n    /^(?=[^^])/,\n    function startingReplacer () {\n      // If has a slash `/` at the beginning or middle\n      return !/\\/(?!$)/.test(this)\n        // > Prior to 2.22.1\n        // > If the pattern does not contain a slash /,\n        // >   Git treats it as a shell glob pattern\n        // Actually, if there is only a trailing slash,\n        //   git also treats it as a shell glob pattern\n\n        // After 2.22.1 (compatible but clearer)\n        // > If there is a separator at the beginning or middle (or both)\n        // > of the pattern, then the pattern is relative to the directory\n        // > level of the particular .gitignore file itself.\n        // > Otherwise the pattern may also match at any level below\n        // > the .gitignore level.\n        ? '(?:^|\\\\/)'\n\n        // > Otherwise, Git treats the pattern as a shell glob suitable for\n        // >   consumption by fnmatch(3)\n        : '^'\n    }\n  ],\n\n  // two globstars\n  [\n    // Use lookahead assertions so that we could match more than one `'/**'`\n    /\\\\\\/\\\\\\*\\\\\\*(?=\\\\\\/|$)/g,\n\n    // Zero, one or several directories\n    // should not use '*', or it will be replaced by the next replacer\n\n    // Check if it is not the last `'/**'`\n    (_, index, str) => index + 6 < str.length\n\n      // case: /**/\n      // > A slash followed by two consecutive asterisks then a slash matches\n      // >   zero or more directories.\n      // > For example, \"a/**/b\" matches \"a/b\", \"a/x/b\", \"a/x/y/b\" and so on.\n      // '/**/'\n      ? '(?:\\\\/[^\\\\/]+)*'\n\n      // case: /**\n      // > A trailing `\"/**\"` matches everything inside.\n\n      // #21: everything inside but it should not include the current folder\n      : '\\\\/.+'\n  ],\n\n  // normal intermediate wildcards\n  [\n    // Never replace escaped '*'\n    // ignore rule '\\*' will match the path '*'\n\n    // 'abc.*/' -> go\n    // 'abc.*'  -> skip this rule,\n    //    coz trailing single wildcard will be handed by [trailing wildcard]\n    /(^|[^\\\\]+)(\\\\\\*)+(?=.+)/g,\n\n    // '*.js' matches '.js'\n    // '*.js' doesn't match 'abc'\n    (_, p1, p2) => {\n      // 1.\n      // > An asterisk \"*\" matches anything except a slash.\n      // 2.\n      // > Other consecutive asterisks are considered regular asterisks\n      // > and will match according to the previous rules.\n      const unescaped = p2.replace(/\\\\\\*/g, '[^\\\\/]*')\n      return p1 + unescaped\n    }\n  ],\n\n  [\n    // unescape, revert step 3 except for back slash\n    // For example, if a user escape a '\\\\*',\n    // after step 3, the result will be '\\\\\\\\\\\\*'\n    /\\\\\\\\\\\\(?=[$.|*+(){^])/g,\n    () => ESCAPE\n  ],\n\n  [\n    // '\\\\\\\\' -> '\\\\'\n    /\\\\\\\\/g,\n    () => ESCAPE\n  ],\n\n  [\n    // > The range notation, e.g. [a-zA-Z],\n    // > can be used to match one of the characters in a range.\n\n    // `\\` is escaped by step 3\n    /(\\\\)?\\[([^\\]/]*?)(\\\\*)($|\\])/g,\n    (match, leadEscape, range, endEscape, close) => leadEscape === ESCAPE\n      // '\\\\[bar]' -> '\\\\\\\\[bar\\\\]'\n      ? `\\\\[${range}${cleanRangeBackSlash(endEscape)}${close}`\n      : close === ']'\n        ? endEscape.length % 2 === 0\n          // A normal case, and it is a range notation\n          // '[bar]'\n          // '[bar\\\\\\\\]'\n          ? `[${sanitizeRange(range)}${endEscape}]`\n          // Invalid range notaton\n          // '[bar\\\\]' -> '[bar\\\\\\\\]'\n          : '[]'\n        : '[]'\n  ],\n\n  // ending\n  [\n    // 'js' will not match 'js.'\n    // 'ab' will not match 'abc'\n    /(?:[^*])$/,\n\n    // WTF!\n    // https://git-scm.com/docs/gitignore\n    // changes in [2.22.1](https://git-scm.com/docs/gitignore/2.22.1)\n    // which re-fixes #24, #38\n\n    // > If there is a separator at the end of the pattern then the pattern\n    // > will only match directories, otherwise the pattern can match both\n    // > files and directories.\n\n    // 'js*' will not match 'a.js'\n    // 'js/' will not match 'a.js'\n    // 'js' will match 'a.js' and 'a.js/'\n    match => /\\/$/.test(match)\n      // foo/ will not match 'foo'\n      ? `${match}$`\n      // foo matches 'foo' and 'foo/'\n      : `${match}(?=$|\\\\/$)`\n  ],\n\n  // trailing wildcard\n  [\n    /(\\^|\\\\\\/)?\\\\\\*$/,\n    (_, p1) => {\n      const prefix = p1\n        // '\\^':\n        // '/*' does not match EMPTY\n        // '/*' does not match everything\n\n        // '\\\\\\/':\n        // 'abc/*' does not match 'abc/'\n        ? `${p1}[^/]+`\n\n        // 'a*' matches 'a'\n        // 'a*' matches 'aa'\n        : '[^/]*'\n\n      return `${prefix}(?=$|\\\\/$)`\n    }\n  ],\n]\n\n// A simple cache, because an ignore rule only has only one certain meaning\nconst regexCache = Object.create(null)\n\n// @param {pattern}\nconst makeRegex = (pattern, ignoreCase) => {\n  let source = regexCache[pattern]\n\n  if (!source) {\n    source = REPLACERS.reduce(\n      (prev, current) => prev.replace(current[0], current[1].bind(pattern)),\n      pattern\n    )\n    regexCache[pattern] = source\n  }\n\n  return ignoreCase\n    ? new RegExp(source, 'i')\n    : new RegExp(source)\n}\n\nconst isString = subject => typeof subject === 'string'\n\n// > A blank line matches no files, so it can serve as a separator for readability.\nconst checkPattern = pattern => pattern\n  && isString(pattern)\n  && !REGEX_TEST_BLANK_LINE.test(pattern)\n  && !REGEX_INVALID_TRAILING_BACKSLASH.test(pattern)\n\n  // > A line starting with # serves as a comment.\n  && pattern.indexOf('#') !== 0\n\nconst splitPattern = pattern => pattern.split(REGEX_SPLITALL_CRLF)\n\nclass IgnoreRule {\n  constructor (\n    origin,\n    pattern,\n    negative,\n    regex\n  ) {\n    this.origin = origin\n    this.pattern = pattern\n    this.negative = negative\n    this.regex = regex\n  }\n}\n\nconst createRule = (pattern, ignoreCase) => {\n  const origin = pattern\n  let negative = false\n\n  // > An optional prefix \"!\" which negates the pattern;\n  if (pattern.indexOf('!') === 0) {\n    negative = true\n    pattern = pattern.substr(1)\n  }\n\n  pattern = pattern\n  // > Put a backslash (\"\\\") in front of the first \"!\" for patterns that\n  // >   begin with a literal \"!\", for example, `\"\\!important!.txt\"`.\n  .replace(REGEX_REPLACE_LEADING_EXCAPED_EXCLAMATION, '!')\n  // > Put a backslash (\"\\\") in front of the first hash for patterns that\n  // >   begin with a hash.\n  .replace(REGEX_REPLACE_LEADING_EXCAPED_HASH, '#')\n\n  const regex = makeRegex(pattern, ignoreCase)\n\n  return new IgnoreRule(\n    origin,\n    pattern,\n    negative,\n    regex\n  )\n}\n\nconst throwError = (message, Ctor) => {\n  throw new Ctor(message)\n}\n\nconst checkPath = (path, originalPath, doThrow) => {\n  if (!isString(path)) {\n    return doThrow(\n      `path must be a string, but got \\`${originalPath}\\``,\n      TypeError\n    )\n  }\n\n  // We don't know if we should ignore EMPTY, so throw\n  if (!path) {\n    return doThrow(`path must not be empty`, TypeError)\n  }\n\n  // Check if it is a relative path\n  if (checkPath.isNotRelative(path)) {\n    const r = '`path.relative()`d'\n    return doThrow(\n      `path should be a ${r} string, but got \"${originalPath}\"`,\n      RangeError\n    )\n  }\n\n  return true\n}\n\nconst isNotRelative = path => REGEX_TEST_INVALID_PATH.test(path)\n\ncheckPath.isNotRelative = isNotRelative\ncheckPath.convert = p => p\n\nclass Ignore {\n  constructor ({\n    ignorecase = true,\n    ignoreCase = ignorecase,\n    allowRelativePaths = false\n  } = {}) {\n    define(this, KEY_IGNORE, true)\n\n    this._rules = []\n    this._ignoreCase = ignoreCase\n    this._allowRelativePaths = allowRelativePaths\n    this._initCache()\n  }\n\n  _initCache () {\n    this._ignoreCache = Object.create(null)\n    this._testCache = Object.create(null)\n  }\n\n  _addPattern (pattern) {\n    // #32\n    if (pattern && pattern[KEY_IGNORE]) {\n      this._rules = this._rules.concat(pattern._rules)\n      this._added = true\n      return\n    }\n\n    if (checkPattern(pattern)) {\n      const rule = createRule(pattern, this._ignoreCase)\n      this._added = true\n      this._rules.push(rule)\n    }\n  }\n\n  // @param {Array<string> | string | Ignore} pattern\n  add (pattern) {\n    this._added = false\n\n    makeArray(\n      isString(pattern)\n        ? splitPattern(pattern)\n        : pattern\n    ).forEach(this._addPattern, this)\n\n    // Some rules have just added to the ignore,\n    // making the behavior changed.\n    if (this._added) {\n      this._initCache()\n    }\n\n    return this\n  }\n\n  // legacy\n  addPattern (pattern) {\n    return this.add(pattern)\n  }\n\n  //          |           ignored : unignored\n  // negative |   0:0   |   0:1   |   1:0   |   1:1\n  // -------- | ------- | ------- | ------- | --------\n  //     0    |  TEST   |  TEST   |  SKIP   |    X\n  //     1    |  TESTIF |  SKIP   |  TEST   |    X\n\n  // - SKIP: always skip\n  // - TEST: always test\n  // - TESTIF: only test if checkUnignored\n  // - X: that never happen\n\n  // @param {boolean} whether should check if the path is unignored,\n  //   setting `checkUnignored` to `false` could reduce additional\n  //   path matching.\n\n  // @returns {TestResult} true if a file is ignored\n  _testOne (path, checkUnignored) {\n    let ignored = false\n    let unignored = false\n\n    this._rules.forEach(rule => {\n      const {negative} = rule\n      if (\n        unignored === negative && ignored !== unignored\n        || negative && !ignored && !unignored && !checkUnignored\n      ) {\n        return\n      }\n\n      const matched = rule.regex.test(path)\n\n      if (matched) {\n        ignored = !negative\n        unignored = negative\n      }\n    })\n\n    return {\n      ignored,\n      unignored\n    }\n  }\n\n  // @returns {TestResult}\n  _test (originalPath, cache, checkUnignored, slices) {\n    const path = originalPath\n      // Supports nullable path\n      && checkPath.convert(originalPath)\n\n    checkPath(\n      path,\n      originalPath,\n      this._allowRelativePaths\n        ? RETURN_FALSE\n        : throwError\n    )\n\n    return this._t(path, cache, checkUnignored, slices)\n  }\n\n  _t (path, cache, checkUnignored, slices) {\n    if (path in cache) {\n      return cache[path]\n    }\n\n    if (!slices) {\n      // path/to/a.js\n      // ['path', 'to', 'a.js']\n      slices = path.split(SLASH)\n    }\n\n    slices.pop()\n\n    // If the path has no parent directory, just test it\n    if (!slices.length) {\n      return cache[path] = this._testOne(path, checkUnignored)\n    }\n\n    const parent = this._t(\n      slices.join(SLASH) + SLASH,\n      cache,\n      checkUnignored,\n      slices\n    )\n\n    // If the path contains a parent directory, check the parent first\n    return cache[path] = parent.ignored\n      // > It is not possible to re-include a file if a parent directory of\n      // >   that file is excluded.\n      ? parent\n      : this._testOne(path, checkUnignored)\n  }\n\n  ignores (path) {\n    return this._test(path, this._ignoreCache, false).ignored\n  }\n\n  createFilter () {\n    return path => !this.ignores(path)\n  }\n\n  filter (paths) {\n    return makeArray(paths).filter(this.createFilter())\n  }\n\n  // @returns {TestResult}\n  test (path) {\n    return this._test(path, this._testCache, true)\n  }\n}\n\nconst factory = options => new Ignore(options)\n\nconst isPathValid = path =>\n  checkPath(path && checkPath.convert(path), path, RETURN_FALSE)\n\nfactory.isPathValid = isPathValid\n\n// Fixes typescript\nfactory.default = factory\n\nmodule.exports = factory\n\n// Windows\n// --------------------------------------------------------------\n/* istanbul ignore if */\nif (\n  // Detect `process` so that it can run in browsers.\n  typeof process !== 'undefined'\n  && (\n    process.env && process.env.IGNORE_TEST_WIN32\n    || process.platform === 'win32'\n  )\n) {\n  /* eslint no-control-regex: \"off\" */\n  const makePosix = str => /^\\\\\\\\\\?\\\\/.test(str)\n  || /[\"<>|\\u0000-\\u001F]+/u.test(str)\n    ? str\n    : str.replace(/\\\\/g, '/')\n\n  checkPath.convert = makePosix\n\n  // 'C:\\\\foo'     <- 'C:\\\\foo' has been converted to 'C:/'\n  // 'd:\\\\foo'\n  const REGIX_IS_WINDOWS_PATH_ABSOLUTE = /^[a-z]:\\//i\n  checkPath.isNotRelative = path =>\n    REGIX_IS_WINDOWS_PATH_ABSOLUTE.test(path)\n    || isNotRelative(path)\n}\n","/*!\n * is-extglob <https://github.com/jonschlinkert/is-extglob>\n *\n * Copyright (c) 2014-2016, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\nmodule.exports = function isExtglob(str) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  var match;\n  while ((match = /(\\\\).|([@?!+*]\\(.*\\))/g.exec(str))) {\n    if (match[2]) return true;\n    str = str.slice(match.index + match[0].length);\n  }\n\n  return false;\n};\n","/*!\n * is-glob <https://github.com/jonschlinkert/is-glob>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nvar isExtglob = require('is-extglob');\nvar chars = { '{': '}', '(': ')', '[': ']'};\nvar strictCheck = function(str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  var pipeIndex = -2;\n  var closeSquareIndex = -2;\n  var closeCurlyIndex = -2;\n  var closeParenIndex = -2;\n  var backSlashIndex = -2;\n  while (index < str.length) {\n    if (str[index] === '*') {\n      return true;\n    }\n\n    if (str[index + 1] === '?' && /[\\].+)]/.test(str[index])) {\n      return true;\n    }\n\n    if (closeSquareIndex !== -1 && str[index] === '[' && str[index + 1] !== ']') {\n      if (closeSquareIndex < index) {\n        closeSquareIndex = str.indexOf(']', index);\n      }\n      if (closeSquareIndex > index) {\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeCurlyIndex !== -1 && str[index] === '{' && str[index + 1] !== '}') {\n      closeCurlyIndex = str.indexOf('}', index);\n      if (closeCurlyIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeCurlyIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeParenIndex !== -1 && str[index] === '(' && str[index + 1] === '?' && /[:!=]/.test(str[index + 2]) && str[index + 3] !== ')') {\n      closeParenIndex = str.indexOf(')', index);\n      if (closeParenIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (pipeIndex !== -1 && str[index] === '(' && str[index + 1] !== '|') {\n      if (pipeIndex < index) {\n        pipeIndex = str.indexOf('|', index);\n      }\n      if (pipeIndex !== -1 && str[pipeIndex + 1] !== ')') {\n        closeParenIndex = str.indexOf(')', pipeIndex);\n        if (closeParenIndex > pipeIndex) {\n          backSlashIndex = str.indexOf('\\\\', pipeIndex);\n          if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n            return true;\n          }\n        }\n      }\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\n\nvar relaxedCheck = function(str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  while (index < str.length) {\n    if (/[*?{}()[\\]]/.test(str[index])) {\n      return true;\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\n\nmodule.exports = function isGlob(str, options) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  if (isExtglob(str)) {\n    return true;\n  }\n\n  var check = strictCheck;\n\n  // optionally relax check\n  if (options && options.strict === false) {\n    check = relaxedCheck;\n  }\n\n  return check(str);\n};\n","/*!\n * is-number <https://github.com/jonschlinkert/is-number>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function(num) {\n  if (typeof num === 'number') {\n    return num - num === 0;\n  }\n  if (typeof num === 'string' && num.trim() !== '') {\n    return Number.isFinite ? Number.isFinite(+num) : isFinite(+num);\n  }\n  return false;\n};\n","'use strict';\n\n\nvar loader = require('./lib/loader');\nvar dumper = require('./lib/dumper');\n\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nmodule.exports.Type                = require('./lib/type');\nmodule.exports.Schema              = require('./lib/schema');\nmodule.exports.FAILSAFE_SCHEMA     = require('./lib/schema/failsafe');\nmodule.exports.JSON_SCHEMA         = require('./lib/schema/json');\nmodule.exports.CORE_SCHEMA         = require('./lib/schema/core');\nmodule.exports.DEFAULT_SCHEMA      = require('./lib/schema/default');\nmodule.exports.load                = loader.load;\nmodule.exports.loadAll             = loader.loadAll;\nmodule.exports.dump                = dumper.dump;\nmodule.exports.YAMLException       = require('./lib/exception');\n\n// Re-export all types in case user wants to create custom schema\nmodule.exports.types = {\n  binary:    require('./lib/type/binary'),\n  float:     require('./lib/type/float'),\n  map:       require('./lib/type/map'),\n  null:      require('./lib/type/null'),\n  pairs:     require('./lib/type/pairs'),\n  set:       require('./lib/type/set'),\n  timestamp: require('./lib/type/timestamp'),\n  bool:      require('./lib/type/bool'),\n  int:       require('./lib/type/int'),\n  merge:     require('./lib/type/merge'),\n  omap:      require('./lib/type/omap'),\n  seq:       require('./lib/type/seq'),\n  str:       require('./lib/type/str')\n};\n\n// Removed functions from JS-YAML 3.0.x\nmodule.exports.safeLoad            = renamed('safeLoad', 'load');\nmodule.exports.safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nmodule.exports.safeDump            = renamed('safeDump', 'dump');\n","'use strict';\n\n\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nmodule.exports.isNothing      = isNothing;\nmodule.exports.isObject       = isObject;\nmodule.exports.toArray        = toArray;\nmodule.exports.repeat         = repeat;\nmodule.exports.isNegativeZero = isNegativeZero;\nmodule.exports.extend         = extend;\n","'use strict';\n\n/*eslint-disable no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar DEFAULT_SCHEMA      = require('./schema/default');\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State(options) {\n  this.schema        = options['schema'] || DEFAULT_SCHEMA;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n//                             c = flow-in   ⇒ ns-plain-safe-in\n//                             c = block-key ⇒ ns-plain-safe-out\n//                             c = flow-key  ⇒ ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n//                            | ( /* An ns-char preceding */ “#” )\n//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string, lineWidth) + '\"';\n      default:\n        throw new YAMLException('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new YAMLException('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new YAMLException('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new YAMLException('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nmodule.exports.dump = dump;\n","// YAML error class. http://stackoverflow.com/questions/8458984\n//\n'use strict';\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException.prototype = Object.create(Error.prototype);\nYAMLException.prototype.constructor = YAMLException;\n\n\nYAMLException.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nmodule.exports = YAMLException;\n","'use strict';\n\n/*eslint-disable max-len,no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar makeSnippet         = require('./snippet');\nvar DEFAULT_SCHEMA      = require('./schema/default');\n\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || DEFAULT_SCHEMA;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = makeSnippet(mark);\n\n  return new YAMLException(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty.call(overridableKeys, keyNode) &&\n        _hasOwnProperty.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new YAMLException('expected a single document in the stream, but found more');\n}\n\n\nmodule.exports.loadAll = loadAll;\nmodule.exports.load    = load;\n","'use strict';\n\n/*eslint-disable max-len*/\n\nvar YAMLException = require('./exception');\nvar Type          = require('./type');\n\n\nfunction compileList(schema, name) {\n  var result = [];\n\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        newIndex = previousIndex;\n      }\n    });\n\n    result[newIndex] = currentType;\n  });\n\n  return result;\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema(definition) {\n  return this.extend(definition);\n}\n\n\nSchema.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof Type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new YAMLException('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type) {\n    if (!(type instanceof Type)) {\n      throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type.loadKind && type.loadKind !== 'scalar') {\n      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type.multi) {\n      throw new YAMLException('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type) {\n    if (!(type instanceof Type)) {\n      throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nmodule.exports = Schema;\n","// Standard YAML's Core schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2804923\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, Core schema has no distinctions from JSON schema is JS-YAML.\n\n\n'use strict';\n\n\nmodule.exports = require('./json');\n","// JS-YAML's default schema for `safeLoad` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on standard YAML's Core schema and includes most of\n// extra types described at YAML tag repository. (http://yaml.org/type/)\n\n\n'use strict';\n\n\nmodule.exports = require('./core').extend({\n  implicit: [\n    require('../type/timestamp'),\n    require('../type/merge')\n  ],\n  explicit: [\n    require('../type/binary'),\n    require('../type/omap'),\n    require('../type/pairs'),\n    require('../type/set')\n  ]\n});\n","// Standard YAML's Failsafe schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2802346\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  explicit: [\n    require('../type/str'),\n    require('../type/seq'),\n    require('../type/map')\n  ]\n});\n","// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nmodule.exports = require('./failsafe').extend({\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n","'use strict';\n\n\nvar common = require('./common');\n\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nmodule.exports = makeSnippet;\n","'use strict';\n\nvar YAMLException = require('./exception');\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options       = options; // keep original options in case user wants to extend this type later\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nmodule.exports = Type;\n","'use strict';\n\n/*eslint-disable no-bitwise*/\n\n\nvar Type = require('../type');\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar _toString       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _toString = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n","'use strict'\n/*\n * merge2\n * https://github.com/teambition/merge2\n *\n * Copyright (c) 2014-2020 Teambition\n * Licensed under the MIT license.\n */\nconst Stream = require('stream')\nconst PassThrough = Stream.PassThrough\nconst slice = Array.prototype.slice\n\nmodule.exports = merge2\n\nfunction merge2 () {\n  const streamsQueue = []\n  const args = slice.call(arguments)\n  let merging = false\n  let options = args[args.length - 1]\n\n  if (options && !Array.isArray(options) && options.pipe == null) {\n    args.pop()\n  } else {\n    options = {}\n  }\n\n  const doEnd = options.end !== false\n  const doPipeError = options.pipeError === true\n  if (options.objectMode == null) {\n    options.objectMode = true\n  }\n  if (options.highWaterMark == null) {\n    options.highWaterMark = 64 * 1024\n  }\n  const mergedStream = PassThrough(options)\n\n  function addStream () {\n    for (let i = 0, len = arguments.length; i < len; i++) {\n      streamsQueue.push(pauseStreams(arguments[i], options))\n    }\n    mergeStream()\n    return this\n  }\n\n  function mergeStream () {\n    if (merging) {\n      return\n    }\n    merging = true\n\n    let streams = streamsQueue.shift()\n    if (!streams) {\n      process.nextTick(endStream)\n      return\n    }\n    if (!Array.isArray(streams)) {\n      streams = [streams]\n    }\n\n    let pipesCount = streams.length + 1\n\n    function next () {\n      if (--pipesCount > 0) {\n        return\n      }\n      merging = false\n      mergeStream()\n    }\n\n    function pipe (stream) {\n      function onend () {\n        stream.removeListener('merge2UnpipeEnd', onend)\n        stream.removeListener('end', onend)\n        if (doPipeError) {\n          stream.removeListener('error', onerror)\n        }\n        next()\n      }\n      function onerror (err) {\n        mergedStream.emit('error', err)\n      }\n      // skip ended stream\n      if (stream._readableState.endEmitted) {\n        return next()\n      }\n\n      stream.on('merge2UnpipeEnd', onend)\n      stream.on('end', onend)\n\n      if (doPipeError) {\n        stream.on('error', onerror)\n      }\n\n      stream.pipe(mergedStream, { end: false })\n      // compatible for old stream\n      stream.resume()\n    }\n\n    for (let i = 0; i < streams.length; i++) {\n      pipe(streams[i])\n    }\n\n    next()\n  }\n\n  function endStream () {\n    merging = false\n    // emit 'queueDrain' when all streams merged.\n    mergedStream.emit('queueDrain')\n    if (doEnd) {\n      mergedStream.end()\n    }\n  }\n\n  mergedStream.setMaxListeners(0)\n  mergedStream.add = addStream\n  mergedStream.on('unpipe', function (stream) {\n    stream.emit('merge2UnpipeEnd')\n  })\n\n  if (args.length) {\n    addStream.apply(null, args)\n  }\n  return mergedStream\n}\n\n// check and pause streams for pipe.\nfunction pauseStreams (streams, options) {\n  if (!Array.isArray(streams)) {\n    // Backwards-compat with old-style streams\n    if (!streams._readableState && streams.pipe) {\n      streams = streams.pipe(PassThrough(options))\n    }\n    if (!streams._readableState || !streams.pause || !streams.pipe) {\n      throw new Error('Only readable stream can be merged.')\n    }\n    streams.pause()\n  } else {\n    for (let i = 0, len = streams.length; i < len; i++) {\n      streams[i] = pauseStreams(streams[i], options)\n    }\n  }\n  return streams\n}\n","'use strict';\n\nconst util = require('util');\nconst braces = require('braces');\nconst picomatch = require('picomatch');\nconst utils = require('picomatch/lib/utils');\nconst isEmptyString = val => val === '' || val === './';\n\n/**\n * Returns an array of strings that match one or more glob patterns.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm(list, patterns[, options]);\n *\n * console.log(mm(['a.js', 'a.txt'], ['*.js']));\n * //=> [ 'a.js' ]\n * ```\n * @param {String|Array<string>} `list` List of strings to match.\n * @param {String|Array<string>} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options)\n * @return {Array} Returns an array of matches\n * @summary false\n * @api public\n */\n\nconst micromatch = (list, patterns, options) => {\n  patterns = [].concat(patterns);\n  list = [].concat(list);\n\n  let omit = new Set();\n  let keep = new Set();\n  let items = new Set();\n  let negatives = 0;\n\n  let onResult = state => {\n    items.add(state.output);\n    if (options && options.onResult) {\n      options.onResult(state);\n    }\n  };\n\n  for (let i = 0; i < patterns.length; i++) {\n    let isMatch = picomatch(String(patterns[i]), { ...options, onResult }, true);\n    let negated = isMatch.state.negated || isMatch.state.negatedExtglob;\n    if (negated) negatives++;\n\n    for (let item of list) {\n      let matched = isMatch(item, true);\n\n      let match = negated ? !matched.isMatch : matched.isMatch;\n      if (!match) continue;\n\n      if (negated) {\n        omit.add(matched.output);\n      } else {\n        omit.delete(matched.output);\n        keep.add(matched.output);\n      }\n    }\n  }\n\n  let result = negatives === patterns.length ? [...items] : [...keep];\n  let matches = result.filter(item => !omit.has(item));\n\n  if (options && matches.length === 0) {\n    if (options.failglob === true) {\n      throw new Error(`No matches found for \"${patterns.join(', ')}\"`);\n    }\n\n    if (options.nonull === true || options.nullglob === true) {\n      return options.unescape ? patterns.map(p => p.replace(/\\\\/g, '')) : patterns;\n    }\n  }\n\n  return matches;\n};\n\n/**\n * Backwards compatibility\n */\n\nmicromatch.match = micromatch;\n\n/**\n * Returns a matcher function from the given glob `pattern` and `options`.\n * The returned function takes a string to match as its only argument and returns\n * true if the string is a match.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.matcher(pattern[, options]);\n *\n * const isMatch = mm.matcher('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @param {String} `pattern` Glob pattern\n * @param {Object} `options`\n * @return {Function} Returns a matcher function.\n * @api public\n */\n\nmicromatch.matcher = (pattern, options) => picomatch(pattern, options);\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.isMatch(string, patterns[, options]);\n *\n * console.log(mm.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(mm.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String} `str` The string to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `[options]` See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\nmicromatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Backwards compatibility\n */\n\nmicromatch.any = micromatch.isMatch;\n\n/**\n * Returns a list of strings that _**do not match any**_ of the given `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.not(list, patterns[, options]);\n *\n * console.log(mm.not(['a.a', 'b.b', 'c.c'], '*.a'));\n * //=> ['b.b', 'c.c']\n * ```\n * @param {Array} `list` Array of strings to match.\n * @param {String|Array} `patterns` One or more glob pattern to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Array} Returns an array of strings that **do not match** the given patterns.\n * @api public\n */\n\nmicromatch.not = (list, patterns, options = {}) => {\n  patterns = [].concat(patterns).map(String);\n  let result = new Set();\n  let items = [];\n\n  let onResult = state => {\n    if (options.onResult) options.onResult(state);\n    items.push(state.output);\n  };\n\n  let matches = new Set(micromatch(list, patterns, { ...options, onResult }));\n\n  for (let item of items) {\n    if (!matches.has(item)) {\n      result.add(item);\n    }\n  }\n  return [...result];\n};\n\n/**\n * Returns true if the given `string` contains the given pattern. Similar\n * to [.isMatch](#isMatch) but the pattern can match any part of the string.\n *\n * ```js\n * var mm = require('micromatch');\n * // mm.contains(string, pattern[, options]);\n *\n * console.log(mm.contains('aa/bb/cc', '*b'));\n * //=> true\n * console.log(mm.contains('aa/bb/cc', '*d'));\n * //=> false\n * ```\n * @param {String} `str` The string to match.\n * @param {String|Array} `patterns` Glob pattern to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any of the patterns matches any part of `str`.\n * @api public\n */\n\nmicromatch.contains = (str, pattern, options) => {\n  if (typeof str !== 'string') {\n    throw new TypeError(`Expected a string: \"${util.inspect(str)}\"`);\n  }\n\n  if (Array.isArray(pattern)) {\n    return pattern.some(p => micromatch.contains(str, p, options));\n  }\n\n  if (typeof pattern === 'string') {\n    if (isEmptyString(str) || isEmptyString(pattern)) {\n      return false;\n    }\n\n    if (str.includes(pattern) || (str.startsWith('./') && str.slice(2).includes(pattern))) {\n      return true;\n    }\n  }\n\n  return micromatch.isMatch(str, pattern, { ...options, contains: true });\n};\n\n/**\n * Filter the keys of the given object with the given `glob` pattern\n * and `options`. Does not attempt to match nested keys. If you need this feature,\n * use [glob-object][] instead.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.matchKeys(object, patterns[, options]);\n *\n * const obj = { aa: 'a', ab: 'b', ac: 'c' };\n * console.log(mm.matchKeys(obj, '*b'));\n * //=> { ab: 'b' }\n * ```\n * @param {Object} `object` The object with keys to filter.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Object} Returns an object with only keys that match the given patterns.\n * @api public\n */\n\nmicromatch.matchKeys = (obj, patterns, options) => {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('Expected the first argument to be an object');\n  }\n  let keys = micromatch(Object.keys(obj), patterns, options);\n  let res = {};\n  for (let key of keys) res[key] = obj[key];\n  return res;\n};\n\n/**\n * Returns true if some of the strings in the given `list` match any of the given glob `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.some(list, patterns[, options]);\n *\n * console.log(mm.some(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n * // true\n * console.log(mm.some(['foo.js'], ['*.js', '!foo.js']));\n * // false\n * ```\n * @param {String|Array} `list` The string or array of strings to test. Returns as soon as the first match is found.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any `patterns` matches any of the strings in `list`\n * @api public\n */\n\nmicromatch.some = (list, patterns, options) => {\n  let items = [].concat(list);\n\n  for (let pattern of [].concat(patterns)) {\n    let isMatch = picomatch(String(pattern), options);\n    if (items.some(item => isMatch(item))) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Returns true if every string in the given `list` matches\n * any of the given glob `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.every(list, patterns[, options]);\n *\n * console.log(mm.every('foo.js', ['foo.js']));\n * // true\n * console.log(mm.every(['foo.js', 'bar.js'], ['*.js']));\n * // true\n * console.log(mm.every(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n * // false\n * console.log(mm.every(['foo.js'], ['*.js', '!foo.js']));\n * // false\n * ```\n * @param {String|Array} `list` The string or array of strings to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if all `patterns` matches all of the strings in `list`\n * @api public\n */\n\nmicromatch.every = (list, patterns, options) => {\n  let items = [].concat(list);\n\n  for (let pattern of [].concat(patterns)) {\n    let isMatch = picomatch(String(pattern), options);\n    if (!items.every(item => isMatch(item))) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Returns true if **all** of the given `patterns` match\n * the specified string.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.all(string, patterns[, options]);\n *\n * console.log(mm.all('foo.js', ['foo.js']));\n * // true\n *\n * console.log(mm.all('foo.js', ['*.js', '!foo.js']));\n * // false\n *\n * console.log(mm.all('foo.js', ['*.js', 'foo.js']));\n * // true\n *\n * console.log(mm.all('foo.js', ['*.js', 'f*', '*o*', '*o.js']));\n * // true\n * ```\n * @param {String|Array} `str` The string to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\nmicromatch.all = (str, patterns, options) => {\n  if (typeof str !== 'string') {\n    throw new TypeError(`Expected a string: \"${util.inspect(str)}\"`);\n  }\n\n  return [].concat(patterns).every(p => picomatch(p, options)(str));\n};\n\n/**\n * Returns an array of matches captured by `pattern` in `string, or `null` if the pattern did not match.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.capture(pattern, string[, options]);\n *\n * console.log(mm.capture('test/*.js', 'test/foo.js'));\n * //=> ['foo']\n * console.log(mm.capture('test/*.js', 'foo/bar.css'));\n * //=> null\n * ```\n * @param {String} `glob` Glob pattern to use for matching.\n * @param {String} `input` String to match\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Array|null} Returns an array of captures if the input matches the glob pattern, otherwise `null`.\n * @api public\n */\n\nmicromatch.capture = (glob, input, options) => {\n  let posix = utils.isWindows(options);\n  let regex = picomatch.makeRe(String(glob), { ...options, capture: true });\n  let match = regex.exec(posix ? utils.toPosixSlashes(input) : input);\n\n  if (match) {\n    return match.slice(1).map(v => v === void 0 ? '' : v);\n  }\n};\n\n/**\n * Create a regular expression from the given glob `pattern`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.makeRe(pattern[, options]);\n *\n * console.log(mm.makeRe('*.js'));\n * //=> /^(?:(\\.[\\\\\\/])?(?!\\.)(?=.)[^\\/]*?\\.js)$/\n * ```\n * @param {String} `pattern` A glob pattern to convert to regex.\n * @param {Object} `options`\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\nmicromatch.makeRe = (...args) => picomatch.makeRe(...args);\n\n/**\n * Scan a glob pattern to separate the pattern into segments. Used\n * by the [split](#split) method.\n *\n * ```js\n * const mm = require('micromatch');\n * const state = mm.scan(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\nmicromatch.scan = (...args) => picomatch.scan(...args);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const mm = require('micromatch');\n * const state = mm.parse(pattern[, options]);\n * ```\n * @param {String} `glob`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as regex source string.\n * @api public\n */\n\nmicromatch.parse = (patterns, options) => {\n  let res = [];\n  for (let pattern of [].concat(patterns || [])) {\n    for (let str of braces(String(pattern), options)) {\n      res.push(picomatch.parse(str, options));\n    }\n  }\n  return res;\n};\n\n/**\n * Process the given brace `pattern`.\n *\n * ```js\n * const { braces } = require('micromatch');\n * console.log(braces('foo/{a,b,c}/bar'));\n * //=> [ 'foo/(a|b|c)/bar' ]\n *\n * console.log(braces('foo/{a,b,c}/bar', { expand: true }));\n * //=> [ 'foo/a/bar', 'foo/b/bar', 'foo/c/bar' ]\n * ```\n * @param {String} `pattern` String with brace pattern to process.\n * @param {Object} `options` Any [options](#options) to change how expansion is performed. See the [braces][] library for all available options.\n * @return {Array}\n * @api public\n */\n\nmicromatch.braces = (pattern, options) => {\n  if (typeof pattern !== 'string') throw new TypeError('Expected a string');\n  if ((options && options.nobrace === true) || !/\\{.*\\}/.test(pattern)) {\n    return [pattern];\n  }\n  return braces(pattern, options);\n};\n\n/**\n * Expand braces\n */\n\nmicromatch.braceExpand = (pattern, options) => {\n  if (typeof pattern !== 'string') throw new TypeError('Expected a string');\n  return micromatch.braces(pattern, { ...options, expand: true });\n};\n\n/**\n * Expose micromatch\n */\n\nmodule.exports = micromatch;\n","/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n","/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n","'use strict';\nconst {promisify} = require('util');\nconst fs = require('fs');\n\nasync function isType(fsStatType, statsMethodName, filePath) {\n\tif (typeof filePath !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got ${typeof filePath}`);\n\t}\n\n\ttry {\n\t\tconst stats = await promisify(fs[fsStatType])(filePath);\n\t\treturn stats[statsMethodName]();\n\t} catch (error) {\n\t\tif (error.code === 'ENOENT') {\n\t\t\treturn false;\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n\nfunction isTypeSync(fsStatType, statsMethodName, filePath) {\n\tif (typeof filePath !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got ${typeof filePath}`);\n\t}\n\n\ttry {\n\t\treturn fs[fsStatType](filePath)[statsMethodName]();\n\t} catch (error) {\n\t\tif (error.code === 'ENOENT') {\n\t\t\treturn false;\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n\nexports.isFile = isType.bind(null, 'stat', 'isFile');\nexports.isDirectory = isType.bind(null, 'stat', 'isDirectory');\nexports.isSymlink = isType.bind(null, 'lstat', 'isSymbolicLink');\nexports.isFileSync = isTypeSync.bind(null, 'statSync', 'isFile');\nexports.isDirectorySync = isTypeSync.bind(null, 'statSync', 'isDirectory');\nexports.isSymlinkSync = isTypeSync.bind(null, 'lstatSync', 'isSymbolicLink');\n","'use strict';\n\nmodule.exports = require('./lib/picomatch');\n","'use strict';\n\nconst path = require('path');\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR = `${QMARK}*?`;\n\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR,\n  START_ANCHOR\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE,\n\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n\n  // Digits\n  CHAR_0: 48, /* 0 */\n  CHAR_9: 57, /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65, /* A */\n  CHAR_LOWERCASE_A: 97, /* a */\n  CHAR_UPPERCASE_Z: 90, /* Z */\n  CHAR_LOWERCASE_Z: 122, /* z */\n\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\n\n  CHAR_ASTERISK: 42, /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38, /* & */\n  CHAR_AT: 64, /* @ */\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\n  CHAR_COLON: 58, /* : */\n  CHAR_COMMA: 44, /* , */\n  CHAR_DOT: 46, /* . */\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\n  CHAR_EQUAL: 61, /* = */\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\n  CHAR_FORM_FEED: 12, /* \\f */\n  CHAR_FORWARD_SLASH: 47, /* / */\n  CHAR_GRAVE_ACCENT: 96, /* ` */\n  CHAR_HASH: 35, /* # */\n  CHAR_HYPHEN_MINUS: 45, /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\n  CHAR_LINE_FEED: 10, /* \\n */\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\n  CHAR_PERCENT: 37, /* % */\n  CHAR_PLUS: 43, /* + */\n  CHAR_QUESTION_MARK: 63, /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\n  CHAR_SEMICOLON: 59, /* ; */\n  CHAR_SINGLE_QUOTE: 39, /* ' */\n  CHAR_SPACE: 32, /*   */\n  CHAR_TAB: 9, /* \\t */\n  CHAR_UNDERSCORE: 95, /* _ */\n  CHAR_VERTICAL_LINE: 124, /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\n\n  SEP: path.sep,\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\n      '+': { type: 'plus', open: '(?:', close: ')+' },\n      '*': { type: 'star', open: '(?:', close: ')*' },\n      '@': { type: 'at', open: '(?:', close: ')' }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n","'use strict';\n\nconst constants = require('./constants');\nconst utils = require('./utils');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n\n  args.sort();\n  const value = `[${args.join('-')}]`;\n\n  try {\n    /* eslint-disable-next-line no-new */\n    new RegExp(value);\n  } catch (ex) {\n    return args.map(v => utils.escapeRegex(v)).join('..');\n  }\n\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\n  const tokens = [bos];\n\n  const capture = opts.capture ? '' : '?:';\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const PLATFORM_CHARS = constants.globChars(win32);\n  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\n\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n\n  const globstar = opts => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n\n  input = utils.removePrefix(input, state);\n  len = input.length;\n\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = (n = 1) => input[state.index + n];\n  const advance = state.advance = () => input[++state.index] || '';\n  const remaining = () => input.slice(state.index + 1);\n  const consume = (value = '', num = 0) => {\n    state.consumed += value;\n    state.index += num;\n  };\n\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n\n  const negate = () => {\n    let count = 1;\n\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n\n    if (count % 2 === 0) {\n      return false;\n    }\n\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\n\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n\n    if (extglobs.length && tok.type !== 'paren') {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.value += tok.value;\n      prev.output = (prev.output || '') + tok.value;\n      return;\n    }\n\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n\n  const extglobOpen = (type, value) => {\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\n\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n\n    increment('parens');\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\n    push({ type: 'paren', extglob: true, value: advance(), output });\n    extglobs.push(token);\n  };\n\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n    let rest;\n\n    if (token.type === 'negate') {\n      let extglobStar = star;\n\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n\n      if (token.inner.includes('*') && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\n        // Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.\n        // In this case, we need to parse the string and use it in the output of the original pattern.\n        // Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.\n        //\n        // Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.\n        const expression = parse(rest, { ...options, fastpaths: false }).output;\n\n        output = token.close = `)${expression})${extglobStar})`;\n      }\n\n      if (token.prev.type === 'bos') {\n        state.negatedExtglob = true;\n      }\n    }\n\n    push({ type: 'paren', extglob: true, value, output });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\n        });\n      }\n    }\n\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n\n    state.output = utils.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n\n      if (next === '.' || next === ';') {\n        continue;\n      }\n\n      if (!next) {\n        value += '\\\\';\n        push({ type: 'text', value });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n\n      if (opts.unescape === true) {\n        value = advance();\n      } else {\n        value += advance();\n      }\n\n      if (state.brackets === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\n        value = `\\\\${value}`;\n      }\n\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils.escapeRegex(value);\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({ type: 'text', value });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({ type: 'paren', value });\n      continue;\n    }\n\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError('opening', '('));\n      }\n\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('closing', ']'));\n        }\n\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n\n      push({ type: 'bracket', value });\n      continue;\n    }\n\n    if (value === ']') {\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('opening', '['));\n        }\n\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      decrement('brackets');\n\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n\n      prev.value += value;\n      append({ value });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\n        continue;\n      }\n\n      const escaped = utils.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n\n      braces.push(open);\n      push(open);\n      continue;\n    }\n\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n\n      if (opts.nobrace === true || !brace) {\n        push({ type: 'text', value, output: value });\n        continue;\n      }\n\n      let output = ')';\n\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += (t.output || t.value);\n        }\n      }\n\n      push({ type: 'brace', value, output });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n\n      push({ type: 'comma', value, output });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n\n      push({ type: 'slash', value, output: SLASH_LITERAL });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({ type: 'text', value, output: DOT_LITERAL });\n        continue;\n      }\n\n      push({ type: 'dot', value, output: DOT_LITERAL });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n\n        if (next === '<' && !utils.supportsLookbehinds()) {\n          throw new Error('Node.js v10 or higher is required for regex lookbehinds');\n        }\n\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\n          output = `\\\\${value}`;\n        }\n\n        push({ type: 'text', value, output });\n        continue;\n      }\n\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\n        continue;\n      }\n\n      push({ type: 'qmark', value, output: QMARK });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n\n      if ((prev && prev.value === '(') || opts.regex === false) {\n        push({ type: 'plus', value, output: PLUS_LITERAL });\n        continue;\n      }\n\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\n        push({ type: 'plus', value });\n        continue;\n      }\n\n      push({ type: 'plus', value: PLUS_LITERAL });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({ type: 'at', extglob: true, value, output: '' });\n        continue;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n\n        consume(value + advance());\n\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    const token = { type: 'star', value, output: star };\n\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n\n      if (peek() !== '*') {\n        state.output += ONE_CHAR;\n        prev.output += ONE_CHAR;\n      }\n    }\n\n    push(token);\n  }\n\n  while (state.brackets > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\n    state.output = utils.escapeLast(state.output, '[');\n    decrement('brackets');\n  }\n\n  while (state.parens > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\n    state.output = utils.escapeLast(state.output, '(');\n    decrement('parens');\n  }\n\n  while (state.braces > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\n    state.output = utils.escapeLast(state.output, '{');\n    decrement('braces');\n  }\n\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\n    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\n  }\n\n  // rebuild the output if we had to backtrack at any point\n  if (state.backtrack === true) {\n    state.output = '';\n\n    for (const token of state.tokens) {\n      state.output += token.output != null ? token.output : token.value;\n\n      if (token.suffix) {\n        state.output += token.suffix;\n      }\n    }\n  }\n\n  return state;\n};\n\n/**\n * Fast paths for creating regular expressions for common glob patterns.\n * This can significantly speed up processing and has very little downside\n * impact when none of the fast paths match.\n */\n\nparse.fastpaths = (input, options) => {\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  const len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  input = REPLACEMENTS[input] || input;\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const {\n    DOT_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOTS,\n    NO_DOTS_SLASH,\n    STAR,\n    START_ANCHOR\n  } = constants.globChars(win32);\n\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\n  const capture = opts.capture ? '' : '?:';\n  const state = { negated: false, prefix: '' };\n  let star = opts.bash === true ? '.*?' : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  const globstar = opts => {\n    if (opts.noglobstar === true) return star;\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const create = str => {\n    switch (str) {\n      case '*':\n        return `${nodot}${ONE_CHAR}${star}`;\n\n      case '.*':\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*.*':\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*/*':\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\n\n      case '**':\n        return nodot + globstar(opts);\n\n      case '**/*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\n\n      case '**/*.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '**/.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      default: {\n        const match = /^(.*?)\\.(\\w+)$/.exec(str);\n        if (!match) return;\n\n        const source = create(match[1]);\n        if (!source) return;\n\n        return source + DOT_LITERAL + match[2];\n      }\n    }\n  };\n\n  const output = utils.removePrefix(input, state);\n  let source = create(output);\n\n  if (source && opts.strictSlashes !== true) {\n    source += `${SLASH_LITERAL}?`;\n  }\n\n  return source;\n};\n\nmodule.exports = parse;\n","'use strict';\n\nconst path = require('path');\nconst scan = require('./scan');\nconst parse = require('./parse');\nconst utils = require('./utils');\nconst constants = require('./constants');\nconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\n\n/**\n * Creates a matcher function from one or more glob patterns. The\n * returned function takes a string to match as its first argument,\n * and returns true if the string is a match. The returned matcher\n * function also takes a boolean as the second argument that, when true,\n * returns an object with additional information.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch(glob[, options]);\n *\n * const isMatch = picomatch('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @name picomatch\n * @param {String|Array} `globs` One or more glob patterns.\n * @param {Object=} `options`\n * @return {Function=} Returns a matcher function.\n * @api public\n */\n\nconst picomatch = (glob, options, returnState = false) => {\n  if (Array.isArray(glob)) {\n    const fns = glob.map(input => picomatch(input, options, returnState));\n    const arrayMatcher = str => {\n      for (const isMatch of fns) {\n        const state = isMatch(str);\n        if (state) return state;\n      }\n      return false;\n    };\n    return arrayMatcher;\n  }\n\n  const isState = isObject(glob) && glob.tokens && glob.input;\n\n  if (glob === '' || (typeof glob !== 'string' && !isState)) {\n    throw new TypeError('Expected pattern to be a non-empty string');\n  }\n\n  const opts = options || {};\n  const posix = utils.isWindows(options);\n  const regex = isState\n    ? picomatch.compileRe(glob, options)\n    : picomatch.makeRe(glob, options, false, true);\n\n  const state = regex.state;\n  delete regex.state;\n\n  let isIgnored = () => false;\n  if (opts.ignore) {\n    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\n    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\n  }\n\n  const matcher = (input, returnObject = false) => {\n    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });\n    const result = { glob, state, regex, posix, input, output, match, isMatch };\n\n    if (typeof opts.onResult === 'function') {\n      opts.onResult(result);\n    }\n\n    if (isMatch === false) {\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (isIgnored(input)) {\n      if (typeof opts.onIgnore === 'function') {\n        opts.onIgnore(result);\n      }\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (typeof opts.onMatch === 'function') {\n      opts.onMatch(result);\n    }\n    return returnObject ? result : true;\n  };\n\n  if (returnState) {\n    matcher.state = state;\n  }\n\n  return matcher;\n};\n\n/**\n * Test `input` with the given `regex`. This is used by the main\n * `picomatch()` function to test the input string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.test(input, regex[, options]);\n *\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp} `regex`\n * @return {Object} Returns an object with matching info.\n * @api public\n */\n\npicomatch.test = (input, regex, options, { glob, posix } = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected input to be a string');\n  }\n\n  if (input === '') {\n    return { isMatch: false, output: '' };\n  }\n\n  const opts = options || {};\n  const format = opts.format || (posix ? utils.toPosixSlashes : null);\n  let match = input === glob;\n  let output = (match && format) ? format(input) : input;\n\n  if (match === false) {\n    output = format ? format(input) : input;\n    match = output === glob;\n  }\n\n  if (match === false || opts.capture === true) {\n    if (opts.matchBase === true || opts.basename === true) {\n      match = picomatch.matchBase(input, regex, options, posix);\n    } else {\n      match = regex.exec(output);\n    }\n  }\n\n  return { isMatch: Boolean(match), match, output };\n};\n\n/**\n * Match the basename of a filepath.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.matchBase(input, glob[, options]);\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\n * @return {Boolean}\n * @api public\n */\n\npicomatch.matchBase = (input, glob, options, posix = utils.isWindows(options)) => {\n  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\n  return regex.test(path.basename(input));\n};\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.isMatch(string, patterns[, options]);\n *\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String|Array} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\npicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const result = picomatch.parse(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\n * @api public\n */\n\npicomatch.parse = (pattern, options) => {\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\n  return parse(pattern, { ...options, fastpaths: false });\n};\n\n/**\n * Scan a glob pattern to separate the pattern into segments.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.scan(input[, options]);\n *\n * const result = picomatch.scan('!./foo/*.js');\n * console.log(result);\n * { prefix: '!./',\n *   input: '!./foo/*.js',\n *   start: 3,\n *   base: 'foo',\n *   glob: '*.js',\n *   isBrace: false,\n *   isBracket: false,\n *   isGlob: true,\n *   isExtglob: false,\n *   isGlobstar: false,\n *   negated: true }\n * ```\n * @param {String} `input` Glob pattern to scan.\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\npicomatch.scan = (input, options) => scan(input, options);\n\n/**\n * Compile a regular expression from the `state` object returned by the\n * [parse()](#parse) method.\n *\n * @param {Object} `state`\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.\n * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.\n * @return {RegExp}\n * @api public\n */\n\npicomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {\n  if (returnOutput === true) {\n    return state.output;\n  }\n\n  const opts = options || {};\n  const prepend = opts.contains ? '' : '^';\n  const append = opts.contains ? '' : '$';\n\n  let source = `${prepend}(?:${state.output})${append}`;\n  if (state && state.negated === true) {\n    source = `^(?!${source}).*$`;\n  }\n\n  const regex = picomatch.toRegex(source, options);\n  if (returnState === true) {\n    regex.state = state;\n  }\n\n  return regex;\n};\n\n/**\n * Create a regular expression from a parsed glob pattern.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const state = picomatch.parse('*.js');\n * // picomatch.compileRe(state[, options]);\n *\n * console.log(picomatch.compileRe(state));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `state` The object returned from the `.parse` method.\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.\n * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\npicomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {\n  if (!input || typeof input !== 'string') {\n    throw new TypeError('Expected a non-empty string');\n  }\n\n  let parsed = { negated: false, fastpaths: true };\n\n  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\n    parsed.output = parse.fastpaths(input, options);\n  }\n\n  if (!parsed.output) {\n    parsed = parse(input, options);\n  }\n\n  return picomatch.compileRe(parsed, options, returnOutput, returnState);\n};\n\n/**\n * Create a regular expression from the given regex source string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.toRegex(source[, options]);\n *\n * const { output } = picomatch.parse('*.js');\n * console.log(picomatch.toRegex(output));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `source` Regular expression source string.\n * @param {Object} `options`\n * @return {RegExp}\n * @api public\n */\n\npicomatch.toRegex = (source, options) => {\n  try {\n    const opts = options || {};\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\n  } catch (err) {\n    if (options && options.debug === true) throw err;\n    return /$^/;\n  }\n};\n\n/**\n * Picomatch constants.\n * @return {Object}\n */\n\npicomatch.constants = constants;\n\n/**\n * Expose \"picomatch\"\n */\n\nmodule.exports = picomatch;\n","'use strict';\n\nconst utils = require('./utils');\nconst {\n  CHAR_ASTERISK,             /* * */\n  CHAR_AT,                   /* @ */\n  CHAR_BACKWARD_SLASH,       /* \\ */\n  CHAR_COMMA,                /* , */\n  CHAR_DOT,                  /* . */\n  CHAR_EXCLAMATION_MARK,     /* ! */\n  CHAR_FORWARD_SLASH,        /* / */\n  CHAR_LEFT_CURLY_BRACE,     /* { */\n  CHAR_LEFT_PARENTHESES,     /* ( */\n  CHAR_LEFT_SQUARE_BRACKET,  /* [ */\n  CHAR_PLUS,                 /* + */\n  CHAR_QUESTION_MARK,        /* ? */\n  CHAR_RIGHT_CURLY_BRACE,    /* } */\n  CHAR_RIGHT_PARENTHESES,    /* ) */\n  CHAR_RIGHT_SQUARE_BRACKET  /* ] */\n} = require('./constants');\n\nconst isPathSeparator = code => {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n};\n\nconst depth = token => {\n  if (token.isPrefix !== true) {\n    token.depth = token.isGlobstar ? Infinity : 1;\n  }\n};\n\n/**\n * Quickly scans a glob pattern and returns an object with a handful of\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\n * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not\n * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).\n *\n * ```js\n * const pm = require('picomatch');\n * console.log(pm.scan('foo/bar/*.js'));\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {Object} Returns an object with tokens and regex source string.\n * @api public\n */\n\nconst scan = (input, options) => {\n  const opts = options || {};\n\n  const length = input.length - 1;\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\n  const slashes = [];\n  const tokens = [];\n  const parts = [];\n\n  let str = input;\n  let index = -1;\n  let start = 0;\n  let lastIndex = 0;\n  let isBrace = false;\n  let isBracket = false;\n  let isGlob = false;\n  let isExtglob = false;\n  let isGlobstar = false;\n  let braceEscaped = false;\n  let backslashes = false;\n  let negated = false;\n  let negatedExtglob = false;\n  let finished = false;\n  let braces = 0;\n  let prev;\n  let code;\n  let token = { value: '', depth: 0, isGlob: false };\n\n  const eos = () => index >= length;\n  const peek = () => str.charCodeAt(index + 1);\n  const advance = () => {\n    prev = code;\n    return str.charCodeAt(++index);\n  };\n\n  while (index < length) {\n    code = advance();\n    let next;\n\n    if (code === CHAR_BACKWARD_SLASH) {\n      backslashes = token.backslashes = true;\n      code = advance();\n\n      if (code === CHAR_LEFT_CURLY_BRACE) {\n        braceEscaped = true;\n      }\n      continue;\n    }\n\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\n      braces++;\n\n      while (eos() !== true && (code = advance())) {\n        if (code === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (code === CHAR_LEFT_CURLY_BRACE) {\n          braces++;\n          continue;\n        }\n\n        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (braceEscaped !== true && code === CHAR_COMMA) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (code === CHAR_RIGHT_CURLY_BRACE) {\n          braces--;\n\n          if (braces === 0) {\n            braceEscaped = false;\n            isBrace = token.isBrace = true;\n            finished = true;\n            break;\n          }\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (code === CHAR_FORWARD_SLASH) {\n      slashes.push(index);\n      tokens.push(token);\n      token = { value: '', depth: 0, isGlob: false };\n\n      if (finished === true) continue;\n      if (prev === CHAR_DOT && index === (start + 1)) {\n        start += 2;\n        continue;\n      }\n\n      lastIndex = index + 1;\n      continue;\n    }\n\n    if (opts.noext !== true) {\n      const isExtglobChar = code === CHAR_PLUS\n        || code === CHAR_AT\n        || code === CHAR_ASTERISK\n        || code === CHAR_QUESTION_MARK\n        || code === CHAR_EXCLAMATION_MARK;\n\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\n        isGlob = token.isGlob = true;\n        isExtglob = token.isExtglob = true;\n        finished = true;\n        if (code === CHAR_EXCLAMATION_MARK && index === start) {\n          negatedExtglob = true;\n        }\n\n        if (scanToEnd === true) {\n          while (eos() !== true && (code = advance())) {\n            if (code === CHAR_BACKWARD_SLASH) {\n              backslashes = token.backslashes = true;\n              code = advance();\n              continue;\n            }\n\n            if (code === CHAR_RIGHT_PARENTHESES) {\n              isGlob = token.isGlob = true;\n              finished = true;\n              break;\n            }\n          }\n          continue;\n        }\n        break;\n      }\n    }\n\n    if (code === CHAR_ASTERISK) {\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_QUESTION_MARK) {\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_LEFT_SQUARE_BRACKET) {\n      while (eos() !== true && (next = advance())) {\n        if (next === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          isBracket = token.isBracket = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n          break;\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\n      negated = token.negated = true;\n      start++;\n      continue;\n    }\n\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\n      isGlob = token.isGlob = true;\n\n      if (scanToEnd === true) {\n        while (eos() !== true && (code = advance())) {\n          if (code === CHAR_LEFT_PARENTHESES) {\n            backslashes = token.backslashes = true;\n            code = advance();\n            continue;\n          }\n\n          if (code === CHAR_RIGHT_PARENTHESES) {\n            finished = true;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    if (isGlob === true) {\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n  }\n\n  if (opts.noext === true) {\n    isExtglob = false;\n    isGlob = false;\n  }\n\n  let base = str;\n  let prefix = '';\n  let glob = '';\n\n  if (start > 0) {\n    prefix = str.slice(0, start);\n    str = str.slice(start);\n    lastIndex -= start;\n  }\n\n  if (base && isGlob === true && lastIndex > 0) {\n    base = str.slice(0, lastIndex);\n    glob = str.slice(lastIndex);\n  } else if (isGlob === true) {\n    base = '';\n    glob = str;\n  } else {\n    base = str;\n  }\n\n  if (base && base !== '' && base !== '/' && base !== str) {\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\n      base = base.slice(0, -1);\n    }\n  }\n\n  if (opts.unescape === true) {\n    if (glob) glob = utils.removeBackslashes(glob);\n\n    if (base && backslashes === true) {\n      base = utils.removeBackslashes(base);\n    }\n  }\n\n  const state = {\n    prefix,\n    input,\n    start,\n    base,\n    glob,\n    isBrace,\n    isBracket,\n    isGlob,\n    isExtglob,\n    isGlobstar,\n    negated,\n    negatedExtglob\n  };\n\n  if (opts.tokens === true) {\n    state.maxDepth = 0;\n    if (!isPathSeparator(code)) {\n      tokens.push(token);\n    }\n    state.tokens = tokens;\n  }\n\n  if (opts.parts === true || opts.tokens === true) {\n    let prevIndex;\n\n    for (let idx = 0; idx < slashes.length; idx++) {\n      const n = prevIndex ? prevIndex + 1 : start;\n      const i = slashes[idx];\n      const value = input.slice(n, i);\n      if (opts.tokens) {\n        if (idx === 0 && start !== 0) {\n          tokens[idx].isPrefix = true;\n          tokens[idx].value = prefix;\n        } else {\n          tokens[idx].value = value;\n        }\n        depth(tokens[idx]);\n        state.maxDepth += tokens[idx].depth;\n      }\n      if (idx !== 0 || value !== '') {\n        parts.push(value);\n      }\n      prevIndex = i;\n    }\n\n    if (prevIndex && prevIndex + 1 < input.length) {\n      const value = input.slice(prevIndex + 1);\n      parts.push(value);\n\n      if (opts.tokens) {\n        tokens[tokens.length - 1].value = value;\n        depth(tokens[tokens.length - 1]);\n        state.maxDepth += tokens[tokens.length - 1].depth;\n      }\n    }\n\n    state.slashes = slashes;\n    state.parts = parts;\n  }\n\n  return state;\n};\n\nmodule.exports = scan;\n","'use strict';\n\nconst path = require('path');\nconst win32 = process.platform === 'win32';\nconst {\n  REGEX_BACKSLASH,\n  REGEX_REMOVE_BACKSLASH,\n  REGEX_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_GLOBAL\n} = require('./constants');\n\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n\nexports.removeBackslashes = str => {\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n    return match === '\\\\' ? '' : match;\n  });\n};\n\nexports.supportsLookbehinds = () => {\n  const segs = process.version.slice(1).split('.').map(Number);\n  if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {\n    return true;\n  }\n  return false;\n};\n\nexports.isWindows = options => {\n  if (options && typeof options.windows === 'boolean') {\n    return options.windows;\n  }\n  return win32 === true || path.sep === '\\\\';\n};\n\nexports.escapeLast = (input, char, lastIdx) => {\n  const idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n};\n\nexports.removePrefix = (input, state = {}) => {\n  let output = input;\n  if (output.startsWith('./')) {\n    output = output.slice(2);\n    state.prefix = './';\n  }\n  return output;\n};\n\nexports.wrapOutput = (input, state = {}, options = {}) => {\n  const prepend = options.contains ? '' : '^';\n  const append = options.contains ? '' : '$';\n\n  let output = `${prepend}(?:${input})${append}`;\n  if (state.negated === true) {\n    output = `(?:^(?!${output}).*$)`;\n  }\n  return output;\n};\n","/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n","'use strict'\n\nfunction reusify (Constructor) {\n  var head = new Constructor()\n  var tail = head\n\n  function get () {\n    var current = head\n\n    if (current.next) {\n      head = current.next\n    } else {\n      head = new Constructor()\n      tail = head\n    }\n\n    current.next = null\n\n    return current\n  }\n\n  function release (obj) {\n    tail.next = obj\n    tail = obj\n  }\n\n  return {\n    get: get,\n    release: release\n  }\n}\n\nmodule.exports = reusify\n","/*! run-parallel. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = runParallel\n\nconst queueMicrotask = require('queue-microtask')\n\nfunction runParallel (tasks, cb) {\n  let results, pending, keys\n  let isSync = true\n\n  if (Array.isArray(tasks)) {\n    results = []\n    pending = tasks.length\n  } else {\n    keys = Object.keys(tasks)\n    results = {}\n    pending = keys.length\n  }\n\n  function done (err) {\n    function end () {\n      if (cb) cb(err, results)\n      cb = null\n    }\n    if (isSync) queueMicrotask(end)\n    else end()\n  }\n\n  function each (i, err, result) {\n    results[i] = result\n    if (--pending === 0 || err) {\n      done(err)\n    }\n  }\n\n  if (!pending) {\n    // empty\n    done(null)\n  } else if (keys) {\n    // object\n    keys.forEach(function (key) {\n      tasks[key](function (err, result) { each(key, err, result) })\n    })\n  } else {\n    // array\n    tasks.forEach(function (task, i) {\n      task(function (err, result) { each(i, err, result) })\n    })\n  }\n\n  isSync = false\n}\n","const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)(\\.[0-9]+([eE]\\-?[0-9]+)?|[0-9]+(\\.[0-9]+([eE]\\-?[0-9]+)?)?)$/;\n// const octRegex = /0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n    Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n    Number.parseFloat = window.parseFloat;\n}\n\n  \nconst consider = {\n    hex :  true,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true\n    //skipLike: /regex/\n};\n\nfunction toNumber(str, options = {}){\n    // const options = Object.assign({}, consider);\n    // if(opt.leadingZeros === false){\n    //     options.leadingZeros = false;\n    // }else if(opt.hex === false){\n    //     options.hex = false;\n    // }\n\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    // if(trimmedStr === \"0.0\") return 0;\n    // else if(trimmedStr === \"+0.0\") return 0;\n    // else if(trimmedStr === \"-0.0\") return -0;\n\n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return Number.parseInt(trimmedStr, 16);\n    // } else if (options.parseOct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        if(match){\n            const sign = match[1];\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            //trim ending zeros for floating number\n            \n            const eNotation = match[4] || match[6];\n            if(!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== \".\") return str; //-0123\n            else if(!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== \".\") return str; //0123\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const numStr = \"\" + num;\n                if(numStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(eNotation){ //given number has enotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    // const decimalPart = match[5].substr(1);\n                    // const intPart = trimmedStr.substr(0,trimmedStr.indexOf(\".\"));\n\n                    \n                    // const p = numStr.indexOf(\".\");\n                    // const givenIntPart = numStr.substr(0,p);\n                    // const givenDecPart = numStr.substr(p+1);\n                    if(numStr === \"0\" && (numTrimmedByZeros === \"\") ) return num; //0.0\n                    else if(numStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( sign && numStr === \"-\"+numTrimmedByZeros) return num;\n                    else return str;\n                }\n                \n                if(leadingZeros){\n                    // if(numTrimmedByZeros === numStr){\n                    //     if(options.leadingZeros) return num;\n                    //     else return str;\n                    // }else return str;\n                    if(numTrimmedByZeros === numStr) return num;\n                    else if(sign+numTrimmedByZeros === numStr) return num;\n                    else return str;\n                }\n\n                if(trimmedStr === numStr) return num;\n                else if(trimmedStr === sign+numStr) return num;\n                // else{\n                //     //number with +/- sign\n                //     trimmedStr.test(/[-+][0-9]);\n\n                // }\n                return str;\n            }\n            // else if(!eNotation && trimmedStr && trimmedStr !== Number(trimmedStr) ) return str;\n            \n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substr(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\nmodule.exports = toNumber\n","/*!\n * to-regex-range <https://github.com/micromatch/to-regex-range>\n *\n * Copyright (c) 2015-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nconst isNumber = require('is-number');\n\nconst toRegexRange = (min, max, options) => {\n  if (isNumber(min) === false) {\n    throw new TypeError('toRegexRange: expected the first argument to be a number');\n  }\n\n  if (max === void 0 || min === max) {\n    return String(min);\n  }\n\n  if (isNumber(max) === false) {\n    throw new TypeError('toRegexRange: expected the second argument to be a number.');\n  }\n\n  let opts = { relaxZeros: true, ...options };\n  if (typeof opts.strictZeros === 'boolean') {\n    opts.relaxZeros = opts.strictZeros === false;\n  }\n\n  let relax = String(opts.relaxZeros);\n  let shorthand = String(opts.shorthand);\n  let capture = String(opts.capture);\n  let wrap = String(opts.wrap);\n  let cacheKey = min + ':' + max + '=' + relax + shorthand + capture + wrap;\n\n  if (toRegexRange.cache.hasOwnProperty(cacheKey)) {\n    return toRegexRange.cache[cacheKey].result;\n  }\n\n  let a = Math.min(min, max);\n  let b = Math.max(min, max);\n\n  if (Math.abs(a - b) === 1) {\n    let result = min + '|' + max;\n    if (opts.capture) {\n      return `(${result})`;\n    }\n    if (opts.wrap === false) {\n      return result;\n    }\n    return `(?:${result})`;\n  }\n\n  let isPadded = hasPadding(min) || hasPadding(max);\n  let state = { min, max, a, b };\n  let positives = [];\n  let negatives = [];\n\n  if (isPadded) {\n    state.isPadded = isPadded;\n    state.maxLen = String(state.max).length;\n  }\n\n  if (a < 0) {\n    let newMin = b < 0 ? Math.abs(b) : 1;\n    negatives = splitToPatterns(newMin, Math.abs(a), state, opts);\n    a = state.a = 0;\n  }\n\n  if (b >= 0) {\n    positives = splitToPatterns(a, b, state, opts);\n  }\n\n  state.negatives = negatives;\n  state.positives = positives;\n  state.result = collatePatterns(negatives, positives, opts);\n\n  if (opts.capture === true) {\n    state.result = `(${state.result})`;\n  } else if (opts.wrap !== false && (positives.length + negatives.length) > 1) {\n    state.result = `(?:${state.result})`;\n  }\n\n  toRegexRange.cache[cacheKey] = state;\n  return state.result;\n};\n\nfunction collatePatterns(neg, pos, options) {\n  let onlyNegative = filterPatterns(neg, pos, '-', false, options) || [];\n  let onlyPositive = filterPatterns(pos, neg, '', false, options) || [];\n  let intersected = filterPatterns(neg, pos, '-?', true, options) || [];\n  let subpatterns = onlyNegative.concat(intersected).concat(onlyPositive);\n  return subpatterns.join('|');\n}\n\nfunction splitToRanges(min, max) {\n  let nines = 1;\n  let zeros = 1;\n\n  let stop = countNines(min, nines);\n  let stops = new Set([max]);\n\n  while (min <= stop && stop <= max) {\n    stops.add(stop);\n    nines += 1;\n    stop = countNines(min, nines);\n  }\n\n  stop = countZeros(max + 1, zeros) - 1;\n\n  while (min < stop && stop <= max) {\n    stops.add(stop);\n    zeros += 1;\n    stop = countZeros(max + 1, zeros) - 1;\n  }\n\n  stops = [...stops];\n  stops.sort(compare);\n  return stops;\n}\n\n/**\n * Convert a range to a regex pattern\n * @param {Number} `start`\n * @param {Number} `stop`\n * @return {String}\n */\n\nfunction rangeToPattern(start, stop, options) {\n  if (start === stop) {\n    return { pattern: start, count: [], digits: 0 };\n  }\n\n  let zipped = zip(start, stop);\n  let digits = zipped.length;\n  let pattern = '';\n  let count = 0;\n\n  for (let i = 0; i < digits; i++) {\n    let [startDigit, stopDigit] = zipped[i];\n\n    if (startDigit === stopDigit) {\n      pattern += startDigit;\n\n    } else if (startDigit !== '0' || stopDigit !== '9') {\n      pattern += toCharacterClass(startDigit, stopDigit, options);\n\n    } else {\n      count++;\n    }\n  }\n\n  if (count) {\n    pattern += options.shorthand === true ? '\\\\d' : '[0-9]';\n  }\n\n  return { pattern, count: [count], digits };\n}\n\nfunction splitToPatterns(min, max, tok, options) {\n  let ranges = splitToRanges(min, max);\n  let tokens = [];\n  let start = min;\n  let prev;\n\n  for (let i = 0; i < ranges.length; i++) {\n    let max = ranges[i];\n    let obj = rangeToPattern(String(start), String(max), options);\n    let zeros = '';\n\n    if (!tok.isPadded && prev && prev.pattern === obj.pattern) {\n      if (prev.count.length > 1) {\n        prev.count.pop();\n      }\n\n      prev.count.push(obj.count[0]);\n      prev.string = prev.pattern + toQuantifier(prev.count);\n      start = max + 1;\n      continue;\n    }\n\n    if (tok.isPadded) {\n      zeros = padZeros(max, tok, options);\n    }\n\n    obj.string = zeros + obj.pattern + toQuantifier(obj.count);\n    tokens.push(obj);\n    start = max + 1;\n    prev = obj;\n  }\n\n  return tokens;\n}\n\nfunction filterPatterns(arr, comparison, prefix, intersection, options) {\n  let result = [];\n\n  for (let ele of arr) {\n    let { string } = ele;\n\n    // only push if _both_ are negative...\n    if (!intersection && !contains(comparison, 'string', string)) {\n      result.push(prefix + string);\n    }\n\n    // or _both_ are positive\n    if (intersection && contains(comparison, 'string', string)) {\n      result.push(prefix + string);\n    }\n  }\n  return result;\n}\n\n/**\n * Zip strings\n */\n\nfunction zip(a, b) {\n  let arr = [];\n  for (let i = 0; i < a.length; i++) arr.push([a[i], b[i]]);\n  return arr;\n}\n\nfunction compare(a, b) {\n  return a > b ? 1 : b > a ? -1 : 0;\n}\n\nfunction contains(arr, key, val) {\n  return arr.some(ele => ele[key] === val);\n}\n\nfunction countNines(min, len) {\n  return Number(String(min).slice(0, -len) + '9'.repeat(len));\n}\n\nfunction countZeros(integer, zeros) {\n  return integer - (integer % Math.pow(10, zeros));\n}\n\nfunction toQuantifier(digits) {\n  let [start = 0, stop = ''] = digits;\n  if (stop || start > 1) {\n    return `{${start + (stop ? ',' + stop : '')}}`;\n  }\n  return '';\n}\n\nfunction toCharacterClass(a, b, options) {\n  return `[${a}${(b - a === 1) ? '' : '-'}${b}]`;\n}\n\nfunction hasPadding(str) {\n  return /^-?(0+)\\d/.test(str);\n}\n\nfunction padZeros(value, tok, options) {\n  if (!tok.isPadded) {\n    return value;\n  }\n\n  let diff = Math.abs(tok.maxLen - String(value).length);\n  let relax = options.relaxZeros !== false;\n\n  switch (diff) {\n    case 0:\n      return '';\n    case 1:\n      return relax ? '0?' : '0';\n    case 2:\n      return relax ? '0{0,2}' : '00';\n    default: {\n      return relax ? `0{0,${diff}}` : `0{${diff}}`;\n    }\n  }\n}\n\n/**\n * Cache\n */\n\ntoRegexRange.cache = {};\ntoRegexRange.clearCache = () => (toRegexRange.cache = {});\n\n/**\n * Expose `toRegexRange`\n */\n\nmodule.exports = toRegexRange;\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global global, define, Symbol, Reflect, Promise, SuppressedError */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __esDecorate;\r\nvar __runInitializers;\r\nvar __propKey;\r\nvar __setFunctionName;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __spreadArray;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __classPrivateFieldIn;\r\nvar __createBinding;\r\nvar __addDisposableResource;\r\nvar __disposeResources;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n        function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n        var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n        var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n        var _, done = false;\r\n        for (var i = decorators.length - 1; i >= 0; i--) {\r\n            var context = {};\r\n            for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n            for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n            context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n            var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n            if (kind === \"accessor\") {\r\n                if (result === void 0) continue;\r\n                if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n                if (_ = accept(result.get)) descriptor.get = _;\r\n                if (_ = accept(result.set)) descriptor.set = _;\r\n                if (_ = accept(result.init)) initializers.unshift(_);\r\n            }\r\n            else if (_ = accept(result)) {\r\n                if (kind === \"field\") initializers.unshift(_);\r\n                else descriptor[key] = _;\r\n            }\r\n        }\r\n        if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n        done = true;\r\n    };\r\n\r\n    __runInitializers = function (thisArg, initializers, value) {\r\n        var useValue = arguments.length > 2;\r\n        for (var i = 0; i < initializers.length; i++) {\r\n            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n        }\r\n        return useValue ? value : void 0;\r\n    };\r\n\r\n    __propKey = function (x) {\r\n        return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n    };\r\n\r\n    __setFunctionName = function (f, name, prefix) {\r\n        if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n        return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function(m, o) {\r\n        for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n    };\r\n\r\n    __createBinding = Object.create ? (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        var desc = Object.getOwnPropertyDescriptor(m, k);\r\n        if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n            desc = { enumerable: true, get: function() { return m[k]; } };\r\n        }\r\n        Object.defineProperty(o, k2, desc);\r\n    }) : (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    });\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __spreadArray = function (to, from, pack) {\r\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n            if (ar || !(i in from)) {\r\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n                ar[i] = from[i];\r\n            }\r\n        }\r\n        return to.concat(ar || Array.prototype.slice.call(from));\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    var __setModuleDefault = Object.create ? (function(o, v) {\r\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n    }) : function(o, v) {\r\n        o[\"default\"] = v;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n        __setModuleDefault(result, mod);\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, state, kind, f) {\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n        return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, state, value, kind, f) {\r\n        if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n        return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n    };\r\n\r\n    __classPrivateFieldIn = function (state, receiver) {\r\n        if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n        return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n    };\r\n\r\n    __addDisposableResource = function (env, value, async) {\r\n        if (value !== null && value !== void 0) {\r\n            if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n            var dispose;\r\n            if (async) {\r\n                if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n                dispose = value[Symbol.asyncDispose];\r\n            }\r\n            if (dispose === void 0) {\r\n                if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n                dispose = value[Symbol.dispose];\r\n            }\r\n            if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n            env.stack.push({ value: value, dispose: dispose, async: async });\r\n        }\r\n        else if (async) {\r\n            env.stack.push({ async: true });\r\n        }\r\n        return value;\r\n    };\r\n\r\n    var _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n        var e = new Error(message);\r\n        return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n    };\r\n\r\n    __disposeResources = function (env) {\r\n        function fail(e) {\r\n            env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n            env.hasError = true;\r\n        }\r\n        function next() {\r\n            while (env.stack.length) {\r\n                var rec = env.stack.pop();\r\n                try {\r\n                    var result = rec.dispose && rec.dispose.call(rec.value);\r\n                    if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n                }\r\n                catch (e) {\r\n                    fail(e);\r\n                }\r\n            }\r\n            if (env.hasError) throw env.error;\r\n        }\r\n        return next();\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__esDecorate\", __esDecorate);\r\n    exporter(\"__runInitializers\", __runInitializers);\r\n    exporter(\"__propKey\", __propKey);\r\n    exporter(\"__setFunctionName\", __setFunctionName);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__spreadArray\", __spreadArray);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n    exporter(\"__classPrivateFieldIn\", __classPrivateFieldIn);\r\n    exporter(\"__addDisposableResource\", __addDisposableResource);\r\n    exporter(\"__disposeResources\", __disposeResources);\r\n});\r\n","module.exports = require('./lib/tunnel');\n","'use strict';\n\nvar net = require('net');\nvar tls = require('tls');\nvar http = require('http');\nvar https = require('https');\nvar events = require('events');\nvar assert = require('assert');\nvar util = require('util');\n\n\nexports.httpOverHttp = httpOverHttp;\nexports.httpsOverHttp = httpsOverHttp;\nexports.httpOverHttps = httpOverHttps;\nexports.httpsOverHttps = httpsOverHttps;\n\n\nfunction httpOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  return agent;\n}\n\nfunction httpsOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\nfunction httpOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  return agent;\n}\n\nfunction httpsOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\n\nfunction TunnelingAgent(options) {\n  var self = this;\n  self.options = options || {};\n  self.proxyOptions = self.options.proxy || {};\n  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;\n  self.requests = [];\n  self.sockets = [];\n\n  self.on('free', function onFree(socket, host, port, localAddress) {\n    var options = toOptions(host, port, localAddress);\n    for (var i = 0, len = self.requests.length; i < len; ++i) {\n      var pending = self.requests[i];\n      if (pending.host === options.host && pending.port === options.port) {\n        // Detect the request to connect same origin server,\n        // reuse the connection.\n        self.requests.splice(i, 1);\n        pending.request.onSocket(socket);\n        return;\n      }\n    }\n    socket.destroy();\n    self.removeSocket(socket);\n  });\n}\nutil.inherits(TunnelingAgent, events.EventEmitter);\n\nTunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {\n  var self = this;\n  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));\n\n  if (self.sockets.length >= this.maxSockets) {\n    // We are over limit so we'll add it to the queue.\n    self.requests.push(options);\n    return;\n  }\n\n  // If we are under maxSockets create a new one.\n  self.createSocket(options, function(socket) {\n    socket.on('free', onFree);\n    socket.on('close', onCloseOrRemove);\n    socket.on('agentRemove', onCloseOrRemove);\n    req.onSocket(socket);\n\n    function onFree() {\n      self.emit('free', socket, options);\n    }\n\n    function onCloseOrRemove(err) {\n      self.removeSocket(socket);\n      socket.removeListener('free', onFree);\n      socket.removeListener('close', onCloseOrRemove);\n      socket.removeListener('agentRemove', onCloseOrRemove);\n    }\n  });\n};\n\nTunnelingAgent.prototype.createSocket = function createSocket(options, cb) {\n  var self = this;\n  var placeholder = {};\n  self.sockets.push(placeholder);\n\n  var connectOptions = mergeOptions({}, self.proxyOptions, {\n    method: 'CONNECT',\n    path: options.host + ':' + options.port,\n    agent: false,\n    headers: {\n      host: options.host + ':' + options.port\n    }\n  });\n  if (options.localAddress) {\n    connectOptions.localAddress = options.localAddress;\n  }\n  if (connectOptions.proxyAuth) {\n    connectOptions.headers = connectOptions.headers || {};\n    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +\n        new Buffer(connectOptions.proxyAuth).toString('base64');\n  }\n\n  debug('making CONNECT request');\n  var connectReq = self.request(connectOptions);\n  connectReq.useChunkedEncodingByDefault = false; // for v0.6\n  connectReq.once('response', onResponse); // for v0.6\n  connectReq.once('upgrade', onUpgrade);   // for v0.6\n  connectReq.once('connect', onConnect);   // for v0.7 or later\n  connectReq.once('error', onError);\n  connectReq.end();\n\n  function onResponse(res) {\n    // Very hacky. This is necessary to avoid http-parser leaks.\n    res.upgrade = true;\n  }\n\n  function onUpgrade(res, socket, head) {\n    // Hacky.\n    process.nextTick(function() {\n      onConnect(res, socket, head);\n    });\n  }\n\n  function onConnect(res, socket, head) {\n    connectReq.removeAllListeners();\n    socket.removeAllListeners();\n\n    if (res.statusCode !== 200) {\n      debug('tunneling socket could not be established, statusCode=%d',\n        res.statusCode);\n      socket.destroy();\n      var error = new Error('tunneling socket could not be established, ' +\n        'statusCode=' + res.statusCode);\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    if (head.length > 0) {\n      debug('got illegal response body from proxy');\n      socket.destroy();\n      var error = new Error('got illegal response body from proxy');\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    debug('tunneling connection has established');\n    self.sockets[self.sockets.indexOf(placeholder)] = socket;\n    return cb(socket);\n  }\n\n  function onError(cause) {\n    connectReq.removeAllListeners();\n\n    debug('tunneling socket could not be established, cause=%s\\n',\n          cause.message, cause.stack);\n    var error = new Error('tunneling socket could not be established, ' +\n                          'cause=' + cause.message);\n    error.code = 'ECONNRESET';\n    options.request.emit('error', error);\n    self.removeSocket(placeholder);\n  }\n};\n\nTunnelingAgent.prototype.removeSocket = function removeSocket(socket) {\n  var pos = this.sockets.indexOf(socket)\n  if (pos === -1) {\n    return;\n  }\n  this.sockets.splice(pos, 1);\n\n  var pending = this.requests.shift();\n  if (pending) {\n    // If we have pending requests and a socket gets closed a new one\n    // needs to be created to take over in the pool for the one that closed.\n    this.createSocket(pending, function(socket) {\n      pending.request.onSocket(socket);\n    });\n  }\n};\n\nfunction createSecureSocket(options, cb) {\n  var self = this;\n  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {\n    var hostHeader = options.request.getHeader('host');\n    var tlsOptions = mergeOptions({}, self.options, {\n      socket: socket,\n      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host\n    });\n\n    // 0 is dummy port for v0.6\n    var secureSocket = tls.connect(0, tlsOptions);\n    self.sockets[self.sockets.indexOf(socket)] = secureSocket;\n    cb(secureSocket);\n  });\n}\n\n\nfunction toOptions(host, port, localAddress) {\n  if (typeof host === 'string') { // since v0.10\n    return {\n      host: host,\n      port: port,\n      localAddress: localAddress\n    };\n  }\n  return host; // for v0.11 or later\n}\n\nfunction mergeOptions(target) {\n  for (var i = 1, len = arguments.length; i < len; ++i) {\n    var overrides = arguments[i];\n    if (typeof overrides === 'object') {\n      var keys = Object.keys(overrides);\n      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {\n        var k = keys[j];\n        if (overrides[k] !== undefined) {\n          target[k] = overrides[k];\n        }\n      }\n    }\n  }\n  return target;\n}\n\n\nvar debug;\nif (process.env.NODE_DEBUG && /\\btunnel\\b/.test(process.env.NODE_DEBUG)) {\n  debug = function() {\n    var args = Array.prototype.slice.call(arguments);\n    if (typeof args[0] === 'string') {\n      args[0] = 'TUNNEL: ' + args[0];\n    } else {\n      args.unshift('TUNNEL:');\n    }\n    console.error.apply(console, args);\n  }\n} else {\n  debug = function() {};\n}\nexports.debug = debug; // for test\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function () {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function () {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function () {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function () {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports, \"NIL\", {\n  enumerable: true,\n  get: function () {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function () {\n    return _version.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function () {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function () {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function () {\n    return _parse.default;\n  }\n});\n\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\n\nvar _v2 = _interopRequireDefault(require(\"./v3.js\"));\n\nvar _v3 = _interopRequireDefault(require(\"./v4.js\"));\n\nvar _v4 = _interopRequireDefault(require(\"./v5.js\"));\n\nvar _nil = _interopRequireDefault(require(\"./nil.js\"));\n\nvar _version = _interopRequireDefault(require(\"./version.js\"));\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return _crypto.default.createHash('md5').update(bytes).digest();\n}\n\nvar _default = md5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = '00000000-0000-0000-0000-000000000000';\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nvar _default = parse;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\n\nfunction rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    _crypto.default.randomFillSync(rnds8Pool);\n\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return _crypto.default.createHash('sha1').update(bytes).digest();\n}\n\nvar _default = sha1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0, _stringify.default)(b);\n}\n\nvar _default = v1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _md = _interopRequireDefault(require(\"./md5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = v3;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nexports.URL = exports.DNS = void 0;\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction _default(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0, _stringify.default)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n\n  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0, _stringify.default)(rnds);\n}\n\nvar _default = v4;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _sha = _interopRequireDefault(require(\"./sha1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = v5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regex = _interopRequireDefault(require(\"./regex.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\n\nvar _default = validate;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nvar _default = version;\nexports.default = _default;",null,"module.exports = require(\"assert\");","module.exports = require(\"buffer\");","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"fs/promises\");","module.exports = require(\"http\");","module.exports = require(\"http2\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"process\");","module.exports = require(\"stream\");","module.exports = require(\"tls\");","module.exports = require(\"url\");","module.exports = require(\"util\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:fs\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:path\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:process\");","export default function slash(path) {\n\tconst isExtendedLengthPath = /^\\\\\\\\\\?\\\\/.test(path);\n\tconst hasNonAscii = /[^\\u0000-\\u0080]+/.test(path); // eslint-disable-line no-control-regex\n\n\tif (isExtendedLengthPath || hasNonAscii) {\n\t\treturn path;\n\t}\n\n\treturn path.replace(/\\\\/g, '/');\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:url\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:stream\");","import {fileURLToPath} from 'node:url';\nimport {Transform} from 'node:stream';\n\nexport const toPath = urlOrPath => urlOrPath instanceof URL ? fileURLToPath(urlOrPath) : urlOrPath;\n\nexport class FilterStream extends Transform {\n\tconstructor(filter) {\n\t\tsuper({\n\t\t\tobjectMode: true,\n\t\t\ttransform(data, encoding, callback) {\n\t\t\t\tcallback(undefined, filter(data) ? data : undefined);\n\t\t\t},\n\t\t});\n\t}\n}\n\nexport const isNegativePattern = pattern => pattern[0] === '!';\n","import process from 'node:process';\nimport fs from 'node:fs';\nimport path from 'node:path';\nimport fastGlob from 'fast-glob';\nimport gitIgnore from 'ignore';\nimport slash from 'slash';\nimport {toPath, isNegativePattern} from './utilities.js';\n\nconst ignoreFilesGlobOptions = {\n\tignore: [\n\t\t'**/node_modules',\n\t\t'**/flow-typed',\n\t\t'**/coverage',\n\t\t'**/.git',\n\t],\n\tabsolute: true,\n\tdot: true,\n};\n\nexport const GITIGNORE_FILES_PATTERN = '**/.gitignore';\n\nconst applyBaseToPattern = (pattern, base) => isNegativePattern(pattern)\n\t? '!' + path.posix.join(base, pattern.slice(1))\n\t: path.posix.join(base, pattern);\n\nconst parseIgnoreFile = (file, cwd) => {\n\tconst base = slash(path.relative(cwd, path.dirname(file.filePath)));\n\n\treturn file.content\n\t\t.split(/\\r?\\n/)\n\t\t.filter(line => line && !line.startsWith('#'))\n\t\t.map(pattern => applyBaseToPattern(pattern, base));\n};\n\nconst toRelativePath = (fileOrDirectory, cwd) => {\n\tcwd = slash(cwd);\n\tif (path.isAbsolute(fileOrDirectory)) {\n\t\tif (slash(fileOrDirectory).startsWith(cwd)) {\n\t\t\treturn path.relative(cwd, fileOrDirectory);\n\t\t}\n\n\t\tthrow new Error(`Path ${fileOrDirectory} is not in cwd ${cwd}`);\n\t}\n\n\treturn fileOrDirectory;\n};\n\nconst getIsIgnoredPredicate = (files, cwd) => {\n\tconst patterns = files.flatMap(file => parseIgnoreFile(file, cwd));\n\tconst ignores = gitIgnore().add(patterns);\n\n\treturn fileOrDirectory => {\n\t\tfileOrDirectory = toPath(fileOrDirectory);\n\t\tfileOrDirectory = toRelativePath(fileOrDirectory, cwd);\n\t\treturn fileOrDirectory ? ignores.ignores(slash(fileOrDirectory)) : false;\n\t};\n};\n\nconst normalizeOptions = (options = {}) => ({\n\tcwd: toPath(options.cwd) || process.cwd(),\n\tsuppressErrors: Boolean(options.suppressErrors),\n\tdeep: typeof options.deep === 'number' ? options.deep : Number.POSITIVE_INFINITY,\n});\n\nexport const isIgnoredByIgnoreFiles = async (patterns, options) => {\n\tconst {cwd, suppressErrors, deep} = normalizeOptions(options);\n\n\tconst paths = await fastGlob(patterns, {cwd, suppressErrors, deep, ...ignoreFilesGlobOptions});\n\n\tconst files = await Promise.all(\n\t\tpaths.map(async filePath => ({\n\t\t\tfilePath,\n\t\t\tcontent: await fs.promises.readFile(filePath, 'utf8'),\n\t\t})),\n\t);\n\n\treturn getIsIgnoredPredicate(files, cwd);\n};\n\nexport const isIgnoredByIgnoreFilesSync = (patterns, options) => {\n\tconst {cwd, suppressErrors, deep} = normalizeOptions(options);\n\n\tconst paths = fastGlob.sync(patterns, {cwd, suppressErrors, deep, ...ignoreFilesGlobOptions});\n\n\tconst files = paths.map(filePath => ({\n\t\tfilePath,\n\t\tcontent: fs.readFileSync(filePath, 'utf8'),\n\t}));\n\n\treturn getIsIgnoredPredicate(files, cwd);\n};\n\nexport const isGitIgnored = options => isIgnoredByIgnoreFiles(GITIGNORE_FILES_PATTERN, options);\nexport const isGitIgnoredSync = options => isIgnoredByIgnoreFilesSync(GITIGNORE_FILES_PATTERN, options);\n","import fs from 'node:fs';\nimport nodePath from 'node:path';\nimport merge2 from 'merge2';\nimport fastGlob from 'fast-glob';\nimport dirGlob from 'dir-glob';\nimport {\n\tGITIGNORE_FILES_PATTERN,\n\tisIgnoredByIgnoreFiles,\n\tisIgnoredByIgnoreFilesSync,\n} from './ignore.js';\nimport {FilterStream, toPath, isNegativePattern} from './utilities.js';\n\nconst assertPatternsInput = patterns => {\n\tif (patterns.some(pattern => typeof pattern !== 'string')) {\n\t\tthrow new TypeError('Patterns must be a string or an array of strings');\n\t}\n};\n\nconst toPatternsArray = patterns => {\n\tpatterns = [...new Set([patterns].flat())];\n\tassertPatternsInput(patterns);\n\treturn patterns;\n};\n\nconst checkCwdOption = options => {\n\tif (!options.cwd) {\n\t\treturn;\n\t}\n\n\tlet stat;\n\ttry {\n\t\tstat = fs.statSync(options.cwd);\n\t} catch {\n\t\treturn;\n\t}\n\n\tif (!stat.isDirectory()) {\n\t\tthrow new Error('The `cwd` option must be a path to a directory');\n\t}\n};\n\nconst normalizeOptions = (options = {}) => {\n\toptions = {\n\t\t...options,\n\t\tignore: options.ignore || [],\n\t\texpandDirectories: options.expandDirectories === undefined\n\t\t\t? true\n\t\t\t: options.expandDirectories,\n\t\tcwd: toPath(options.cwd),\n\t};\n\n\tcheckCwdOption(options);\n\n\treturn options;\n};\n\nconst normalizeArguments = fn => async (patterns, options) => fn(toPatternsArray(patterns), normalizeOptions(options));\nconst normalizeArgumentsSync = fn => (patterns, options) => fn(toPatternsArray(patterns), normalizeOptions(options));\n\nconst getIgnoreFilesPatterns = options => {\n\tconst {ignoreFiles, gitignore} = options;\n\n\tconst patterns = ignoreFiles ? toPatternsArray(ignoreFiles) : [];\n\tif (gitignore) {\n\t\tpatterns.push(GITIGNORE_FILES_PATTERN);\n\t}\n\n\treturn patterns;\n};\n\nconst getFilter = async options => {\n\tconst ignoreFilesPatterns = getIgnoreFilesPatterns(options);\n\treturn createFilterFunction(\n\t\tignoreFilesPatterns.length > 0 && await isIgnoredByIgnoreFiles(ignoreFilesPatterns, options),\n\t);\n};\n\nconst getFilterSync = options => {\n\tconst ignoreFilesPatterns = getIgnoreFilesPatterns(options);\n\treturn createFilterFunction(\n\t\tignoreFilesPatterns.length > 0 && isIgnoredByIgnoreFilesSync(ignoreFilesPatterns, options),\n\t);\n};\n\nconst createFilterFunction = isIgnored => {\n\tconst seen = new Set();\n\n\treturn fastGlobResult => {\n\t\tconst path = fastGlobResult.path || fastGlobResult;\n\t\tconst pathKey = nodePath.normalize(path);\n\t\tconst seenOrIgnored = seen.has(pathKey) || (isIgnored && isIgnored(path));\n\t\tseen.add(pathKey);\n\t\treturn !seenOrIgnored;\n\t};\n};\n\nconst unionFastGlobResults = (results, filter) => results.flat().filter(fastGlobResult => filter(fastGlobResult));\nconst unionFastGlobStreams = (streams, filter) => merge2(streams).pipe(new FilterStream(fastGlobResult => filter(fastGlobResult)));\n\nconst convertNegativePatterns = (patterns, options) => {\n\tconst tasks = [];\n\n\twhile (patterns.length > 0) {\n\t\tconst index = patterns.findIndex(pattern => isNegativePattern(pattern));\n\n\t\tif (index === -1) {\n\t\t\ttasks.push({patterns, options});\n\t\t\tbreak;\n\t\t}\n\n\t\tconst ignorePattern = patterns[index].slice(1);\n\n\t\tfor (const task of tasks) {\n\t\t\ttask.options.ignore.push(ignorePattern);\n\t\t}\n\n\t\tif (index !== 0) {\n\t\t\ttasks.push({\n\t\t\t\tpatterns: patterns.slice(0, index),\n\t\t\t\toptions: {\n\t\t\t\t\t...options,\n\t\t\t\t\tignore: [\n\t\t\t\t\t\t...options.ignore,\n\t\t\t\t\t\tignorePattern,\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tpatterns = patterns.slice(index + 1);\n\t}\n\n\treturn tasks;\n};\n\nconst getDirGlobOptions = (options, cwd) => ({\n\t...(cwd ? {cwd} : {}),\n\t...(Array.isArray(options) ? {files: options} : options),\n});\n\nconst generateTasks = async (patterns, options) => {\n\tconst globTasks = convertNegativePatterns(patterns, options);\n\n\tconst {cwd, expandDirectories} = options;\n\n\tif (!expandDirectories) {\n\t\treturn globTasks;\n\t}\n\n\tconst patternExpandOptions = getDirGlobOptions(expandDirectories, cwd);\n\tconst ignoreExpandOptions = cwd ? {cwd} : undefined;\n\n\treturn Promise.all(\n\t\tglobTasks.map(async task => {\n\t\t\tlet {patterns, options} = task;\n\n\t\t\t[\n\t\t\t\tpatterns,\n\t\t\t\toptions.ignore,\n\t\t\t] = await Promise.all([\n\t\t\t\tdirGlob(patterns, patternExpandOptions),\n\t\t\t\tdirGlob(options.ignore, ignoreExpandOptions),\n\t\t\t]);\n\n\t\t\treturn {patterns, options};\n\t\t}),\n\t);\n};\n\nconst generateTasksSync = (patterns, options) => {\n\tconst globTasks = convertNegativePatterns(patterns, options);\n\n\tconst {cwd, expandDirectories} = options;\n\n\tif (!expandDirectories) {\n\t\treturn globTasks;\n\t}\n\n\tconst patternExpandOptions = getDirGlobOptions(expandDirectories, cwd);\n\tconst ignoreExpandOptions = cwd ? {cwd} : undefined;\n\n\treturn globTasks.map(task => {\n\t\tlet {patterns, options} = task;\n\t\tpatterns = dirGlob.sync(patterns, patternExpandOptions);\n\t\toptions.ignore = dirGlob.sync(options.ignore, ignoreExpandOptions);\n\t\treturn {patterns, options};\n\t});\n};\n\nexport const globby = normalizeArguments(async (patterns, options) => {\n\tconst [\n\t\ttasks,\n\t\tfilter,\n\t] = await Promise.all([\n\t\tgenerateTasks(patterns, options),\n\t\tgetFilter(options),\n\t]);\n\tconst results = await Promise.all(tasks.map(task => fastGlob(task.patterns, task.options)));\n\n\treturn unionFastGlobResults(results, filter);\n});\n\nexport const globbySync = normalizeArgumentsSync((patterns, options) => {\n\tconst tasks = generateTasksSync(patterns, options);\n\tconst filter = getFilterSync(options);\n\tconst results = tasks.map(task => fastGlob.sync(task.patterns, task.options));\n\n\treturn unionFastGlobResults(results, filter);\n});\n\nexport const globbyStream = normalizeArgumentsSync((patterns, options) => {\n\tconst tasks = generateTasksSync(patterns, options);\n\tconst filter = getFilterSync(options);\n\tconst streams = tasks.map(task => fastGlob.stream(task.patterns, task.options));\n\n\treturn unionFastGlobStreams(streams, filter);\n});\n\nexport const isDynamicPattern = normalizeArgumentsSync(\n\t(patterns, options) => patterns.some(pattern => fastGlob.isDynamicPattern(pattern, options)),\n);\n\nexport const generateGlobTasks = normalizeArguments(generateTasks);\nexport const generateGlobTasksSync = normalizeArgumentsSync(generateTasksSync);\n\nexport {\n\tisGitIgnored,\n\tisGitIgnoredSync,\n} from './ignore.js';\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/\";","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fs_1 = require(\"fs\");\nconst promises_1 = require(\"fs/promises\");\nconst path_1 = require(\"path\");\nconst client_s3_1 = require(\"@aws-sdk/client-s3\");\nconst client_cloudfront_1 = require(\"@aws-sdk/client-cloudfront\");\nconst core_1 = require(\"@actions/core\");\nconst mime_types_1 = require(\"mime-types\");\nconst globby_1 = require(\"globby\");\nconst js_yaml_1 = require(\"js-yaml\");\nconst action_1 = require(\"./action\");\nconst getValue = (key) => ((0, core_1.getInput)(key) || process.env[key]);\nconst location = (0, core_1.getInput)('location', { required: true });\nconst bucket = (0, core_1.getInput)('bucket', { required: true });\nconst cacheControl = (0, core_1.getInput)('cache-control');\nconst invalidate = (0, core_1.getInput)('invalidate');\nconst wait = ((0, core_1.getInput)('wait') || 'true').toLowerCase() === 'true';\nconst awsRegion = getValue('AWS_REGION');\nconst awsAccessKeyId = getValue('AWS_ACCESS_KEY_ID');\nconst awsSecretAccessKey = getValue('AWS_SECRET_ACCESS_KEY');\nconst s3 = new client_s3_1.S3({\n    region: awsRegion,\n    credentials: {\n        accessKeyId: awsAccessKeyId,\n        secretAccessKey: awsSecretAccessKey\n    }\n});\nconst cf = new client_cloudfront_1.CloudFront({\n    region: awsRegion,\n    credentials: {\n        accessKeyId: awsAccessKeyId,\n        secretAccessKey: awsSecretAccessKey\n    }\n});\n(async () => {\n    try {\n        await new action_1.Action({\n            readdir: promises_1.readdir,\n            stat: promises_1.stat,\n            createReadStream: fs_1.createReadStream,\n            join: path_1.join\n        }, {\n            putObject: async (args) => {\n                await s3.send(args);\n            }\n        }, {\n            listDistributions: async (args) => cf.send(args),\n            getInvalidation: async (args) => cf.send(args),\n            createInvalidation: async (args) => cf.send(args)\n        }, {\n            lookup: mime_types_1.lookup\n        }, {\n            match: async (path, pattern) => (0, globby_1.globby)(pattern, { cwd: path, onlyFiles: true })\n        }, core_1.info).run({\n            location,\n            bucket,\n            cacheControl: cacheControl\n                ? (0, js_yaml_1.load)(cacheControl)\n                : {},\n            invalidate,\n            region: awsRegion,\n            wait\n        });\n    }\n    catch (error) {\n        (0, core_1.setFailed)(error);\n    }\n})();\n"],"names":[],"sourceRoot":""}